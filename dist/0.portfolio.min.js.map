{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/build/pdf.worker.js"],"names":["process","Buffer","global","factory","self","modules","installedModules","__w_pdfjs_require__","moduleId","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","unreachable","warn","utf8StringToString","stringToUTF8String","stringToPDFString","stringToBytes","string32","shadow","setVerbosityLevel","ReadableStream","removeNullCharacters","readUint32","readUint16","readInt8","log2","loadJpegStream","isEvalSupported","isLittleEndian","createValidAbsoluteUrl","isSameOrigin","isSpace","isString","isNum","isEmptyObj","isBool","isArrayBuffer","info","getVerbosityLevel","getLookupTableFactory","deprecated","createObjectURL","createPromiseCapability","createBlob","bytesToString","assert","arraysToBytes","arrayByteLength","FormatError","XRefParseException","Util","UnknownErrorException","UnexpectedResponseException","TextRenderingMode","StreamType","PasswordResponses","PasswordException","PageViewport","NotImplementedException","NativeImageDecoding","MissingPDFException","MissingDataException","MessageHandler","InvalidPDFException","AbortException","CMapCompressionType","ImageKind","FontType","AnnotationType","AnnotationFlag","AnnotationFieldFlag","AnnotationBorderStyleType","UNSUPPORTED_FEATURES","VERBOSITY_LEVELS","OPS","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","undefined","_typeof","Symbol","iterator","obj","constructor","_streams_polyfill","errors","warnings","infos","verbosity","msg","console","log","Error","cond","code","this","message","details","status","begin","end","NullCharactersRegExp","str","length","bytes","Uint8Array","charCodeAt","arr","byteLength","rgbBuf","makeCssRgb","r","g","b","join","transform","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","slice","p3","p4","Math","min","max","inverseTransform","apply3dTransform","v","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","result","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","Number","isInteger","pos","romanBuf","push","romanStr","toLowerCase","appendToArray","arr1","arr2","Array","apply","prependToArray","unshift","extendObj","obj1","obj2","key","getInheritableProperty","dict","getArray","has","inherit","sub","base","prop","create","loadScript","src","callback","script","document","createElement","loaded","setAttribute","onload","getElementsByTagName","appendChild","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","offsetCanvasY","width","height","centerX","centerY","abs","fontScale","clone","args","convertToViewportPoint","x","y","convertToViewportRectangle","tl","br","convertToPdfPoint","PDFStringTranslateTable","capability","promise","Promise","resolve","reject","digits","data","contentType","Blob","type","arguments","URL","blob","buffer","ii","b1","b2","b3","resolveCall","fn","thisArg","wrapReason","reason","resolveOrReject","success","sourceName","targetName","comObj","_this","callbackId","streamId","postMessageTransfers","streamSinks","streamControllers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","stream","_processStreamMessage","isReply","error","action","_sourceName","_targetName","then","postMessage","toString","makeReasonSerializable","_createStreamSink","addEventListener","on","actionName","handler","scope","send","transfers","sendWithPromise","e","sendWithStream","queueingStrategy","_this2","start","controller","startCapability","startCall","isClosed","desiredSize","pull","pullCapability","pullCall","cancel","cancelCapability","cancelCall","_this3","sendStreamRequest","_ref","chunk","streamSink","enqueue","size","isCancelled","lastDesiredSize","sinkCapability","ready","close","onPull","onCancel","_this4","sendStreamResponse","_ref2","deleteStreamController","all","map","catch","destroy","removeEventListener","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","unknown","forms","javaScript","smask","shadingPattern","font","SOLID","DASHED","BEVELED","INSET","UNDERLINE","READONLY","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","INVISIBLE","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","UNKNOWN","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","NONE","BINARY","STREAM","DECODE","DISPLAY","NEED_PASSWORD","INCORRECT_PASSWORD","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FILL","STROKE","FILL_STROKE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","item","itemLength","resultLength","set","String","fromCharCode","strBuf","chunkEnd","subarray","initializer","lookup","ch","baseUrl","otherUrl","origin","other","url","absoluteUrl","protocol","isValidProtocol","ex","buffer8","Uint32Array","Function","id","imageUrl","objs","img","Image","onerror","ceil","offset","replace","level","writable","charAt","decodeURIComponent","escape","unescape","encodeURIComponent","EOF","Name","nameCache","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","isArray","isRef","fetch","getRaw","getKeys","keys","forEach","empty","merge","dictArray","mergedDict","isDict","keyName","Ref","num","gen","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","clear","isName","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","buffer2","bufEnd","getBaseStreams","streams","shift","newLength","baseStreams","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","codeSize","codeBuf","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","firstDigit","maxDecodeLength","digit","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","it","store","uid","_Symbol","USE_SYMBOL","window","__g","core","hide","redefine","ctx","$export","own","out","exp","IS_FORCED","F","IS_GLOBAL","G","IS_PROTO","P","IS_BIND","B","target","S","expProto","U","W","R","version","__e","isObject","TypeError","SRC","$toString","TPL","split","inspectSource","O","safe","isFunction","aFunction","that","dP","createDesc","f","exec","anObject","IE8_DOM_DEFINE","toPrimitive","Attributes","IObject","defined","ColorSpace","getRgb","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","bpc","comps","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","resizeRgbImage","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","colorSpaces","resCS","mode","altIR","createIR","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","A","AG","pow","L","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","sRGBTransferFunction","color","adjustToRange","decodeL","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","px","random","concat","$keys","enumBugKeys","def","TAG","tag","stat","isArrayIter","toLength","getIterFn","BREAK","RETURN","_exports","iterable","entries","ITERATOR","step","iterFn","index","next","done","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","JpegStream","JpxStream","CCITTFaxStream","Jbig2Stream","knownCommands","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","parser","obj3","hints","hintsLength","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","is","bitmap","cof","propertyIsEnumerable","toInteger","isNaN","ARG","T","tryGet","callee","shared","Constructor","forbiddenField","$$resolve","$$reject","META","setDesc","isExtensible","FREEZE","preventExtensions","setMeta","w","meta","KEY","NEED","fastKey","getWeak","onFreeze","_jpg","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","getIR","forceDataSchema","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","h","imgWidth","imgHeight","imgData","imgRowSize","rowSize","dataOffset","splice","kind","iFirstPIMXO","arg","imageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","firstPIXOArg0","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","addDependencies","addOpList","opList","lastChunk","cached","getTransfers","operatorList","getGlyphsUnicode","getDingbatsGlyphsUnicode","valueOf","toIObject","toAbsoluteIndex","IS_INCLUDES","$this","el","fromIndex","UNSCOPABLES","ArrayProto","classof","test","LIBRARY","Iterators","$iterCreate","setToStringTag","getPrototypeOf","BUGGY","returnThis","Base","NAME","DEFAULT","IS_SET","FORCED","methods","IteratorPrototype","getMethod","proto","DEF_VALUES","VALUES_BUG","$native","$default","$entries","$anyNative","values","documentElement","$iterators","wks","TO_STRING_TAG","ArrayValues","DOMIterables","CSSRuleList","CSSStyleDeclaration","CSSValueList","ClientRectList","DOMRectList","DOMStringList","DOMTokenList","DataTransferItemList","FileList","HTMLAllCollection","HTMLCollection","HTMLFormElement","HTMLSelectElement","MediaList","MimeTypeArray","NamedNodeMap","NodeList","PaintRequestList","Plugin","PluginArray","SVGLengthList","SVGNumberList","SVGPathSegList","SVGPointList","SVGStringList","SVGTransformList","SourceBufferList","StyleSheetList","TextTrackCueList","TextTrackList","TouchList","collections","explicit","Collection","SPECIES","D","defer","channel","port","invoke","html","cel","setTask","setImmediate","clearTask","clearImmediate","MessageChannel","Dispatch","counter","run","listener","nextTick","now","port2","port1","onmessage","importScripts","removeChild","setTimeout","newPromiseCapability","promiseCapability","SAFE_CLOSING","riter","from","skipClosing","iter","toObject","asc","TYPE","$create","IS_MAP","IS_FILTER","IS_SOME","IS_EVERY","IS_FIND_INDEX","NO_HOLES","callbackfn","_t","ChunkedStreamManager","ChunkedStream","chunkSize","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","read","readChunk","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","indexOf","groupedChunks","prevChunk","bytesLoaded","total","isProgressive","loadedRequests","requestIds","onError","err","abort","cancelAllRequests","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_arr","_n","_d","_e","_s","_i","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","encryptMetadata","encrypt","subtype","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","items","parent","processed","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","docBaseUrl","title","flags","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","names","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","baseCharCode","letterIndex","character","charBuf","jj","pageMode","attachments","fs","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","cleanup","promises","translatedFonts","translated","getPage","getPageDict","createPage","nodesToVisit","currentPageIndex","currentNode","pop","fetchAsync","kids","last","getPageIndex","pageRef","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","addDefaultProtocolToUrl","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","href","xrefstms","cache","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","fileId","CipherTransformFactory","password","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","entry","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","dataLength","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","contentLength","endPos","checkPos","tokenStr","objToken","content","xrefTagOffset","startXRefParsedCache","topDict","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","parseInt","substring","createCipherTransform","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","_i2","_ii2","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","ArithmeticDecoder","QeTable","qe","nmps","nlps","switchFlag","bp","dataEnd","chigh","clow","byteIn","ct","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","JpxImage","_arithmetic_decoder","JpxError","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","epsilon","gainLog2","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","headerSize","lbox","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","Int8Array","setNeighborsSignificance","column","labels","i0","i1","contextLabel","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","u","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","keyLength","encryptBlock","tmp2","output","decryptBlock","h0","h3","paddedLength","padded","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","add","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","rcon","inv_s","mixCol","mix","decrypt128","s0","s1","s2","s3","encrypt128","cipherKey","t3","t4","expandKey128","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","outputLength","lastBlock","psLen","cipher","decrypt256","encrypt256","expandKey256","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","revision","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","decodeUserPassword","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","cipherConstructor","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","stack","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","createDict","strings","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","parseFloat","parseFloatOperand","NaN","operands","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","order","valueLength","setByName","createTables","layout","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset0","offset1","offset2","offset3","offset4","compile","compileHeader","compileNameIndex","subDict","compiled","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","nibbles","substr","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","getSpecialPUASymbols","UnicodeRanges","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","toUpperCase","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_createClass","defineProperties","props","descriptor","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","_ref$isEvalSupported","instance","_classCallCheck","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","_ref6","toMultiArray","domain","inputSize","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","size_i","e0","n0","n1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","numOutputs","numInputs","evaluator","cache_available","cachedValue","execute","stackIndex","bound","PostScriptStack","initialStack","copy","roll","operators","operator","atan","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","instruction","statementBuilder","expr","fnDict","pdfjsCoreWorker","WorkerMessageHandler","WorkerTask","_pdf_manager","_is_node","_is_node2","default","maybePort","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","reader","headersReady","setup","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","docId","workerHandlerName","startWorkerTask","task","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","ensureDoc","fingerprint","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","LocalPdfManager","pdfStream","cachedChunks","fullRequest","NetworkPdfManager","sendProgressiveData","pdfFile","flushChunks","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","results","userUnit","view","pdfDocument","catalog","ensureCatalog","requestLoadedStream","pageNum","Date","getOperatorList","renderInteractiveForms","featureId","wrappedException","minimumStackMessage","sink","extractTextContent","normalizeWhitespace","combineTextItems","waitOn","onSuccess","doc","pdfInfo","onFailure","updatePassword","pdfManagerReady","disableCreateObjectURL","maxImageSize","disableFontFace","nativeImageDecoderSupport","ignoreErrors","newPdfManager","setupDoc","initializeFromPort","PDFJS","compatibilityChecked","globalScope","isNodeJS","userAgent","navigator","isAndroid","isIOSChrome","isIE","isIOS","isSafari","hasDOM","btoa","atob","locale","userLanguage","disableRange","disableStream","maxCanvasPixels","disableFullscreen","scripts","Element","parentNode","includes","WeakMap","hasWorkingUrl","pathname","relative","relativePathDotMapping","ALPHA","ALPHANUMERIC","JURL","_isInvalid","_url","authority","_username","_password","_isRelative","host","_query","_fragment","_scheme","_port","_host","hostname","_path","_schemeData","search","_","OriginalURL","revokeObjectURL","isRelativeScheme","scheme","invalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","cursor","seenAt","seenBracket","loop","nextC","nextNextC","cp","tempC","temp","$includes","LN2","isFinite","$at","iterated","point","TO_STRING","dPs","IE_PROTO","Empty","_createDict","iframeDocument","iframe","display","contentWindow","open","write","lt","Properties","arrayIndexOf","ObjectProto","addToUnscopables","_k","Arguments","Internal","newGenericPromiseCapability","OwnPromiseCapability","Wrapper","anInstance","forOf","speciesConstructor","microtask","newPromiseCapabilityModule","perform","promiseResolve","$Promise","isNode","USE_NATIVE","FakePromise","PromiseRejectionEvent","isThenable","notify","isReject","chain","_c","_v","ok","reaction","fail","_h","onHandleUnhandled","enter","exit","onUnhandled","unhandled","isUnhandled","emit","onunhandledrejection","_a","onrejectionhandled","$reject","_w","$resolve","wrapper","executor","onFulfilled","onRejected","remaining","$index","alreadyCalled","race","ret","getIteratorMethod","un","macrotask","Observer","MutationObserver","WebKitMutationObserver","head","standalone","toggle","createTextNode","observe","characterData","DESCRIPTORS","finally","onFinally","try","InternalMap","each","weak","fails","validate","uncaughtFrozenStore","ufstore","$WeakMap","freeze","getConstructor","_f","original","gOPS","pIE","$assign","aLen","getSymbols","isEnum","getOwnPropertySymbols","redefineAll","createArrayMethod","$has","arrayFind","arrayFindIndex","_l","UncaughtFrozenStore","findUncaughtFrozen","delete","ADDER","$iterDetect","inheritIfRequired","common","IS_WEAK","fixMethod","HASNT_CHAINING","THROWS_ON_PRIMITIVES","ACCEPT_ITERABLES","BUGGY_ZERO","$instance","setStrong","setPrototypeOf","buggy","__proto__","gOPD","getOwnPropertyDescriptor","COLLECTION","of","mapping","cb","mapFn","nextItem","$values","isEntries","isReadableStreamSupported","_typeof2","IsPropertyKey","argument","Call","V","typeIsObject","createDataProperty","createArrayFromList","elements","ArrayBufferCopy","CreateIterResultObject","IsFiniteNonNegativeNumber","Infinity","InvokeOrNoop","PromiseInvokeOrNoop","returnValueE","PromiseInvokeOrPerformFallback","argsF","methodE","TransferArrayBuffer","ValidateAndNormalizeHighWaterMark","highWaterMark","RangeError","ValidateAndNormalizeQueuingStrategy","AssertionError","rethrowAssertionErrorRejection","_require","_require2","_require3","DequeueValue","EnqueueValueWithSize","PeekQueueValue","ResetQueue","WritableStream","underlyingSink","_ref$highWaterMark","_state","_storedError","_writer","_writableStreamController","_writeRequests","_inFlightWriteRequest","_closeRequest","_inFlightCloseRequest","_pendingAbortRequest","_backpressure","WritableStreamDefaultController","__startSteps","IsWritableStream","streamBrandCheckException","IsWritableStreamLocked","WritableStreamAbort","AcquireWritableStreamDefaultWriter","WritableStreamDefaultWriter","wasAlreadyErroring","_resolve","_reject","_reason","_wasAlreadyErroring","WritableStreamStartErroring","WritableStreamDealWithRejection","WritableStreamFinishErroring","writer","WritableStreamDefaultWriterEnsureReadyPromiseRejected","WritableStreamHasOperationMarkedInFlight","_started","__errorSteps","storedError","abortRequest","WritableStreamRejectCloseAndClosedPromiseIfNeeded","__abortSteps","WritableStreamFinishInFlightClose","_closedPromise_resolve","_closedPromise_reject","_closedPromiseState","defaultWriterClosedPromiseResolve","WritableStreamCloseQueuedOrInFlight","defaultWriterClosedPromiseReject","_closedPromise","WritableStreamUpdateBackpressure","backpressure","_readyPromise_resolve","_readyPromise_reject","_readyPromise","_readyPromiseState","defaultWriterReadyPromiseReset","defaultWriterReadyPromiseResolve","WritableStreamDefaultControllerError","WritableStreamDefaultWriterCloseWithErrorPropagation","_ownerWritableStream","WritableStreamDefaultWriterClose","WritableStreamDefaultWriterRelease","WritableStreamDefaultWriterWrite","defaultWriterReadyPromiseInitializeAsResolved","defaultWriterClosedPromiseInitialize","defaultWriterReadyPromiseInitializeAsRejected","defaultWriterClosedPromiseInitializeAsResolved","defaultWriterClosedPromiseInitializeAsRejected","IsWritableStreamDefaultWriter","defaultWriterBrandCheckException","defaultWriterLockException","WritableStreamDefaultWriterAbort","WritableStreamDefaultControllerGetDesiredSize","WritableStreamDefaultWriterGetDesiredSize","closeRequest","WritableStreamDefaultControllerAdvanceQueueIfNeeded","WritableStreamDefaultWriterEnsureClosedPromiseRejected","defaultWriterClosedPromiseResetToRejected","defaultWriterReadyPromiseReject","defaultWriterReadyPromiseResetToRejected","releasedError","strategySize","_strategySize","chunkSizeE","WritableStreamDefaultControllerErrorIfNeeded","WritableStreamDefaultControllerGetChunkSize","writeRequest","WritableStreamAddWriteRequest","writeRecord","enqueueE","_controlledWritableStream","WritableStreamDefaultControllerGetBackpressure","WritableStreamDefaultControllerWrite","_underlyingSink","_queue","_queueTotalSize","normalizedStrategy","_strategyHWM","IsWritableStreamDefaultController","startResult","WritableStreamMarkCloseRequestInFlight","WritableStreamFinishInFlightCloseWithError","WritableStreamDefaultControllerProcessClose","WritableStreamMarkFirstWriteRequestInFlight","WritableStreamFinishInFlightWrite","WritableStreamFinishInFlightWriteWithError","WritableStreamDefaultControllerProcessWrite","container","_require4","_require5","underlyingSource","_disturbed","_readableStreamController","ReadableByteStreamController","ReadableStreamDefaultController","IsReadableStream","IsReadableStreamLocked","ReadableStreamCancel","AcquireReadableStreamDefaultReader","ReadableStreamBYOBReader","readable","ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue","pipeTo","preventClose","preventAbort","preventCancel","Boolean","shuttingDown","currentWrite","isOrBecomesErrored","shutdownWithAction","shutdown","destClosed","waitForWritesToFinish","oldCurrentWrite","originalIsError","originalError","doTheRest","newError","isError","ReadableStreamReaderGenericRelease","pipeLoop","ReadableStreamDefaultReaderRead","branches","ReadableStreamTee","ReadableStreamDefaultReader","cloneForBranch2","teeState","closedOrErrored","canceled1","canceled2","reason1","reason2","branch1","_branch1","branch2","_branch2","_teeState","ReadableStreamDefaultControllerClose","value1","value2","ReadableStreamDefaultControllerEnqueue","create_ReadableStreamTeePullFunction","_cloneForBranch2","cancel1","compositeReason","cancelResult","create_ReadableStreamTeeBranch1CancelFunction","cancel2","create_ReadableStreamTeeBranch2CancelFunction","underlyingSource1","branch1Stream","underlyingSource2","branch2Stream","ReadableStreamDefaultControllerError","ReadableStreamAddReadIntoRequest","IsReadableStreamBYOBReader","readIntoRequest","_readIntoRequests","ReadableStreamAddReadRequest","IsReadableStreamDefaultReader","readRequest","_readRequests","ReadableStreamClose","__cancelSteps","defaultReaderClosedPromiseResolve","ReadableStreamError","defaultReaderClosedPromiseReject","ReadableStreamFulfillReadRequest","ReadableStreamGetNumReadIntoRequests","ReadableStreamGetNumReadRequests","ReadableStreamHasBYOBReader","ReadableStreamHasDefaultReader","IsReadableStreamDisturbed","ReadableStreamDefaultControllerGetDesiredSize","ReadableStreamReaderGenericInitialize","defaultReaderBrandCheckException","_ownerReadableStream","readerLockException","ReadableStreamReaderGenericCancel","IsReadableByteStreamController","byobReaderBrandCheckException","ArrayBuffer","isView","_controlledReadableStream","elementSize","DataView","BYTES_PER_ELEMENT","ctor","pullIntoDescriptor","byteOffset","bytesFilled","readerType","_pendingPullIntos","emptyView","ReadableByteStreamControllerFillPullIntoDescriptorFromQueue","filledView","ReadableByteStreamControllerConvertPullIntoDescriptor","ReadableByteStreamControllerHandleQueueDrain","_closeRequested","ReadableByteStreamControllerError","ReadableByteStreamControllerCallPullIfNeeded","ReadableByteStreamControllerPullInto","ReadableStreamBYOBReaderRead","defaultReaderClosedPromiseInitialize","defaultReaderClosedPromiseInitializeAsResolved","defaultReaderClosedPromiseInitializeAsRejected","defaultReaderClosedPromiseResetToRejected","__pullSteps","_underlyingSource","_pullAgain","_pulling","ReadableStreamDefaultControllerCallPullIfNeeded","ReadableStreamDefaultControllerErrorIfNeeded","IsReadableStreamDefaultController","defaultControllerBrandCheckException","pendingPromise","ReadableStreamDefaultControllerShouldCallPull","ReadableStreamBYOBRequest","_associatedReadableByteStreamController","_view","bytesWritten","IsReadableStreamBYOBRequest","byobRequestBrandCheckException","ReadableByteStreamControllerRespondInternal","ReadableByteStreamControllerRespond","firstDescriptor","ReadableByteStreamControllerRespondWithNewView","underlyingByteSource","_underlyingByteSource","ReadableByteStreamControllerClearPendingPullIntos","autoAllocateChunkSize","_autoAllocateChunkSize","byteStreamControllerBrandCheckException","firstPendingPullInto","ReadableByteStreamControllerClose","transferredBuffer","ReadableByteStreamControllerEnqueueChunkToQueue","transferredView","ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue","ReadableByteStreamControllerEnqueue","viewE","bufferE","_byobRequest","ReadableByteStreamControllerGetDesiredSize","ReadableByteStreamControllerShouldCallPull","ReadableByteStreamControllerInvalidateBYOBRequest","ReadableByteStreamControllerCommitPullIntoDescriptor","ReadableStreamFulfillReadIntoRequest","currentAlignedBytes","maxBytesToCopy","maxBytesFilled","maxAlignedBytes","totalBytesToCopyRemaining","headOfQueue","bytesToCopy","destStart","ReadableByteStreamControllerFillHeadPullIntoDescriptor","ReadableByteStreamControllerShiftPendingPullInto","ReadableByteStreamControllerRespondInClosedState","remainderSize","ReadableByteStreamControllerRespondInReadableState","transformStream","writableStream","TransformStream","TransformStreamEnqueueToReadable","_errored","_readableClosed","_readableController","TransformStreamErrorIfNeeded","TransformStreamSetBackpressure","TransformStreamCloseReadableInternal","TransformStreamErrorInternal","_writableDone","_writableController","TransformStreamReadableReadyPromise","_backpressureChangePromise","_backpressureChangePromise_resolve","TransformStreamDefaultTransform","transformStreamController","_controlledTransformStream","IsTransformStreamDefaultController","IsTransformStream","TransformStreamSink","startPromise","_transformStream","_startPromise","_transforming","transformer","_transformer","_transformStreamController","TransformStreamTransform","TransformStreamSource","TransformStreamDefaultController","TransformStreamCloseReadable","TransformStreamError","readableController","readableStrategy","writableStrategy","startPromise_resolve","_readable","_writable","_document","BasePdfManager","_docId","_docBaseUrl","ensureXRef","PDFDocument","ensureHelper","Page","_obj","_annotation","_operator_list","_evaluator","_function","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","viewable","printable","pageDict","resourcesPromise","uniquePrefix","idCounters","idFactory","createObjId","getPageProp","getInheritedPageProp","valueArray","resources","mediaBox","cropBox","intersection","getContentStream","loadResources","contentStreamPromise","partialEvaluator","PartialEvaluator","pageListPromise","contentStream","transparency","hasBlendModes","annotationsPromise","pageOpList","annotations","opListPromises","opLists","getTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","AnnotationFactory","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","pdfFormatVersion","acroForm","xfa","fields","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","_ccitt","ccittFaxDecoder","EndOfLine","EncodedByteAlign","Columns","Rows","EndOfBlock","BlackIs1","_jbig","jbig2Image","Jbig2Image","globalsStream","globals","parseChunks","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","prev","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","minX","minY","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","segments","segment","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","children","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patterns","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","firstCode","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","numBits","parseJbig2Chunks","JpegError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","startOffset","bitsData","bitsCount","nextByte","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","endOffset","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","scaleX","scaleY","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","_jpx","jpxImage","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","AnnotationBorderStyle","Annotation","_get","receiver","desc","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","flag","_hasFlag","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","bbox","maxY","getTransformMatrix","_isViewable","_isPrintable","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","_Annotation","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","comb","_WidgetAnnotation2","checkBox","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","_this5","option","isOptionArray","exportValue","displayValue","combo","multiSelect","_Annotation2","_this6","_preparePopup","_Annotation3","_this7","_Annotation4","_this8","parentItem","parentSubtype","parentType","parentId","parentFlags","_Annotation5","_this9","lineCoordinates","_Annotation6","_this10","_Annotation7","_this11","_Annotation8","_this12","rawVertices","vertices","_PolylineAnnotation","_this13","_Annotation9","_this14","_Annotation10","_this15","_Annotation11","_this16","_Annotation12","_this17","_Annotation13","_this18","_Annotation14","_this19","_cmap","_fonts","_unicode","_standard_fonts","_pattern","_bidi","_glyphlist","_metrics","_murmurhash","_image","DefaultPartialEvaluatorOptions","NativeImageDecoder","_ref$forceDataSchema","_ref2$options","fetchBuiltInCMap","cachedCMap","compressionType","canDecode","image","isDecodable","colorSpace","isSupported","TimeSlotManager","checked","endTime","deferred","newOptions","newEvaluator","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","buildPaintImageXObject","inline","bitStrideLength","imgArray","PDFImage","createMask","imageIsFromDecodeStream","inverseDecode","softMask","isInline","createImageData","nativeImageDecoder","buildImage","nativeDecoder","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","getTilingPatternIR","tilingPatternIR","handleSetFont","fontArgs","fontRef","fontName","loadFont","isType3Font","loadType3Data","TranslatedFont","ErrorFont","loadedName","handleText","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","fillColorSpace","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","_loop","normalizeBlendMode","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","Font","getFontID","translateFont","translatedFont","fontType","fontFile3","getFontType","lastIndex","opArgs","handleColorN","patternName","typeNum","shading","Pattern","parseShading","_ref3$initialState","EvalState","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","savedStatesDepth","promiseBody","stop","resolveXObject","rejectXObject","fontSize","combinedGlyphs","arrLength","arrItem","strokeColorSpace","shadingRes","patternIR","dictName","extGState","_ref4$stateManager","_ref4$normalizeWhites","_ref4$combineTextItem","_ref4$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","vertical","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","spaceWidth","fakeSpaceMin","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","fallbackName","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","isMonospace","runBidiTransform","textChunk","bidiResult","bidi","replaceWhitespace","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","FontFlags","Symbolic","isNonsymbolicFont","Nonsymbolic","hasEncoding","buildToUnicode","_buildSimpleFontToUnicode","charcode","glyphName","ToUnicodeMap","hasIncludedToUnicodeMap","fallbackToUnicode","cMap","builtInCMap","IdentityCMap","ucs2CMapName","CMapFactory","useCMap","ucs2CMap","ucs2","IdentityToUnicodeMap","firstChar","lastChar","cmapObj","cmap","getMap","charCode","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","monospace","lookupName","Metrics","getMetrics","glyphWidths","widthsByGlyphName","uint8array","df","MurmurHash3_64","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","getOPMap","numArgs","variableArgs","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","CMap","BUILT_IN_CMAPS","codespaceRanges","numCodespaceRanges","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readNumber","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","ProblematicCharRanges","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_cff_parser","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","recoverGlyphName","Glyph","operatorListId","isInFont","matchesForCache","amend","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","numTables","tableOffsets","searchParams","checksum","addTable","sizes","missingFile","glyphCache","toFontChar","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","loading","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","glyphId","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","segCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","charstrings","override","unitsPerEm","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","FontRendererFactory","stdFontMap","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","hintsValid","glyphProfile","sizeOfInstructions","glyf","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","repeat","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","numOfMetrics","numMissing","sanitizeMetrics","locaLength","indexToLocFormat","numGlyphsPlusOne","sanitizeHead","isGlyphLocationsLong","glyphsInfo","loca","itemSize","itemDecode","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","platformId","encodingId","mappings","hasShortCmap","potentialTable","canBreak","useTable","segIndex","offsetsCount","rangeOffset","offsetIndex","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","builtInEncoding","adjustToUnicode","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","widthCode","charsCache","charsCacheKey","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","actualLength","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","Type1Parser","extractFontHeader","eexecBytes","eexecBlock","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","getLong","getUshort","parseCmap","idDelta","idOffset","groups","parseCff","gsubrs","lookupCmap","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","compileGlyph","cmds","compileGlyphImpl","compileGlyf","quadraticCurveTo","xa","ya","numberOfContours","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","achar","bchar","parseGlyfTable","Type1CharString","COMMAND_MAP","lsb","flexing","encoded","wx","sbx","dy","executeCommand","sby","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","getToken","readInt","readBoolean","readCharStrings","lenIV","program","blueArray","charString","encodingArg","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","newColor","updateBounds","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","xstep","ystep","paintType","tilingType","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","createBidiText","isLTR","startLevel","strLength","numBidi","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","nextToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","seed","blockCounts","tailLength","dataUint32","k2","C1","C2","handleImageData","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","_ref$smask","_ref$mask","_ref$isMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","computedLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","imageLength","maybeUndoPreblend"],"mappings":"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AAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,WACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,iBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,qBAC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CAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,GACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,EACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEA,SAAAL,EAAAx6C,EAAAyD,EAAAvL,GACAL,KAAAmI,OACAnI,KAAAijD,GAAAr3C,EACA5L,KAAAkjD,QAAA7iD,EACAL,KAAAmjD,MAAAh7C,EAAAyD,GACA5L,KAAAojD,KAAA,EACApjD,KAAAqjD,SACArjD,KAAAmjD,MAAAnjD,KAAAmjD,OAAA,QAAAnjD,KAAAojD,MAAA,MACApjD,KAAAojD,KAAApjD,KAAAojD,MAAA,QACApjD,KAAAsjD,IAAA,EACAtjD,KAAAuC,EAAA,MA+EA,OA7EAogD,EAAAnoD,WACA6oD,OAAA,WACA,IAAAl7C,EAAAnI,KAAAmI,KACA86C,EAAAjjD,KAAAijD,GACA,MAAA96C,EAAA86C,GACA96C,EAAA86C,EAAA,GACA,KACAjjD,KAAAojD,MAAA,MACApjD,KAAAsjD,GAAA,IAEAL,IACAjjD,KAAAojD,MAAAj7C,EAAA86C,IAAA,EACAjjD,KAAAsjD,GAAA,EACAtjD,KAAAijD,OAGAA,IACAjjD,KAAAojD,MAAAH,EAAAjjD,KAAAkjD,QAAA/6C,EAAA86C,IAAA,QACAjjD,KAAAsjD,GAAA,EACAtjD,KAAAijD,MAEAjjD,KAAAojD,KAAA,QACApjD,KAAAmjD,OAAAnjD,KAAAojD,MAAA,GACApjD,KAAAojD,MAAA,QAGAG,QAAA,SAAAC,EAAA3/C,GACA,IAIAlK,EAJA8pD,EAAAD,EAAA3/C,IAAA,EACA6/C,EAAA,EAAAF,EAAA3/C,GACA8/C,EAAAf,EAAAa,GACAG,EAAAD,EAAAd,GAEAtgD,EAAAvC,KAAAuC,EAAAqhD,EACA,GAAA5jD,KAAAmjD,MAAAS,EACArhD,EAAAqhD,GACArhD,EAAAqhD,EACAjqD,EAAA+pD,EACAD,EAAAE,EAAAb,OAEAvgD,EAAAqhD,EACAjqD,EAAA,EAAA+pD,EACA,IAAAC,EAAAX,aACAU,EAAA/pD,GAEA8pD,EAAAE,EAAAZ,UAEO,CAEP,GADA/iD,KAAAmjD,OAAAS,EACA,UAAArhD,GAEA,OADAvC,KAAAuC,IACAmhD,EAEAnhD,EAAAqhD,GACAjqD,EAAA,EAAA+pD,EACA,IAAAC,EAAAX,aACAU,EAAA/pD,GAEA8pD,EAAAE,EAAAZ,OAEAppD,EAAA+pD,EACAD,EAAAE,EAAAb,MAGA,GACA,IAAA9iD,KAAAsjD,IACAtjD,KAAAqjD,SAEA9gD,IAAA,EACAvC,KAAAmjD,MAAAnjD,KAAAmjD,OAAA,QAAAnjD,KAAAojD,MAAA,KACApjD,KAAAojD,KAAApjD,KAAAojD,MAAA,QACApjD,KAAAsjD,WACO,UAAA/gD,IAGP,OAFAvC,KAAAuC,IACAihD,EAAA3/C,GAAA4/C,GAAA,EAAAC,EACA/pD,IAGAgpD,EAtUA,GAwUAvpD,EAAAupD,qBAIA,SAAAtpD,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAEAxB,EAAAyqD,cAAA9kD,EAEA,IAAA4hB,EAAAznB,EAAA,GAEA4qD,EAAA5qD,EAAA,IAEA6qD,EAAA,WACA,SAAAA,EAAArkD,GACAM,KAAAC,QAAA,cAAAP,EAKA,OAHAqkD,EAAAvpD,UAAA,IAAAqF,MACAkkD,EAAAvpD,UAAAZ,KAAA,WACAmqD,EAAA3kD,YAAA2kD,EACAA,EAPA,GASAF,EAAA,WACA,IAAAG,GACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,GAEA,SAAAP,IACA7jD,KAAAqkD,sBAAA,EAuWA,SAAAC,EAAAC,EAAAC,GACAD,EAAAE,GAAA1iD,KAAA+Z,KAAA0oC,EAAAE,MAAAH,EAAAI,OACAJ,EAAAK,GAAA7iD,KAAA+Z,KAAA0oC,EAAAK,KAAAN,EAAAI,OACAJ,EAAAO,GAAA/iD,KAAA+Z,KAAA0oC,EAAAO,MAAAR,EAAAS,OACAT,EAAAU,GAAAljD,KAAA+Z,KAAA0oC,EAAAU,KAAAX,EAAAS,OACAT,EAAA19C,MAAA09C,EAAAK,GAAAL,EAAAE,GACAF,EAAAz9C,OAAAy9C,EAAAU,GAAAV,EAAAO,GAEA,SAAAK,EAAAziB,EAAA0iB,GAMA,IALA,IACAC,EADAb,EAAA9hB,EAAA4iB,IAEAC,KACAC,EAAAzjD,KAAA+Z,MAAA0oC,EAAAK,KAAAL,EAAAiB,QAAAjB,EAAAkB,OACAC,EAAA5jD,KAAA+Z,MAAA0oC,EAAAU,KAAAV,EAAAoB,QAAApB,EAAAqB,OACAr9B,EAAA,EAAmBA,EAAAm9B,EAAen9B,IAClC,QAAA9tB,EAAA,EAAqBA,EAAA8qD,EAAe9qD,KACpC2qD,MACAS,IAAA/jD,KAAAE,IAAAuiD,EAAAiB,OAAA/qD,EAAA8pD,EAAAkB,MAAAlB,EAAAE,OACAW,EAAAU,IAAAhkD,KAAAE,IAAAuiD,EAAAoB,OAAAp9B,EAAAg8B,EAAAqB,MAAArB,EAAAO,OACAM,EAAAW,IAAAjkD,KAAAC,IAAAwiD,EAAAiB,QAAA/qD,EAAA,GAAA8pD,EAAAkB,MAAAlB,EAAAK,MACAQ,EAAAY,IAAAlkD,KAAAC,IAAAwiD,EAAAoB,QAAAp9B,EAAA,GAAAg8B,EAAAqB,MAAArB,EAAAU,MACAG,EAAAx+C,MAAAw+C,EAAAW,IAAAX,EAAAS,IACAT,EAAAv+C,OAAAu+C,EAAAY,IAAAZ,EAAAU,IACAV,EAAAD,cACAG,EAAAxhD,KAAAshD,GAGA3iB,EAAA6iB,QAEA,IADA,IACAjsD,EAAA,EAAAqP,EADA67C,EAAA0B,KACyC5sD,EAAAqP,EAAQrP,IAEjD,IADA,IAAAirD,EAAAa,EAAA9rD,GACAitB,EAAA,EAAAkxB,EAAA8N,EAAA/kD,OAAwC+lB,EAAAkxB,EAAQlxB,IAAA,CAChD,IAAA4/B,KACAd,EAAAE,EAAAh/B,GACA4/B,EAAAC,KAAArkD,KAAA+Z,KAAAupC,EAAAS,IAAAvB,EAAAI,OACAwB,EAAAE,KAAAtkD,KAAA+Z,KAAAupC,EAAAU,IAAAxB,EAAAS,OACAmB,EAAAG,KAAAvkD,KAAA+Z,KAAAupC,EAAAW,IAAAzB,EAAAI,OACAwB,EAAAI,KAAAxkD,KAAA+Z,KAAAupC,EAAAY,IAAA1B,EAAAS,OACAmB,EAAAt/C,MAAAs/C,EAAAG,KAAAH,EAAAC,KACAD,EAAAr/C,OAAAq/C,EAAAI,KAAAJ,EAAAE,KACAhB,EAAAD,WAAA9rD,GAAA6sD,GAIA,SAAAK,EAAA9jB,EAAA6hB,EAAAvjD,GACA,IAAAylD,EAAAlC,EAAAmC,sBACApjD,KAUA,OATAmjD,EAAAE,iCAIArjD,EAAAsjD,IAAAH,EAAAI,eAAA7lD,GAAA4lD,IACAtjD,EAAAwjD,IAAAL,EAAAI,eAAA7lD,GAAA8lD,MAJAxjD,EAAAsjD,IAAA,GACAtjD,EAAAwjD,IAAA,IAKAxjD,EAAAyjD,KAAA/lD,EAAA,EAAAe,KAAAC,IAAAykD,EAAAO,IAAA1jD,EAAAsjD,IAAA,GAAA7kD,KAAAC,IAAAykD,EAAAO,IAAA1jD,EAAAsjD,KACAtjD,EAAA2jD,KAAAjmD,EAAA,EAAAe,KAAAC,IAAAykD,EAAAS,IAAA5jD,EAAAwjD,IAAA,GAAA/kD,KAAAC,IAAAykD,EAAAS,IAAA5jD,EAAAwjD,KACAxjD,EAEA,SAAA6jD,EAAAzkB,EAAA0kB,EAAAC,GACA,IAAAC,EAAA,GAAAD,EAAAT,IACAW,EAAA,GAAAF,EAAAP,IACAU,EAAA,IAAAJ,EAAAK,SACAC,EAAA,GAAAL,EAAAT,KAAAY,EAAA,MACAG,EAAA,GAAAN,EAAAP,KAAAU,EAAA,MACAI,EAAAR,EAAAS,KAAAT,EAAAU,KAAA/lD,KAAA+Z,KAAAsrC,EAAAS,KAAAP,GAAAvlD,KAAA0sB,MAAA24B,EAAAU,KAAAR,GAAA,EACAS,EAAAX,EAAAY,KAAAZ,EAAAa,KAAAlmD,KAAA+Z,KAAAsrC,EAAAY,KAAAT,GAAAxlD,KAAA0sB,MAAA24B,EAAAa,KAAAV,GAAA,EACAW,EAAAN,EAAAG,EACAX,EAAAe,oBACAb,gBACAC,iBACAK,mBACAG,mBACAG,eACAR,yBACAC,2BAGA,SAAAS,EAAA1lB,EAAA2lB,EAAAhB,GACA,IAWA/tD,EAAAitB,EAAA+hC,EAAAC,EAXAxB,EAAAM,EAAAN,KACAE,EAAAI,EAAAJ,KACAuB,EAAA,GAAAzB,EACA0B,EAAA,GAAAxB,EACAyB,EAAAL,EAAAM,MAAA5B,EACA6B,EAAAP,EAAAQ,MAAA5B,EACA6B,EAAAT,EAAAU,KAAAP,EAAA,GAAAzB,EACAiC,EAAAX,EAAAY,KAAAR,EAAA,GAAAxB,EACAkB,EAAAE,EAAAjB,WAAAe,mBACAe,KACAC,KAEA,IAAA5iC,EAAAqiC,EAAkBriC,EAAAyiC,EAAUziC,IAC5B,IAAAjtB,EAAAovD,EAAoBpvD,EAAAwvD,EAAUxvD,IAAA,CAmB9B,IAlBAgvD,GACAc,IAAA9vD,EACA+vD,IAAA9iC,EACAoiC,KAAAH,EAAAlvD,EACAuvD,KAAAJ,EAAAliC,EACAwiC,KAAAP,GAAAlvD,EAAA,GACA2vD,KAAAR,GAAAliC,EAAA,KAEA+iC,MAAAvnD,KAAAE,IAAAomD,EAAAM,KAAAL,EAAAK,MACAL,EAAAiB,MAAAxnD,KAAAE,IAAAomD,EAAAQ,KAAAP,EAAAO,MACAP,EAAAkB,MAAAznD,KAAAC,IAAAqmD,EAAAU,KAAAT,EAAAS,MACAT,EAAAmB,MAAA1nD,KAAAC,IAAAqmD,EAAAY,KAAAX,EAAAW,MAGAV,EAFAxmD,KAAA0sB,OAAA65B,EAAAgB,MAAAjB,EAAAM,MAAAR,EAAAT,wBACA3lD,KAAA0sB,OAAA65B,EAAAiB,MAAAlB,EAAAQ,MAAAV,EAAAR,yBACAQ,EAAAP,iBACAU,EAAAC,iBACAD,EAAAoB,YAAArB,EAAA//C,KACAggD,EAAAqB,OAAA,IACArB,EAAAkB,OAAAlB,EAAAgB,OAAAhB,EAAAmB,OAAAnB,EAAAiB,OAAA,CAGAL,EAAAnlD,KAAAukD,GACA,IAAAsB,EAAAT,EAAAZ,QACAxpD,IAAA6qD,GACAtwD,EAAAswD,EAAAC,OACAD,EAAAC,OAAAvwD,EACWA,EAAAswD,EAAAE,SACXF,EAAAE,OAAAxwD,GAEAitB,EAAAqjC,EAAAG,OACAH,EAAAC,OAAAtjC,EACWA,EAAAqjC,EAAAI,SACXJ,EAAAI,OAAAzjC,IAGA4iC,EAAAZ,GAAAqB,GACAC,OAAAvwD,EACAywD,OAAAxjC,EACAujC,OAAAxwD,EACA0wD,OAAAzjC,GAGA+hC,EAAAsB,YAGAvB,EAAA4B,qBACAzB,eAAAzB,EACA0B,gBAAAxB,EACAiD,iBAAApB,EAAAJ,EAAA,EACAyB,iBAAAnB,EAAAJ,EAAA,GAEAP,EAAAa,aACAb,EAAAc,YAEA,SAAAiB,EAAAhD,EAAAmB,EAAA8B,GAGA,IAFA,IAAAC,KACAC,EAAAnD,EAAAmD,SACAjxD,EAAA,EAAAqP,EAAA4hD,EAAA/pD,OAAyClH,EAAAqP,EAAQrP,IAGjD,IAFA,IACA4vD,EADAqB,EAAAjxD,GACA4vD,WACA3iC,EAAA,EAAAkxB,EAAAyR,EAAA1oD,OAA6C+lB,EAAAkxB,EAAQlxB,IAAA,CACrD,IAAA+hC,EAAAY,EAAA3iC,GACA+hC,EAAAC,oBAGA+B,EAAAvmD,KAAAukD,GAGA,OACA+B,cACAnB,WAAAoB,GAyNA,SAAAE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxD,GACA,IAAAyD,EAAAJ,EAAAG,EAAAE,SACAC,EAAAL,EAAAE,EAAAI,UACA,GAAAH,EAAAF,EAAA9jD,OAAA,GAAAkkD,EAAAJ,EAAA7jD,QAAA,EACA,YAEA,IAAAmkD,EAAAF,EAAAJ,EAAA9jD,MAAAugD,EAAAe,mBAAAP,iBACA,OAAAiD,EAAAF,EAAA7jD,OAAAmkD,EAEA,SAAAC,EAAA7F,GAOA,IANA,IAAA8F,EAAA9F,EAAAD,WAAA5kD,OACAsqD,EAAAnnD,OAAAynD,UACAJ,EAAArnD,OAAAynD,UACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IAAAlnD,MAAA8mD,GACAzxD,EAAA,EAAmBA,EAAAyxD,EAAqBzxD,IAAA,CASxC,IARA,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACA8xD,EAAAjH,EAAAmC,sBAAA8E,yBACAC,EAAA,IAAApnD,MAAAmnD,EAAA,GACAE,EAAA/nD,OAAAynD,UACAO,EAAAhoD,OAAAynD,UACAQ,EAAA,EACAC,EAAA,EACA3lD,EAAA,EACAlF,EAAAwqD,EAA4CxqD,GAAA,IAAQA,EAAA,CACpD,IAAAomD,EAAA7C,EAAAuH,YAAA9qD,GACA+qD,EAAA7lD,EAAAkhD,EAAAe,mBAAAb,cACA0E,EAAA9lD,EAAAkhD,EAAAe,mBAAAZ,eACAmE,EAAA3pD,KAAAC,IAAA0pD,EAAAK,GACAJ,EAAA5pD,KAAAC,IAAA2pD,EAAAK,GACAJ,EAAA7pD,KAAAE,IAAA2pD,EAAAxE,EAAAe,mBAAAP,kBACAiE,EAAA9pD,KAAAE,IAAA4pD,EAAAzE,EAAAe,mBAAAJ,kBACA0D,EAAAzqD,IACA6F,MAAAklD,EACAjlD,OAAAklD,GAEA9lD,IAAA,EAEA4kD,EAAA/oD,KAAAC,IAAA8oD,EAAAY,GACAV,EAAAjpD,KAAAC,IAAAgpD,EAAAW,GACAN,EAAAtpD,KAAAE,IAAAopD,EAAAO,GACAN,EAAAvpD,KAAAE,IAAAqpD,EAAAO,GACAN,EAAA7xD,IACAoyD,YAAAL,EACAX,SAAAY,EACAV,UAAAW,EACAN,WAAAO,EACAN,WAAAO,GAGA,OACAzG,WAAAmG,EACAT,WACAE,YACAK,aACAC,cAGA,SAAAW,EAAAvpB,GAKA,IAJA,IAAA8hB,EAAA9hB,EAAA4iB,IACA4G,EAAAxpB,EAAAypB,YAAAnzB,MACAqsB,EAAA3iB,EAAA6iB,MAAA2G,GACAf,EAAA3G,EAAA0B,KACAxsD,EAAA,EAAmBA,EAAAyxD,EAAqBzxD,IAAA,CAKxC,IAJA,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACA8xD,EAAAjH,EAAAmC,sBAAA8E,yBACAM,KACAvB,KACAvpD,EAAA,EAAqBA,GAAAwqD,EAA+BxqD,IAAA,CACpD,IAUAqnD,EAVA+D,EAAA5F,EAAA9jB,EAAA6hB,EAAAvjD,GACAomD,KACAlhD,EAAA,GAAAslD,EAAAxqD,EASA,GARAomD,EAAAU,KAAA/lD,KAAA+Z,KAAAyoC,EAAA6B,KAAAlgD,GACAkhD,EAAAa,KAAAlmD,KAAA+Z,KAAAyoC,EAAA8B,KAAAngD,GACAkhD,EAAAS,KAAA9lD,KAAA+Z,KAAAyoC,EAAA+B,KAAApgD,GACAkhD,EAAAY,KAAAjmD,KAAA+Z,KAAAyoC,EAAAgC,KAAArgD,GACAkhD,EAAAK,SAAAzmD,EACAmmD,EAAAzkB,EAAA0kB,EAAAgF,GACAN,EAAA/nD,KAAAqjD,GAEA,IAAApmD,GACAqnD,MACA//C,KAAA,KACA+/C,EAAAM,KAAA5mD,KAAA+Z,KAAAyoC,EAAA6B,KAAAlgD,GACAmiD,EAAAQ,KAAA9mD,KAAA+Z,KAAAyoC,EAAA8B,KAAAngD,GACAmiD,EAAAU,KAAAhnD,KAAA+Z,KAAAyoC,EAAA+B,KAAApgD,GACAmiD,EAAAY,KAAAlnD,KAAA+Z,KAAAyoC,EAAAgC,KAAArgD,GACAmiD,EAAAjB,aACAgB,EAAA1lB,EAAA2lB,EAAA+D,GACA7B,EAAAxmD,KAAAskD,GACAjB,EAAAmD,UAAAlC,OACS,CACT,IAAAgE,EAAA,GAAAb,EAAAxqD,EAAA,EACAsrD,MACAjE,MACA//C,KAAA,KACA+/C,EAAAM,KAAA5mD,KAAA+Z,KAAAyoC,EAAA6B,KAAAiG,EAAA,IACAhE,EAAAQ,KAAA9mD,KAAA+Z,KAAAyoC,EAAA8B,KAAAgG,GACAhE,EAAAU,KAAAhnD,KAAA+Z,KAAAyoC,EAAA+B,KAAA+F,EAAA,IACAhE,EAAAY,KAAAlnD,KAAA+Z,KAAAyoC,EAAAgC,KAAA8F,GACAhE,EAAAjB,aACAgB,EAAA1lB,EAAA2lB,EAAA+D,GACA7B,EAAAxmD,KAAAskD,GACAiE,EAAAvoD,KAAAskD,IACAA,MACA//C,KAAA,KACA+/C,EAAAM,KAAA5mD,KAAA+Z,KAAAyoC,EAAA6B,KAAAiG,GACAhE,EAAAQ,KAAA9mD,KAAA+Z,KAAAyoC,EAAA8B,KAAAgG,EAAA,IACAhE,EAAAU,KAAAhnD,KAAA+Z,KAAAyoC,EAAA+B,KAAA+F,GACAhE,EAAAY,KAAAlnD,KAAA+Z,KAAAyoC,EAAAgC,KAAA8F,EAAA,IACAhE,EAAAjB,aACAgB,EAAA1lB,EAAA2lB,EAAA+D,GACA7B,EAAAxmD,KAAAskD,GACAiE,EAAAvoD,KAAAskD,IACAA,MACA//C,KAAA,KACA+/C,EAAAM,KAAA5mD,KAAA+Z,KAAAyoC,EAAA6B,KAAAiG,EAAA,IACAhE,EAAAQ,KAAA9mD,KAAA+Z,KAAAyoC,EAAA8B,KAAAgG,EAAA,IACAhE,EAAAU,KAAAhnD,KAAA+Z,KAAAyoC,EAAA+B,KAAA+F,EAAA,IACAhE,EAAAY,KAAAlnD,KAAA+Z,KAAAyoC,EAAAgC,KAAA8F,EAAA,IACAhE,EAAAjB,aACAgB,EAAA1lB,EAAA2lB,EAAA+D,GACA7B,EAAAxmD,KAAAskD,GACAiE,EAAAvoD,KAAAskD,GACAjB,EAAAmD,SAAA+B,GAGA/H,EAAAuH,cACAvH,EAAAgG,WAEA,IAAAgC,EAAAlH,EAAAmH,6BAAAD,iBACA,OAAAA,GACA,OACAlH,EAAAoH,gBAAA,IA5VA,SAAA/pB,GAOA,IANA,IAAA8hB,EAAA9hB,EAAA4iB,IACA4G,EAAAxpB,EAAAypB,YAAAnzB,MACAqsB,EAAA3iB,EAAA6iB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAyG,EAAA,EACAnkC,EAAA,EAAmBA,EAAA2iC,EAAqB3iC,IACxCmkC,EAAA5qD,KAAAE,IAAA0qD,EAAAtH,EAAAD,WAAA58B,GAAAk+B,sBAAA8E,0BAEA,IAAAjyD,EAAA,EACAyH,EAAA,EACA1H,EAAA,EACA6rB,EAAA,EACAnlB,KAAA4sD,WAAA,WACA,KAAYrzD,EAAAmzD,EAAiBnzD,IAAA,CAC7B,KAAcyH,GAAA2rD,EAAkC3rD,IAAA,CAChD,KAAgB1H,EAAA6xD,EAAqB7xD,IAAA,CACrC,IAAAirD,EAAAc,EAAAD,WAAA9rD,GACA,KAAA0H,EAAAujD,EAAAmC,sBAAA8E,0BAAA,CAKA,IAFA,IAAApE,EAAA7C,EAAAuH,YAAA9qD,GACAknD,EAAAd,EAAAe,mBAAAD,aACkB/iC,EAAA+iC,GAAkB,CACpC,IAAA2E,EAAAzC,EAAAhD,EAAAjiC,EAAA5rB,GAEA,OADA4rB,IACA0nC,EAEA1nC,EAAA,GAEA7rB,EAAA,EAEA0H,EAAA,EAEA,UAAA+iD,EAAA,mBAyTA,CAAArhB,GACA,MACA,OACA2iB,EAAAoH,gBAAA,IAzTA,SAAA/pB,GAOA,IANA,IAAA8hB,EAAA9hB,EAAA4iB,IACA4G,EAAAxpB,EAAAypB,YAAAnzB,MACAqsB,EAAA3iB,EAAA6iB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAyG,EAAA,EACAnkC,EAAA,EAAmBA,EAAA2iC,EAAqB3iC,IACxCmkC,EAAA5qD,KAAAE,IAAA0qD,EAAAtH,EAAAD,WAAA58B,GAAAk+B,sBAAA8E,0BAEA,IAAAxqD,EAAA,EACAzH,EAAA,EACAD,EAAA,EACA6rB,EAAA,EACAnlB,KAAA4sD,WAAA,WACA,KAAY5rD,GAAA2rD,EAAkC3rD,IAAA,CAC9C,KAAczH,EAAAmzD,EAAiBnzD,IAAA,CAC/B,KAAgBD,EAAA6xD,EAAqB7xD,IAAA,CACrC,IAAAirD,EAAAc,EAAAD,WAAA9rD,GACA,KAAA0H,EAAAujD,EAAAmC,sBAAA8E,0BAAA,CAKA,IAFA,IAAApE,EAAA7C,EAAAuH,YAAA9qD,GACAknD,EAAAd,EAAAe,mBAAAD,aACkB/iC,EAAA+iC,GAAkB,CACpC,IAAA2E,EAAAzC,EAAAhD,EAAAjiC,EAAA5rB,GAEA,OADA4rB,IACA0nC,EAEA1nC,EAAA,GAEA7rB,EAAA,EAEAC,EAAA,EAEA,UAAAwqD,EAAA,mBAsRA,CAAArhB,GACA,MACA,OACA2iB,EAAAoH,gBAAA,IAtRA,SAAA/pB,GACA,IAKAnpC,EAAAyH,EAAAtH,EAAAgB,EALA8pD,EAAA9hB,EAAA4iB,IACA4G,EAAAxpB,EAAAypB,YAAAnzB,MACAqsB,EAAA3iB,EAAA6iB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KAEAyG,EAAA,EACA,IAAAjzD,EAAA,EAAeA,EAAAyxD,EAAqBzxD,IAAA,CACpC,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACAizD,EAAA5qD,KAAAE,IAAA0qD,EAAApI,EAAAmC,sBAAA8E,0BAEA,IAAAsB,EAAA,IAAAnqC,WAAAgqC,EAAA,GACA,IAAA3rD,EAAA,EAAeA,GAAA2rD,IAAkC3rD,EAAA,CACjD,IAAA+rD,EAAA,EACA,IAAArzD,EAAA,EAAiBA,EAAAyxD,IAAqBzxD,EAAA,CACtC,IAAAoyD,EAAAzG,EAAAD,WAAA1rD,GAAAoyD,YACA9qD,EAAA8qD,EAAAtrD,SACAusD,EAAAhrD,KAAAE,IAAA8qD,EAAAjB,EAAA9qD,GAAAmnD,mBAAAD,eAGA4E,EAAA9rD,GAAA+rD,EAEAxzD,EAAA,EACAyH,EAAA,EACAtH,EAAA,EACAgB,EAAA,EACAsF,KAAA4sD,WAAA,WACA,KAAY5rD,GAAA2rD,EAAkC3rD,IAAA,CAC9C,KAActG,EAAAoyD,EAAA9rD,GAA+BtG,IAAA,CAC7C,KAAgBhB,EAAAyxD,EAAqBzxD,IAAA,CACrC,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACA,KAAAsH,EAAAujD,EAAAmC,sBAAA8E,0BAAA,CAGA,IAAApE,EAAA7C,EAAAuH,YAAA9qD,GACAknD,EAAAd,EAAAe,mBAAAD,aACA,KAAAxtD,GAAAwtD,GAAA,CAGA,KAAkB3uD,EAAAmzD,GAAiB,CACnC,IAAAG,EAAAzC,EAAAhD,EAAA1sD,EAAAnB,GAEA,OADAA,IACAszD,EAEAtzD,EAAA,IAEAG,EAAA,EAEAgB,EAAA,EAEA,UAAAqpD,EAAA,mBAmOA,CAAArhB,GACA,MACA,OACA2iB,EAAAoH,gBAAA,IAnOA,SAAA/pB,GACA,IAAA8hB,EAAA9hB,EAAA4iB,IACA4G,EAAAxpB,EAAAypB,YAAAnzB,MACAqsB,EAAA3iB,EAAA6iB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAW,EAAAqE,EAAA7F,GACA2H,EAAAnG,EACAttD,EAAA,EACAyH,EAAA,EACAtH,EAAA,EACAk+B,EAAA,EACA1J,EAAA,EACAluB,KAAA4sD,WAAA,WACA,KAAY1+B,EAAA8+B,EAAA1B,WAAyCp9B,IAAA,CACrD,KAAc0J,EAAAo1B,EAAA3B,WAAyCzzB,IAAA,CACvD,KAAgBl+B,EAAAyxD,EAAqBzxD,IAAA,CAGrC,IAFA,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACA8xD,EAAAjH,EAAAmC,sBAAA8E,yBACkBxqD,GAAAwqD,EAA+BxqD,IAAA,CACjD,IAAAomD,EAAA7C,EAAAuH,YAAA9qD,GACA2pD,EAAA9D,EAAAzB,WAAA1rD,GAAAoyD,YAAA9qD,GACAmkB,EAAAqlC,EAAA5yB,EAAA1J,EAAAy8B,EAAAqC,EAAA5F,GACA,UAAAjiC,EAAA,CAGA,KAAoB5rB,EAAAmzD,GAAiB,CACrC,IAAAG,EAAAzC,EAAAhD,EAAAjiC,EAAA5rB,GAEA,OADAA,IACAszD,EAEAtzD,EAAA,GAEAyH,EAAA,EAEAtH,EAAA,EAEAk+B,EAAA,EAEA,UAAAmsB,EAAA,mBA4LA,CAAArhB,GACA,MACA,OACA2iB,EAAAoH,gBAAA,IA5LA,SAAA/pB,GACA,IAAA8hB,EAAA9hB,EAAA4iB,IACA4G,EAAAxpB,EAAAypB,YAAAnzB,MACAqsB,EAAA3iB,EAAA6iB,MAAA2G,GACAQ,EAAArH,EAAAmH,6BAAAE,YACAvB,EAAA3G,EAAA0B,KACAW,EAAAqE,EAAA7F,GACA9rD,EAAA,EACAyH,EAAA,EACAtH,EAAA,EACAk+B,EAAA,EACA1J,EAAA,EACAluB,KAAA4sD,WAAA,WACA,KAAYlzD,EAAAyxD,IAAqBzxD,EAAA,CAIjC,IAHA,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACAszD,EAAAnG,EAAAzB,WAAA1rD,GACA8xD,EAAAjH,EAAAmC,sBAAA8E,yBACct9B,EAAA8+B,EAAA1B,WAAyCp9B,IAAA,CACvD,KAAgB0J,EAAAo1B,EAAA3B,WAAyCzzB,IAAA,CACzD,KAAkB52B,GAAAwqD,EAA+BxqD,IAAA,CACjD,IAAAomD,EAAA7C,EAAAuH,YAAA9qD,GACA2pD,EAAAqC,EAAAlB,YAAA9qD,GACAmkB,EAAAqlC,EAAA5yB,EAAA1J,EAAAy8B,EAAAqC,EAAA5F,GACA,UAAAjiC,EAAA,CAGA,KAAoB5rB,EAAAmzD,GAAiB,CACrC,IAAAG,EAAAzC,EAAAhD,EAAAjiC,EAAA5rB,GAEA,OADAA,IACAszD,EAEAtzD,EAAA,GAEAyH,EAAA,EAEA42B,EAAA,EAEA1J,EAAA,EAEA,UAAA61B,EAAA,mBAqJA,CAAArhB,GACA,MACA,QACA,UAAAqhB,EAAA,iCAAAwI,IAGA,SAAAU,EAAAvqB,EAAAv6B,EAAA4T,EAAA+gC,GACA,IACAp0C,EADA6mC,EAAA,EAEA2d,EAAA,EACAC,GAAA,EACA,SAAA7kC,EAAAsE,GACA,KAAAsgC,EAAAtgC,GAAA,CACA,IAAA1rB,EAAAiH,EAAA4T,EAAAwzB,GACAA,IACA4d,GACAzkD,KAAA,EAAAxH,EACAgsD,GAAA,EACAC,GAAA,IAEAzkD,KAAA,EAAAxH,EACAgsD,GAAA,GAEA,MAAAhsD,IACAisD,GAAA,GAIA,OAAAzkD,KADAwkD,GAAAtgC,IACA,GAAAA,GAAA,EAEA,SAAAwgC,EAAAxyD,GACA,aAAAuN,EAAA4T,EAAAwzB,EAAA,IAAApnC,EAAA4T,EAAAwzB,KAAA30C,GACAyyD,EAAA,IACA,GACO,MAAAllD,EAAA4T,EAAAwzB,IAAApnC,EAAA4T,EAAAwzB,EAAA,KAAA30C,IACPyyD,EAAA,IACA,GAIA,SAAAA,EAAAzgC,GACA2iB,GAAA3iB,EAEA,SAAA0gC,IACAJ,EAAA,EACAC,IACA5d,IACA4d,GAAA,GAGA,SAAAI,IACA,OAAAjlC,EAAA,GACA,SAEA,OAAAA,EAAA,GACA,SAEA,IAAA1tB,EAAA0tB,EAAA,GACA,OAAA1tB,EAAA,EACAA,EAAA,GAEAA,EAAA0tB,EAAA,IACA,GACA1tB,EAAA,GAEAA,EAAA0tB,EAAA,IACA,GAOA,IALA,IAAA4jC,EAAAxpB,EAAAypB,YAAAnzB,MACAqsB,EAAA3iB,EAAA6iB,MAAA2G,GACAsB,EAAA9qB,EAAA+qB,IAAAD,cACAE,EAAAhrB,EAAA+qB,IAAAC,cACAjB,EAAApH,EAAAoH,gBACAld,EAAAuN,GAAA,CACAwQ,IACAE,GAAAJ,EAAA,MACAC,EAAA,GAEA,IAAAR,EAAAJ,EAAAG,aACA,GAAAtkC,EAAA,IAMA,IAHA,IAEAggC,EAFA+B,EAAAwC,EAAAxC,YACA5nB,KAEAnpC,EAAA,EAAAqP,EAAAkkD,EAAA3D,WAAA1oD,OAAoDlH,EAAAqP,EAAQrP,IAAA,CAE5D,IAAAswD,GADAtB,EAAAuE,EAAA3D,WAAA5vD,IACAswD,SACA+D,EAAArF,EAAAc,IAAAQ,EAAAC,OACA+D,EAAAtF,EAAAe,IAAAO,EAAAG,OACA8D,GAAA,EACAC,GAAA,EAEA,QAAA/uD,IAAAupD,EAAA,SACAuF,IAAAvlC,EAAA,OACS,CAET,IAAAylC,EAAAC,EACA,QAAAjvD,KAFA6qD,EAAAtB,EAAAsB,UAEA,cACAmE,EAAAnE,EAAAmE,kBACW,CACX,IAAAlnD,EAAA+iD,EAAAE,OAAAF,EAAAC,OAAA,EACA/iD,EAAA8iD,EAAAI,OAAAJ,EAAAG,OAAA,EACAgE,EAAA,IAAAE,EAAApnD,EAAAC,EAAAujD,GACA2D,EAAA,IAAAE,EAAArnD,EAAAC,GACA8iD,EAAAmE,gBACAnE,EAAAoE,oBAEA,GAAAD,EAAAvsC,MAAAmsC,EAAAC,EAAAvD,GACA,QACA,IAAA/hC,EAAA,GAOe,CACfylC,EAAAI,eAAA9D,GACA,MAPA,IADA0D,EAAAK,YACA,CACA9F,EAAA+F,UAAA,EACAR,EAAAC,GAAA,EACA,QASA,GAAAD,EAAA,CAGA,GAAAC,EAAA,CAGA,KAFAE,EAAApE,EAAAoE,mBACAxsC,MAAAmsC,EAAAC,KAEA,GAAAtlC,EAAA,IAEA,IADA0lC,EAAAI,YAEA,WAGAJ,EAAAG,iBAGA7F,EAAAgG,cAAAN,EAAApzD,MAGA,IADA,IAAA2zD,EAAAhB,IACAjlC,EAAA,IACAggC,EAAAqB,SAEA,IAAA6E,GAAA,EAAA7tC,EAAAhlB,MAAA4yD,GAEAE,EAAAnmC,GADAimC,EAAA,GAAAC,IAAA,EAAAA,GAAAlG,EAAAqB,QAEAlnB,EAAA1+B,MACAukD,YACAiG,eACAzR,WAAA2R,KAOA,IAJAnB,IACAI,GACAN,EAAA,KAEA3qB,EAAAjiC,OAAA,IACA,IAAAkuD,EAAAjsB,EAAAlgB,aAEAxjB,KADAupD,EAAAoG,EAAApG,WACA,OACAA,EAAAngD,SAEAmgD,EAAAngD,KAAApE,MACAoE,OACAyD,MAAAmQ,EAAAwzB,EACAlvC,IAAA0b,EAAAwzB,EAAAmf,EAAA5R,WACAyR,aAAAG,EAAAH,eAEAhf,GAAAmf,EAAA5R,aAGA,OAAAvN,EAEA,SAAAof,EAAAC,EAAAC,EAAAC,EAAAzG,EAAA0G,EAAAC,EAAAC,EAAAC,GAOA,IANA,IAAAzK,EAAA4D,EAAAM,KACA7D,EAAAuD,EAAAQ,KACAhiD,EAAAwhD,EAAAU,KAAAV,EAAAM,KACAO,EAAAb,EAAAa,WACAiG,EAAA,MAAA9G,EAAA//C,KAAA6T,OAAA,OACAizC,EAAA,MAAA/G,EAAA//C,KAAA6T,OAAA,GAAA0yC,EAAA,EACAv1D,EAAA,EAAAqP,EAAAugD,EAAA1oD,OAA2ClH,EAAAqP,IAAQrP,EAAA,CACnD,IAAAgvD,EAAAY,EAAA5vD,GACA+1D,EAAA/G,EAAAkB,MAAAlB,EAAAgB,MACAgG,EAAAhH,EAAAmB,MAAAnB,EAAAiB,MACA,OAAA8F,GAAA,IAAAC,QAGAvwD,IAAAupD,EAAA,MAGA,IAAAiH,EAAAC,EACAD,EAAA,IAAAE,EAAAJ,EAAAC,EAAAhH,EAAAoB,YAAApB,EAAAgG,cAAAU,GACAQ,EAAA,EACA,IAGAjpC,EAAAkxB,EAAAiY,EAHAvnD,EAAAmgD,EAAAngD,KACAg+B,EAAA,EACAooB,EAAA,EAEA,IAAAhoC,EAAA,EAAAkxB,EAAAtvC,EAAA3H,OAAmC+lB,EAAAkxB,EAAQlxB,IAE3C4f,IADAupB,EAAAvnD,EAAAoe,IACAlmB,IAAAqvD,EAAA9jD,MACA2iD,GAAAmB,EAAAnB,aAEA,IAAAoB,EAAA,IAAAjvD,WAAAylC,GACAoJ,EAAA,EACA,IAAAhpB,EAAA,EAAAkxB,EAAAtvC,EAAA3H,OAAmC+lB,EAAAkxB,EAAQlxB,IAAA,CAE3C,IAAA5Z,GADA+iD,EAAAvnD,EAAAoe,IACApe,KAAAqS,SAAAk1C,EAAA9jD,MAAA8jD,EAAArvD,KACAsvD,EAAAx1C,IAAAxN,EAAA4iC,GACAA,GAAA5iC,EAAAnM,OAEA,IAAAovD,EAAA,IAAA9L,EAAAnB,kBAAAgN,EAAA,EAAAxpB,GAEA,IADAopB,EAAAM,WAAAD,GACArpC,EAAA,EAAiBA,EAAAgoC,EAAkBhoC,IAAA,CACnC,OAAAipC,GACA,OACAD,EAAAO,iCACA,MACA,OACAP,EAAAQ,6BACA,MACA,OACAR,EAAAS,iBACAd,GACAK,EAAAU,0BAIAT,KAAA,KAEA,IAKArqC,EAAA/qB,EAAA81D,EALAn0C,EAAAusC,EAAAgB,MAAA7E,GAAA6D,EAAAiB,MAAAzE,GAAAj+C,EACAy2B,EAAAiyB,EAAAY,gBACAC,EAAAb,EAAAc,qBACAC,EAAAf,EAAAe,YACAC,EAAAtB,EAAA,KAEA1f,EAAA,EACA,IAAAihB,EAAA,OAAAnI,EAAA//C,KACA,IAAAie,EAAA,EAAiBA,EAAA+oC,EAAiB/oC,IAAA,CAClC,IACAkqC,EAAA,GADA10C,EAAAlV,EAAA,IACAgoD,EAAAhoD,GAAAsoD,EAAAC,EACA,IAAAjqC,EAAA,EAAmBA,EAAAkqC,EAAgBlqC,IAAA,CAEnC,QADA/qB,EAAAg2D,EAAA7gB,IACA,CACAn1C,KAAAm2D,GAAAxB,EACA,IAAAzxB,EAAAiS,KACAn1C,MAEA81D,EAAAI,EAAA/gB,GACA,IAAA1rC,EAAA2sD,EAAAC,GAAA10C,GAAA,GAAAA,EAEA6yC,EAAA/qD,GADAorD,GAAAiB,GAAAlB,EACA50D,EAEAA,GAAA,GAAA40D,EAAAkB,GAGAn0C,IACAwzB,IAEAxzB,GAAAlV,EAAAwoD,KAIA,SAAAqB,EAAAhuB,EAAA2iB,EAAA3rD,GAcA,IAbA,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACAgtD,EAAAnC,EAAAmC,sBACAiK,EAAApM,EAAAoM,uBACAnF,EAAA9E,EAAA8E,yBACAoF,EAAAD,EAAAE,OACAC,EAAAH,EAAAG,gBACAC,EAAAJ,EAAAI,UACA7B,EAAAxI,EAAAwI,uBACA8B,EAAAtuB,EAAA0iB,WAAA1rD,GAAAs3D,UACA/B,EAAAvI,EAAAuK,yBACA7vD,EAAA6tD,EAAA,IAAAiC,EAAA,IAAAC,EACAC,KACAlwD,EAAA,EACA5H,EAAA,EAAmBA,GAAAkyD,EAA+BlyD,IAAA,CAKlD,IAJA,IAAA8tD,EAAA7C,EAAAuH,YAAAxyD,GACAuN,EAAAugD,EAAAS,KAAAT,EAAAU,KACAhhD,EAAAsgD,EAAAY,KAAAZ,EAAAa,KACA2G,EAAA,IAAAz9B,aAAAtqB,EAAAC,GACAyf,EAAA,EAAAkxB,EAAA2P,EAAAmD,SAAA/pD,OAAsD+lB,EAAAkxB,EAAQlxB,IAAA,CAC9D,IAAA8qC,EAAAC,EACAR,GAIAO,EAAAT,EAAA1vD,GAAAmwD,GACAC,EAAAV,EAAA1vD,GAAAowD,QACApwD,MALAmwD,EAAAT,EAAA,GAAAS,GACAC,EAAAV,EAAA,GAAAU,SAAAh4D,EAAA,IAAAA,EAAA,IAMA,IAAA+uD,EAAAjB,EAAAmD,SAAAhkC,GACAgrC,EAAAvN,EAAAqE,EAAA//C,MAGAqmD,EAAAC,EAAA/nD,EAAAC,EAAAuhD,EAFA4G,EAAA,EAAAltD,KAAAywB,IAAA,EAAAw+B,EAAAO,EAAAD,IAAA,EAAAD,EAAA,MACAN,EAAAO,EAAA,EACArC,EAAAC,GAEAkC,EAAArtD,MACA8C,QACAC,SACAkuC,MAAA4Z,IAGA,IAAAtrD,EAAAlC,EAAAowD,UAAAJ,EAAA7M,EAAA6B,KAAA7B,EAAA8B,MACA,OACAz/B,KAAA29B,EAAA6B,KACAqL,IAAAlN,EAAA8B,KACAx/C,MAAAvD,EAAAuD,MACAC,OAAAxD,EAAAwD,OACAkuC,MAAA1xC,EAAA0xC,OAkFA,SAAA0c,EAAAhvB,EAAAwpB,GAIA,IAHA,IACAf,EADAzoB,EAAA4iB,IACAY,KACAb,EAAA3iB,EAAA6iB,MAAA2G,GACAxyD,EAAA,EAAmBA,EAAAyxD,EAAqBzxD,IAAA,CACxC,IAAA6qD,EAAAc,EAAAD,WAAA1rD,GACAi4D,OAAA5yD,IAAA2jC,EAAAypB,YAAAyF,IAAAl4D,GAAAgpC,EAAAypB,YAAAyF,IAAAl4D,GAAAgpC,EAAAypB,YAAA0F,IACAtN,EAAAoM,uBAAAgB,EACA,IAAAlL,OAAA1nD,IAAA2jC,EAAAypB,YAAA2F,IAAAp4D,GAAAgpC,EAAAypB,YAAA2F,IAAAp4D,GAAAgpC,EAAAypB,YAAAsB,IACAlJ,EAAAmC,sBAAAD,EAEApB,EAAAmH,6BAAA9pB,EAAAypB,YAAAsB,IAvwCA5J,EAAArpD,WACAo0B,MAAA,SAAAzmB,GAEA,YADA,EAAAwY,EAAAllB,YAAA0M,EAAA,GAOA,IAFA,IAAAonC,EAAA,EACA/uC,EAAA2H,EAAA3H,OACA+uC,EAAA/uC,GAAA,CACA,IAAAuxD,EAAA,EACAC,GAAA,EAAArxC,EAAAnlB,YAAA2M,EAAAonC,GACA0iB,GAAA,EAAAtxC,EAAAnlB,YAAA2M,EAAAonC,EAAA,GAUA,GATAA,GAAAwiB,EACA,IAAAC,IACAA,EAAA,cAAArxC,EAAAnlB,YAAA2M,EAAAonC,IAAA,EAAA5uB,EAAAnlB,YAAA2M,EAAAonC,EAAA,GACAA,GAAA,EACAwiB,GAAA,GAEA,IAAAC,IACAA,EAAAxxD,EAAA+uC,EAAAwiB,GAEAC,EAAAD,EACA,UAAAhO,EAAA,0BAEA,IAAAjH,EAAAkV,EAAAD,EACAG,GAAA,EACA,OAAAD,GACA,gBACAC,GAAA,EACA,MACA,gBACA,IAAAC,EAAAhqD,EAAAonC,GACA,OAAA4iB,EAAA,CACA,IAAAC,GAAA,EAAAzxC,EAAAnlB,YAAA2M,EAAAonC,EAAA,GACA,OAAA6iB,GACA,QACA,QACA,QACA,MACA,SACA,EAAAzxC,EAAA7lB,MAAA,sBAAAs3D,SAGa,IAAAD,IACb,EAAAxxC,EAAApkB,MAAA,6BAEA,MACA,gBACAyD,KAAAqyD,gBAAAlqD,EAAAonC,IAAAuN,GACA,MACA,eACA,eAAAn8B,EAAAnlB,YAAA2M,EAAAonC,KACA,EAAA5uB,EAAA7lB,MAAA,yBAEA,MACA,gBACA,gBACA,gBACA,gBACA,gBACA,MACA,QACA,IAAAw3D,EAAAl4C,OAAAC,aAAA43C,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IACA,EAAAtxC,EAAA7lB,MAAA,2BAAAm3D,EAAA,KAAAK,EAAA,KAGAJ,IACA3iB,GAAAuN,QAhEA98C,KAAAqyD,gBAAAlqD,EAAA,EAAAA,EAAA3H,SAoEA+xD,qBAAA,SAAAnoD,GAEA,IADA,IAAAooD,EAAApoD,EAAA2W,UACAyxC,GAAA,IAIA,YAHAA,GAEA,GADAA,EAAApoD,EAAA2W,YAEA,CACA3W,EAAAmX,KAAA,GACA,IAAAsjC,EAAAz6C,EAAA8W,aAAA,EACAgkC,EAAA96C,EAAA8W,aAAA,EACAwjC,EAAAt6C,EAAA8W,aAAA,EACA6jC,EAAA36C,EAAA8W,aAAA,EACA9W,EAAAmX,KAAA,IACA,IAAA2kC,EAAA97C,EAAA4W,YAKA,OAJAhhB,KAAA6G,MAAAg+C,EAAAH,EACA1kD,KAAA8G,OAAAo+C,EAAAH,EACA/kD,KAAAmrD,gBAAAjF,OACAlmD,KAAAqhC,iBAAA,IAIA,UAAA0iB,EAAA,uCAEAsO,gBAAA,SAAAlqD,EAAAyD,EAAAvL,GACA,IAAAqiC,KACA+vB,GAAA,EACA,IAEA,IADA,IAAAljB,EAAA3jC,EACA2jC,EAAA,EAAAlvC,GAAA,CACA,IAAAN,GAAA,EAAA4gB,EAAAllB,YAAA0M,EAAAonC,GACAA,GAAA,EACA,IACAhpB,EACAmsC,EACA9B,EACA+B,EACA7B,EACAzL,EANA7kD,EAAA,EAOA,OAAAT,GACA,WACA2iC,EAAAkwB,YAAA,EACA,MACA,WACA,MACA,WACApyD,GAAA,EAAAmgB,EAAAllB,YAAA0M,EAAAonC,GACA,IAAAiV,KACAA,EAAAK,MAAA,EAAAlkC,EAAAnlB,YAAA2M,EAAAonC,EAAA,GACAiV,EAAAU,MAAA,EAAAvkC,EAAAnlB,YAAA2M,EAAAonC,EAAA,GACAiV,EAAAE,OAAA,EAAA/jC,EAAAnlB,YAAA2M,EAAAonC,EAAA,IACAiV,EAAAO,OAAA,EAAApkC,EAAAnlB,YAAA2M,EAAAonC,EAAA,IACAiV,EAAAkB,OAAA,EAAA/kC,EAAAnlB,YAAA2M,EAAAonC,EAAA,IACAiV,EAAAqB,OAAA,EAAAllC,EAAAnlB,YAAA2M,EAAAonC,EAAA,IACAiV,EAAAiB,QAAA,EAAA9kC,EAAAnlB,YAAA2M,EAAAonC,EAAA,IACAiV,EAAAoB,QAAA,EAAAjlC,EAAAnlB,YAAA2M,EAAAonC,EAAA,IACA,IAAA4b,GAAA,EAAAxqC,EAAAllB,YAAA0M,EAAAonC,EAAA,IACAiV,EAAA0B,KAAAiF,EACA,IAAA/F,KACA7+B,EAAAgpB,EAAA,GACA,QAAAj2C,EAAA,EAA6BA,EAAA6xD,EAAqB7xD,IAAA,CAClD,IAAAirD,GACAyM,UAAA,OAAA7oD,EAAAoe,IACAssC,YAAA,IAAA1qD,EAAAoe,IACAo+B,MAAAx8C,EAAAoe,EAAA,GACAy+B,MAAA78C,EAAAoe,EAAA,IAEAA,GAAA,EACA+9B,EAAAC,EAAAC,GACAY,EAAArhD,KAAAwgD,GAEA7hB,EAAA4iB,IAAAd,EACA9hB,EAAA0iB,aACAD,EAAAziB,EAAA0iB,GACA1iB,EAAAkvB,OACAlvB,EAAAovB,OACA,MACA,WACAtxD,GAAA,EAAAmgB,EAAAllB,YAAA0M,EAAAonC,GACA,IAAAujB,KAGA,OAFAvsC,EAAAgpB,EAAA,EAEA,IADAmjB,EAAAvqD,EAAAoe,OAEA,OACAosC,EAAA,EACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,QACA,UAAAjxD,MAAA,sBAAA6yD,GAMA,IAJAI,EAAAC,eAAA,IAAAJ,EACAG,EAAAhC,kBACAgC,EAAA/B,UAAA2B,GAAA,EACA9B,KACArqC,EAAA/lB,EAAA+uC,GAAA,CACA,IAAAyjB,KACA,IAAAL,GACAK,EAAA1B,QAAAnpD,EAAAoe,MAAA,EACAysC,EAAA3B,GAAA,IAEA2B,EAAA1B,QAAAnpD,EAAAoe,IAAA,EACAysC,EAAA3B,IAAA,EAAAlpD,EAAAoe,KAAA,EAAApe,EAAAoe,EAAA,GACAA,GAAA,GAEAqqC,EAAA7sD,KAAAivD,GAEAF,EAAAjC,OAAAD,EACAluB,EAAAkwB,WACAlwB,EAAAmvB,IAAAiB,GAEApwB,EAAAypB,YAAA0F,IAAAiB,EACApwB,EAAAypB,YAAAyF,QAEA,MACA,WACApxD,GAAA,EAAAmgB,EAAAllB,YAAA0M,EAAAonC,GACA,IAEA0jB,EAFAC,KAUA,OATA3sC,EAAAgpB,EAAA,EAEA7M,EAAA4iB,IAAAY,KAAA,IACA+M,EAAA9qD,EAAAoe,MAEA0sC,GAAA,EAAAtyC,EAAAllB,YAAA0M,EAAAoe,GACAA,GAAA,GAGA,IADAmsC,EAAAvqD,EAAAoe,OAEA,OACAosC,EAAA,EACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,OACA6B,EAAA,GACA7B,GAAA,EACA,MACA,QACA,UAAAjxD,MAAA,sBAAA6yD,GAMA,IAJAQ,EAAAH,eAAA,IAAAJ,EACAO,EAAApC,kBACAoC,EAAAnC,UAAA2B,GAAA,EACA9B,KACArqC,EAAA/lB,EAAA+uC,GACAyjB,KACA,IAAAL,GACAK,EAAA1B,QAAAnpD,EAAAoe,MAAA,EACAysC,EAAA3B,GAAA,IAEA2B,EAAA1B,QAAAnpD,EAAAoe,IAAA,EACAysC,EAAA3B,IAAA,EAAAlpD,EAAAoe,KAAA,EAAApe,EAAAoe,EAAA,GACAA,GAAA,GAEAqqC,EAAA7sD,KAAAivD,GAEAE,EAAArC,OAAAD,EACAluB,EAAAkwB,WACAlwB,EAAAkvB,IAAAqB,GAAAC,EAEAxwB,EAAAypB,YAAAyF,IAAAqB,GAAAC,EAEA,MACA,WACA1yD,GAAA,EAAAmgB,EAAAllB,YAAA0M,EAAAonC,GACA,IAAA4jB,KACA5sC,EAAAgpB,EAAA,EACA,IAAA6jB,EAAAjrD,EAAAoe,KACA4sC,EAAAxM,mCAAA,EAAAyM,GACAD,EAAA3F,iBAAA,EAAA4F,GACAD,EAAAzF,iBAAA,EAAA0F,GACAD,EAAA5G,iBAAApkD,EAAAoe,KACA4sC,EAAAzG,aAAA,EAAA/rC,EAAAllB,YAAA0M,EAAAoe,GACAA,GAAA,EACA4sC,EAAAE,2BAAAlrD,EAAAoe,KACA4sC,EAAA3H,yBAAArjD,EAAAoe,KACA4sC,EAAAnM,IAAA,MAAA7+C,EAAAoe,MACA4sC,EAAAjM,IAAA,MAAA/+C,EAAAoe,MACA,IAAA+sC,EAAAnrD,EAAAoe,KAQA,GAPA4sC,EAAAI,mCAAA,EAAAD,GACAH,EAAAK,6BAAA,EAAAF,GACAH,EAAAM,+BAAA,EAAAH,GACAH,EAAAO,mBAAA,EAAAJ,GACAH,EAAAQ,0BAAA,GAAAL,GACAH,EAAAjE,0BAAA,GAAAoE,GACAH,EAAAlC,yBAAA9oD,EAAAoe,KACA4sC,EAAAxM,gCAAA,CAEA,IADA,IAAAE,KACAtgC,EAAA/lB,EAAA+uC,GAAA,CACA,IAAAqkB,EAAAzrD,EAAAoe,KACAsgC,EAAA9iD,MACA6iD,IAAA,GAAAgN,EACA9M,IAAA8M,GAAA,IAGAT,EAAAtM,iBAEA,IAAAgN,KAgBA,GAfAV,EAAAI,iCACAM,EAAA9vD,KAAA,mCAEAovD,EAAAK,2BACAK,EAAA9vD,KAAA,6BAEAovD,EAAAM,6BACAI,EAAA9vD,KAAA,+BAEAovD,EAAAO,iBACAG,EAAA9vD,KAAA,mBAEAovD,EAAAQ,wBACAE,EAAA9vD,KAAA,0BAEA8vD,EAAArzD,OAAA,EAEA,MADAiyD,GAAA,EACA,IAAA5yD,MAAA,4BAAAg0D,EAAA1yD,KAAA,WAEAuhC,EAAAkwB,WACAlwB,EAAA+qB,IAAA0F,GAEAzwB,EAAAypB,YAAAsB,IAAA0F,EACAzwB,EAAAypB,YAAA2F,QAEA,MACA,WACAtxD,GAAA,EAAAmgB,EAAAllB,YAAA0M,EAAAonC,IACA8V,MACArsB,OAAA,EAAArY,EAAAllB,YAAA0M,EAAAonC,EAAA,GACA8V,EAAA7kD,QAAA,EAAAmgB,EAAAnlB,YAAA2M,EAAAonC,EAAA,GACA8V,EAAAnC,QAAAmC,EAAA7kD,OAAA+uC,EAAA,EACA8V,EAAAyO,UAAA3rD,EAAAonC,EAAA,GACA8V,EAAA0O,WAAA5rD,EAAAonC,EAAA,GACA7M,EAAAkwB,YAAA,EACA,IAAAvN,EAAAyO,YACAzO,EAAAoI,IAAA/qB,EAAA+qB,IACApI,EAAAyM,IAAApvB,EAAAovB,IAAAlwD,MAAA,GACAyjD,EAAAwM,IAAAnvB,EAAAmvB,IACAxM,EAAAuM,IAAAlvB,EAAAkvB,IAAAhwD,MAAA,IAEA8gC,EAAAypB,YAAA9G,EACA,MACA,WAEA,KADAA,EAAA3iB,EAAAypB,aACA2H,YACApC,EAAAhvB,EAAA2iB,EAAArsB,OACAizB,EAAAvpB,IAGAuqB,EAAAvqB,EAAAv6B,EAAAonC,EADA/uC,EAAA6kD,EAAAnC,QAAA3T,GAEA,MACA,WACA,WACA,WACA,WACA/uC,GAAA,EAAAmgB,EAAAllB,YAAA0M,EAAAonC,GACA,MACA,WACA,UAAA1vC,MAAA,mDACA,QACA,UAAAA,MAAA,4BAAAE,EAAA8K,SAAA,KAEA0kC,GAAA/uC,GAEO,MAAAgL,GACP,GAAAinD,GAAAzyD,KAAAqkD,qBACA,UAAAN,EAAAv4C,EAAAvL,UAEA,EAAA0gB,EAAA7lB,MAAA,gCAAA0Q,EAAAvL,SAGAD,KAAAulD,MA80BA,SAAA7iB,GAKA,IAJA,IAAA8hB,EAAA9hB,EAAA4iB,IACAF,EAAA1iB,EAAA0iB,WACA+F,EAAA3G,EAAA0B,KACA8N,KACA16D,EAAA,EAAAqP,EAAA+5B,EAAA6iB,MAAA/kD,OAA8ClH,EAAAqP,EAAQrP,IAAA,CACtD,IAEAI,EAFA2rD,EAAA3iB,EAAA6iB,MAAAjsD,GACA26D,KAEA,IAAAv6D,EAAA,EAAiBA,EAAAyxD,EAAqBzxD,IACtCu6D,EAAAv6D,GAAAg3D,EAAAhuB,EAAA2iB,EAAA3rD,GAEA,IASA6oB,EAAAxG,EAEAwK,EACAkxB,EACAqN,EACAG,EACAiP,EAfAC,EAAAF,EAAA,GACArqC,EAAA,IAAAwqC,kBAAAD,EAAAnf,MAAAx0C,OAAA2qD,GACA7nD,GACAsjB,KAAAutC,EAAAvtC,KACA6qC,IAAA0C,EAAA1C,IACA5qD,MAAAstD,EAAAttD,MACAC,OAAAqtD,EAAArtD,OACAkuC,MAAAprB,GAGA/lB,EAAA,EAMA,GAAAwhD,EAAAmH,6BAAA6G,2BAAA,CACA,IAAAgB,EAAA,IAAAlJ,EACAmJ,EAAAL,EAAA,GAAAjf,MACAuf,EAAAN,EAAA,GAAAjf,MACAwf,EAAAP,EAAA,GAAAjf,MACAyf,EAAAJ,EAAAJ,EAAA,GAAAjf,MAAA,KACAzyB,EAAA6iC,EAAA,GAAA4L,UAAA,EACAj1C,EAAA,SAAAwG,GACA,IAAAmyC,EAAArP,EAAAD,WAAA,GACAv4B,EAAAs+B,EAAA,EAEA,GADA1T,EAAA6c,EAAA9zD,OACAk0D,EAAAhO,sBAAAuK,yBAUA,IAAA1qC,EAAA,EAAqBA,EAAAkxB,EAAQlxB,IAAA1iB,GAAAgpB,EAAA,CAC7Bi4B,EAAAwP,EAAA/tC,GAAAxK,EACAkpC,EAAAsP,EAAAhuC,GACA2tC,EAAAM,EAAAjuC,GACA,IAAAtlB,EAAA6jD,GAAAoP,EAAAjP,GAAA,GACAr7B,EAAA/lB,KAAA5C,EAAAizD,GAAA3xC,EACAqH,EAAA/lB,KAAA5C,GAAAshB,EACAqH,EAAA/lB,KAAA5C,EAAAgkD,GAAA1iC,OAhBA,IAAAgE,EAAA,EAAqBA,EAAAkxB,EAAQlxB,IAAA1iB,GAAAgpB,EAC7Bi4B,EAAAwP,EAAA/tC,GAAAxK,EACAkpC,EAAAsP,EAAAhuC,GACA2tC,EAAAM,EAAAjuC,GACAqD,EAAA/lB,KAAAihD,EAAA,MAAAoP,GAAA3xC,EACAqH,EAAA/lB,KAAAihD,EAAA,OAAAG,EAAA,OAAAiP,GAAA3xC,EACAqH,EAAA/lB,KAAAihD,EAAA,MAAAG,GAAA1iC,EAaA,GAAA8xC,EACA,IAAA9tC,EAAA,EAAA1iB,EAAA,EAA8B0iB,EAAAkxB,EAAQlxB,IAAA1iB,GAAA,EACtC+lB,EAAA/lB,GAAA4wD,EAAAluC,GAAAxK,GAAAwG,OAIA,IAAA7oB,EAAA,EAAmBA,EAAAyxD,EAAqBzxD,IAAA,CACxC,IAAAs7C,EAAAif,EAAAv6D,GAAAs7C,MAGA,IAFAzyB,EAAA6iC,EAAA1rD,GAAAs3D,UAAA,EACAj1C,EAAA,SAAAwG,GACA1e,EAAAnK,EAAA6sB,EAAA,EAAAkxB,EAAAzC,EAAAx0C,OAAiD+lB,EAAAkxB,EAAQlxB,IACzDqD,EAAA/lB,GAAAmxC,EAAAzuB,GAAAxK,GAAAwG,EACA1e,GAAAsnD,EAIA6I,EAAAjwD,KAAAT,GAEA,OAAA0wD,EA35BAW,CAAAjyB,GACA1iC,KAAA6G,MAAA67B,EAAA4iB,IAAAT,KAAAniB,EAAA4iB,IAAAZ,MACA1kD,KAAA8G,OAAA47B,EAAA4iB,IAAAJ,KAAAxiB,EAAA4iB,IAAAP,MACA/kD,KAAAmrD,gBAAAzoB,EAAA4iB,IAAAY,OAu6BA,IAAAgI,EAAA,WACA,SAAAA,EAAArnD,EAAAC,GACA,IAAA8tD,GAAA,EAAAj0C,EAAAhlB,MAAAoG,KAAAE,IAAA4E,EAAAC,IAAA,EACA9G,KAAA60D,UACA,QAAAv7D,EAAA,EAAqBA,EAAAs7D,EAAkBt7D,IAAA,CACvC,IAAA2iB,GACApV,QACAC,SACAkuC,UAEAh1C,KAAA60D,OAAA9wD,KAAAkY,GACApV,EAAA9E,KAAA+Z,KAAAjV,EAAA,GACAC,EAAA/E,KAAA+Z,KAAAhV,EAAA,IA6CA,OA1CAonD,EAAA1zD,WACAgnB,MAAA,SAAAloB,EAAAitB,GAIA,IAHA,IAEAtK,EAFA64C,EAAA,EACAl6D,EAAA,EAEAk6D,EAAA90D,KAAA60D,OAAAr0D,QAAA,CAEA,IAAAw4B,EAAA1/B,EAAAitB,GADAtK,EAAAjc,KAAA60D,OAAAC,IACAjuD,MACA,QAAA9H,IAAAkd,EAAA+4B,MAAAhc,GAAA,CACAp+B,EAAAqhB,EAAA+4B,MAAAhc,GACA,MAEA/c,EAAA+c,QACA1/B,IAAA,EACAitB,IAAA,EACAuuC,IAEAA,KACA74C,EAAAjc,KAAA60D,OAAAC,IACA9f,MAAA/4B,EAAA+c,OAAAp+B,EACAoF,KAAA80D,sBACA90D,KAAApF,OAEAuzD,eAAA,WACA,IAAAlyC,EAAAjc,KAAA60D,OAAA70D,KAAA80D,cACA74C,EAAA+4B,MAAA/4B,EAAA+c,UAEAo1B,UAAA,WACA,IAAA0G,EAAA90D,KAAA80D,aACA74C,EAAAjc,KAAA60D,OAAAC,GACAl6D,EAAAqhB,EAAA+4B,MAAA/4B,EAAA+c,OAEA,QADA87B,EACA,GACA90D,KAAApF,SACA,IAEAoF,KAAA80D,gBACA74C,EAAAjc,KAAA60D,OAAAC,IACA9f,MAAA/4B,EAAA+c,OAAAp+B,GACA,KAGAszD,EAzDA,GA2DAD,EAAA,WACA,SAAAA,EAAApnD,EAAAC,EAAAiuD,GACA,IAAAH,GAAA,EAAAj0C,EAAAhlB,MAAAoG,KAAAE,IAAA4E,EAAAC,IAAA,EACA9G,KAAA60D,UACA,QAAAv7D,EAAA,EAAqBA,EAAAs7D,EAAkBt7D,IAAA,CAEvC,IADA,IAAA07C,EAAA,IAAAt0C,WAAAmG,EAAAC,GACAyf,EAAA,EAAAkxB,EAAAzC,EAAAx0C,OAA0C+lB,EAAAkxB,EAAQlxB,IAClDyuB,EAAAzuB,GAAAwuC,EAEA,IAAA94C,GACApV,QACAC,SACAkuC,SAEAh1C,KAAA60D,OAAA9wD,KAAAkY,GACApV,EAAA9E,KAAA+Z,KAAAjV,EAAA,GACAC,EAAA/E,KAAA+Z,KAAAhV,EAAA,IAuDA,OApDAmnD,EAAAzzD,WACAgnB,MAAA,SAAAloB,EAAAitB,EAAAyuC,GAEA,IADA,IAAAF,EAAA,EACAA,EAAA90D,KAAA60D,OAAAr0D,QAAA,CACA,IAAAyb,EAAAjc,KAAA60D,OAAAC,GACA97B,EAAA1/B,EAAAitB,EAAAtK,EAAApV,MACAoV,EAAA+c,QACA,IAAAp+B,EAAAqhB,EAAA+4B,MAAAhc,GACA,SAAAp+B,EACA,MAEA,GAAAA,EAAAo6D,EAGA,OAFAh1D,KAAA80D,eACA90D,KAAAi1D,mBACA,EAEA37D,IAAA,EACAitB,IAAA,EACAuuC,IAGA,OADA90D,KAAA80D,eAAA,GACA,GAEA3G,eAAA,SAAA6G,GACA,IAAA/4C,EAAAjc,KAAA60D,OAAA70D,KAAA80D,cACA74C,EAAA+4B,MAAA/4B,EAAA+c,OAAAg8B,EAAA,EACAh1D,KAAAi1D,mBAEAA,gBAAA,WAIA,IAHA,IAAAC,EAAAl1D,KAAA80D,aACA74C,EAAAjc,KAAA60D,OAAAK,GACAC,EAAAl5C,EAAA+4B,MAAA/4B,EAAA+c,SACAk8B,GAAA,IACAj5C,EAAAjc,KAAA60D,OAAAK,IACAlgB,MAAA/4B,EAAA+c,OAAAm8B,GAGA/G,UAAA,WACA,IAAA0G,EAAA90D,KAAA80D,aACA74C,EAAAjc,KAAA60D,OAAAC,GACAl6D,EAAAqhB,EAAA+4B,MAAA/4B,EAAA+c,OAGA,OAFA/c,EAAA+4B,MAAA/4B,EAAA+c,OAAA,QACA87B,EACA,KAGA90D,KAAA80D,gBACA74C,EAAAjc,KAAA60D,OAAAC,IACA9f,MAAA/4B,EAAA+c,OAAAp+B,GACA,KAGAqzD,EAvEA,GAyEAwB,EAAA,WACA,IAEA2F,EAAA,IAAA10D,YAAA,wJACA20D,EAAA,IAAA30D,YAAA,wJACA40D,EAAA,IAAA50D,YAAA,wJACA,SAAA+uD,EAAA5oD,EAAAC,EAAAuhD,EAAAiG,EAAAU,GACAhvD,KAAA6G,QACA7G,KAAA8G,SACA9G,KAAAu1D,kBAAA,OAAAlN,EAAAiN,EAAA,OAAAjN,EAAAgN,EAAAD,EACA,IAAAI,EAAA3uD,EAAAC,EACA9G,KAAAy1D,sBAAA,IAAA/0D,WAAA80D,GACAx1D,KAAAmwD,gBAAA,IAAAzvD,WAAA80D,GACAx1D,KAAAqwD,qBAAArB,EAAA,OAAA1zC,YAAAk6C,GAAAxG,EAAA,MAAA9mC,YAAAstC,GAAA,IAAA90D,WAAA80D,GACAx1D,KAAA01D,gBAAA,IAAAh1D,WAAA80D,GACA,IAAAlF,EAAA,IAAA5vD,WAAA80D,GACA,OAAAlH,EACA,QAAAh1D,EAAA,EAAuBA,EAAAk8D,EAAsBl8D,IAC7Cg3D,EAAAh3D,GAAAg1D,EAGAtuD,KAAAswD,cACAtwD,KAAAwhB,QAyPA,OAvPAiuC,EAAAj1D,WACAq1D,WAAA,SAAAD,GACA5vD,KAAA4vD,WAEApuC,MAAA,WACAxhB,KAAAwjD,SAAA,IAAAmS,UAAA,IACA31D,KAAAwjD,SAAA,KACAxjD,KAAAwjD,SA9BA,IA8BA,GACAxjD,KAAAwjD,SA9BA,IA8BA,GAEAoS,yBAAA,SAAAtU,EAAAuU,EAAA78B,GACA,IAKA1/B,EALAm8D,EAAAz1D,KAAAy1D,sBACA5uD,EAAA7G,KAAA6G,MACAC,EAAA9G,KAAA8G,OACA8f,EAAAivC,EAAA,EACA1G,EAAA0G,EAAA,EAAAhvD,EAEAy6C,EAAA,IACAhoD,EAAA0/B,EAAAnyB,EACA+f,IACA6uC,EAAAn8D,EAAA,QAEA61D,IACAsG,EAAAn8D,EAAA,QAEAm8D,EAAAn8D,IAAA,GAEAgoD,EAAA,EAAAx6C,IACAxN,EAAA0/B,EAAAnyB,EACA+f,IACA6uC,EAAAn8D,EAAA,QAEA61D,IACAsG,EAAAn8D,EAAA,QAEAm8D,EAAAn8D,IAAA,GAEAstB,IACA6uC,EAAAz8B,EAAA,OAEAm2B,IACAsG,EAAAz8B,EAAA,OAEAy8B,EAAAz8B,IAAA,KAEA82B,+BAAA,WAcA,IAbA,IAAAF,EAAA5vD,KAAA4vD,QACA/oD,EAAA7G,KAAA6G,MACAC,EAAA9G,KAAA8G,OACAupD,EAAArwD,KAAAqwD,qBACAF,EAAAnwD,KAAAmwD,gBACAsF,EAAAz1D,KAAAy1D,sBACAC,EAAA11D,KAAA01D,gBACAlS,EAAAxjD,KAAAwjD,SACAsS,EAAA91D,KAAAu1D,kBACAjF,EAAAtwD,KAAAswD,YAIAyF,EAAA,EAAwBA,EAAAjvD,EAAaivD,GAAA,EACrC,QAAAxvC,EAAA,EAAyBA,EAAA1f,EAAW0f,IAEpC,IADA,IAAAyS,EAAA+8B,EAAAlvD,EAAA0f,EACAyvC,EAAA,EAA4BA,EAAA,EAAQA,IAAAh9B,GAAAnyB,EAAA,CACpC,IAAAvN,EAAAy8D,EAAAC,EACA,GAAA18D,GAAAwN,EACA,MAGA,GADA4uD,EAAA18B,KAXA,GAYAq3B,EAAAr3B,IAAAy8B,EAAAz8B,GAAA,CAGA,IAAAi9B,EAAAH,EAAAL,EAAAz8B,IAEA,GADA42B,EAAArM,QAAAC,EAAAyS,GACA,CACA,IAAA34B,EAAAt9B,KAAAk2D,cAAA58D,EAAAitB,EAAAyS,GACAm3B,EAAAn3B,GAAAsE,EACA+yB,EAAAr3B,GAAA,EACAh5B,KAAA41D,yBAAAt8D,EAAAitB,EAAAyS,GACA08B,EAAA18B,IApBA,EAsBAs3B,EAAAt3B,KACA08B,EAAA18B,IAxBA,KA6BAk9B,cAAA,SAAA5U,EAAAuU,EAAA78B,GACA,IAIAm9B,EAAAC,EAAAC,EAAAC,EACAL,EAAAM,EALA1vD,EAAA7G,KAAA6G,MACAC,EAAA9G,KAAA8G,OACAupD,EAAArwD,KAAAqwD,qBACAF,EAAAnwD,KAAAmwD,gBAGAmG,EAAAT,EAAA,OAAAxF,EAAAr3B,EAAA,GACA68B,EAAA,EAAAhvD,GAAA,IAAAwpD,EAAAr3B,EAAA,IACAq9B,EAAAlG,EAAAn3B,EAAA,GAGAm9B,EAFAG,EAEA,EAAAD,GADAD,EAAAjG,EAAAn3B,EAAA,IAGA,EAAAq9B,KAIAF,EAFSG,EAET,GADAF,EAAAjG,EAAAn3B,EAAA,IACAo9B,EAEA,EAEA,IAAAI,EAAA,EAAAL,EAuBA,OAtBAG,EAAAhV,EAAA,OAAA+O,EAAAr3B,EAAAnyB,GACAy6C,EAAA,EAAAx6C,GAAA,IAAAupD,EAAAr3B,EAAAnyB,IACAwvD,EAAAlG,EAAAn3B,EAAAnyB,GAGAsvD,EAFAG,EAEA,EAAAD,GADAD,EAAAjG,EAAAn3B,EAAAnyB,IACA2vD,EAEA,EAAAH,IAAAG,GAIAL,EAFSG,EAET,GADAF,EAAAjG,EAAAn3B,EAAAnyB,IACAuvD,EAAAI,EAEAA,EAEAL,GAAA,GACAF,EAAA,EAAAE,EACAI,EAAAv2D,KAAA4vD,QAAArM,QAAAvjD,KAAAwjD,SAAAyS,KAEAA,EAAA,EAAAE,EACAI,EAAA,EAAAv2D,KAAA4vD,QAAArM,QAAAvjD,KAAAwjD,SAAAyS,IAEAM,GAEAxG,2BAAA,WAaA,IAZA,IAYA0G,EAZA7G,EAAA5vD,KAAA4vD,QACA/oD,EAAA7G,KAAA6G,MACAC,EAAA9G,KAAA8G,OACAupD,EAAArwD,KAAAqwD,qBACAoF,EAAAz1D,KAAAy1D,sBACAjS,EAAAxjD,KAAAwjD,SACA8M,EAAAtwD,KAAAswD,YACAoF,EAAA11D,KAAA01D,gBAGAl1D,EAAAqG,EAAAC,EACA4vD,EAAA,EAAA7vD,EACA8vD,EAAA,EAAuCA,EAAAn2D,EAAiBm2D,EAAAF,EAAA,CACxDA,EAAA10D,KAAAC,IAAAxB,EAAAm2D,EAAAD,GACA,QAAAnwC,EAAA,EAAyBA,EAAA1f,EAAW0f,IACpC,QAAAyS,EAAA29B,EAAApwC,EAAwCyS,EAAAy9B,EAAmBz9B,GAAAnyB,EAC3D,GAAAwpD,EAAAr3B,IAAA,IARA,EAQA08B,EAAA18B,IAAA,CAGA,IAAAi9B,EAAA,GACA,OAXA,EAWAP,EAAA18B,IACA08B,EAAA18B,IAZA,EAcAi9B,EAAA,KADA,IAAAR,EAAAz8B,IACA,MAEA,IAAA49B,EAAAhH,EAAArM,QAAAC,EAAAyS,GACA5F,EAAAr3B,GAAAq3B,EAAAr3B,IAAA,EAAA49B,EACAtG,EAAAt3B,KACA08B,EAAA18B,IApBA,KAyBAg3B,eAAA,WAiBA,IAhBA,IAeA6G,EAfAjH,EAAA5vD,KAAA4vD,QACA/oD,EAAA7G,KAAA6G,MACAC,EAAA9G,KAAA8G,OACA2uD,EAAAz1D,KAAAy1D,sBACApF,EAAArwD,KAAAqwD,qBACAF,EAAAnwD,KAAAmwD,gBACA3M,EAAAxjD,KAAAwjD,SACAsS,EAAA91D,KAAAu1D,kBACAjF,EAAAtwD,KAAAswD,YACAoF,EAAA11D,KAAA01D,gBAGAoB,EAAAjwD,EACAkwD,EAAA,EAAAlwD,EACAmwD,EAAA,EAAAnwD,EAEAkvD,EAAA,EAAwBA,EAAAjvD,EAAaivD,EAAAc,EAAA,CACrCA,EAAA90D,KAAAC,IAAA+zD,EAAA,EAAAjvD,GAGA,IAFA,IAAAmwD,EAAAlB,EAAAlvD,EACAqwD,EAAAnB,EAAA,EAAAjvD,EACAyf,EAAA,EAAyBA,EAAA1f,EAAW0f,IAAA,CACpC,IAKA+W,EALAq5B,EAAAM,EAAA1wC,EAEAyvC,EAAA,EACAh9B,EAAA29B,EACAr9D,EAAAy8D,EAEA,GALAmB,GAAA,IAAAxB,EAAAiB,IAAA,IAAAjB,EAAAiB,EAAAG,IAAA,IAAApB,EAAAiB,EAAAI,IAAA,IAAArB,EAAAiB,EAAAK,IAAA,IAAAvB,EAAAkB,IAAA,IAAAlB,EAAAkB,EAAAG,IAAA,IAAArB,EAAAkB,EAAAI,IAAA,IAAAtB,EAAAkB,EAAAK,GAKA,CAEA,IADApH,EAAArM,QAAAC,EA1NA,IA2NA,CACA8M,EAAAqG,KACArG,EAAAqG,EAAAG,KACAxG,EAAAqG,EAAAI,KACAzG,EAAAqG,EAAAK,KACA,SAGA,KADAhB,EAAApG,EAAArM,QAAAC,EAnOA,KAmOA,EAAAoM,EAAArM,QAAAC,EAnOA,OAqOAlqD,EAAAy8D,EAAAC,EACAh9B,GAAAg9B,EAAAnvD,GAEAy2B,EAAAt9B,KAAAk2D,cAAA58D,EAAAitB,EAAAyS,GACAm3B,EAAAn3B,GAAAsE,EACA+yB,EAAAr3B,GAAA,EACAh5B,KAAA41D,yBAAAt8D,EAAAitB,EAAAyS,GACA08B,EAAA18B,IAlCA,EAmCAA,EAAA29B,EACA,QAAAQ,EAAApB,EAA+BoB,GAAA79D,EAAS69D,IAAAn+B,GAAAnyB,EACxCypD,EAAAt3B,KAEAg9B,IAEA,IAAA18D,EAAAy8D,EAAAC,EAA6B18D,EAAAu9D,EAAWv9D,IAAA0/B,GAAAnyB,EACxC,IAAAwpD,EAAAr3B,IAAA,IA3CA,EA2CA08B,EAAA18B,IAAA,CAGA,IAAAi9B,EAAAH,EAAAL,EAAAz8B,IAEA,IADA42B,EAAArM,QAAAC,EAAAyS,KAEA34B,EAAAt9B,KAAAk2D,cAAA58D,EAAAitB,EAAAyS,GACAm3B,EAAAn3B,GAAAsE,EACA+yB,EAAAr3B,GAAA,EACAh5B,KAAA41D,yBAAAt8D,EAAAitB,EAAAyS,GACA08B,EAAA18B,IApDA,GAsDAs3B,EAAAt3B,SAKAi3B,wBAAA,WACA,IAAAL,EAAA5vD,KAAA4vD,QACApM,EAAAxjD,KAAAwjD,SAEA,SADAoM,EAAArM,QAAAC,EAxQA,KAwQA,EAAAoM,EAAArM,QAAAC,EAxQA,KAwQA,EAAAoM,EAAArM,QAAAC,EAxQA,KAwQA,EAAAoM,EAAArM,QAAAC,EAxQA,KA0QA,UAAAO,EAAA,iCAIA0L,EA/QA,GAiRA2H,EAAA,WACA,SAAAA,KAkGA,OAjGAA,EAAA58D,UAAAg3D,UAAA,SAAAjH,EAAA8M,EAAAC,GAEA,IADA,IAAAC,EAAAhN,EAAA,GACAjxD,EAAA,EAAAqP,EAAA4hD,EAAA/pD,OAA2ClH,EAAAqP,EAAQrP,IACnDi+D,EAAAv3D,KAAAw3D,QAAAD,EAAAhN,EAAAjxD,GAAA+9D,EAAAC,GAEA,OAAAC,GAEAH,EAAA58D,UAAAi9D,OAAA,SAAA/uD,EAAAqT,EAAAjP,GACA,IAAAkpD,EAAAj6C,EAAA,EACA27C,EAAA37C,EAAA,EACAo7C,EAAAp7C,EAAAjP,EAAA,EACA6qD,EAAA57C,EAAAjP,EACApE,EAAAstD,KAAAttD,EAAAgvD,KACAhvD,EAAAivD,KAAAjvD,EAAAyuD,KACAzuD,EAAAstD,KAAAttD,EAAAgvD,KACAhvD,EAAAivD,KAAAjvD,EAAAyuD,KACAzuD,EAAAstD,KAAAttD,EAAAgvD,KACAhvD,EAAAivD,KAAAjvD,EAAAyuD,KACAzuD,EAAAstD,GAAAttD,EAAAgvD,GACAhvD,EAAAivD,GAAAjvD,EAAAyuD,IAEAC,EAAA58D,UAAAg9D,QAAA,SAAAD,EAAAK,EAAAP,EAAAC,GACA,IAMAh+D,EAAAitB,EAAApB,EAAA5rB,EAAAs+D,EAAAz1D,EANA01D,EAAAP,EAAA1wD,MACAkxD,EAAAR,EAAAzwD,OACAkxD,EAAAT,EAAAviB,MACAnuC,EAAA+wD,EAAA/wD,MACAC,EAAA8wD,EAAA9wD,OACAkuC,EAAA4iB,EAAA5iB,MAEA,IAAA7vB,EAAA,EAAA7rB,EAAA,EAAwBA,EAAAy+D,EAAcz+D,IAEtC,IADAC,EAAA,EAAAD,EAAAuN,EACA0f,EAAA,EAAmBA,EAAAuxC,EAAavxC,IAAApB,IAAA5rB,GAAA,EAChCy7C,EAAAz7C,GAAAy+D,EAAA7yC,GAGA6yC,EAAAT,EAAAviB,MAAA,KACA,IACAijB,EAAA,IAAA9mC,aAAAtqB,EAAA,GACA,OAAAA,GACA,SAAAwwD,GACA,IAAAj1D,EAAA,EAAA+iB,EAAA,EAA4B/iB,EAAA0E,EAAY1E,IAAA+iB,GAAAte,EACxCmuC,EAAA7vB,IAAA,QAIA,IAAA/iB,EAAA,EAAA+iB,EAAA,EAA0B/iB,EAAA0E,EAAY1E,IAAA+iB,GAAAte,EACtCoxD,EAAA99C,IAAA66B,EAAAx6B,SAAA2K,IAAAte,GAVA,GAWA7G,KAAAy3D,OAAAQ,EAXA,EAWApxD,GACA7G,KAAAq7B,OAAA48B,EAZA,EAYApxD,GACAmuC,EAAA76B,IAAA89C,EAAAz9C,SAbA,IAaA3T,GAAAse,GAGA,IAAA+yC,EAAA,GACAC,KACA,IAAA7+D,EAAA,EAAiBA,EAAA4+D,EAAgB5+D,IACjC6+D,EAAAp0D,KAAA,IAAAotB,aAAArqB,EAAA,IAEA,IAAA5F,EACAk3D,EAAA,EAEA,GADAb,EAvBA,EAuBAzwD,EACA,IAAAA,GACA,SAAAwwD,GACA,IAAAO,EAAA,EAAqBA,EAAAhxD,EAAWgxD,IAChC7iB,EAAA6iB,IAAA,QAIA,IAAAA,EAAA,EAAmBA,EAAAhxD,EAAWgxD,IAAA,CAC9B,OAAAO,EAAA,CAEA,IADAF,EAAAn2D,KAAAC,IAAA6E,EAAAgxD,EAAAK,GACA/yC,EAAA0yC,EAAAt+D,EAlCA,EAkC0CA,EAAAg+D,EAAQpyC,GAAAte,EAAAtN,IAClD,IAAA2H,EAAA,EAAyBA,EAAAg3D,EAAgBh3D,IACzCi3D,EAAAj3D,GAAA3H,GAAAy7C,EAAA7vB,EAAAjkB,GAGAk3D,EAAAF,EAGA,IAAAxvD,EAAAyvD,IADAC,GAIA,GAFAp4D,KAAAy3D,OAAA/uD,EA3CA,EA2CA5B,GACA9G,KAAAq7B,OAAA3yB,EA5CA,EA4CA5B,GACA,IAAAsxD,EAEA,IADAjzC,EAAA0yC,EAAAK,EAAA,EACA3+D,EA/CA,EA+CmCA,EAAAg+D,EAAQpyC,GAAAte,EAAAtN,IAC3C,IAAA2H,EAAA,EAAyBA,EAAAg3D,EAAgBh3D,IACzC8zC,EAAA7vB,EAAAjkB,GAAAi3D,EAAAj3D,GAAA3H,GAMA,OACAsN,QACAC,SACAkuC,UAGAoiB,EAnGA,GAqGAjG,EAAA,WACA,SAAAA,IACAiG,EAAA59D,KAAAwG,MAwEA,OAtEAmxD,EAAA32D,UAAAT,OAAAsL,OAAA+xD,EAAA58D,WACA22D,EAAA32D,UAAA6gC,OAAA,SAAA/zB,EAAAyU,EAAAvb,GACA,IAEA+lB,EAAAnsB,EAAAi+D,EAAAp/B,EAFAlV,EAAAvjB,GAAA,EAGA83D,GAAA,kBACAC,GAAA,iBACAlpC,EAAA,iBACA0/B,EAAA,iBACAyJ,EAAA,kBAGA,IADAjyC,GARAxK,GAAA,GAQA,EACA3hB,EAAA2pB,EAAA,EAAuB3pB,IAAKmsB,GAAA,EAC5Bjf,EAAAif,IAHA,kBAOA,IADA8xC,EAAAtJ,EAAAznD,GADAif,EAAAxK,EAAA,GACA,GACA3hB,EAAA2pB,EAAA,EAAuB3pB,MACvB6+B,EAAA81B,EAAAznD,EAAAif,EAAA,GACAjf,EAAAif,GAAAiyC,EAAAlxD,EAAAif,GAAA8xC,EAAAp/B,EACA7+B,KAH4BmsB,GAAA,EAK5B8xC,EAAAtJ,EAAAznD,GADAif,GAAA,GACA,GACAjf,EAAAif,GAAAiyC,EAAAlxD,EAAAif,GAAA8xC,EAAAp/B,EAOA,IADAo/B,EAAAhpC,EAAA/nB,GADAif,EAAAxK,EAAA,GACA,GACA3hB,EAAA2pB,EAAA,EAAuB3pB,MACvB6+B,EAAA5J,EAAA/nB,EAAAif,EAAA,GACAjf,EAAAif,IAAA8xC,EAAAp/B,EACA7+B,KAH4BmsB,GAAA,EAK5B8xC,EAAAhpC,EAAA/nB,GADAif,GAAA,GACA,GACAjf,EAAAif,IAAA8xC,EAAAp/B,EAOA,IADAo/B,EAAAE,EAAAjxD,GADAif,EAAAxK,GACA,GACA3hB,EAAA2pB,EAAA,EAAuB3pB,MACvB6+B,EAAAs/B,EAAAjxD,EAAAif,EAAA,GACAjf,EAAAif,IAAA8xC,EAAAp/B,EACA7+B,KAH4BmsB,GAAA,EAK5B8xC,EAAAE,EAAAjxD,GADAif,GAAA,GACA,GACAjf,EAAAif,IAAA8xC,EAAAp/B,EAKA,OAAAlV,EAGA,IADAs0C,EAAAC,EAAAhxD,GADAif,EAAAxK,EAAA,GACA,GACA3hB,EAAA2pB,EAAqB3pB,MACrB6+B,EAAAq/B,EAAAhxD,EAAAif,EAAA,GACAjf,EAAAif,IAAA8xC,EAAAp/B,EACA7+B,KAH0BmsB,GAAA,EAK1B8xC,EAAAC,EAAAhxD,GADAif,GAAA,GACA,GACAjf,EAAAif,IAAA8xC,EAAAp/B,GAOAk4B,EA1EA,GA4EAD,EAAA,WACA,SAAAA,IACAkG,EAAA59D,KAAAwG,MAcA,OAZAkxD,EAAA12D,UAAAT,OAAAsL,OAAA+xD,EAAA58D,WACA02D,EAAA12D,UAAA6gC,OAAA,SAAA/zB,EAAAyU,EAAAvb,GACA,IAEA+lB,EAAAnsB,EAFA2pB,EAAAvjB,GAAA,EAGA,IAAA+lB,EAFAxK,GAAA,EAEA3hB,EAAA2pB,EAAA,EAAmC3pB,IAAKmsB,GAAA,EACxCjf,EAAAif,IAAAjf,EAAAif,EAAA,GAAAjf,EAAAif,EAAA,QAEA,IAAAA,EAAAxK,EAAA,EAAA3hB,EAAA2pB,EAAmC3pB,IAAKmsB,GAAA,EACxCjf,EAAAif,IAAAjf,EAAAif,EAAA,GAAAjf,EAAAif,EAAA,OAGA2qC,EAhBA,GAkBA,OAAArN,EA32DA,GA62DAzqD,EAAAyqD,YAIA,SAAAxqD,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAEAxB,EAAAq/D,gBAAAr/D,EAAAs/D,gBAAAt/D,EAAAu/D,gBAAAv/D,EAAAw/D,aAAAx/D,EAAAy/D,MAAAz/D,EAAA0/D,MAAA1/D,EAAA4hD,uBAAA5hD,EAAA2/D,cAAA3/D,EAAA4/D,aAAA5/D,EAAA6/D,kBAAAl6D,EAEA,IAAA4hB,EAAAznB,EAAA,GAEA0nB,EAAA1nB,EAAA,GAEAogC,EAAApgC,EAAA,GAEA6/D,EAAA,WACA,SAAAA,EAAAn0D,GACA5E,KAAAuC,EAAA,EACAvC,KAAAkB,EAAA,EACA,IACA5H,EAEA4/D,EAHAv+D,EAAA,IAAA+F,WAAA,KAEA6lB,EAAA,EAEA4yC,EAAAv0D,EAAApE,OACA,IAAAlH,EAAA,EAAeA,EAAA,MAASA,EACxBqB,EAAArB,KAEA,IAAAA,EAAA,EAAeA,EAAA,MAASA,EAExBitB,KADA2yC,EAAAv+D,EAAArB,IACAsL,EAAAtL,EAAA6/D,GAAA,IACAx+D,EAAArB,GAAAqB,EAAA4rB,GACA5rB,EAAA4rB,GAAA2yC,EAEAl5D,KAAArF,IA2BA,OAzBAo+D,EAAAv+D,WACA4+D,aAAA,SAAAjxD,GACA,IAAA7O,EAEA4/D,EACAG,EAFAj/D,EAAA+N,EAAA3H,OAGA+B,EAAAvC,KAAAuC,EACArB,EAAAlB,KAAAkB,EACAvG,EAAAqF,KAAArF,EACA2+D,EAAA,IAAA54D,WAAAtG,GACA,IAAAd,EAAA,EAAiBA,EAAAc,IAAOd,EAIxB+/D,EAAA1+D,EADAuG,KADAg4D,EAAAv+D,EADA4H,IAAA,QAEA,KAEA5H,EAAA4H,GAAA82D,EACA1+D,EAAAuG,GAAAg4D,EACAI,EAAAhgE,GAAA6O,EAAA7O,GAAAqB,EAAAu+D,EAAAG,EAAA,KAIA,OAFAr5D,KAAAuC,IACAvC,KAAAkB,IACAo4D,IAGAP,EAAAv+D,UAAA++D,aAAAR,EAAAv+D,UAAA4+D,aACAL,EA7CA,GA+CAH,EAAA,WACA,IAAA53D,EAAA,IAAAN,YAAA,8KACAykB,EAAA,IAAAxC,aAAA,yrBAiEA,OAhEA,SAAAxa,EAAA4T,EAAAvb,GACA,IAMAlH,EAAAitB,EAAAnsB,EANAo/D,EAAA,WACAzrC,GAAA,UACAE,GAAA,WACAwrC,EAAA,UACAC,EAAAl5D,EAAA,OACAm5D,EAAA,IAAAj5D,WAAAg5D,GAEA,IAAApgE,EAAA,EAAeA,EAAAkH,IAAYlH,EAC3BqgE,EAAArgE,GAAA6O,EAAA4T,KAIA,IAFA49C,EAAArgE,KAAA,IACAc,EAAAs/D,EAAA,EACApgE,EAAAc,GACAu/D,EAAArgE,KAAA,EAEAqgE,EAAArgE,KAAAkH,GAAA,MACAm5D,EAAArgE,KAAAkH,GAAA,MACAm5D,EAAArgE,KAAAkH,GAAA,OACAm5D,EAAArgE,KAAAkH,GAAA,OACAm5D,EAAArgE,KAAAkH,IAAA,OACAm5D,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACA,IAAAmnC,EAAA,IAAA9d,WAAA,IACA,IAAArpB,EAAA,EAAeA,EAAAogE,GAAkB,CACjC,IAAAnzC,EAAA,EAAiBA,EAAA,KAAQA,EAAAjtB,GAAA,EACzBmnC,EAAAla,GAAAozC,EAAArgE,GAAAqgE,EAAArgE,EAAA,MAAAqgE,EAAArgE,EAAA,OAAAqgE,EAAArgE,EAAA,OAEA,IAIAsyB,EACA3qB,EALAsB,EAAAi3D,EACAt4D,EAAA6sB,EACAr0B,EAAAu0B,EACAt0B,EAAA8/D,EAGA,IAAAlzC,EAAA,EAAiBA,EAAA,KAAQA,EAAA,CACzBA,EAAA,IACAqF,EAAA1qB,EAAAxH,GAAAwH,EAAAvH,EACAsH,EAAAslB,GACSA,EAAA,IACTqF,EAAAjyB,EAAAuH,GAAAvH,EAAAD,EACAuH,EAAA,EAAAslB,EAAA,MACSA,EAAA,IACTqF,EAAA1qB,EAAAxH,EAAAC,EACAsH,EAAA,EAAAslB,EAAA,OAEAqF,EAAAlyB,GAAAwH,GAAAvH,GACAsH,EAAA,EAAAslB,EAAA,IAEA,IAAA2yC,EAAAv/D,EACAigE,EAAAr3D,EAAAqpB,EAAAzG,EAAAoB,GAAAka,EAAAx/B,GAAA,EACA44D,EAAA74D,EAAAulB,GACA5sB,EAAAD,EACAA,EAAAwH,EACAA,KAAA04D,GAAAC,EAAAD,IAAA,GAAAC,GAAA,EACAt3D,EAAA22D,EAEAM,IAAAj3D,EAAA,EACAwrB,IAAA7sB,EAAA,EACA+sB,IAAAv0B,EAAA,EACA+/D,IAAA9/D,EAAA,EAEA,WAAA+G,YAAA,IAAA84D,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAzrC,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAE,KAAA,MAAAA,GAAA,OAAAA,IAAA,WAAAwrC,KAAA,MAAAA,GAAA,OAAAA,IAAA,UAjEA,GAqEAK,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACAh6D,KAAAi6D,KAAA,EAAAF,EACA/5D,KAAAk6D,IAAA,EAAAF,EA0EA,OAxEAF,EAAAt/D,WACA2/D,IAAA,SAAAC,GACAp6D,KAAAi6D,MAAAG,EAAAH,KACAj6D,KAAAk6D,KAAAE,EAAAF,KAEAG,IAAA,SAAAD,GACAp6D,KAAAi6D,MAAAG,EAAAH,KACAj6D,KAAAk6D,KAAAE,EAAAF,KAEAI,GAAA,SAAAF,GACAp6D,KAAAi6D,MAAAG,EAAAH,KACAj6D,KAAAk6D,KAAAE,EAAAF,KAEAK,WAAA,SAAAC,GACAA,GAAA,IACAx6D,KAAAk6D,IAAAl6D,KAAAi6D,OAAAO,EAAA,KACAx6D,KAAAi6D,KAAA,IAEAj6D,KAAAk6D,IAAAl6D,KAAAk6D,MAAAM,EAAAx6D,KAAAi6D,MAAA,GAAAO,EACAx6D,KAAAi6D,KAAAj6D,KAAAi6D,OAAAO,EAAA,IAGAC,UAAA,SAAAD,GACAA,GAAA,IACAx6D,KAAAi6D,KAAAj6D,KAAAk6D,KAAAM,EAAA,GACAx6D,KAAAk6D,IAAA,IAEAl6D,KAAAi6D,KAAAj6D,KAAAi6D,MAAAO,EAAAx6D,KAAAk6D,MAAA,GAAAM,EACAx6D,KAAAk6D,IAAAl6D,KAAAk6D,KAAAM,IAGAE,YAAA,SAAAF,GACA,IAAAN,EAAAD,EACA,GAAAO,GACAP,EAAAj6D,KAAAk6D,IACAA,EAAAl6D,KAAAi6D,OAEAC,EAAAl6D,KAAAk6D,IACAD,EAAAj6D,KAAAi6D,MAEAO,GAAA,GACAx6D,KAAAk6D,QAAAM,EAAAP,GAAA,GAAAO,EACAx6D,KAAAi6D,SAAAO,EAAAN,GAAA,GAAAM,GAEAG,IAAA,WACA36D,KAAAi6D,MAAAj6D,KAAAi6D,KACAj6D,KAAAk6D,KAAAl6D,KAAAk6D,KAEAU,IAAA,SAAAR,GACA,IAAAS,GAAA76D,KAAAk6D,MAAA,IAAAE,EAAAF,MAAA,GACAY,GAAA96D,KAAAi6D,OAAA,IAAAG,EAAAH,OAAA,GACAY,EAAA,aACAC,GAAA,GAEA96D,KAAAk6D,IAAA,EAAAW,EACA76D,KAAAi6D,KAAA,EAAAa,GAEAC,OAAA,SAAAt6D,EAAAsb,GACAtb,EAAAsb,GAAA/b,KAAAi6D,OAAA,OACAx5D,EAAAsb,EAAA,GAAA/b,KAAAi6D,MAAA,OACAx5D,EAAAsb,EAAA,GAAA/b,KAAAi6D,MAAA,MACAx5D,EAAAsb,EAAA,OAAA/b,KAAAi6D,KACAx5D,EAAAsb,EAAA,GAAA/b,KAAAk6D,MAAA,OACAz5D,EAAAsb,EAAA,GAAA/b,KAAAk6D,KAAA,OACAz5D,EAAAsb,EAAA,GAAA/b,KAAAk6D,KAAA,MACAz5D,EAAAsb,EAAA,OAAA/b,KAAAk6D,KAEAc,OAAA,SAAAZ,GACAp6D,KAAAi6D,KAAAG,EAAAH,KACAj6D,KAAAk6D,IAAAE,EAAAF,MAGAJ,EA7EA,GA+EAnB,EAAA,WACA,SAAAsC,EAAA3zD,EAAAlN,GACA,OAAAkN,IAAAlN,EAAAkN,GAAA,GAAAlN,EAEA,SAAAugB,EAAArT,EAAAC,EAAA2zD,GACA,OAAA5zD,EAAAC,GAAAD,EAAA4zD,EAEA,SAAAC,EAAA7zD,EAAAC,EAAA2zD,GACA,OAAA5zD,EAAAC,EAAAD,EAAA4zD,EAAA3zD,EAAA2zD,EAEA,SAAAE,EAAA9zD,GACA,OAAA2zD,EAAA3zD,EAAA,GAAA2zD,EAAA3zD,EAAA,IAAA2zD,EAAA3zD,EAAA,IAEA,SAAA+zD,EAAA/zD,GACA,OAAA2zD,EAAA3zD,EAAA,GAAA2zD,EAAA3zD,EAAA,IAAA2zD,EAAA3zD,EAAA,IAEA,SAAAg0D,EAAAh0D,GACA,OAAA2zD,EAAA3zD,EAAA,GAAA2zD,EAAA3zD,EAAA,IAAAA,IAAA,EAKA,IAAA6d,GAAA,irBAuEA,OAtEA,SAAAhd,EAAA4T,EAAAvb,GACA,IAUAlH,EAAAitB,EAAAnsB,EAVAo/D,EAAA,WACAzrC,EAAA,WACAE,EAAA,WACAwrC,EAAA,WACA8B,EAAA,WACAC,EAAA,WACAC,EAAA,UACAC,EAAA,WACAhC,EAAA,GAAA33D,KAAA+Z,MAAAtb,EAAA,OACAm5D,EAAA,IAAAj5D,WAAAg5D,GAEA,IAAApgE,EAAA,EAAeA,EAAAkH,IAAYlH,EAC3BqgE,EAAArgE,GAAA6O,EAAA4T,KAIA,IAFA49C,EAAArgE,KAAA,IACAc,EAAAs/D,EAAA,EACApgE,EAAAc,GACAu/D,EAAArgE,KAAA,EAEAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAAkH,IAAA,OACAm5D,EAAArgE,KAAAkH,GAAA,OACAm5D,EAAArgE,KAAAkH,GAAA,OACAm5D,EAAArgE,KAAAkH,GAAA,MACAm5D,EAAArgE,KAAAkH,GAAA,MACA,IAhCA8G,EAgCAm5B,EAAA,IAAAnlB,YAAA,IACA,IAAAhiB,EAAA,EAAeA,EAAAogE,GAAkB,CACjC,IAAAnzC,EAAA,EAAiBA,EAAA,KAAQA,EACzBka,EAAAla,GAAAozC,EAAArgE,IAAA,GAAAqgE,EAAArgE,EAAA,OAAAqgE,EAAArgE,EAAA,MAAAqgE,EAAArgE,EAAA,GACAA,GAAA,EAEA,IAAAitB,EAAA,GAAkBA,EAAA,KAAQA,EAC1Bka,EAAAla,GAAA,GAtCA00C,EADA3zD,EAuCAm5B,EAAAla,EAAA,GAtCA,IAAA00C,EAAA3zD,EAAA,IAAAA,IAAA,IAsCAm5B,EAAAla,EAAA,GAAA+0C,EAAA76B,EAAAla,EAAA,KAAAka,EAAAla,EAAA,IAEA,IAQAo1C,EACAC,EATAr5D,EAAAi3D,EACAt4D,EAAA6sB,EACAr0B,EAAAu0B,EACAt0B,EAAA8/D,EACAjuD,EAAA+vD,EACA3vC,EAAA4vC,EACAv6D,EAAAw6D,EACAj4B,EAAAk4B,EAGA,IAAAn1C,EAAA,EAAiBA,EAAA,KAAQA,EACzBo1C,EAAAn4B,EAAA63B,EAAA7vD,GAAAmP,EAAAnP,EAAAogB,EAAA3qB,GAAAkkB,EAAAoB,GAAAka,EAAAla,GACAq1C,EAAAR,EAAA74D,GAAA44D,EAAA54D,EAAArB,EAAAxH,GACA8pC,EAAAviC,EACAA,EAAA2qB,EACAA,EAAApgB,EACAA,EAAA7R,EAAAgiE,EAAA,EACAhiE,EAAAD,EACAA,EAAAwH,EACAA,EAAAqB,EACAA,EAAAo5D,EAAAC,EAAA,EAEApC,IAAAj3D,EAAA,EACAwrB,IAAA7sB,EAAA,EACA+sB,IAAAv0B,EAAA,EACA+/D,IAAA9/D,EAAA,EACA4hE,IAAA/vD,EAAA,EACAgwD,IAAA5vC,EAAA,EACA6vC,IAAAx6D,EAAA,EACAy6D,IAAAl4B,EAAA,EAEA,WAAA9iC,YAAA84D,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAzrC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAE,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAwrC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAA8B,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EAAAC,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,KA3FA,GA+FAjD,EAAA,WACA,SAAA99C,EAAArX,EAAAgE,EAAAC,EAAA2zD,EAAAhC,GACA51D,EAAA03D,OAAA1zD,GACAhE,EAAA62D,IAAA5yD,GACA2xD,EAAA8B,OAAA1zD,GACA4xD,EAAAyB,MACAzB,EAAAiB,IAAAe,GACA53D,EAAA+2D,IAAAnB,GAEA,SAAAiC,EAAA73D,EAAAgE,EAAAC,EAAA2zD,EAAAhC,GACA51D,EAAA03D,OAAA1zD,GACAhE,EAAA62D,IAAA5yD,GACA2xD,EAAA8B,OAAA1zD,GACA4xD,EAAAiB,IAAAe,GACA53D,EAAA+2D,IAAAnB,GACAA,EAAA8B,OAAAzzD,GACA2xD,EAAAiB,IAAAe,GACA53D,EAAA+2D,IAAAnB,GAEA,SAAAkC,EAAA93D,EAAAgE,EAAA4xD,GACA51D,EAAA03D,OAAA1zD,GACAhE,EAAAo3D,YAAA,IACAxB,EAAA8B,OAAA1zD,GACA4xD,EAAAwB,YAAA,IACAp3D,EAAA+2D,IAAAnB,GACAA,EAAA8B,OAAA1zD,GACA4xD,EAAAwB,YAAA,IACAp3D,EAAA+2D,IAAAnB,GAEA,SAAAmC,EAAA/3D,EAAAgE,EAAA4xD,GACA51D,EAAA03D,OAAA1zD,GACAhE,EAAAo3D,YAAA,IACAxB,EAAA8B,OAAA1zD,GACA4xD,EAAAwB,YAAA,IACAp3D,EAAA+2D,IAAAnB,GACAA,EAAA8B,OAAA1zD,GACA4xD,EAAAwB,YAAA,IACAp3D,EAAA+2D,IAAAnB,GAEA,SAAAoC,EAAAh4D,EAAAgE,EAAA4xD,GACA51D,EAAA03D,OAAA1zD,GACAhE,EAAAo3D,YAAA,GACAxB,EAAA8B,OAAA1zD,GACA4xD,EAAAwB,YAAA,GACAp3D,EAAA+2D,IAAAnB,GACAA,EAAA8B,OAAA1zD,GACA4xD,EAAAqB,WAAA,GACAj3D,EAAA+2D,IAAAnB,GAEA,SAAA2C,EAAAv4D,EAAAgE,EAAA4xD,GACA51D,EAAA03D,OAAA1zD,GACAhE,EAAAo3D,YAAA,IACAxB,EAAA8B,OAAA1zD,GACA4xD,EAAAwB,YAAA,IACAp3D,EAAA+2D,IAAAnB,GACAA,EAAA8B,OAAA1zD,GACA4xD,EAAAqB,WAAA,GACAj3D,EAAA+2D,IAAAnB,GAEA,IAAA/zC,GAAA,IAAA20C,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,yBAAAA,EAAA,yBAAAA,EAAA,0BAAAA,EAAA,0BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,2BAAAA,EAAA,0BAAAA,EAAA,wBAgJA,OA/IA,SAAA3xD,EAAA4T,EAAAvb,EAAAs7D,GAEA,IAAAtC,EAAAzrC,EAAAE,EAAAwrC,EAAA8B,EAAAC,EAAAC,EAAAC,GADAI,QAYAtC,EAAA,IAAAM,EAAA,uBACA/rC,EAAA,IAAA+rC,EAAA,sBACA7rC,EAAA,IAAA6rC,EAAA,sBACAL,EAAA,IAAAK,EAAA,sBACAyB,EAAA,IAAAzB,EAAA,uBACA0B,EAAA,IAAA1B,EAAA,uBACA2B,EAAA,IAAA3B,EAAA,uBACA4B,EAAA,IAAA5B,EAAA,yBAhBAN,EAAA,IAAAM,EAAA,uBACA/rC,EAAA,IAAA+rC,EAAA,uBACA7rC,EAAA,IAAA6rC,EAAA,uBACAL,EAAA,IAAAK,EAAA,uBACAyB,EAAA,IAAAzB,EAAA,uBACA0B,EAAA,IAAA1B,EAAA,sBACA2B,EAAA,IAAA3B,EAAA,sBACA4B,EAAA,IAAA5B,EAAA,uBAWA,IAEAxgE,EAAAitB,EAAAnsB,EAFAs/D,EAAA,IAAA33D,KAAA+Z,MAAAtb,EAAA,SACAm5D,EAAA,IAAAj5D,WAAAg5D,GAEA,IAAApgE,EAAA,EAAeA,EAAAkH,IAAYlH,EAC3BqgE,EAAArgE,GAAA6O,EAAA4T,KAIA,IAFA49C,EAAArgE,KAAA,IACAc,EAAAs/D,EAAA,GACApgE,EAAAc,GACAu/D,EAAArgE,KAAA,EAEAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAA,EACAqgE,EAAArgE,KAAAkH,IAAA,OACAm5D,EAAArgE,KAAAkH,GAAA,OACAm5D,EAAArgE,KAAAkH,GAAA,OACAm5D,EAAArgE,KAAAkH,GAAA,MACAm5D,EAAArgE,KAAAkH,GAAA,MACA,IAAAigC,EAAA,IAAAp8B,MAAA,IACA,IAAA/K,EAAA,EAAeA,EAAA,GAAQA,IACvBmnC,EAAAnnC,GAAA,IAAAwgE,EAAA,KAEA,IAYAiC,EAwDAz4D,EApEAf,EAAA,IAAAu3D,EAAA,KACA54D,EAAA,IAAA44D,EAAA,KACApgE,EAAA,IAAAogE,EAAA,KACAngE,EAAA,IAAAmgE,EAAA,KACAtuD,EAAA,IAAAsuD,EAAA,KACAluC,EAAA,IAAAkuC,EAAA,KACA74D,EAAA,IAAA64D,EAAA,KACAt2B,EAAA,IAAAs2B,EAAA,KACA6B,EAAA,IAAA7B,EAAA,KACA8B,EAAA,IAAA9B,EAAA,KACAkC,EAAA,IAAAlC,EAAA,KACAT,EAAA,IAAAS,EAAA,KAEA,IAAAxgE,EAAA,EAAeA,EAAAogE,GAAkB,CACjC,IAAAnzC,EAAA,EAAiBA,EAAA,KAAQA,EACzBka,EAAAla,GAAA0zC,KAAAN,EAAArgE,IAAA,GAAAqgE,EAAArgE,EAAA,OAAAqgE,EAAArgE,EAAA,MAAAqgE,EAAArgE,EAAA,GACAmnC,EAAAla,GAAA2zC,IAAAP,EAAArgE,EAAA,OAAAqgE,EAAArgE,EAAA,OAAAqgE,EAAArgE,EAAA,MAAAqgE,EAAArgE,EAAA,GACAA,GAAA,EAEA,IAAAitB,EAAA,GAAkBA,EAAA,KAAQA,EAE1Bs1C,EADAE,EAAAt7B,EAAAla,GACAka,EAAAla,EAAA,GAAA8yC,GACA0C,EAAAnB,IAAAn6B,EAAAla,EAAA,IACA+0C,EAAAU,EAAAv7B,EAAAla,EAAA,IAAA8yC,GACA0C,EAAAnB,IAAAoB,GACAD,EAAAnB,IAAAn6B,EAAAla,EAAA,KAUA,IARAhkB,EAAAy4D,OAAAxB,GACAt4D,EAAA85D,OAAAjtC,GACAr0B,EAAAshE,OAAA/sC,GACAt0B,EAAAqhE,OAAAvB,GACAjuD,EAAAwvD,OAAAO,GACA3vC,EAAAovC,OAAAQ,GACAv6D,EAAA+5D,OAAAS,GACAj4B,EAAAw3B,OAAAU,GACAn1C,EAAA,EAAiBA,EAAA,KAAQA,EACzBo1C,EAAAX,OAAAx3B,GACA63B,EAAAW,EAAAxwD,EAAA6tD,GACAsC,EAAAf,IAAAoB,GACArhD,EAAAqhD,EAAAxwD,EAAAogB,EAAA3qB,EAAAo4D,GACAsC,EAAAf,IAAAoB,GACAL,EAAAf,IAAAz1C,EAAAoB,IACAo1C,EAAAf,IAAAn6B,EAAAla,IACA60C,EAAAQ,EAAAr5D,EAAA82D,GACA8B,EAAAa,EAAAz5D,EAAArB,EAAAxH,EAAA2/D,GACAuC,EAAAhB,IAAAoB,GACAD,EAAAv4B,EACAA,EAAAviC,EACAA,EAAA2qB,EACAA,EAAApgB,EACA7R,EAAAihE,IAAAe,GACAnwD,EAAA7R,EACAA,EAAAD,EACAA,EAAAwH,EACAA,EAAAqB,EACAw5D,EAAAf,OAAAW,GACAI,EAAAnB,IAAAgB,GACAr5D,EAAAw5D,EAEAvC,EAAAoB,IAAAr4D,GACAwrB,EAAA6sC,IAAA15D,GACA+sB,EAAA2sC,IAAAlhE,GACA+/D,EAAAmB,IAAAjhE,GACA4hE,EAAAX,IAAApvD,GACAgwD,EAAAZ,IAAAhvC,GACA6vC,EAAAb,IAAA35D,GACAy6D,EAAAd,IAAAp3B,GAsBA,OAnBAs4B,GAWAx4D,EAAA,IAAA5C,WAAA,IACA84D,EAAAuB,OAAAz3D,EAAA,GACAyqB,EAAAgtC,OAAAz3D,EAAA,GACA2qB,EAAA8sC,OAAAz3D,EAAA,IACAm2D,EAAAsB,OAAAz3D,EAAA,IACAi4D,EAAAR,OAAAz3D,EAAA,IACAk4D,EAAAT,OAAAz3D,EAAA,MAhBAA,EAAA,IAAA5C,WAAA,IACA84D,EAAAuB,OAAAz3D,EAAA,GACAyqB,EAAAgtC,OAAAz3D,EAAA,GACA2qB,EAAA8sC,OAAAz3D,EAAA,IACAm2D,EAAAsB,OAAAz3D,EAAA,IACAi4D,EAAAR,OAAAz3D,EAAA,IACAk4D,EAAAT,OAAAz3D,EAAA,IACAm4D,EAAAV,OAAAz3D,EAAA,IACAo4D,EAAAX,OAAAz3D,EAAA,KAUAA,GAzMA,GA6MAo1D,EAAA,WAIA,OAHA,SAAAvwD,EAAA4T,EAAAvb,GACA,OAAAi4D,EAAAtwD,EAAA4T,EAAAvb,GAAA,IAFA,GAMAy7D,EAAA,WACA,SAAAA,KAMA,OALAA,EAAAzhE,WACA++D,aAAA,SAAApxD,GACA,OAAAA,IAGA8zD,EAPA,GASAhD,EAAA,WAKA,IAJA,IAAAiD,EAAA,IAAAx7D,YAAA,q4BACA/F,EAAA,IAAA+F,YAAA,o5BACAy7D,EAAA,IAAAz7D,YAAA,o5BACA07D,EAAA,IAAA17D,WAAA,KACApH,EAAA,EAAiBA,EAAA,IAASA,IAE1B8iE,EAAA9iE,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,KAGA,IAAA+iE,EAAA,IAAA/gD,aAAA,0rFA4BA,SAAAghD,EAAAl1C,EAAAxiB,GACA,IAEAtL,EAAAitB,EAAApB,EACAjB,EAAA2zC,EAAAz1D,EAHAu4B,EAAA,IAAAj6B,WAAA,IAIA,IAHAi6B,EAAAxgB,IAAAiN,GAGAb,EAAA,EAAApB,EAAA,IAAwBoB,EAAA,KAAQA,IAAApB,EAChCwV,EAAApU,IAAA3hB,EAAAugB,GAEA,IAAA7rB,EAAA,EAAeA,GAAA,IAAQA,EAAA,CAmBvB,IAlBA4qB,EAAAyW,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAA,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAyW,EAAA,GAAAk9B,EACA3zC,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAv4B,EAAAu4B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAzW,EACAyW,EAAA,GAAAk9B,EACAl9B,EAAA,GAAAv4B,EACAmkB,EAAA,EAAiBA,EAAA,KAAQA,EACzBoU,EAAApU,GAAA41C,EAAAxhC,EAAApU,IAEA,IAAAA,EAAA,EAAApB,EAAA,GAAA7rB,EAA6BitB,EAAA,KAAQA,IAAApB,EACrCwV,EAAApU,IAAA3hB,EAAAugB,GAEA,IAAAoB,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAAg2C,EAAAF,EAAA1hC,EAAApU,IACAi2C,EAAAH,EAAA1hC,EAAApU,EAAA,IACAk2C,EAAAJ,EAAA1hC,EAAApU,EAAA,IACAm2C,EAAAL,EAAA1hC,EAAApU,EAAA,IACArC,EAAAq4C,EAAAC,IAAA,EAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,EACA/hC,EAAApU,GAAArC,IAAA,OACAyW,EAAApU,EAAA,GAAArC,GAAA,OACAyW,EAAApU,EAAA,GAAArC,GAAA,MACAyW,EAAApU,EAAA,OAAArC,GAqBA,IAlBAA,EAAAyW,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAA,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAyW,EAAA,GAAAk9B,EACA3zC,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAv4B,EAAAu4B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAzW,EACAyW,EAAA,GAAAk9B,EACAl9B,EAAA,GAAAv4B,EACAmkB,EAAA,EAAeA,EAAA,KAAQA,EACvBoU,EAAApU,GAAA41C,EAAAxhC,EAAApU,IACAoU,EAAApU,IAAA3hB,EAAA2hB,GAEA,OAAAoU,EAEA,SAAAgiC,EAAAv1C,EAAAxiB,GACA,IAAAsf,EAAA2zC,EAAAz1D,EAAAmkB,EAAApB,EACAwV,EAAA,IAAAj6B,WAAA,IAEA,IADAi6B,EAAAxgB,IAAAiN,GACAb,EAAA,EAAeA,EAAA,KAAQA,EACvBoU,EAAApU,IAAA3hB,EAAA2hB,GAEA,IAAAjtB,EAAA,EAAeA,EAAA,GAAQA,IAAA,CACvB,IAAAitB,EAAA,EAAiBA,EAAA,KAAQA,EACzBoU,EAAApU,GAAA5rB,EAAAggC,EAAApU,IAoBA,IAlBAnkB,EAAAu4B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAA,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAz1D,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAzW,EAAAyW,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAl9B,EAAA,IAAAzW,EACAqC,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAAg2C,EAAA5hC,EAAApU,EAAA,GACAi2C,EAAA7hC,EAAApU,EAAA,GACAk2C,EAAA9hC,EAAApU,EAAA,GACAm2C,EAAA/hC,EAAApU,EAAA,GACArC,EAAAq4C,EAAAC,EAAAC,EAAAC,EACA/hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAG,EAAAC,GACA7hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAI,EAAAC,GACA9hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAK,EAAAC,GACA/hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAM,EAAAH,GAEA,IAAAh2C,EAAA,EAAApB,EAAA,GAAA7rB,EAA6BitB,EAAA,KAAQA,IAAApB,EACrCwV,EAAApU,IAAA3hB,EAAAugB,GAGA,IAAAoB,EAAA,EAAeA,EAAA,KAAQA,EACvBoU,EAAApU,GAAA5rB,EAAAggC,EAAApU,IAoBA,IAlBAnkB,EAAAu4B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAA,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAz1D,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAzW,EAAAyW,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAl9B,EAAA,IAAAzW,EACAqC,EAAA,EAAApB,EAAA,IAAwBoB,EAAA,KAAQA,IAAApB,EAChCwV,EAAApU,IAAA3hB,EAAAugB,GAEA,OAAAwV,EAEA,SAAAs+B,EAAAr0D,GACA5E,KAAA4E,IAvKA,SAAAg4D,GACA,IACAt5D,EAAA,IAAA5C,WADA,KAEA4C,EAAA6W,IAAAyiD,GACA,QAAAr2C,EAAA,GAAAjtB,EAAA,EAA2BitB,EAH3B,MAGkCjtB,EAAA,CAClC,IAAAqiE,EAAAr4D,EAAAijB,EAAA,GACAq1C,EAAAt4D,EAAAijB,EAAA,GACAs2C,EAAAv5D,EAAAijB,EAAA,GACAu2C,EAAAx5D,EAAAijB,EAAA,GACAo1C,EAAAhhE,EAAAghE,GACAC,EAAAjhE,EAAAihE,GACAiB,EAAAliE,EAAAkiE,GACAC,EAAAniE,EAAAmiE,GACAnB,GAAAO,EAAA5iE,GACA,QAAAc,EAAA,EAAqBA,EAAA,IAAOA,EAC5BkJ,EAAAijB,GAAAo1C,GAAAr4D,EAAAijB,EAAA,IAEAjjB,IADAijB,GACAq1C,GAAAt4D,EAAAijB,EAAA,IAEAjjB,IADAijB,GACAs2C,GAAAv5D,EAAAijB,EAAA,IAEAjjB,IADAijB,GACAu2C,GAAAx5D,EAAAijB,EAAA,IACAA,IAGA,OAAAjjB,EA8IAy5D,CAAAn4D,GACA5E,KAAA0I,OAAA,IAAAhI,WAAA,IACAV,KAAAg9D,eAAA,EAEA,SAAAC,EAAA90D,EAAA+0D,GACA,IAAA5jE,EACAitB,EACA5d,EACAw0D,EAAAh1D,EAAA3H,OACAkI,EAAA1I,KAAA0I,OACAmZ,EAAA7hB,KAAAg9D,eACA15D,KACA85D,EAAAp9D,KAAAo9D,GACA,IAAA9jE,EAAA,EAAeA,EAAA6jE,IAAkB7jE,EAGjC,GAFAoP,EAAAmZ,GAAA1Z,EAAA7O,OACAuoB,EACA,KAGA,IAAAw7C,EAAAf,EAAA5zD,EAAA1I,KAAA4E,KACA,IAAA2hB,EAAA,EAAiBA,EAAA,KAAQA,EACzB82C,EAAA92C,IAAA62C,EAAA72C,GAEA62C,EAAA10D,EACApF,EAAAS,KAAAs5D,GACA30D,EAAA,IAAAhI,WAAA,IACAmhB,EAAA,EAKA,GAHA7hB,KAAA0I,SACA1I,KAAA6hB,eACA7hB,KAAAo9D,KACA,IAAA95D,EAAA9C,OACA,WAAAE,eAEA,IAAA48D,EAAA,GAAAh6D,EAAA9C,OACA,GAAA08D,EAAA,CACA,IAAAK,EAAAj6D,IAAA9C,OAAA,GACAg9D,EAAAD,EAAA,IACA,GAAAC,GAAA,IACA,IAAAlkE,EAAA,GAAAqP,EAAA,GAAA60D,EAAqClkE,GAAAqP,IAASrP,EAC9C,GAAAikE,EAAAjkE,KAAAkkE,EAAA,CACAA,EAAA,EACA,MAGAF,GAAAE,EACAl6D,IAAA9C,OAAA,GAAA+8D,EAAA/iD,SAAA,KAAAgjD,IAGA,IAAAlE,EAAA,IAAA54D,WAAA48D,GACA,IAAAhkE,EAAA,EAAAitB,EAAA,EAAA5d,EAAArF,EAAA9C,OAA0ClH,EAAAqP,IAAQrP,EAAAitB,GAAA,GAClD+yC,EAAAn/C,IAAA7W,EAAAhK,GAAAitB,GAEA,OAAA+yC,EA6DA,OA3DAL,EAAAz+D,WACA++D,aAAA,SAAApxD,EAAA+0D,GACA,IAAA5jE,EACA6jE,EAAAh1D,EAAA3H,OACAkI,EAAA1I,KAAA0I,OACAmZ,EAAA7hB,KAAAg9D,eACA,IAAA1jE,EAAA,EAAiBuoB,EAAA,IAAAvoB,EAAA6jE,IAAuC7jE,IAAAuoB,EACxDnZ,EAAAmZ,GAAA1Z,EAAA7O,GAEA,OAAAuoB,EAAA,IACA7hB,KAAA6hB,eACA,IAAAnhB,iBAEAV,KAAAo9D,GAAA10D,EACA1I,KAAA0I,OAAA,IAAAhI,WAAA,IACAV,KAAA6hB,aAAA,EACA7hB,KAAAu5D,aAAA0D,EACAj9D,KAAAu5D,aAAApxD,EAAAqS,SAAA,IAAA0iD,KAEAzoB,QAAA,SAAAtsC,EAAAi1D,GACA,IAAA9jE,EACAitB,EACA5d,EACAw0D,EAAAh1D,EAAA3H,OACAkI,EAAA1I,KAAA0I,OACAmZ,EAAA7hB,KAAAg9D,eACA15D,KAIA,IAHA85D,IACAA,EAAA,IAAA18D,WAAA,KAEApH,EAAA,EAAiBA,EAAA6jE,IAAkB7jE,EAGnC,GAFAoP,EAAAmZ,GAAA1Z,EAAA7O,OACAuoB,EACA,KAGA,IAAA0E,EAAA,EAAmBA,EAAA,KAAQA,EAC3B7d,EAAA6d,IAAA62C,EAAA72C,GAEA,IAAAk3C,EAAAd,EAAAj0D,EAAA1I,KAAA4E,KACAw4D,EAAAK,EACAn6D,EAAAS,KAAA05D,GACA/0D,EAAA,IAAAhI,WAAA,IACAmhB,EAAA,EAKA,GAHA7hB,KAAA0I,SACA1I,KAAA6hB,eACA7hB,KAAAo9D,KACA,IAAA95D,EAAA9C,OACA,WAAAE,eAEA,IAAA48D,EAAA,GAAAh6D,EAAA9C,OACA84D,EAAA,IAAA54D,WAAA48D,GACA,IAAAhkE,EAAA,EAAAitB,EAAA,EAAA5d,EAAArF,EAAA9C,OAA4ClH,EAAAqP,IAAQrP,EAAAitB,GAAA,GACpD+yC,EAAAn/C,IAAA7W,EAAAhK,GAAAitB,GAEA,OAAA+yC,IAGAL,EAtSA,GAwSAD,EAAA,WAIA,IAHA,IAAAr+D,EAAA,IAAA+F,YAAA,o5BACAy7D,EAAA,IAAAz7D,YAAA,o5BACA07D,EAAA,IAAA17D,WAAA,KACApH,EAAA,EAAiBA,EAAA,IAASA,IAE1B8iE,EAAA9iE,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,KAGA,IAAA+iE,EAAA,IAAA/gD,aAAA,0rFAwCA,SAAAoiD,EAAAt2C,EAAAxiB,GACA,IAEAtL,EAAAitB,EAAApB,EACAjB,EAAA2zC,EAAAz1D,EAHAu4B,EAAA,IAAAj6B,WAAA,IAIA,IAHAi6B,EAAAxgB,IAAAiN,GAGAb,EAAA,EAAApB,EAAA,IAAwBoB,EAAA,KAAQA,IAAApB,EAChCwV,EAAApU,IAAA3hB,EAAAugB,GAEA,IAAA7rB,EAAA,GAAgBA,GAAA,IAAQA,EAAA,CAmBxB,IAlBA4qB,EAAAyW,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAA,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAyW,EAAA,GAAAk9B,EACA3zC,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAv4B,EAAAu4B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAzW,EACAyW,EAAA,GAAAk9B,EACAl9B,EAAA,GAAAv4B,EACAmkB,EAAA,EAAiBA,EAAA,KAAQA,EACzBoU,EAAApU,GAAA41C,EAAAxhC,EAAApU,IAEA,IAAAA,EAAA,EAAApB,EAAA,GAAA7rB,EAA6BitB,EAAA,KAAQA,IAAApB,EACrCwV,EAAApU,IAAA3hB,EAAAugB,GAEA,IAAAoB,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAAg2C,EAAAF,EAAA1hC,EAAApU,IACAi2C,EAAAH,EAAA1hC,EAAApU,EAAA,IACAk2C,EAAAJ,EAAA1hC,EAAApU,EAAA,IACAm2C,EAAAL,EAAA1hC,EAAApU,EAAA,IACArC,EAAAq4C,EAAAC,IAAA,EAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,EACA/hC,EAAApU,GAAArC,IAAA,OACAyW,EAAApU,EAAA,GAAArC,GAAA,OACAyW,EAAApU,EAAA,GAAArC,GAAA,MACAyW,EAAApU,EAAA,OAAArC,GAqBA,IAlBAA,EAAAyW,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAA,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAzW,EACAyW,EAAA,GAAAk9B,EACA3zC,EAAAyW,EAAA,IACAk9B,EAAAl9B,EAAA,IACAv4B,EAAAu4B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAzW,EACAyW,EAAA,GAAAk9B,EACAl9B,EAAA,GAAAv4B,EACAmkB,EAAA,EAAeA,EAAA,KAAQA,EACvBoU,EAAApU,GAAA41C,EAAAxhC,EAAApU,IACAoU,EAAApU,IAAA3hB,EAAA2hB,GAEA,OAAAoU,EAEA,SAAAgjC,EAAAv2C,EAAAxiB,GACA,IAAAsf,EAAA2zC,EAAAz1D,EAAA9I,EAAAitB,EAAApB,EACAwV,EAAA,IAAAj6B,WAAA,IAEA,IADAi6B,EAAAxgB,IAAAiN,GACAb,EAAA,EAAeA,EAAA,KAAQA,EACvBoU,EAAApU,IAAA3hB,EAAA2hB,GAEA,IAAAjtB,EAAA,EAAeA,EAAA,GAAQA,IAAA,CACvB,IAAAitB,EAAA,EAAiBA,EAAA,KAAQA,EACzBoU,EAAApU,GAAA5rB,EAAAggC,EAAApU,IAoBA,IAlBAnkB,EAAAu4B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAA,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAz1D,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAzW,EAAAyW,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAl9B,EAAA,IAAAzW,EACAqC,EAAA,EAAiBA,EAAA,GAAQA,GAAA,GACzB,IAAAg2C,EAAA5hC,EAAApU,EAAA,GACAi2C,EAAA7hC,EAAApU,EAAA,GACAk2C,EAAA9hC,EAAApU,EAAA,GACAm2C,EAAA/hC,EAAApU,EAAA,GACArC,EAAAq4C,EAAAC,EAAAC,EAAAC,EACA/hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAG,EAAAC,GACA7hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAI,EAAAC,GACA9hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAK,EAAAC,GACA/hC,EAAApU,EAAA,IAAArC,EAAAk4C,EAAAM,EAAAH,GAEA,IAAAh2C,EAAA,EAAApB,EAAA,GAAA7rB,EAA6BitB,EAAA,KAAQA,IAAApB,EACrCwV,EAAApU,IAAA3hB,EAAAugB,GAGA,IAAAoB,EAAA,EAAeA,EAAA,KAAQA,EACvBoU,EAAApU,GAAA5rB,EAAAggC,EAAApU,IAoBA,IAlBAnkB,EAAAu4B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAA,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAz1D,EAAAu4B,EAAA,GACAk9B,EAAAl9B,EAAA,GACAzW,EAAAyW,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAv4B,EACAu4B,EAAA,IAAAk9B,EACAl9B,EAAA,IAAAzW,EACAqC,EAAA,EAAApB,EAAA,IAAwBoB,EAAA,KAAQA,IAAApB,EAChCwV,EAAApU,IAAA3hB,EAAAugB,GAEA,OAAAwV,EAEA,SAAAq+B,EAAAp0D,GACA5E,KAAA4E,IAnLA,SAAAg4D,GACA,IACAt5D,EAAA,IAAA5C,WADA,KAEAM,EAAA,EACAsC,EAAA6W,IAAAyiD,GACA,QAAAr2C,EAAA,GAAAjtB,EAAA,EAA2BitB,EAJ3B,MAIkCjtB,EAAA,CAClC,IAAAqiE,EAAAC,EAAAiB,EAAAC,EACAv2C,EAAA,QACAo1C,EAAAhhE,EAAAghE,GACAC,EAAAjhE,EAAAihE,GACAiB,EAAAliE,EAAAkiE,GACAC,EAAAniE,EAAAmiE,IACOv2C,EAAA,QACPo1C,EAAAr4D,EAAAijB,EAAA,GACAq1C,EAAAt4D,EAAAijB,EAAA,GACAs2C,EAAAv5D,EAAAijB,EAAA,GACAu2C,EAAAx5D,EAAAijB,EAAA,GACAo1C,EAAAhhE,EAAAghE,GACAC,EAAAjhE,EAAAihE,GACAiB,EAAAliE,EAAAkiE,GACAC,EAAAniE,EAAAmiE,GACAnB,GAAA36D,GACAA,IAAA,UACAA,EAAA,QAAAA,KAGA,QAAA5G,EAAA,EAAqBA,EAAA,IAAOA,EAC5BkJ,EAAAijB,GAAAo1C,GAAAr4D,EAAAijB,EAAA,IAEAjjB,IADAijB,GACAq1C,GAAAt4D,EAAAijB,EAAA,IAEAjjB,IADAijB,GACAs2C,GAAAv5D,EAAAijB,EAAA,IAEAjjB,IADAijB,GACAu2C,GAAAx5D,EAAAijB,EAAA,IACAA,IAGA,OAAAjjB,EA8IAs6D,CAAAh5D,GACA5E,KAAA0I,OAAA,IAAAhI,WAAA,IACAV,KAAAg9D,eAAA,EAEA,SAAAC,EAAA90D,EAAA+0D,GACA,IAAA5jE,EACAitB,EACA5d,EACAw0D,EAAAh1D,EAAA3H,OACAkI,EAAA1I,KAAA0I,OACAmZ,EAAA7hB,KAAAg9D,eACA15D,KACA85D,EAAAp9D,KAAAo9D,GACA,IAAA9jE,EAAA,EAAeA,EAAA6jE,IAAkB7jE,EAGjC,GAFAoP,EAAAmZ,GAAA1Z,EAAA7O,OACAuoB,EACA,KAGA,IAAAw7C,EAAAK,EAAAh1D,EAAA1I,KAAA4E,KACA,IAAA2hB,EAAA,EAAiBA,EAAA,KAAQA,EACzB82C,EAAA92C,IAAA62C,EAAA72C,GAEA62C,EAAA10D,EACApF,EAAAS,KAAAs5D,GACA30D,EAAA,IAAAhI,WAAA,IACAmhB,EAAA,EAKA,GAHA7hB,KAAA0I,SACA1I,KAAA6hB,eACA7hB,KAAAo9D,KACA,IAAA95D,EAAA9C,OACA,WAAAE,eAEA,IAAA48D,EAAA,GAAAh6D,EAAA9C,OACA,GAAA08D,EAAA,CACA,IAAAK,EAAAj6D,IAAA9C,OAAA,GACAg9D,EAAAD,EAAA,IACA,GAAAC,GAAA,IACA,IAAAlkE,EAAA,GAAAqP,EAAA,GAAA60D,EAAqClkE,GAAAqP,IAASrP,EAC9C,GAAAikE,EAAAjkE,KAAAkkE,EAAA,CACAA,EAAA,EACA,MAGAF,GAAAE,EACAl6D,IAAA9C,OAAA,GAAA+8D,EAAA/iD,SAAA,KAAAgjD,IAGA,IAAAlE,EAAA,IAAA54D,WAAA48D,GACA,IAAAhkE,EAAA,EAAAitB,EAAA,EAAA5d,EAAArF,EAAA9C,OAA0ClH,EAAAqP,IAAQrP,EAAAitB,GAAA,GAClD+yC,EAAAn/C,IAAA7W,EAAAhK,GAAAitB,GAEA,OAAA+yC,EAkEA,OAhEAN,EAAAx+D,WACA++D,aAAA,SAAApxD,EAAA+0D,EAAAE,GACA,IAAA9jE,EACA6jE,EAAAh1D,EAAA3H,OACAkI,EAAA1I,KAAA0I,OACAmZ,EAAA7hB,KAAAg9D,eACA,GAAAI,EACAp9D,KAAAo9D,SACO,CACP,IAAA9jE,EAAA,EAAmBuoB,EAAA,IAAAvoB,EAAA6jE,IAAuC7jE,IAAAuoB,EAC1DnZ,EAAAmZ,GAAA1Z,EAAA7O,GAEA,GAAAuoB,EAAA,GAEA,OADA7hB,KAAA6hB,eACA,IAAAnhB,eAEAV,KAAAo9D,GAAA10D,EACAP,IAAAqS,SAAA,IAKA,OAHAxa,KAAA0I,OAAA,IAAAhI,WAAA,IACAV,KAAA6hB,aAAA,EACA7hB,KAAAu5D,aAAA0D,EACAj9D,KAAAu5D,aAAApxD,EAAA+0D,IAEAzoB,QAAA,SAAAtsC,EAAAi1D,GACA,IAAA9jE,EACAitB,EACA5d,EACAw0D,EAAAh1D,EAAA3H,OACAkI,EAAA1I,KAAA0I,OACAmZ,EAAA7hB,KAAAg9D,eACA15D,KAIA,IAHA85D,IACAA,EAAA,IAAA18D,WAAA,KAEApH,EAAA,EAAiBA,EAAA6jE,IAAkB7jE,EAGnC,GAFAoP,EAAAmZ,GAAA1Z,EAAA7O,OACAuoB,EACA,KAGA,IAAA0E,EAAA,EAAmBA,EAAA,KAAQA,EAC3B7d,EAAA6d,IAAA62C,EAAA72C,GAEA,IAAAk3C,EAAAE,EAAAj1D,EAAA1I,KAAA4E,KACA5E,KAAAo9D,GAAAK,EACAn6D,EAAAS,KAAA05D,GACA/0D,EAAA,IAAAhI,WAAA,IACAmhB,EAAA,EAKA,GAHA7hB,KAAA0I,SACA1I,KAAA6hB,eACA7hB,KAAAo9D,KACA,IAAA95D,EAAA9C,OACA,WAAAE,eAEA,IAAA48D,EAAA,GAAAh6D,EAAA9C,OACA84D,EAAA,IAAA54D,WAAA48D,GACA,IAAAhkE,EAAA,EAAAitB,EAAA,EAAA5d,EAAArF,EAAA9C,OAA4ClH,EAAAqP,IAAQrP,EAAAitB,GAAA,GACpD+yC,EAAAn/C,IAAA7W,EAAAhK,GAAAitB,GAEA,OAAA+yC,IAGAN,EAtTA,GAwTAF,EAAA,WACA,SAAA+E,EAAAC,EAAAC,GACA,GAAAD,EAAAt9D,SAAAu9D,EAAAv9D,OACA,SAEA,QAAAlH,EAAA,EAAmBA,EAAAwkE,EAAAt9D,OAAmBlH,IACtC,GAAAwkE,EAAAxkE,KAAAykE,EAAAzkE,GACA,SAGA,SAEA,SAAAw/D,KAmCA,OAlCAA,EAAAt+D,WACAwjE,mBAAA,SAAA/iB,EAAAgjB,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,IAKA,OAJA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAA8jD,EAAAhjB,EAAAz6C,QACA49D,EAAAjkD,IAAA+jD,EAAAjjB,EAAAz6C,OAAAy9D,EAAAz9D,QAEAq9D,EADAlF,EAAAyF,EAAA,EAAAA,EAAA59D,QACA29D,IAEAE,kBAAA,SAAApjB,EAAAqjB,EAAAC,GACA,IAAAH,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,GAIA,OAHA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAAmkD,EAAArjB,EAAAz6C,QAEAq9D,EADAlF,EAAAyF,EAAA,EAAAA,EAAA59D,QACA+9D,IAEAC,YAAA,SAAAvjB,EAAAwjB,EAAAP,EAAAQ,GACA,IAAAN,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,IACA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAAskD,EAAAxjB,EAAAz6C,QACA49D,EAAAjkD,IAAA+jD,EAAAjjB,EAAAz6C,OAAAi+D,EAAAj+D,QACA,IAAAoE,EAAA+zD,EAAAyF,EAAA,EAAAA,EAAA59D,QAEA,OADA,IAAAw4D,EAAAp0D,GACA20D,aAAAmF,GAAA,MAAAh+D,WAAA,MAEAi+D,WAAA,SAAA1jB,EAAA2jB,EAAAC,GACA,IAAAT,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,GACA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAAykD,EAAA3jB,EAAAz6C,QACA,IAAAoE,EAAA+zD,EAAAyF,EAAA,EAAAA,EAAA59D,QAEA,OADA,IAAAw4D,EAAAp0D,GACA20D,aAAAsF,GAAA,MAAAn+D,WAAA,OAGAo4D,EA/CA,GAiDAD,EAAA,WACA,SAAAiG,EAAAhB,EAAAC,GACA,IAAA75C,EAAA,IAAAxjB,WAAAo9D,EAAAt9D,OAAAu9D,EAAAv9D,QAGA,OAFA0jB,EAAA/J,IAAA2jD,EAAA,GACA55C,EAAA/J,IAAA4jD,EAAAD,EAAAt9D,QACA0jB,EAEA,SAAA66C,EAAA9jB,EAAA7zB,EAAA82C,GAIA,IAHA,IAAA/4C,EAAAwzC,EAAAvxC,EAAA,EAAAA,EAAA5mB,QAAAga,SAAA,MACAhP,GAAA,GACAlS,EAAA,EACAA,EAAA,IAAAkS,IAAAhL,OAAA,GAAAlH,EAAA,KACA,IAAA0lE,EAAA/jB,EAAAz6C,OAAA2kB,EAAA3kB,OAAA09D,EAAA19D,OACAy+D,EAAA,IAAAv+D,WAAA,GAAAs+D,GACA1kC,EAAAwkC,EAAA7jB,EAAA91B,GACAmV,EAAAwkC,EAAAxkC,EAAA4jC,GACA,QAAA33C,EAAA,EAAA1iB,EAAA,EAA8B0iB,EAAA,GAAQA,IAAA1iB,GAAAm7D,EACtCC,EAAA9kD,IAAAmgB,EAAAz2B,GAGA2H,EADA,IAAAytD,EAAA9zC,EAAA3K,SAAA,OACAi6B,QAAAwqB,EAAA95C,EAAA3K,SAAA,QAEA,IADA,IAAA0kD,EAAA,EACAhE,EAAA,EAAqBA,EAAA,GAAQA,IAC7BgE,GAAA,EACAA,GAAA,EACAA,IAAA1zD,EAAA0vD,KAAA,KACAgE,GAAA,EAEA,IAAAA,EACA/5C,EAAAwzC,EAAAntD,EAAA,EAAAA,EAAAhL,QACO,IAAA0+D,EACP/5C,EAAAuzC,EAAAltD,EAAA,EAAAA,EAAAhL,QACO,IAAA0+D,IACP/5C,EAAAszC,EAAAjtD,EAAA,EAAAA,EAAAhL,SAEAlH,IAEA,OAAA6rB,EAAA3K,SAAA,MAEA,SAAAq+C,KACA,SAAAgF,EAAAC,EAAAC,GACA,GAAAD,EAAAt9D,SAAAu9D,EAAAv9D,OACA,SAEA,QAAAlH,EAAA,EAAmBA,EAAAwkE,EAAAt9D,OAAmBlH,IACtC,GAAAwkE,EAAAxkE,KAAAykE,EAAAzkE,GACA,SAGA,SAuCA,OArCAu/D,EAAAr+D,WACA2kE,KAAA,SAAAlkB,EAAAmkB,EAAAlB,GACA,OAAAa,EAAA9jB,EAAAmkB,EAAAlB,IAEAF,mBAAA,SAAA/iB,EAAAgjB,EAAAC,EAAAC,GACA,IAAAC,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,IAKA,OAJA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAA8jD,EAAAhjB,EAAAz6C,QACA49D,EAAAjkD,IAAA+jD,EAAAjjB,EAAAz6C,OAAAy9D,EAAAz9D,QAEAq9D,EADAkB,EAAA9jB,EAAAmjB,EAAAF,GACAC,IAEAE,kBAAA,SAAApjB,EAAAqjB,EAAAC,GACA,IAAAH,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,GAIA,OAHA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAAmkD,EAAArjB,EAAAz6C,QAEAq9D,EADAkB,EAAA9jB,EAAAmjB,MACAG,IAEAC,YAAA,SAAAvjB,EAAAwjB,EAAAP,EAAAQ,GACA,IAAAN,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,IACA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAAskD,EAAAxjB,EAAAz6C,QACA49D,EAAAjkD,IAAA+jD,EAAAjjB,EAAAz6C,OAAAi+D,EAAAj+D,QACA,IAAAoE,EAAAm6D,EAAA9jB,EAAAmjB,EAAAF,GAEA,OADA,IAAAlF,EAAAp0D,GACA20D,aAAAmF,GAAA,MAAAh+D,WAAA,MAEAi+D,WAAA,SAAA1jB,EAAA2jB,EAAAC,GACA,IAAAT,EAAA,IAAA19D,WAAAu6C,EAAAz6C,OAAA,GACA49D,EAAAjkD,IAAA8gC,EAAA,GACAmjB,EAAAjkD,IAAAykD,EAAA3jB,EAAAz6C,QACA,IAAAoE,EAAAm6D,EAAA9jB,EAAAmjB,MAEA,OADA,IAAApF,EAAAp0D,GACA20D,aAAAsF,GAAA,MAAAn+D,WAAA,OAGAm4D,EAxFA,GA0FAwG,EAAA,WACA,SAAAA,EAAAC,EAAAC,GACAv/D,KAAAw/D,wBAAAF,EACAt/D,KAAAy/D,wBAAAF,EAgBA,OAdAF,EAAA7kE,WACAmhC,aAAA,SAAAvxB,EAAA5J,GACA,IAAAi9D,EAAA,IAAAz9D,KAAAy/D,wBACA,WAAAnmC,EAAA9Y,cAAApW,EAAA5J,EAAA,SAAA2H,EAAA+0D,GACA,OAAAO,EAAAlE,aAAApxD,EAAA+0D,MAGA1iC,cAAA,SAAA7/B,GACA,IAAA8iE,EAAA,IAAAz9D,KAAAw/D,wBACAr3D,GAAA,EAAAwY,EAAAzlB,eAAAP,GAEA,OADAwN,EAAAs1D,EAAAlE,aAAApxD,GAAA,IACA,EAAAwY,EAAA7jB,eAAAqL,KAGAk3D,EAnBA,GAqBArkB,EAAA,WACA,IAAA0kB,EAAA,IAAAh/D,YAAA,6GAqBA,SAAAi/D,EAAA5kB,EAAAE,EAAAkjB,EAAAI,EAAA7oB,EAAAkqB,EAAAzG,EAAA3kB,GACA,IAGAjuB,EACAnsB,EAJAylE,EAAA,GAAA1B,EAAA39D,OAAAu6C,EAAAv6C,OACA49D,EAAA,IAAA19D,WAAAm/D,GACAvmE,EAAA,EAGA,GAAA2hD,EAEA,IADA7gD,EAAA2H,KAAAC,IAAA,GAAAi5C,EAAAz6C,QACYlH,EAAAc,IAAOd,EACnB8kE,EAAA9kE,GAAA2hD,EAAA3hD,GAIA,IADAitB,EAAA,EACAjtB,EAAA,IACA8kE,EAAA9kE,KAAAomE,EAAAn5C,KAEA,IAAAA,EAAA,EAAAnsB,EAAA+jE,EAAA39D,OAAyC+lB,EAAAnsB,IAAOmsB,EAChD63C,EAAA9kE,KAAA6kE,EAAA53C,GAMA,IAJA63C,EAAA9kE,KAAA,IAAAo8C,EACA0oB,EAAA9kE,KAAAo8C,GAAA,MACA0oB,EAAA9kE,KAAAo8C,GAAA,OACA0oB,EAAA9kE,KAAAo8C,IAAA,OACAnvB,EAAA,EAAAnsB,EAAA2gD,EAAAv6C,OAAkC+lB,EAAAnsB,IAAOmsB,EACzC63C,EAAA9kE,KAAAyhD,EAAAx0B,GAEAq5C,GAAA,IAAAprB,IACA4pB,EAAA9kE,KAAA,IACA8kE,EAAA9kE,KAAA,IACA8kE,EAAA9kE,KAAA,IACA8kE,EAAA9kE,KAAA,KAEA,IAAA6lE,EAAAvG,EAAAwF,EAAA,EAAA9kE,GACAwmE,EAAA3G,GAAA,EACA,GAAAyG,GAAA,EACA,IAAAr5C,EAAA,EAAiBA,EAAA,KAAQA,EACzB44C,EAAAvG,EAAAuG,EAAA,EAAAW,GAGA,IACAC,EADAC,EAAAb,EAAA3kD,SAAA,EAAAslD,GAEA,GAAAF,GAAA,GACA,IAAAtmE,EAAA,EAAiBA,EAAA,KAAQA,EACzB8kE,EAAA9kE,GAAAomE,EAAApmE,GAEA,IAAAitB,EAAA,EAAAnsB,EAAA2gD,EAAAv6C,OAAoC+lB,EAAAnsB,IAAOmsB,EAC3C63C,EAAA9kE,KAAAyhD,EAAAx0B,GAGAw5C,EADA,IAAAhH,EAAAiH,GACA5G,aAAAR,EAAAwF,EAAA,EAAA9kE,IACAc,EAAA4lE,EAAAx/D,OACA,IACA2kB,EADA86C,EAAA,IAAAv/D,WAAAtG,GAEA,IAAAmsB,EAAA,EAAiBA,GAAA,KAASA,EAAA,CAC1B,IAAApB,EAAA,EAAmBA,EAAA/qB,IAAO+qB,EAC1B86C,EAAA96C,GAAA66C,EAAA76C,GAAAoB,EAGAw5C,EADA,IAAAhH,EAAAkH,GACA7G,aAAA2G,GAEA,IAAAx5C,EAAA,EAAAnsB,EAAA2lE,EAAAv/D,OAAuC+lB,EAAAnsB,IAAOmsB,EAC9C,GAAAg4C,EAAAh4C,KAAAw5C,EAAAx5C,GACA,iBAMA,IAAAA,EAAA,EAAAnsB,GADA2lE,EADA,IAAAhH,EAAAiH,GACA5G,aAAAsG,IACAl/D,OAAuC+lB,EAAAnsB,IAAOmsB,EAC9C,GAAAg4C,EAAAh4C,KAAAw5C,EAAAx5C,GACA,YAIA,OAAAy5C,EAwCA,IAAAE,EAAAt/C,EAAAnE,KAAAtiB,IAAA,YACA,SAAA6gD,EAAAl2C,EAAAi2C,EAAAE,GACA,IAAA5f,EAAAv2B,EAAA3K,IAAA,UACA,OAAAymB,EAAArB,QAAA8b,EAAA,YACA,UAAA1a,EAAAzjB,YAAA,6BAEA8C,KAAA8E,OACA,IAAAq7D,EAAAr7D,EAAA3K,IAAA,KACA,IAAAwJ,OAAAC,UAAAu8D,IAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,EACA,UAAAx/C,EAAAzjB,YAAA,oCAEA8C,KAAAmgE,YACA,IAAAhH,EAAAr0D,EAAA3K,IAAA,UACA,IAAAg/D,EACA,GAAAgH,GAAA,EACAhH,EAAA,OACO,CACP,IAAAiH,EAAAt7D,EAAA3K,IAAA,MACAkmE,EAAAv7D,EAAA3K,IAAA,QACA,MAAAymB,EAAAlC,QAAA0hD,KAAA,EAAAx/C,EAAArB,QAAA8gD,GAAA,CACAD,EAAA/iD,oBAAA,EACA,IAAAijD,EAAAF,EAAAjmE,IAAAkmE,EAAAzmE,OACAu/D,EAAAmH,KAAAnmE,IAAA,gBACA,KACAg/D,IAAA,IAKA,IAAAx1D,OAAAC,UAAAu1D,MAAA,IAAAA,EAAA,KACA,UAAAx4C,EAAAzjB,YAAA,sBAEA,IAAAihE,GAAA,EAAAx9C,EAAAzlB,eAAA4J,EAAA3K,IAAA,MAAAqgB,SAAA,MACA+jD,GAAA,EAAA59C,EAAAzlB,eAAA4J,EAAA3K,IAAA,MAAAqgB,SAAA,MACAk7B,EAAA5wC,EAAA3K,IAAA,KACAylE,EAAA96D,EAAA3K,IAAA,KACAq6C,GAAA,IAAA2rB,GAAA,IAAAA,KAAA,IAAAr7D,EAAA3K,IAAA,mBACA6F,KAAAw0C,kBACA,IACA+rB,EAWAP,EAZAQ,GAAA,EAAA7/C,EAAAzlB,eAAA6/C,GAEA,GAAAE,EAAA,CACA,OAAA2kB,EACA,IACA3kB,GAAA,EAAAt6B,EAAA5lB,oBAAAkgD,GACS,MAAA7/B,IACT,EAAAuF,EAAA7lB,MAAA,oEAGAylE,GAAA,EAAA5/C,EAAAzlB,eAAA+/C,GAGA,OAAAklB,EACAH,EAAAL,EAAAa,EAAAD,EAAApC,EAAAI,EAAA7oB,EAAAkqB,EAAAzG,EAAA3kB,OACK,CACL,IAAAypB,GAAA,EAAAt9C,EAAAzlB,eAAA4J,EAAA3K,IAAA,MAAAqgB,SAAA,OACAikD,GAAA,EAAA99C,EAAAzlB,eAAA4J,EAAA3K,IAAA,MAAAqgB,SAAA,OACAimD,GAAA,EAAA9/C,EAAAzlB,eAAA4J,EAAA3K,IAAA,MAAAqgB,SAAA,MACA8jD,GAAA,EAAA39C,EAAAzlB,eAAA4J,EAAA3K,IAAA,MAAAqgB,SAAA,OACAokD,GAAA,EAAAj+C,EAAAzlB,eAAA4J,EAAA3K,IAAA,MAAAqgB,SAAA,OACAkkD,GAAA,EAAA/9C,EAAAzlB,eAAA4J,EAAA3K,IAAA,OACA0kE,GAAA,EAAAl+C,EAAAzlB,eAAA4J,EAAA3K,IAAA,QACA,EAAAwmB,EAAAzlB,eAAA4J,EAAA3K,IAAA,UACA6lE,EApMA,SAAAJ,EAAA3kB,EAAAkjB,EAAAF,EAAAQ,EAAAgC,EAAAlC,EAAAD,EAAAM,EAAAF,EAAAG,EAAA6B,GACA,GAAAzlB,EAAA,CACA,IAAA0lB,EAAA5+D,KAAAC,IAAA,IAAAi5C,EAAAz6C,QACAy6C,IAAAzgC,SAAA,EAAAmmD,QAEA1lB,KAEA,IAAA2lB,EAMA,OAJAA,EADA,IAAAhB,EACA,IAAA/G,EAEA,IAAAC,GAEAuF,kBAAApjB,EAAAqjB,EAAAC,GACAqC,EAAAjC,WAAA1jB,EAAA2jB,EAAAC,GACK5jB,EAAAz6C,QAAAogE,EAAA5C,mBAAA/iB,EAAAgjB,EAAAwC,EAAAtC,GACLyC,EAAApC,YAAAvjB,EAAAwjB,EAAAgC,EAAA/B,GAEA,KAkLAmC,CAAAjB,EAAAW,EAAApC,EAAAF,EAAAQ,EAAAgC,EAAAlC,EAAAD,EAAAM,EAAAF,EAAAG,GAEA,IAAAmB,IAAA/kB,EACA,UAAAt6B,EAAAjjB,kBAAA,oBAAAijB,EAAAljB,kBAAAmb,eAKA,IAJKonD,GAAA/kB,IAEL+kB,EAAAL,EAAAa,EA1GA,SAAAvlB,EAAAkjB,EAAAyB,EAAAzG,GACA,IAEA5yC,EACAnsB,EAHAgkE,EAAA,IAAA19D,WAAA,IACApH,EAAA,EAIA,IADAc,EAAA2H,KAAAC,IAAA,GAAAi5C,EAAAz6C,QACUlH,EAAAc,IAAOd,EACjB8kE,EAAA9kE,GAAA2hD,EAAA3hD,GAGA,IADAitB,EAAA,EACAjtB,EAAA,IACA8kE,EAAA9kE,KAAAomE,EAAAn5C,KAEA,IAOAg4C,EAPAY,EAAAvG,EAAAwF,EAAA,EAAA9kE,GACAwmE,EAAA3G,GAAA,EACA,GAAAyG,GAAA,EACA,IAAAr5C,EAAA,EAAiBA,EAAA,KAAQA,EACzB44C,EAAAvG,EAAAuG,EAAA,EAAAA,EAAA3+D,QAIA,GAAAo/D,GAAA,GACArB,EAAAJ,EACA,IACAh5C,EADA86C,EAAA,IAAAv/D,WAAAo/D,GAEA,IAAAv5C,EAAA,GAAkBA,GAAA,EAAQA,IAAA,CAC1B,IAAApB,EAAA,EAAmBA,EAAA26C,IAAsB36C,EACzC86C,EAAA96C,GAAAg6C,EAAAh6C,GAAAoB,EAGAg4C,EADA,IAAAxF,EAAAkH,GACA7G,aAAAmF,SAIAA,EADA,IAAAxF,EAAAoG,EAAA3kD,SAAA,EAAAslD,IACA1G,aAAA+E,GAEA,OAAAI,EAqEAuC,CAAAP,EAAApC,EAAAyB,EAAAzG,GACAgF,EAAAI,EAAA7oB,EAAAkqB,EAAAzG,EAAA3kB,KAEAwrB,EACA,UAAAr/C,EAAAjjB,kBAAA,qBAAAijB,EAAAljB,kBAAAob,oBAGA,GADA7Y,KAAAggE,gBACAG,GAAA,GACA,IAAAY,EAAAj8D,EAAA3K,IAAA,OACA,EAAAymB,EAAAlC,QAAAqiD,KACAA,EAAA1jD,oBAAA,GAEArd,KAAA+gE,KACA/gE,KAAAghE,KAAAl8D,EAAA3K,IAAA,SAAA+lE,EACAlgE,KAAAihE,KAAAn8D,EAAA3K,IAAA,SAAA+lE,EACAlgE,KAAAkhE,IAAAp8D,EAAA3K,IAAA,QAAA6F,KAAAghE,MAGA,SAAAG,EAAAtiD,EAAAC,EAAAkhD,EAAAoB,GACA,IACA9nE,EACAc,EAFAwK,EAAA,IAAAlE,WAAAs/D,EAAAx/D,OAAA,GAGA,IAAAlH,EAAA,EAAAc,EAAA4lE,EAAAx/D,OAAyClH,EAAAc,IAAOd,EAChDsL,EAAAtL,GAAA0mE,EAAA1mE,GAcA,OAZAsL,EAAAtL,KAAA,IAAAulB,EACAja,EAAAtL,KAAAulB,GAAA,MACAja,EAAAtL,KAAAulB,GAAA,OACAja,EAAAtL,KAAA,IAAAwlB,EACAla,EAAAtL,KAAAwlB,GAAA,MACAsiD,IACAx8D,EAAAtL,KAAA,IACAsL,EAAAtL,KAAA,GACAsL,EAAAtL,KAAA,IACAsL,EAAAtL,KAAA,IAEAs/D,EAAAh0D,EAAA,EAAAtL,GACAkhB,SAAA,EAAAzY,KAAAC,IAAAg+D,EAAAx/D,OAAA,OAEA,SAAA6gE,EAAAN,EAAAnnE,EAAAilB,EAAAC,EAAAla,GACA,OAAAgc,EAAArB,QAAA3lB,GACA,UAAA+mB,EAAAzjB,YAAA,8BAEA,IACAokE,EADAC,EAAAR,EAAA5mE,IAAAP,QAKA,GAHA,OAAA2nE,QAAAxiE,IAAAwiE,IACAD,EAAAC,EAAApnE,IAAA,SAEAmnE,GAAA,SAAAA,EAAA1nE,KACA,kBACA,WAAAqiE,GAGA,UAAAqF,EAAA1nE,KACA,kBACA,WAAAm/D,EAAAoI,EAAAtiD,EAAAC,EAAAla,GAAA,KAGA,aAAA08D,EAAA1nE,KACA,kBACA,WAAAq/D,EAAAkI,EAAAtiD,EAAAC,EAAAla,GAAA,KAGA,aAAA08D,EAAA1nE,KACA,kBACA,WAAAo/D,EAAAp0D,IAGA,UAAA+b,EAAAzjB,YAAA,yBAcA,OAZA89C,EAAAxgD,WACA+jD,sBAAA,SAAA1/B,EAAAC,GACA,OAAA9e,KAAAmgE,WAAA,IAAAngE,KAAAmgE,UACA,WAAAd,EAAAgC,EAAArhE,KAAA+gE,GAAA/gE,KAAAghE,KAAAniD,EAAAC,EAAA9e,KAAAggE,eAAAqB,EAAArhE,KAAA+gE,GAAA/gE,KAAAihE,KAAApiD,EAAAC,EAAA9e,KAAAggE,gBAEA,IAAAp7D,EAAAu8D,EAAAtiD,EAAAC,EAAA9e,KAAAggE,eAAA,GACAwB,EAAA,WACA,WAAAzI,EAAAn0D,IAEA,WAAAy6D,EAAAmC,OAGAxmB,EA7RA,GA+RA5hD,EAAA6/D,eACA7/D,EAAA4/D,eACA5/D,EAAA2/D,gBACA3/D,EAAA4hD,yBACA5hD,EAAA0/D,QACA1/D,EAAAy/D,QACAz/D,EAAAw/D,eACAx/D,EAAAu/D,kBACAv/D,EAAAs/D,kBACAt/D,EAAAq/D,mBAIA,SAAAp/D,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAEAxB,EAAAqoE,YAAAroE,EAAAsoE,eAAAtoE,EAAAuoE,WAAAvoE,EAAAwoE,WAAAxoE,EAAAyoE,SAAAzoE,EAAA0oE,WAAA1oE,EAAA2oE,UAAA3oE,EAAA4oE,IAAA5oE,EAAA6oE,UAAA7oE,EAAA8oE,wBAAAnjE,EAEA,IAAA4hB,EAAAznB,EAAA,GAEAipE,EAAAjpE,EAAA,KAEAkpE,EAAAlpE,EAAA,IAGAgpE,GAAA,koIACAD,EAAA,WACA,IAAAI,GAAA,MACA7mD,GAAA,QACAxZ,IAAA,EACAsgE,eAAA,EACAC,MAAA,GACG,MACH/mD,GAAA,QACAxZ,IAAA,EACAsgE,eAAA,EACAC,MAAA,IAEA/mD,GAAA,UACAxZ,IAAA,EACAsgE,eAAA,IAEA9mD,GAAA,UACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,UACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,UACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,YACAxZ,IAAA,EACAwgE,YAAA,GACG,MACHhnD,GAAA,WACAxZ,IAAA,EACAygE,YAAA,IAEAjnD,GAAA,SACAxZ,IAAA,EACAygE,YAAA,GACG,WACHjnD,GAAA,UACAxZ,IAAA,EACAsgE,eAAA,GACG,gBACH9mD,GAAA,UACAxZ,IAAA,EACAsgE,eAAA,EACAC,MAAA,IAEA/mD,GAAA,WACAxZ,IAAA,EACAsgE,eAAA,IAEA9mD,GAAA,WACAxZ,IAAA,EACAsgE,eAAA,IAEA9mD,GAAA,UACAxZ,IAAA,EACAsgE,eAAA,IAEA9mD,GAAA,UACAxZ,IAAA,EACAsgE,eAAA,IAEA9mD,GAAA,UACAxZ,IAAA,EACAsgE,eAAA,EACAC,MAAA,IAEA/mD,GAAA,aACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,aACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,YACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,YACAxZ,IAAA,EACAwgE,YAAA,GACG,MACHhnD,GAAA,YACAxZ,IAAA,EACAygE,YAAA,IAEAjnD,GAAA,YACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,YACAxZ,IAAA,EACAwgE,YAAA,IAEAE,GAAA,gBACAlnD,GAAA,MACAxZ,IAAA,EACA2gE,YAAA,IAEAnnD,GAAA,KACAxZ,IAAA,EACA2gE,YAAA,IAEAnnD,GAAA,MACAxZ,IAAA,EACA2gE,WAAA,GACG,gBACHnnD,GAAA,MACAxZ,IAAA,EACA2gE,WAAA,IAEAnnD,GAAA,MACAxZ,IAAA,EACA2gE,YAAA,EACAC,QAAA,SAAAC,EAAA7pC,GACA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,MAGAxd,GAAA,MACAxZ,IAAA,EACA2gE,YAAA,EACAC,QAAA,SAAAC,EAAA7pC,GACA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,MAGAxd,GAAA,MACAxZ,IAAA,EACA2gE,YAAA,EACAC,QAAA,SAAAC,EAAA7pC,GACA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,KAEG,MACHxd,GAAA,MACAxZ,IAAA,EACA2gE,WAAA,EACAC,QAAA,SAAAC,EAAA7pC,GACA6pC,EAAA7pC,EAAA,IAAA6pC,EAAA7pC,EAAA,MAGAxd,GAAA,KACAxZ,IAAA,EACA2gE,YAAA,GACG,WACHnnD,GAAA,OACAxZ,IAAA,EACA2gE,YAAA,GACG,MACHnnD,GAAA,MACAxZ,IAAA,EACA2gE,YAAA,IAEAnnD,GAAA,MACAxZ,IAAA,EACA2gE,WAAA,IAEAnnD,GAAA,SACAxZ,IAAA,EACA2gE,YAAA,IAEAnnD,GAAA,SACAxZ,IAAA,EACA2gE,WAAA,IAEAnnD,GAAA,MACAxZ,IAAA,EACA2gE,YAAA,EACAC,QAAA,SAAAC,EAAA7pC,GACA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,GAAA6pC,EAAA7pC,EAAA,KAEG,MACHxd,GAAA,OACAxZ,IAAA,EACA2gE,WAAA,IAEAnnD,GAAA,MACAxZ,IAAA,EACA2gE,WAAA,IAEAnnD,GAAA,OACAxZ,IAAA,EACA2gE,WAAA,IAEAnnD,GAAA,QACAxZ,IAAA,EACA2gE,WAAA,IAEAnnD,GAAA,OACAxZ,IAAA,EACA2gE,YAAA,GACG,gBACHnnD,GAAA,QACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,OACAxZ,IAAA,GACAwgE,YAAA,IAEAhnD,GAAA,SACAxZ,IAAA,EACAwgE,YAAA,IAEAhnD,GAAA,QACAxZ,IAAA,GACAwgE,YAAA,IAEA,SAAAP,EAAAa,EAAAC,EAAAC,GACAhjE,KAAAS,MAAAqiE,EAAAhjD,WACA9f,KAAA+iE,aACA/iE,KAAAgjE,wBAklBA,OAhlBAf,EAAAznE,WACAo0B,MAAA,WACA,IAAAm0C,EAAA/iE,KAAA+iE,WACAE,EAAA,IAAAjB,EACAhiE,KAAAijE,MACA,IAAAC,EAAAljE,KAAAmjE,cACAC,EAAApjE,KAAAqjE,WAAAH,EAAAzlB,QACA6lB,EAAAtjE,KAAAqjE,WAAAD,EAAA3lB,QACA8lB,EAAAvjE,KAAAqjE,WAAAC,EAAA7lB,QACA+lB,EAAAxjE,KAAAqjE,WAAAE,EAAA9lB,QACAgmB,EAAAzjE,KAAA0jE,UAAAJ,EAAAnkE,IAAAhF,IAAA,IACA6jD,EAAAh+C,KAAA2jE,WAAAhC,EAAA8B,EAAAR,EAAAW,SACAX,EAAAC,SAAA/jE,IACA8jE,EAAA3sB,MAAAt2C,KAAA6jE,eAAAT,EAAAjkE,KACA8jE,EAAAW,QAAA5jE,KAAA8jE,iBAAAP,EAAApkE,KACA8jE,EAAAjlB,UACAilB,EAAAO,kBAAArkE,IACAa,KAAA+jE,iBAAAd,EAAAjlB,SACAilB,EAAAe,UAAAhmB,EAAAimB,QAAA,OACA,IAAAC,EAAAlmB,EAAAmmB,UAAA,eACAC,EAAApkE,KAAAqjE,WAAAa,GAAA/kE,IACAklE,EAAArmB,EAAAmmB,UAAA,cACAE,IACAtB,EAAAsB,cAEA,IAMAC,EAAAzjB,EANA0jB,EAAAvmB,EAAAmmB,UAAA,YAOA,GANAI,IACAxB,EAAAyB,OAAAziE,KAAAE,IAAAsiE,EAAA,GAAAA,EAAA,IACAxB,EAAA0B,QAAA1iE,KAAAC,IAAAuiE,EAAA,GAAAA,EAAA,IACAxB,EAAA2B,cAAA,GAGAzB,EAAAe,UAAA,CAEA,IADA,IAAAW,EAAA3kE,KAAAqjE,WAAArlB,EAAAmmB,UAAA,YAAAhlE,IACA7F,EAAA,EAAAqP,EAAAg8D,EAAA/3C,MAAgDtzB,EAAAqP,IAAQrP,EAAA,CACxD,IAAAsrE,EAAAD,EAAAxqE,IAAAb,GACAurE,EAAA7kE,KAAA2jE,WAAAhC,EAAA3hE,KAAA0jE,UAAAkB,GAAA3B,EAAAW,SACA5jE,KAAA+jE,iBAAAc,GACA5B,EAAA6B,QAAA/gE,KAAA8gE,GAEAhkB,EAAA,KACAyjB,EAAAtkE,KAAA+kE,cAAA/mB,EAAAmmB,UAAA,WAAAC,EAAAx3C,MAAAq2C,EAAAW,SAAA,GACAX,EAAA+B,SAAAhlE,KAAAilE,cAAAjnB,EAAAmmB,UAAA,YAAAC,EAAAx3C,YAEA03C,EAAAtkE,KAAA+kE,cAAA/mB,EAAAmmB,UAAA,WAAAC,EAAAx3C,MAAAq2C,EAAAW,SAAA,GACA/iB,EAAA7gD,KAAAklE,cAAAlnB,EAAAmmB,UAAA,YAAApB,EAAAE,EAAAW,QAAAU,WAEArB,EAAAqB,UACArB,EAAApiB,WACA,IAAAskB,EAAAnlE,KAAAolE,kBACAC,YAAAjB,EACAkB,eAAAtnB,EAAAunB,YAAAC,WACAhC,kBAAArkE,IACA6lE,SAAA/B,EAAA+B,SACAF,QAAA7B,EAAA6B,QACAS,YAAAvnB,EAAAunB,cAKA,OAHAtC,EAAAoC,YAAAF,EAAAE,YACApC,EAAAwC,MAAAN,EAAAM,MACAxC,EAAAyC,OAAAP,EAAAO,OACAzC,GAEAE,YAAA,WAIA,IAHA,IAAA1iE,EAAAT,KAAAS,MACAklE,EAAAllE,EAAAD,OACAub,EAAA,EACAA,EAAA4pD,GAAA,IAAAllE,EAAAsb,MACAA,EAEA,GAAAA,GAAA4pD,EACA,UAAAhlD,EAAAzjB,YAAA,sBAEA,IAAA6e,KACA,EAAA4E,EAAApkB,MAAA,uBACAkE,IAAA+Z,SAAAuB,GACA/b,KAAAS,SAEA,IAAAmlE,EAAAnlE,EAAA,GACAolE,EAAAplE,EAAA,GACAqlE,EAAArlE,EAAA,GACAslE,EAAAtlE,EAAA,GAEA,OACAtB,IAFA,IAAA4iE,EAAA6D,EAAAC,EAAAC,EAAAC,GAGAtoB,OAAAqoB,IAGApC,UAAA,SAAA5+D,GACA,IAAAjB,EAAA,EACA,SAAAmiE,IACA,IAAAprE,EAAAkK,EAAAjB,KACA,YAAAjJ,EAsBA,WACA,IAAA2F,EAAA,GAEAma,GAAA,+DACAla,EAAAsE,EAAAtE,OACA,KAAAqD,EAAArD,GAAA,CACA,IAAAU,EAAA4D,EAAAjB,KACA+E,EAAA1H,GAAA,EACA2H,EAAA,GAAA3H,EACA,GAPA,KAOA0H,EACA,MAGA,GADArI,GAAAma,EAAA9R,GAVA,KAWAC,EACA,MAEAtI,GAAAma,EAAA7R,GAEA,OAAAo9D,WAAA1lE,GAvCA2lE,GACS,KAAAtrE,EAETA,IADAA,EAAAkK,EAAAjB,OACA,GAAAiB,EAAAjB,MAAA,QAES,KAAAjJ,EAITA,GADAA,GADAA,GADAA,EAAAkK,EAAAjB,OACA,EAAAiB,EAAAjB,OACA,EAAAiB,EAAAjB,OACA,EAAAiB,EAAAjB,KAESjJ,GAAA,IAAAA,GAAA,IACTA,EAAA,IACSA,GAAA,KAAAA,GAAA,IACT,KAAAA,EAAA,KAAAkK,EAAAjB,KAAA,IACSjJ,GAAA,KAAAA,GAAA,KACT,KAAAA,EAAA,KAAAkK,EAAAjB,KAAA,MAEA,EAAA8c,EAAA7lB,MAAA,yBAAAF,EAAA,4BACAurE,KAsBA,IAAAC,KACAxtC,KACA/0B,EAAA,EAEA,IADA,IAAAxD,EAAAyE,EAAAtE,OACAqD,EAAAxD,GAAA,CACA,IAAAa,EAAA4D,EAAAjB,GACA3C,GAAA,IACA,KAAAA,IACAA,KAAA,EAAA4D,IAAAjB,IAEA+0B,EAAA70B,MAAA7C,EAAAklE,IACAA,OACAviE,GAEAuiE,EAAAriE,KAAAiiE,KAGA,OAAAptC,GAEAyqC,WAAA,SAAAx/D,GACA,IAKAvK,EAAAqP,EALA09D,EAAA,IAAAxE,EACAphE,EAAAT,KAAAS,MACAmsB,EAAAnsB,EAAAoD,MAAA,EAAApD,EAAAoD,KACAyiE,KACAjmE,EAAAwD,EAEA,OAAA+oB,EAAA,CACA,IAAA25C,EAAA9lE,EAAAoD,KACA62B,EAAA72B,GAAA+oB,EAAA,GAAA25C,EAAA,EACA,IAAAjtE,EAAA,EAAAqP,EAAAikB,EAAA,EAAmCtzB,EAAAqP,IAAQrP,EAAA,CAE3C,IADA,IAAAyiB,EAAA,EACAwK,EAAA,EAAyBA,EAAAggD,IAAgBhgD,EACzCxK,IAAA,EACAA,GAAAtb,EAAAoD,KAEAyiE,EAAAviE,KAAA22B,EAAA3e,GAEA1b,EAAAimE,EAAA15C,GAEA,IAAAtzB,EAAA,EAAAqP,EAAA29D,EAAA9lE,OAAA,EAA0ClH,EAAAqP,IAAQrP,EAAA,CAClD,IAAAktE,EAAAF,EAAAhtE,GACAmtE,EAAAH,EAAAhtE,EAAA,GACA+sE,EAAAzL,IAAAn6D,EAAA+Z,SAAAgsD,EAAAC,IAEA,OACAtnE,IAAAknE,EACA5oB,OAAAp9C,IAGAwjE,eAAA,SAAA7qC,GAEA,IADA,IAAAsd,KACAh9C,EAAA,EAAAqP,EAAAqwB,EAAApM,MAAuCtzB,EAAAqP,IAAQrP,EAAA,CAC/C,IAAAM,EAAAo/B,EAAA7+B,IAAAb,GACAg9C,EAAAvyC,MAAA,EAAA4c,EAAA7jB,eAAAlD,IAEA,OAAA08C,GAEAwtB,iBAAA,SAAA9qC,GAEA,IADA,IAAA4qC,EAAA,IAAA9B,EACAxoE,EAAA,EAAAqP,EAAAqwB,EAAApM,MAAuCtzB,EAAAqP,IAAQrP,EAAA,CAC/C,IAAA6O,EAAA6wB,EAAA7+B,IAAAb,GACAsqE,EAAAhJ,KAAA,EAAAj6C,EAAA7jB,eAAAqL,IAEA,OAAAy7D,GAEAD,WAAA,SAAA+C,EAAA5hE,EAAA8+D,GAEA,IADA,IAAA+C,EAAA,IAAAD,EAAA9C,GACAtqE,EAAA,EAAAqP,EAAA7D,EAAAtE,OAAuClH,EAAAqP,IAAQrP,EAAA,CAC/C,IAAAstE,EAAA9hE,EAAAxL,GACAsL,EAAAgiE,EAAA,GACAhsE,EAAAgsE,EAAA,GACAD,EAAAE,SAAAjiE,EAAAhK,GAEA,OAAA+rE,GAEAG,gBAAA,SAAAnsC,EAAAxyB,EAAAm9D,EAAA9B,GACA,IAAAr7D,GAAAwyB,EAAAosC,UA1aA,GA2aA,SAKA,IAHA,IAAAC,EAAArsC,EAAAqsC,UACAnE,EAAAloC,EAAAkoC,MACAriE,EAAA2H,EAAA3H,OACA+lB,EAAA,EAAqBA,EAAA/lB,GAAY,CACjC,IAAA5F,EAAAuN,EAAAoe,KACA0gD,EAAA,KACA,QAAArsE,EAAA,CACA,IAAA4tB,EAAArgB,EAAAoe,KACA,IAAAiC,GACArgB,EAAAoe,EAAA,OACApe,EAAAoe,EAAA,MACAygD,EAAA,GAEAC,EAAAvE,EAAAl6C,QAES,QAAA5tB,EACTioE,EAAAmE,IAAA7+D,EAAAoe,IAAA,GAAApe,EAAAoe,EAAA,YACAA,GAAA,EACAygD,SACS,QAAApsE,EAAA,CACT,GAAAosE,GAAA,IACAA,GAAA,EACAhnE,KAAAgjE,qBAEA,OADAroC,EAAAusC,KAAArE,EAAAjhE,MAAAolE,IAAA,IACA,EAGAC,EAAA5E,EAAAznE,QACS,GAAAA,GAAA,IAAAA,GAAA,IACTioE,EAAAmE,GAAApsE,EAAA,IACAosE,SACS,GAAApsE,GAAA,KAAAA,GAAA,IACTioE,EAAAmE,GAAApsE,EAAA,KAAAA,EAAA,QAAAuN,EAAAoe,GAAA,MAAA3rB,EAAA,QAAAuN,EAAAoe,GAAA,IACAA,IACAygD,SACS,SAAApsE,EACTioE,EAAAmE,IAAA7+D,EAAAoe,IAAA,GAAApe,EAAAoe,EAAA,OAAApe,EAAAoe,EAAA,MAAApe,EAAAoe,EAAA,UACAA,GAAA,EACAygD,SACS,QAAApsE,GAAA,KAAAA,EACT+/B,EAAAiE,OAAAooC,GAAA,EACAzgD,GAAAoU,EAAAiE,MAAA,KACAooC,GAAA,EACAC,EAAA5E,EAAAznE,OACS,SAAAA,GAAA,KAAAA,EAAA,CACT,IAAA4qE,EAMA,KAJAA,EADA,KAAA5qE,EACA0qE,EAEA9B,GAKA,OAFAyD,EAAA5E,EAAAznE,IACA,EAAA+lB,EAAA7lB,MAAA,0BAAAmsE,EAAAzrD,KACA,EAEA,IAAA2rD,EAAA,MACA3B,EAAA54C,MAAA,KACAu6C,EAAA,IACW3B,EAAA54C,MAAA,QACXu6C,EAAA,MAEA,IAAAC,EAAAvE,IAAAmE,GAAAG,EACA,GAAAC,EAAA,GAAAA,GAAA5B,EAAA54C,OAAA6S,MAAA2nC,GAGA,OAFAH,EAAA5E,EAAAznE,IACA,EAAA+lB,EAAA7lB,MAAA,+BAAAmsE,EAAAzrD,KACA,EAKA,GAHAmf,EAAAqsC,YACArsC,EAAAosC,aACA/mE,KAAA8mE,gBAAAnsC,EAAA6qC,EAAArrE,IAAAitE,GAAA9B,EAAA9B,GAEA,SAEA7oC,EAAAosC,YACAC,EAAArsC,EAAAqsC,UACA,SACS,QAAApsE,EAET,OADA+/B,EAAAqsC,aACA,EAEAC,EAAA5E,EAAAznE,GAEA,GAAAqsE,EAAA,CAIA,GAHAA,EAAA1E,OACA5nC,EAAAiE,OAAAooC,GAAA,GAEA,QAAAC,IACAtsC,EAAA8nC,YAAAuE,EAAAC,EAAAjlE,IAEA,OADA,EAAA2e,EAAA7lB,MAAA,6BAAAmsE,EAAAzrD,GAAA,aAAsFwrD,EAAA,eAAAC,EAAAjlE,MACtF,EAGA24B,EAAA0sC,oBAAAJ,EAAA3E,gBACA3nC,EAAA0sC,oBAAA,GACAL,GAAAC,EAAAjlE,MACA,GAAAilE,EAAA1E,KACAyE,GAAA,EACaA,EAAA,IACb,EAAArmD,EAAA7lB,MAAA,wDAEAksE,EAAA,GAAAnE,EAAAmE,EAAA,QACArsC,EAAA9zB,MAAAg8D,EAAAmE,EAAA,KAGA,eAAAC,GACA,YAAAA,GACAA,EAAArE,QAAAC,EAAAmE,GAEAA,GAAAC,EAAAtE,YACWsE,EAAA3E,cACX0E,EAAA,EACWC,EAAAzE,YACXwE,EAAA,EACArsC,EAAA8nC,YAAA,GACWwE,EAAAxE,aACXuE,EAAA,EACArsC,EAAA8nC,YAAA,EACA9nC,EAAA0sC,oBAAA,IAKA,OADA1sC,EAAAqsC,aACA,GAEA5B,iBAAA,SAAA14D,GAWA,IAVA,IAAA24D,EAAA34D,EAAA24D,YACAC,EAAA54D,EAAA44D,eACA9B,EAAA92D,EAAA82D,gBACAwB,EAAAt4D,EAAAs4D,SACAF,EAAAp4D,EAAAo4D,QACAS,EAAA74D,EAAA64D,YAEAE,KACAC,KACA94C,EAAAy4C,EAAAz4C,MACAtzB,EAAA,EAAqBA,EAAAszB,EAAWtzB,IAAA,CAChC,IAAAguE,EAAAjC,EAAAlrE,IAAAb,GACAqhC,GACAosC,UAAA,EACAC,UAAA,EACAnE,SACAJ,YAAA,EACA7jC,MAAA,EACAyoC,oBAAA,EACAH,KAAA,KACArgE,MAAA,MAEA0gE,GAAA,EACAC,EAAA,KACAC,EAAAlC,EACA,GAAAP,GAAAF,EAAAtkE,OAAA,CACA,IAAAknE,EAAA1C,EAAA2C,WAAAruE,IACA,IAAAouE,KACA,EAAA/mD,EAAA7lB,MAAA,oCACAysE,GAAA,GAEAG,GAAA5C,EAAAtkE,UACA,EAAAmgB,EAAA7lB,MAAA,qCACAysE,GAAA,GAEAA,IAEAC,GADAC,EAAA3C,EAAA4C,GAAAnC,aACAC,iBAESF,IACTkC,EAAAlC,GAKA,GAHAiC,IACAA,EAAAvnE,KAAA8mE,gBAAAnsC,EAAA2sC,EAAAE,EAAAhE,IAEA,OAAA7oC,EAAA9zB,MAAA,CACA,IAAA+gE,EAAAH,EAAAtD,UAAA,iBACAuB,EAAApsE,GAAAsuE,EAAAjtC,EAAA9zB,UACS,CACT,IAAAghE,EAAAJ,EAAAtD,UAAA,iBACAuB,EAAApsE,GAAAuuE,EAEA,OAAAltC,EAAAusC,OACAzB,EAAAnsE,GAAAqhC,EAAAusC,MAEAK,GACAlC,EAAAlrD,IAAA7gB,EAAA,IAAAoH,YAAA,MAGA,OACA2kE,cACAI,QACAC,WAIAoC,uBAAA,SAAAC,GACA,IAAAxC,EAAAvlE,KAAA2jE,WAAAjC,KAAAqG,EAAAnE,SACAmE,EAAAlB,SAAA,UACAkB,EAAAxC,eAEAxB,iBAAA,SAAAgE,GACA,GAAAA,EAAA9D,QAAA,YAIA,IAAA+D,EAAAD,EAAA5D,UAAA,WACA,GAAA9/D,MAAA0Z,QAAAiqD,IAAA,IAAAA,EAAAxnE,OAAA,CAIA,IAAAsM,EAAAk7D,EAAA,GACAjsD,EAAAisD,EAAA,GACA,OAAAl7D,GAAAiP,GAAA/b,KAAAS,MAAAD,OACAR,KAAA8nE,uBAAAC,OADA,CAIA,IAAAE,EAAAlsD,EAAAjP,EACAo7D,EAAAloE,KAAAS,MAAA+Z,SAAAuB,EAAAksD,GACAnjE,EAAA9E,KAAA0jE,UAAAwE,GACA3C,EAAAvlE,KAAA2jE,WAAAjC,EAAA58D,EAAAijE,EAAAnE,SAEA,GADAmE,EAAAxC,cACAA,EAAApB,UAAA,UAGA,IAAAgE,EAAA5C,EAAApB,UAAA,SACAiE,EAAArsD,EAAAosD,EACA,OAAAA,GAAAC,GAAApoE,KAAAS,MAAAD,OACAR,KAAA8nE,uBAAAC,OADA,CAIA,IAAAvC,EAAAxlE,KAAAqjE,WAAA+E,GACA7C,EAAAC,aAAArmE,YAxBA4oE,EAAAM,aAAA,gBALAroE,KAAA8nE,uBAAAC,IA+BAhD,cAAA,SAAAlhE,EAAArD,EAAAojE,EAAA0E,GACA,OAAAzkE,EACA,WAAA+9D,GAAA,EAAA2G,EAAAC,UAAArG,EAAAsG,iBACO,OAAA5kE,EACP,WAAA+9D,GAAA,EAAA2G,EAAAG,OAAAvG,EAAAwG,eACO,OAAA9kE,EACP,WAAA+9D,GAAA,EAAA2G,EAAAK,cAAAzG,EAAA0G,qBAEA,IAIArtD,EAAAoR,EAAAtzB,EAJAmH,EAAAT,KAAAS,MACAmL,EAAA/H,EACAilE,EAAAroE,EAAAoD,KACAygE,GAAA,WAGA,OADA9jE,GAAA,EACAsoE,GACA,OACA,IAAAxvE,EAAA,EAAqBA,EAAAkH,EAAYlH,IACjCkiB,EAAA/a,EAAAoD,MAAA,EAAApD,EAAAoD,KACAygE,EAAAvgE,KAAAukE,EAAA9sD,EAAAooD,EAAAzpE,IAAAqhB,IAEA,MACA,OACA,KAAA8oD,EAAA9jE,WAGA,IAFAgb,EAAA/a,EAAAoD,MAAA,EAAApD,EAAAoD,KACA+oB,EAAAnsB,EAAAoD,KACAvK,EAAA,EAAuBA,GAAAszB,EAAYtzB,IACnCgrE,EAAAvgE,KAAAukE,EAAA9sD,IAAAooD,EAAAzpE,IAAAqhB,MAGA,MACA,OACA,KAAA8oD,EAAA9jE,WAGA,IAFAgb,EAAA/a,EAAAoD,MAAA,EAAApD,EAAAoD,KACA+oB,EAAAnsB,EAAAoD,MAAA,EAAApD,EAAAoD,KACAvK,EAAA,EAAuBA,GAAAszB,EAAYtzB,IACnCgrE,EAAAvgE,KAAAukE,EAAA9sD,IAAAooD,EAAAzpE,IAAAqhB,MAGA,MACA,QACA,UAAAmF,EAAAzjB,YAAA,0BAEA,IAAAmD,EAAAwD,EACAklE,EAAAtoE,EAAA+Z,SAAA5O,EAAAvL,GACA,WAAAuhE,GAAA,EAAAkH,EAAAxE,EAAAyE,IAEA7D,cAAA,SAAArhE,EAAAk/D,EAAAa,EAAAU,GACA,IAGAwE,EAAAxvE,EAAAqP,EAHAk4C,EAAA9mD,OAAAsL,OAAA,MACA5E,EAAAT,KAAAS,MACAuoE,GAAA,EAEAD,EAAA,KASA,OAAAllE,GAAA,IAAAA,EAAA,CACAmlE,GAAA,EACAF,EAAAjlE,EACA,IAAAolE,EAAAplE,EAAAu+D,EAAAjrC,eAAAirC,EAAA9qC,iBACA,IAAAh+B,EAAA,EAAAqP,EAAA27D,EAAA9jE,OAAwClH,EAAAqP,EAAQrP,IAAA,CAChD,IAAA0/B,EAAAiwC,EAAA/2B,QAAAoyB,EAAAhrE,KACA,IAAA0/B,IACA6nB,EAAA7nB,GAAA1/B,QAGO,CACP,IAAA4vE,EAAArlE,EAEA,YADAilE,EAAAroE,EAAAoD,OAEA,OACA,IAAAslE,EAAA1oE,EAAAoD,KACA,IAAAvK,EAAA,EAAuBA,GAAA6vE,EAAkB7vE,IACzCunD,EAAApgD,EAAAoD,MAAAvK,EAEA,MACA,OACA,IAAA8vE,EAAA3oE,EAAAoD,KACAwlE,EAAA,EACA,IAAA/vE,EAAA,EAAuBA,EAAA8vE,EAAiB9vE,IAGxC,IAFA,IAAAsS,EAAAnL,EAAAoD,KACA+iB,EAAAnmB,EAAAoD,KACA0iB,EAAA3a,EAAiC2a,GAAA3a,EAAAgb,EAAmBL,IACpDs6B,EAAAt6B,GAAA8iD,IAGA,MACA,QACA,UAAA1oD,EAAAzjB,YAAA,4BAAA4rE,EAAA,WAEA,IAAA5lB,EAAAr/C,EACA,IAAAilE,IACAroE,EAAAyoE,IAAA,IA5CA,WACA,IAAAI,EAAA7oE,EAAAoD,KACA,IAAAvK,EAAA,EAAmBA,EAAAgwE,EAAsBhwE,IAAA,CACzC,IAAAyG,EAAAU,EAAAoD,KACA0lE,GAAA9oE,EAAAoD,MAAA,QAAApD,EAAAoD,MACAg9C,EAAA9gD,GAAAukE,EAAApyB,QAAA0xB,EAAAzpE,IAAAovE,KAwCAC,IAEAT,EAAAtoE,EAAA+Z,SAAA0uD,EAAAhmB,GAGA,WAAAumB,EAAAT,EADAF,GAAA,IACAjoB,EAAAkoB,IAEA9D,cAAA,SAAAphE,EAAArD,GACA,IAIAslB,EACAxsB,EALAsS,EAAA/H,EACApD,EAAAT,KAAAS,MACAqoE,EAAAroE,EAAAoD,KACAmhE,KAGA0E,GAAA,EACA,OAAAZ,GACA,OACA,IAAAxvE,EAAA,EAAqBA,EAAAkH,IAAYlH,EAAA,CACjC,IAAAkiB,EAAA/a,EAAAoD,KACAmhE,EAAAjhE,KAAAyX,GAEAsK,EAAArlB,EAAA+Z,SAAA5O,EAAA/H,GACA,MACA,OACA,IAAAulE,EAAA3oE,EAAAoD,MAAA,EAAApD,EAAAoD,KACA,IAAAvK,EAAA,EAAqBA,EAAA8vE,IAAiB9vE,EAAA,CACtC,IAAAkJ,EAAA/B,EAAAoD,MAAA,EAAApD,EAAAoD,KACA,IAAAvK,GAAA,IAAAkJ,KACA,EAAAme,EAAA7lB,MAAA,mFACA4uE,GAAA,EACAlnE,EAAA,GAIA,IAFA,IAAAklE,EAAAjnE,EAAAoD,KACAo1B,EAAAx4B,EAAAoD,IAAA,EAAApD,EAAAoD,EAAA,GACA0iB,EAAA/jB,EAA+B+jB,EAAA0S,IAAU1S,EACzCy+C,EAAAjhE,KAAA2jE,GAGA7jE,GAAA,EACAiiB,EAAArlB,EAAA+Z,SAAA5O,EAAA/H,GACA6lE,IACA5jD,EAAA,GAAAA,EAAA,MAEA,MACA,QACA,UAAAnF,EAAAzjB,YAAA,kCAAA4rE,EAAA,MAEA,GAAA9D,EAAAxkE,WACA,UAAAmgB,EAAAzjB,YAAA,qCAEA,WAAAysE,EAAA3E,EAAAl/C,KAGAm8C,EAvyBA,GAyyBAD,EAAA,WAcA,OAbA,WACAhiE,KAAAkjE,OAAA,KACAljE,KAAAs2C,SACAt2C,KAAAg+C,QAAA,KACAh+C,KAAA4jE,QAAA,IAAA9B,EACA9hE,KAAAwjE,gBAAA,KACAxjE,KAAA6gD,SAAA,KACA7gD,KAAAskE,QAAA,KACAtkE,KAAAqlE,YAAA,KACArlE,KAAA8kE,WACA9kE,KAAAglE,SAAA,KACAhlE,KAAAgkE,WAAA,GAZA,GAgBAjC,EAAA,WAOA,OANA,SAAA6D,EAAAC,EAAAC,EAAAC,GACA/lE,KAAA4lE,QACA5lE,KAAA6lE,QACA7lE,KAAA8lE,UACA9lE,KAAA+lE,WALA,GASAjE,EAAA,WACA,SAAAA,IACA9hE,KAAA4jE,WAmBA,OAjBA9B,EAAAtnE,WACAL,IAAA,SAAA6+B,GACA,OAAAA,GAAA,GAAAA,GAAA,IACAkpC,EAAAlpC,GAEAA,EAAA,KAAAh5B,KAAA4jE,QAAApjE,OACAR,KAAA4jE,QAAA5qC,EAAA,KAEAkpC,EAAA,IAEAtH,IAAA,SAAAhgE,GACAoF,KAAA4jE,QAAA7/D,KAAAnJ,IAEAgyB,YACA,OAAA5sB,KAAA4jE,QAAApjE,SAGAshE,EArBA,GAuBAD,EAAA,WACA,SAAAA,IACA7hE,KAAA4pE,WACA5pE,KAAAQ,OAAA,EAkBA,OAhBAqhE,EAAArnE,WACAogE,IAAA,SAAAzyD,GACAnI,KAAAQ,QAAA2H,EAAA3H,OACAR,KAAA4pE,QAAA7lE,KAAAoE,IAEAgS,IAAA,SAAA6e,EAAA7wB,GACAnI,KAAAQ,QAAA2H,EAAA3H,OAAAR,KAAA4pE,QAAA5wC,GAAAx4B,OACAR,KAAA4pE,QAAA5wC,GAAA7wB,GAEAhO,IAAA,SAAA6+B,GACA,OAAAh5B,KAAA4pE,QAAA5wC,IAEApM,YACA,OAAA5sB,KAAA4pE,QAAAppE,SAGAqhE,EArBA,GAuBAgI,EAAA,WACA,SAAAA,EAAAC,EAAAlG,GACA5jE,KAAA+pE,aAAAD,EAAAC,aACA/pE,KAAAgqE,aAAAF,EAAAE,aACAhqE,KAAAiqE,SAAAH,EAAAG,SACAjqE,KAAAkqE,MAAAJ,EAAAI,MACAlqE,KAAAmqE,QAAAL,EAAAK,QACAnqE,KAAAoqE,MAAAN,EAAAM,MACApqE,KAAA4jE,UACA5jE,KAAAipC,OAAAlvC,OAAAsL,OAAA,MAoEA,OAlEAwkE,EAAArvE,WACAqsE,SAAA,SAAAjiE,EAAAhK,GACA,KAAAgK,KAAA5E,KAAA+pE,cACA,SAEA,IAAAM,EAAAzvE,EAAA4F,OACA,OAAA6pE,EACA,SAEA,QAAA/wE,EAAA,EAAqBA,EAAA+wE,EAAiB/wE,IACtC,GAAAmmC,MAAA7kC,EAAAtB,IAEA,OADA,EAAAqnB,EAAA7lB,MAAA,2BAAAF,EAAA,cAAAgK,EAAA,OACA,EAGA,IAAA0D,EAAAtI,KAAAkqE,MAAAtlE,GAKA,MAJA,QAAA0D,GAAA,QAAAA,GAAA,WAAAA,IACA1N,IAAA,IAEAoF,KAAAipC,OAAArkC,GAAAhK,GACA,GAEA0vE,UAAA,SAAA1wE,EAAAgB,GACA,KAAAhB,KAAAoG,KAAAgqE,cACA,UAAArpD,EAAAzjB,YAAA,4BAAAtD,EAAA,KAEAoG,KAAAipC,OAAAjpC,KAAAgqE,aAAApwE,IAAAgB,GAEAqpE,QAAA,SAAArqE,GACA,OAAAoG,KAAAgqE,aAAApwE,KAAAoG,KAAAipC,QAEAk7B,UAAA,SAAAvqE,GACA,KAAAA,KAAAoG,KAAAgqE,cACA,UAAArpD,EAAAzjB,YAAA,2BAAAtD,EAAA,KAEA,IAAAgL,EAAA5E,KAAAgqE,aAAApwE,GACA,OAAAgL,KAAA5E,KAAAipC,OAGAjpC,KAAAipC,OAAArkC,GAFA5E,KAAAiqE,SAAArlE,IAIAyjE,aAAA,SAAAzuE,UACAoG,KAAAipC,OAAAjpC,KAAAgqE,aAAApwE,MAGAiwE,EAAAU,aAAA,SAAAC,GASA,IARA,IAAAV,GACAC,gBACAC,gBACAC,YACAC,SACAC,WACAC,UAEA9wE,EAAA,EAAAqP,EAAA6hE,EAAAhqE,OAAuClH,EAAAqP,IAAQrP,EAAA,CAC/C,IAAAqiD,EAAA6uB,EAAAlxE,GACAsL,EAAAP,MAAA0Z,QAAA49B,EAAA,KAAAA,EAAA,UAAAA,EAAA,MAAAA,EAAA,GACAmuB,EAAAC,aAAAnlE,GAAA+2C,EAAA,GACAmuB,EAAAE,aAAAruB,EAAA,IAAA/2C,EACAklE,EAAAI,MAAAtlE,GAAA+2C,EAAA,GACAmuB,EAAAG,SAAArlE,GAAA+2C,EAAA,GACAmuB,EAAAK,QAAAvlE,GAAAP,MAAA0Z,QAAA49B,EAAA,IAAAA,EAAA,IAAAA,EAAA,IACAmuB,EAAAM,MAAArmE,KAAAa,GAEA,OAAAklE,GAEAD,EA7EA,GA+EAlI,EAAA,WACA,IAAA6I,KAAA,koCACAV,EAAA,KACA,SAAAnI,EAAAiC,GACA,OAAAkG,IACAA,EAAAD,EAAAU,aAAAC,IAEAX,EAAArwE,KAAAwG,KAAA8pE,EAAAlG,GACA5jE,KAAAulE,YAAA,KAGA,OADA5D,EAAAnnE,UAAAT,OAAAsL,OAAAwkE,EAAArvE,WACAmnE,EAXA,GAaAD,EAAA,WACA,IAAA8I,IAAA,ojBACAV,EAAA,KACA,SAAApI,EAAAkC,GACA,OAAAkG,IACAA,EAAAD,EAAAU,aAAAC,IAEAX,EAAArwE,KAAAwG,KAAA8pE,EAAAlG,GACA5jE,KAAAwlE,WAAA,KAGA,OADA9D,EAAAlnE,UAAAT,OAAAsL,OAAAwkE,EAAArvE,WACAknE,EAXA,GAaA6G,GACAC,UAAA,EACAE,OAAA,EACAE,cAAA,GAEAhH,EAAA,WAOA,OANA,SAAAoH,EAAAF,EAAAxE,EAAAyE,GACA/oE,KAAAgpE,aACAhpE,KAAA8oE,SACA9oE,KAAAskE,UACAtkE,KAAA+oE,OALA,GASAU,EAAA,WAOA,OANA,SAAAT,EAAAF,EAAAjoB,EAAAkoB,GACA/oE,KAAAgpE,aACAhpE,KAAA8oE,SACA9oE,KAAA6gD,WACA7gD,KAAA+oE,OALA,GASAY,EAAA,WACA,SAAAA,EAAA3E,EAAA+D,GACA/oE,KAAAglE,WACAhlE,KAAA+oE,MAUA,OARAY,EAAAnvE,WACAmtE,WAAA,SAAA8C,GACA,OAAAA,EAAA,GAAAA,GAAAzqE,KAAAglE,SAAAxkE,QACA,EAEAR,KAAAglE,SAAAyF,KAGAd,EAbA,GAeAe,EAAA,WACA,SAAAA,IACA1qE,KAAAsmE,QAAAvsE,OAAAsL,OAAA,MA0CA,OAxCAqlE,EAAAlwE,WACAmwE,WAAA,SAAA/lE,GACA,OAAAA,KAAA5E,KAAAsmE,SAEAsE,MAAA,SAAAhmE,EAAAimE,GACA,GAAAjmE,KAAA5E,KAAAsmE,QACA,UAAA3lD,EAAAzjB,YAAA,gCAAA0H,GAEA5E,KAAAsmE,QAAA1hE,GAAAimE,GAEA9uD,OAAA,SAAAnhB,GACA,QAAAgK,KAAA5E,KAAAsmE,QACAtmE,KAAAsmE,QAAA1hE,IAAAhK,GAGAkwE,iBAAA,SAAAlmE,EAAAqkC,EAAAqwB,GACA,KAAA10D,KAAA5E,KAAAsmE,SACA,UAAA3lD,EAAAzjB,YAAA,4BAAA0H,GAKA,IAHA,IAAAuD,EAAAmxD,EAAAnxD,KACA27B,EAAA9jC,KAAAsmE,QAAA1hE,GAEAtL,EAAA,EAAAqP,EAAAsgC,EAAAzoC,OAAyClH,EAAAqP,IAAQrP,EAAA,CACjD,IAAAyxE,EAFA,EAEAzxE,EAAAwqC,EACAknC,EAAAD,EAAA,EACAE,EAAAF,EAAA,EACAG,EAAAH,EAAA,EACAI,EAAAJ,EAAA,EACA,QAAA5iE,EAAA4iE,IAAA,IAAA5iE,EAAA6iE,IAAA,IAAA7iE,EAAA8iE,IAAA,IAAA9iE,EAAA+iE,IAAA,IAAA/iE,EAAAgjE,GACA,UAAAxqD,EAAAzjB,YAAA,0CAEA,IAAAtC,EAAAquC,EAAA3vC,GACA6O,EAAA4iE,GAAA,GACA5iE,EAAA6iE,GAAApwE,GAAA,OACAuN,EAAA8iE,GAAArwE,GAAA,OACAuN,EAAA+iE,GAAAtwE,GAAA,MACAuN,EAAAgjE,GAAA,IAAAvwE,KAIA8vE,EA5CA,GA8CAjJ,EAAA,WACA,SAAAA,EAAAwB,GACAjjE,KAAAijE,MAoUA,OAlUAxB,EAAAjnE,WACA4wE,QAAA,WACA,IAAAnI,EAAAjjE,KAAAijE,IACA3J,GACAnxD,QACA3H,OAAA,EACAo6D,IAAA,SAAAzyD,GACAnI,KAAAmI,KAAAnI,KAAAmI,KAAA2vB,OAAA3vB,GACAnI,KAAAQ,OAAAR,KAAAmI,KAAA3H,SAGA0iE,EAAAljE,KAAAqrE,cAAApI,EAAAC,QACA5J,EAAAsB,IAAAsI,GACA,IAAAE,EAAApjE,KAAAsrE,iBAAArI,EAAA3sB,OAEA,GADAgjB,EAAAsB,IAAAwI,GACAH,EAAAe,WACAf,EAAAjlB,QAAAimB,QAAA,eACA,IAAA9+D,EAAA89D,EAAAjlB,QAAAmmB,UAAA,cACAlB,EAAAjlB,QAAAqqB,aAAA,cACA,QAAA/uE,EAAA,EAAAqP,EAAAs6D,EAAA6B,QAAAtkE,OAAkDlH,EAAAqP,EAAQrP,IAAA,CAC1D,IAAAiyE,EAAAtI,EAAA6B,QAAAxrE,GACAo2B,EAAAvqB,EAAAvD,MAAA,GACA2pE,EAAAtH,QAAA,gBACAv0C,EAAA/O,EAAAvjB,KAAAgE,UAAAsuB,EAAA67C,EAAApH,UAAA,gBAEAoH,EAAAjB,UAAA,aAAA56C,IAIA,IAAA87C,EAAAxrE,KAAAyrE,iBAAAxI,EAAAjlB,SAAAsb,EAAA94D,OAAAyiE,EAAAe,WACA1K,EAAAsB,IAAA4Q,EAAAlS,QACA,IAAAoS,EAAAF,EAAAG,SAAA,GACApI,EAAAvjE,KAAA4rE,mBAAA3I,EAAAW,iBACAtK,EAAAsB,IAAA2I,GACA,IAAAC,EAAAxjE,KAAA6rE,aAAA5I,EAAAO,iBAEA,GADAlK,EAAAsB,IAAA4I,GACAP,EAAApiB,UAAAoiB,EAAAjlB,QAAAimB,QAAA,YACA,GAAAhB,EAAApiB,SAAAmoB,WACA0C,EAAAZ,iBAAA,YAAA7H,EAAApiB,SAAAioB,QAAAxP,OACS,CACT,IAAAzY,EAAA7gD,KAAA8rE,gBAAA7I,EAAApiB,UACA6qB,EAAAZ,iBAAA,YAAAxR,EAAA94D,QAAA84D,GACAA,EAAAsB,IAAA/Z,GAGA,GAAAoiB,EAAAqB,SAAArB,EAAAjlB,QAAAimB,QAAA,WACA,GAAAhB,EAAAqB,QAAA0E,WACA0C,EAAAZ,iBAAA,WAAA7H,EAAAqB,QAAAwE,QAAAxP,OACS,CACT,IAAAgL,EAAAtkE,KAAA+rE,eAAA9I,EAAAqB,SACAoH,EAAAZ,iBAAA,WAAAxR,EAAA94D,QAAA84D,GACAA,EAAAsB,IAAA0J,GAGA,IAAAe,EAAArlE,KAAAgsE,mBAAA/I,EAAAoC,aAGA,GAFAqG,EAAAZ,iBAAA,eAAAxR,EAAA94D,QAAA84D,GACAA,EAAAsB,IAAAyK,GACApC,EAAAe,UAAA,CACA0H,EAAAZ,iBAAA,YAAAxR,EAAA94D,QAAA84D,GACA,IAAA0L,EAAAhlE,KAAAisE,gBAAAhJ,EAAA+B,SAAA+D,KACAzP,EAAAsB,IAAAoK,GACAwG,EAAAxrE,KAAAyrE,gBAAAxI,EAAA6B,QAAAxL,EAAA94D,QAAA,GACAkrE,EAAAZ,iBAAA,WAAAxR,EAAA94D,QAAA84D,GACAA,EAAAsB,IAAA4Q,EAAAlS,QACA,IAAA4S,EAAAV,EAAAG,SACA3rE,KAAAmsE,oBAAAlJ,EAAA6B,QAAAoH,EAAA5S,GAIA,OAFAt5D,KAAAmsE,qBAAAlJ,EAAAjlB,UAAA0tB,GAAApS,GACAA,EAAAsB,KAAA,IACAtB,EAAAnxD,MAEAikE,aAAA,SAAAxxE,GACA,OAAAqrE,WAAArrE,KAAAyjD,SAAAzjD,EAAA,KAAA6kC,MAAA7kC,GAGAoF,KAAAqsE,YAAAzxE,GAFAoF,KAAAssE,cAAA1xE,IAIAyxE,YAAA,SAAAxtD,GACA,IAAAjkB,EAAAikB,EAAAhU,WACApR,EAAA,gDAAiDoyB,KAAAjxB,GACjD,GAAAnB,EAAA,CACA,IAAA63D,EAAA2U,WAAA,OAAAxsE,EAAA,IAAAA,EAAA,MAAAA,EAAA,GAAA+G,SACA5F,GAAAmH,KAAAq0B,MAAAvX,EAAAyyC,MAAAzmD,WAEA,IACAvR,EAAAqP,EADA4jE,EAAA,GAEA,IAAAjzE,EAAA,EAAAqP,EAAA/N,EAAA4F,OAAoClH,EAAAqP,IAAQrP,EAAA,CAC5C,IAAAiJ,EAAA3H,EAAAtB,GAEAizE,GADA,MAAAhqE,EACA,MAAA3H,IAAAtB,GAAA,QACS,MAAAiJ,EACT,IACS,MAAAA,EACT,IAEAA,EAIA,IAAAqnB,GAAA,IACA,IAAAtwB,EAAA,EAAAqP,GAFA4jE,GAAA,EAAAA,EAAA/rE,OAAA,UAEAA,OAAsClH,EAAAqP,EAAQrP,GAAA,EAC9CswB,EAAA7lB,KAAAs6C,SAAAkuB,EAAAC,OAAAlzE,EAAA,QAEA,OAAAswB,GAEA0iD,cAAA,SAAA1xE,GAeA,OAbAA,IAAA,KAAAA,GAAA,KACAA,EAAA,KACOA,GAAA,KAAAA,GAAA,MAEP,MADAA,GAAA,MACA,OAAAA,GACOA,IAAA,MAAAA,IAAA,KAEP,MADAA,KAAA,MACA,OAAAA,GACOA,IAAA,OAAAA,GAAA,OACP,GAAAA,GAAA,UAAAA,IAEA,GAAAA,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IAIAywE,cAAA,SAAAnI,GACA,OAAAA,EAAA0C,MAAA1C,EAAA2C,MAAA3C,EAAA4C,QAAA5C,EAAA6C,UAEAuF,iBAAA,SAAAh1B,GAEA,IADA,IAAA8sB,EAAA,IAAAvB,EACAvoE,EAAA,EAAAqP,EAAA2tC,EAAA91C,OAAwClH,EAAAqP,IAAQrP,EAAA,CAIhD,IAHA,IAAAM,EAAA08C,EAAAh9C,GACAkH,EAAAuB,KAAAC,IAAApI,EAAA4G,OAAA,KACAisE,EAAA,IAAApoE,MAAA7D,GACA+lB,EAAA,EAAuBA,EAAA/lB,EAAY+lB,IAAA,CACnC,IAAAmmD,EAAA9yE,EAAA2sB,IACAmmD,EAAA,KAAAA,EAAA,WAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAqH,MAAAA,GAAgB,MAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,MAAAA,KACrIA,EAAA,KAEAD,EAAAlmD,GAAAmmD,EAGA,MADAD,IAAAtrE,KAAA,OAEAsrE,EAAA,iBAEArJ,EAAAxI,KAAA,EAAAj6C,EAAAzlB,eAAAuxE,IAEA,OAAAzsE,KAAA6rE,aAAAzI,IAEAqI,gBAAA,SAAAkB,EAAAnsE,EAAAosE,GAGA,IAFA,IAAAV,KACAvH,EAAA,IAAA9C,EACAvoE,EAAA,EAAAqP,EAAAgkE,EAAAnsE,OAAwClH,EAAAqP,IAAQrP,EAAA,CAChD,IAAAurE,EAAA8H,EAAArzE,GACAszE,IACA/H,EAAAwD,aAAA,kBACAxD,EAAAwD,aAAA,mBACAxD,EAAAwD,aAAA,eACAxD,EAAAwD,aAAA,YACAxD,EAAAwD,aAAA,YAEA,IAAAwE,EAAA,IAAAnC,EACAoC,EAAA9sE,KAAA+sE,YAAAlI,EAAAgI,GACAX,EAAAnoE,KAAA8oE,GACAlI,EAAA/J,IAAAkS,GACAD,EAAA9wD,OAAAvb,GAGA,OACAmrE,SAAAO,EACA5S,OAHAqL,EAAA3kE,KAAA6rE,aAAAlH,EAAAuH,KAMAC,oBAAA,SAAAQ,EAAAhB,EAAArS,GACA,QAAAhgE,EAAA,EAAAqP,EAAAgkE,EAAAnsE,OAAwClH,EAAAqP,IAAQrP,EAAA,CAChD,IAAAurE,EAAA8H,EAAArzE,GACAisE,EAAAV,EAAAU,YACA,IAAAA,IAAAV,EAAAZ,QAAA,WACA,UAAAtjD,EAAAzjB,YAAA,uCAEA,IAAA8vE,EAAA,IAAAtC,EACAuC,EAAAjtE,KAAA+sE,YAAAxH,EAAAyH,GACA1P,EAAAhE,EAAA94D,OAOA,GANAwsE,EAAAjxD,OAAAuhD,GACA2P,EAAAzsE,SACA88D,EAAA,GAEAqO,EAAAryE,GAAAwxE,iBAAA,WAAAmC,EAAAzsE,OAAA88D,GAAAhE,GACAA,EAAAsB,IAAAqS,GACA1H,EAAAC,YAAAD,EAAAtB,QAAA,UACA,IAAAiJ,EAAAltE,KAAA6rE,aAAAtG,EAAAC,YACAwH,EAAAlC,iBAAA,SAAAmC,EAAAzsE,QAAA84D,GACAA,EAAAsB,IAAAsS,MAIAH,YAAA,SAAAjoE,EAAAqoE,GAGA,IAFA,IAAAvjD,KACAwgD,EAAAtlE,EAAAslE,MACA9wE,EAAA,EAAqBA,EAAA8wE,EAAA5pE,SAAkBlH,EAAA,CACvC,IAAAsL,EAAAwlE,EAAA9wE,GACA,GAAAsL,KAAAE,EAAAmkC,OAAA,CAGA,IAAAA,EAAAnkC,EAAAmkC,OAAArkC,GACAslE,EAAAplE,EAAAolE,MAAAtlE,GAOA,GANAP,MAAA0Z,QAAAmsD,KACAA,OAEA7lE,MAAA0Z,QAAAkrB,KACAA,OAEA,IAAAA,EAAAzoC,OAAA,CAGA,QAAA+lB,EAAA,EAAAkxB,EAAAyyB,EAAA1pE,OAA0C+lB,EAAAkxB,IAAQlxB,EAAA,CAClD,IAAAje,EAAA4hE,EAAA3jD,GACA3rB,EAAAquC,EAAA1iB,GACA,OAAAje,GACA,UACA,UACAshB,IAAAkO,OAAA93B,KAAAosE,aAAAxxE,IACA,MACA,aACA,IAAAhB,EAAAkL,EAAAilE,aAAAnlE,GACAuoE,EAAAxC,WAAA/wE,IACAuzE,EAAAvC,MAAAhxE,EAAAgwB,EAAAppB,QAEAopB,IAAAkO,QAAA,aACA,MACA,YACA,YACAlO,IAAAkO,OAAA93B,KAAAosE,aAAAxxE,IACA,QAAAuqB,EAAA,EAAAqB,EAAAyiB,EAAAzoC,OAAiD2kB,EAAAqB,IAAQrB,EACzDyE,IAAAkO,OAAA93B,KAAAosE,aAAAnjC,EAAA9jB,KAEA,MACA,QACA,UAAAxE,EAAAzjB,YAAA,wBAAAoL,IAGAshB,IAAAkO,OAAAhzB,EAAAqlE,QAAAvlE,MAEA,OAAAglB,GAEAgiD,mBAAA,SAAAhI,GAEA,IADA,IAAAL,EAAA,IAAA1B,EACAvoE,EAAA,EAAAqP,EAAAi7D,EAAApjE,OAA0ClH,EAAAqP,IAAQrP,EAClDiqE,EAAA3I,KAAA,EAAAj6C,EAAAzlB,eAAA0oE,EAAAtqE,KAEA,OAAA0G,KAAA6rE,aAAAtI,IAEA6J,uBAAA,WACA,IAAA5J,EAAAxjE,KAAAijE,IAAAO,gBACAxjE,KAAA4pB,IAAAyjD,eAAArtE,KAAA6rE,aAAArI,KAEAwI,mBAAA,SAAA3G,GACA,OAAArlE,KAAA6rE,aAAAxG,IAEA0G,eAAA,SAAAzH,GACA,OAAAtkE,KAAAstE,kBAAAhJ,EAAAyE,MAEA+C,gBAAA,SAAAjrB,GACA,OAAA7gD,KAAAstE,kBAAAzsB,EAAAkoB,MAEAkD,gBAAA,SAAAjH,GACA,OAAAhlE,KAAAstE,kBAAAtI,IAEAsI,kBAAA,SAAAnlE,GAEA,IADA,IAAAyhB,KACAtwB,EAAA,EAAAqP,EAAAR,EAAA3H,OAAuClH,EAAAqP,IAAQrP,EAC/CswB,EAAAtwB,GAAA6O,EAAA7O,GAEA,OAAAswB,GAEAiiD,aAAA,SAAA7yC,EAAA2yC,GACAA,QACA,IAAA/B,EAAA5wC,EAAA4wC,QACAh9C,EAAAg9C,EAAAppE,OACA,OAAAosB,EACA,cAEA,IAEAtzB,EAIAitE,EANAp+D,GAAAykB,GAAA,UAAAA,GACA2gD,EAAA,EAEA,IAAAj0E,EAAA,EAAiBA,EAAAszB,IAAWtzB,EAC5Bi0E,GAAA3D,EAAAtwE,GAAAkH,OAIA+lE,EADAgH,EAAA,IACA,EACOA,EAAA,MACP,EACOA,EAAA,SACP,EAEA,EAEAplE,EAAApE,KAAAwiE,GACA,IAAA6B,EAAA,EACA,IAAA9uE,EAAA,EAAiBA,EAAAszB,EAAA,EAAetzB,IAChC,IAAAitE,EACAp+D,EAAApE,KAAA,IAAAqkE,GACS,IAAA7B,EACTp+D,EAAApE,KAAAqkE,GAAA,UAAAA,GACS,IAAA7B,EACTp+D,EAAApE,KAAAqkE,GAAA,OAAAA,GAAA,UAAAA,GAEAjgE,EAAApE,KAAAqkE,IAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,GAEAwB,EAAAtwE,KACA8uE,GAAAwB,EAAAtwE,GAAAkH,QAGA,IAAAlH,EAAA,EAAiBA,EAAAszB,EAAWtzB,IAAA,CAC5BqyE,EAAAryE,IACAqyE,EAAAryE,GAAAyiB,OAAA5T,EAAA3H,QAEA,QAAA+lB,EAAA,EAAAkxB,EAAAmyB,EAAAtwE,GAAAkH,OAA+C+lB,EAAAkxB,EAAQlxB,IACvDpe,EAAApE,KAAA6lE,EAAAtwE,GAAAitB,IAGA,OAAApe,IAGAs5D,EAtUA,GAwUAroE,EAAA8oE,qBACA9oE,EAAA6oE,YACA7oE,EAAA4oE,MACA5oE,EAAA2oE,YACA3oE,EAAA0oE,aACA1oE,EAAAyoE,WACAzoE,EAAAwoE,aACAxoE,EAAAuoE,aACAvoE,EAAAsoE,iBACAtoE,EAAAqoE,eAIA,SAAApoE,EAAAD,EAAAF,GAEA,aAGAa,OAAAC,eAAAZ,EAAA,cACAwB,OAAA,IAEAxB,EAAAo0E,kCAAAp0E,EAAAq0E,qCAAAr0E,EAAAs0E,4BAAAt0E,EAAAu0E,gBAAAv0E,EAAAw0E,cAAAx0E,EAAAy0E,iBAAAz0E,EAAA00E,mBAAA/uE,EAEA,IAAA4hB,EAAAznB,EAAA,GAEA40E,GAAA,EAAAntD,EAAAlkB,uBAAA,SAAAynB,GACAA,EAAA,wBACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,uBACAA,EAAA,oCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,kBACAA,EAAA,+BACAA,EAAA,4CACAA,EAAA,oCACAA,EAAA,8CACAA,EAAA,iCACAA,EAAA,sCACAA,EAAA,oBACAA,EAAA,+BACAA,EAAA,4CACAA,EAAA,oCACAA,EAAA,qBACAA,EAAA,kCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,mDACAA,EAAA,sCACAA,EAAA,2CACAA,EAAA,yBACAA,EAAA,sBACAA,EAAA,mCACAA,EAAA,gDACAA,EAAA,iDACAA,EAAA,wCACAA,EAAA,yCACAA,EAAA,0BACAA,EAAA,wBACAA,EAAA,8BACAA,EAAA,0BACAA,EAAA,4BACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,8BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,mDACAA,EAAA,uCACAA,EAAA,yCACAA,EAAA,2CACAA,EAAA,gCACAA,EAAA,uCACAA,EAAA,mDACAA,EAAA,6CAEA2pD,GAAA,EAAAltD,EAAAlkB,uBAAA,SAAAynB,GACAA,EAAA,oBACAA,EAAA,iCACAA,EAAA,8CACAA,EAAA,sCACAA,EAAA,0BACAA,EAAA,uCACAA,EAAA,oDACAA,EAAA,4CACAA,EAAA,4BACAA,EAAA,yCACAA,EAAA,qDACAA,EAAA,6CACAA,EAAA,wBACAA,EAAA,qCACAA,EAAA,kDACAA,EAAA,0CACAA,EAAA,oCACAA,EAAA,yBACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,yBACAA,EAAA,mCACAA,EAAA,+CACAA,EAAA,uCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,2BACAA,EAAA,qCACAA,EAAA,iDACAA,EAAA,yCACAA,EAAA,6BACAA,EAAA,2BAEA0pD,GAAA,EAAAjtD,EAAAlkB,uBAAA,SAAAynB,GACAA,EAAA,mBACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,SACAA,EAAA,cACAA,EAAA,YACAA,EAAA,0BACAA,EAAA,WACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,eACAA,EAAA,QACAA,EAAA,SACAA,EAAA,uBACAA,EAAA,YACAA,EAAA,yBACAA,EAAA,sBACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,WACAA,EAAA,qBACAA,EAAA,qBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,wBACAA,EAAA,yBACAA,EAAA,aACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,kBACAA,EAAA,aACAA,EAAA,aACAA,EAAA,UACAA,EAAA,WACAA,EAAA,sBACAA,EAAA,qBACAA,EAAA,cACAA,EAAA,mBACAA,EAAA,UACAA,EAAA,WACAA,EAAA,cACAA,EAAA,YACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,oBACAA,EAAA,YACAA,EAAA,WACAA,EAAA,WACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,uBACAA,EAAA,qBACAA,EAAA,WACAA,EAAA,wBACAA,EAAA,WACAA,EAAA,YACAA,EAAA,sBACAA,EAAA,aACAA,EAAA,mBACAA,EAAA,mBACAA,EAAA,WACAA,EAAA,kBACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,uBACAA,EAAA,sBACAA,EAAA,iBACAA,EAAA,UACAA,EAAA,oBACAA,EAAA,UACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,iBACAA,EAAA,eACAA,EAAA,mBACAA,EAAA,4BACAA,EAAA,iBACAA,EAAA,YACAA,EAAA,YACAA,EAAA,WACAA,EAAA,yBACAA,EAAA,YACAA,EAAA,mBACAA,EAAA,wBACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,SACAA,EAAA,kBACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WACAA,EAAA,WACAA,EAAA,YACAA,EAAA,QACAA,EAAA,qBACAA,EAAA,kBACAA,EAAA,WACAA,EAAA,SACAA,EAAA,UACAA,EAAA,cACAA,EAAA,sBACAA,EAAA,UACAA,EAAA,gBACAA,EAAA,qBACAA,EAAA,iBACAA,EAAA,cACAA,EAAA,UACAA,EAAA,SACAA,EAAA,iBACAA,EAAA,WACAA,EAAA,UAEAypD,GAAA,EAAAhtD,EAAAlkB,uBAAA,SAAAynB,GACAA,EAAA,YACAA,EAAA,UACAA,EAAA,kBAEAwpD,GAAA,EAAA/sD,EAAAlkB,uBAAA,SAAAynB,GACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,MACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EAAA,WACAA,EA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IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,MAEAD,MAAA,IACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,OAEAD,MAAA,KACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,MAAA,MACAC,IAAA,QAEAD,M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,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,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","file":"0.portfolio.min.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 73);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.unreachable = exports.warn = exports.utf8StringToString = exports.stringToUTF8String = exports.stringToPDFString = exports.stringToBytes = exports.string32 = exports.shadow = exports.setVerbosityLevel = exports.ReadableStream = exports.removeNullCharacters = exports.readUint32 = exports.readUint16 = exports.readInt8 = exports.log2 = exports.loadJpegStream = exports.isEvalSupported = exports.isLittleEndian = exports.createValidAbsoluteUrl = exports.isSameOrigin = exports.isSpace = exports.isString = exports.isNum = exports.isEmptyObj = exports.isBool = exports.isArrayBuffer = exports.info = exports.getVerbosityLevel = exports.getLookupTableFactory = exports.deprecated = exports.createObjectURL = exports.createPromiseCapability = exports.createBlob = exports.bytesToString = exports.assert = exports.arraysToBytes = exports.arrayByteLength = exports.FormatError = exports.XRefParseException = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PasswordResponses = exports.PasswordException = exports.PageViewport = exports.NotImplementedException = exports.NativeImageDecoding = exports.MissingPDFException = exports.MissingDataException = exports.MessageHandler = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VERBOSITY_LEVELS = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n__w_pdfjs_require__(75);\n\nvar _streams_polyfill = __w_pdfjs_require__(125);\n\nvar FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\nvar NativeImageDecoding = {\n  NONE: 'none',\n  DECODE: 'decode',\n  DISPLAY: 'display'\n};\nvar TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3\n};\nvar AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26\n};\nvar AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5\n};\nvar StreamType = {\n  UNKNOWN: 0,\n  FLATE: 1,\n  LZW: 2,\n  DCT: 3,\n  JPX: 4,\n  JBIG: 5,\n  A85: 6,\n  AHX: 7,\n  CCF: 8,\n  RL: 9\n};\nvar FontType = {\n  UNKNOWN: 0,\n  TYPE1: 1,\n  TYPE1C: 2,\n  CIDFONTTYPE0: 3,\n  CIDFONTTYPE0C: 4,\n  TRUETYPE: 5,\n  CIDFONTTYPE2: 6,\n  TYPE3: 7,\n  OPENTYPE: 8,\n  TYPE0: 9,\n  MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n  errors: 0,\n  warnings: 1,\n  infos: 5\n};\nvar CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2\n};\nvar OPS = {\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n  verbosity = level;\n}\nfunction getVerbosityLevel() {\n  return verbosity;\n}\nfunction info(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.infos) {\n    console.log('Info: ' + msg);\n  }\n}\nfunction warn(msg) {\n  if (verbosity >= VERBOSITY_LEVELS.warnings) {\n    console.log('Warning: ' + msg);\n  }\n}\nfunction deprecated(details) {\n  console.log('Deprecated API usage: ' + details);\n}\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\nvar UNSUPPORTED_FEATURES = {\n  unknown: 'unknown',\n  forms: 'forms',\n  javaScript: 'javaScript',\n  smask: 'smask',\n  shadingPattern: 'shadingPattern',\n  font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n  try {\n    var base = new URL(baseUrl);\n    if (!base.origin || base.origin === 'null') {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n  var other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case 'http:':\n    case 'https:':\n    case 'ftp:':\n    case 'mailto:':\n    case 'tel:':\n      return true;\n    default:\n      return false;\n  }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {}\n  return null;\n}\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value: value,\n    enumerable: true,\n    configurable: true,\n    writable: false\n  });\n  return value;\n}\nfunction getLookupTableFactory(initializer) {\n  var lookup;\n  return function () {\n    if (initializer) {\n      lookup = Object.create(null);\n      initializer(lookup);\n      initializer = null;\n    }\n    return lookup;\n  };\n}\nvar PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n  function PasswordException(msg, code) {\n    this.name = 'PasswordException';\n    this.message = msg;\n    this.code = code;\n  }\n  PasswordException.prototype = new Error();\n  PasswordException.constructor = PasswordException;\n  return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n  function UnknownErrorException(msg, details) {\n    this.name = 'UnknownErrorException';\n    this.message = msg;\n    this.details = details;\n  }\n  UnknownErrorException.prototype = new Error();\n  UnknownErrorException.constructor = UnknownErrorException;\n  return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n  function InvalidPDFException(msg) {\n    this.name = 'InvalidPDFException';\n    this.message = msg;\n  }\n  InvalidPDFException.prototype = new Error();\n  InvalidPDFException.constructor = InvalidPDFException;\n  return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n  function MissingPDFException(msg) {\n    this.name = 'MissingPDFException';\n    this.message = msg;\n  }\n  MissingPDFException.prototype = new Error();\n  MissingPDFException.constructor = MissingPDFException;\n  return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n  function UnexpectedResponseException(msg, status) {\n    this.name = 'UnexpectedResponseException';\n    this.message = msg;\n    this.status = status;\n  }\n  UnexpectedResponseException.prototype = new Error();\n  UnexpectedResponseException.constructor = UnexpectedResponseException;\n  return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n  function NotImplementedException(msg) {\n    this.message = msg;\n  }\n  NotImplementedException.prototype = new Error();\n  NotImplementedException.prototype.name = 'NotImplementedException';\n  NotImplementedException.constructor = NotImplementedException;\n  return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n  function MissingDataException(begin, end) {\n    this.begin = begin;\n    this.end = end;\n    this.message = 'Missing data [' + begin + ', ' + end + ')';\n  }\n  MissingDataException.prototype = new Error();\n  MissingDataException.prototype.name = 'MissingDataException';\n  MissingDataException.constructor = MissingDataException;\n  return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n  function XRefParseException(msg) {\n    this.message = msg;\n  }\n  XRefParseException.prototype = new Error();\n  XRefParseException.prototype.name = 'XRefParseException';\n  XRefParseException.constructor = XRefParseException;\n  return XRefParseException;\n}();\nvar FormatError = function FormatErrorClosure() {\n  function FormatError(msg) {\n    this.message = msg;\n  }\n  FormatError.prototype = new Error();\n  FormatError.prototype.name = 'FormatError';\n  FormatError.constructor = FormatError;\n  return FormatError;\n}();\nvar AbortException = function AbortExceptionClosure() {\n  function AbortException(msg) {\n    this.name = 'AbortException';\n    this.message = msg;\n  }\n  AbortException.prototype = new Error();\n  AbortException.constructor = AbortException;\n  return AbortException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n  if (typeof str !== 'string') {\n    warn('The argument for removeNullCharacters must be a string.');\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n  assert(bytes !== null && (typeof bytes === 'undefined' ? 'undefined' : _typeof(bytes)) === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n  var length = bytes.length;\n  var MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  var strBuf = [];\n  for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    var chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join('');\n}\nfunction stringToBytes(str) {\n  assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xFF;\n  }\n  return bytes;\n}\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined);\n  return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n  if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  var resultLength = 0;\n  var i,\n      ii = arr.length;\n  var item, itemLength;\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    itemLength = arrayByteLength(item);\n    resultLength += itemLength;\n  }\n  var pos = 0;\n  var data = new Uint8Array(resultLength);\n  for (i = 0; i < ii; i++) {\n    item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === 'string') {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\nfunction string32(value) {\n  return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n  if (x <= 0) {\n    return 0;\n  }\n  return Math.ceil(Math.log2(x));\n}\nfunction readInt8(data, start) {\n  return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n  return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n  var buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  var view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nfunction isEvalSupported() {\n  try {\n    new Function('');\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nvar IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nvar Util = function UtilClosure() {\n  function Util() {}\n  var rgbBuf = ['rgb(', 0, ',', 0, ',', 0, ')'];\n  Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join('');\n  };\n  Util.transform = function Util_transform(m1, m2) {\n    return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n  };\n  Util.applyTransform = function Util_applyTransform(p, m) {\n    var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  };\n  Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  };\n  Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n    var p1 = Util.applyTransform(r, m);\n    var p2 = Util.applyTransform(r.slice(2, 4), m);\n    var p3 = Util.applyTransform([r[0], r[3]], m);\n    var p4 = Util.applyTransform([r[2], r[1]], m);\n    return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n  };\n  Util.inverseTransform = function Util_inverseTransform(m) {\n    var d = m[0] * m[3] - m[1] * m[2];\n    return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n  };\n  Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n    return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n  };\n  Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n    var transpose = [m[0], m[2], m[1], m[3]];\n    var a = m[0] * transpose[0] + m[1] * transpose[2];\n    var b = m[0] * transpose[1] + m[1] * transpose[3];\n    var c = m[2] * transpose[0] + m[3] * transpose[2];\n    var d = m[2] * transpose[1] + m[3] * transpose[3];\n    var first = (a + d) / 2;\n    var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    var sx = first + second || 1;\n    var sy = first - second || 1;\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  };\n  Util.normalizeRect = function Util_normalizeRect(rect) {\n    var r = rect.slice(0);\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  };\n  Util.intersect = function Util_intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n    var orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare),\n        orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare),\n        result = [];\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n    if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return false;\n    }\n    if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return false;\n    }\n    return result;\n  };\n  var ROMAN_NUMBER_MAP = ['', 'C', 'CC', 'CCC', 'CD', 'D', 'DC', 'DCC', 'DCCC', 'CM', '', 'X', 'XX', 'XXX', 'XL', 'L', 'LX', 'LXX', 'LXXX', 'XC', '', 'I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX'];\n  Util.toRoman = function Util_toRoman(number, lowerCase) {\n    assert(Number.isInteger(number) && number > 0, 'The number should be a positive integer.');\n    var pos,\n        romanBuf = [];\n    while (number >= 1000) {\n      number -= 1000;\n      romanBuf.push('M');\n    }\n    pos = number / 100 | 0;\n    number %= 100;\n    romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n    pos = number / 10 | 0;\n    number %= 10;\n    romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n    romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n    var romanStr = romanBuf.join('');\n    return lowerCase ? romanStr.toLowerCase() : romanStr;\n  };\n  Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n    Array.prototype.push.apply(arr1, arr2);\n  };\n  Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n    Array.prototype.unshift.apply(arr1, arr2);\n  };\n  Util.extendObj = function extendObj(obj1, obj2) {\n    for (var key in obj2) {\n      obj1[key] = obj2[key];\n    }\n  };\n  Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n    while (dict && !dict.has(name)) {\n      dict = dict.get('Parent');\n    }\n    if (!dict) {\n      return null;\n    }\n    return getArray ? dict.getArray(name) : dict.get(name);\n  };\n  Util.inherit = function Util_inherit(sub, base, prototype) {\n    sub.prototype = Object.create(base.prototype);\n    sub.prototype.constructor = sub;\n    for (var prop in prototype) {\n      sub.prototype[prop] = prototype[prop];\n    }\n  };\n  Util.loadScript = function Util_loadScript(src, callback) {\n    var script = document.createElement('script');\n    var loaded = false;\n    script.setAttribute('src', src);\n    if (callback) {\n      script.onload = function () {\n        if (!loaded) {\n          callback();\n        }\n        loaded = true;\n      };\n    }\n    document.getElementsByTagName('head')[0].appendChild(script);\n  };\n  return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n  function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n    var centerX = (viewBox[2] + viewBox[0]) / 2;\n    var centerY = (viewBox[3] + viewBox[1]) / 2;\n    var rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      default:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n    }\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n    var offsetCanvasX, offsetCanvasY;\n    var width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n    this.width = width;\n    this.height = height;\n    this.fontScale = scale;\n  }\n  PageViewport.prototype = {\n    clone: function PageViewPort_clone(args) {\n      args = args || {};\n      var scale = 'scale' in args ? args.scale : this.scale;\n      var rotation = 'rotation' in args ? args.rotation : this.rotation;\n      return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n    },\n    convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n      return Util.applyTransform([x, y], this.transform);\n    },\n    convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n      var tl = Util.applyTransform([rect[0], rect[1]], this.transform);\n      var br = Util.applyTransform([rect[2], rect[3]], this.transform);\n      return [tl[0], tl[1], br[0], br[1]];\n    },\n    convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n      return Util.applyInverseTransform([x, y], this.transform);\n    }\n  };\n  return PageViewport;\n}();\nvar PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\nfunction stringToPDFString(str) {\n  var i,\n      n = str.length,\n      strBuf = [];\n  if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n    for (i = 2; i < n; i += 2) {\n      strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n    }\n  } else {\n    for (i = 0; i < n; ++i) {\n      var code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n  for (var key in obj) {\n    return false;\n  }\n  return true;\n}\nfunction isBool(v) {\n  return typeof v === 'boolean';\n}\nfunction isNum(v) {\n  return typeof v === 'number';\n}\nfunction isString(v) {\n  return typeof v === 'string';\n}\nfunction isArrayBuffer(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n  return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction createPromiseCapability() {\n  var capability = {};\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = resolve;\n    capability.reject = reject;\n  });\n  return capability;\n}\nvar createBlob = function createBlob(data, contentType) {\n  if (typeof Blob !== 'undefined') {\n    return new Blob([data], { type: contentType });\n  }\n  throw new Error('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  return function createObjectURL(data, contentType) {\n    var forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n    if (!forceDataSchema && URL.createObjectURL) {\n      var blob = createBlob(data, contentType);\n      return URL.createObjectURL(blob);\n    }\n    var buffer = 'data:' + contentType + ';base64,';\n    for (var i = 0, ii = data.length; i < ii; i += 3) {\n      var b1 = data[i] & 0xFF;\n      var b2 = data[i + 1] & 0xFF;\n      var b3 = data[i + 2] & 0xFF;\n      var d1 = b1 >> 2,\n          d2 = (b1 & 3) << 4 | b2 >> 4;\n      var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n      var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n}();\nfunction resolveCall(fn, args) {\n  var thisArg = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  if (!fn) {\n    return Promise.resolve(undefined);\n  }\n  return new Promise(function (resolve, reject) {\n    resolve(fn.apply(thisArg, args));\n  });\n}\nfunction wrapReason(reason) {\n  if ((typeof reason === 'undefined' ? 'undefined' : _typeof(reason)) !== 'object') {\n    return reason;\n  }\n  switch (reason.name) {\n    case 'AbortException':\n      return new AbortException(reason.message);\n    case 'MissingPDFException':\n      return new MissingPDFException(reason.message);\n    case 'UnexpectedResponseException':\n      return new UnexpectedResponseException(reason.message, reason.status);\n    default:\n      return new UnknownErrorException(reason.message, reason.details);\n  }\n}\nfunction makeReasonSerializable(reason) {\n  if (!(reason instanceof Error) || reason instanceof AbortException || reason instanceof MissingPDFException || reason instanceof UnexpectedResponseException || reason instanceof UnknownErrorException) {\n    return reason;\n  }\n  return new UnknownErrorException(reason.message, reason.toString());\n}\nfunction resolveOrReject(capability, success, reason) {\n  if (success) {\n    capability.resolve();\n  } else {\n    capability.reject(reason);\n  }\n}\nfunction finalize(promise) {\n  return Promise.resolve(promise).catch(function () {});\n}\nfunction MessageHandler(sourceName, targetName, comObj) {\n  var _this = this;\n\n  this.sourceName = sourceName;\n  this.targetName = targetName;\n  this.comObj = comObj;\n  this.callbackId = 1;\n  this.streamId = 1;\n  this.postMessageTransfers = true;\n  this.streamSinks = Object.create(null);\n  this.streamControllers = Object.create(null);\n  var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n  var ah = this.actionHandler = Object.create(null);\n  this._onComObjOnMessage = function (event) {\n    var data = event.data;\n    if (data.targetName !== _this.sourceName) {\n      return;\n    }\n    if (data.stream) {\n      _this._processStreamMessage(data);\n    } else if (data.isReply) {\n      var callbackId = data.callbackId;\n      if (data.callbackId in callbacksCapabilities) {\n        var callback = callbacksCapabilities[callbackId];\n        delete callbacksCapabilities[callbackId];\n        if ('error' in data) {\n          callback.reject(wrapReason(data.error));\n        } else {\n          callback.resolve(data.data);\n        }\n      } else {\n        throw new Error('Cannot resolve callback ' + callbackId);\n      }\n    } else if (data.action in ah) {\n      var action = ah[data.action];\n      if (data.callbackId) {\n        var _sourceName = _this.sourceName;\n        var _targetName = data.sourceName;\n        Promise.resolve().then(function () {\n          return action[0].call(action[1], data.data);\n        }).then(function (result) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            data: result\n          });\n        }, function (reason) {\n          comObj.postMessage({\n            sourceName: _sourceName,\n            targetName: _targetName,\n            isReply: true,\n            callbackId: data.callbackId,\n            error: makeReasonSerializable(reason)\n          });\n        });\n      } else if (data.streamId) {\n        _this._createStreamSink(data);\n      } else {\n        action[0].call(action[1], data.data);\n      }\n    } else {\n      throw new Error('Unknown action from worker: ' + data.action);\n    }\n  };\n  comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n  on: function on(actionName, handler, scope) {\n    var ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error('There is already an actionName called \"' + actionName + '\"');\n    }\n    ah[actionName] = [handler, scope];\n  },\n  send: function send(actionName, data, transfers) {\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data\n    };\n    this.postMessage(message, transfers);\n  },\n  sendWithPromise: function sendWithPromise(actionName, data, transfers) {\n    var callbackId = this.callbackId++;\n    var message = {\n      sourceName: this.sourceName,\n      targetName: this.targetName,\n      action: actionName,\n      data: data,\n      callbackId: callbackId\n    };\n    var capability = createPromiseCapability();\n    this.callbacksCapabilities[callbackId] = capability;\n    try {\n      this.postMessage(message, transfers);\n    } catch (e) {\n      capability.reject(e);\n    }\n    return capability.promise;\n  },\n  sendWithStream: function sendWithStream(actionName, data, queueingStrategy, transfers) {\n    var _this2 = this;\n\n    var streamId = this.streamId++;\n    var sourceName = this.sourceName;\n    var targetName = this.targetName;\n    return new _streams_polyfill.ReadableStream({\n      start: function start(controller) {\n        var startCapability = createPromiseCapability();\n        _this2.streamControllers[streamId] = {\n          controller: controller,\n          startCall: startCapability,\n          isClosed: false\n        };\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          action: actionName,\n          streamId: streamId,\n          data: data,\n          desiredSize: controller.desiredSize\n        });\n        return startCapability.promise;\n      },\n      pull: function pull(controller) {\n        var pullCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].pullCall = pullCapability;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'pull',\n          streamId: streamId,\n          desiredSize: controller.desiredSize\n        });\n        return pullCapability.promise;\n      },\n      cancel: function cancel(reason) {\n        var cancelCapability = createPromiseCapability();\n        _this2.streamControllers[streamId].cancelCall = cancelCapability;\n        _this2.streamControllers[streamId].isClosed = true;\n        _this2.postMessage({\n          sourceName: sourceName,\n          targetName: targetName,\n          stream: 'cancel',\n          reason: reason,\n          streamId: streamId\n        });\n        return cancelCapability.promise;\n      }\n    }, queueingStrategy);\n  },\n  _createStreamSink: function _createStreamSink(data) {\n    var _this3 = this;\n\n    var self = this;\n    var action = this.actionHandler[data.action];\n    var streamId = data.streamId;\n    var desiredSize = data.desiredSize;\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var capability = createPromiseCapability();\n    var sendStreamRequest = function sendStreamRequest(_ref) {\n      var stream = _ref.stream,\n          chunk = _ref.chunk,\n          transfers = _ref.transfers,\n          success = _ref.success,\n          reason = _ref.reason;\n\n      _this3.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        streamId: streamId,\n        chunk: chunk,\n        success: success,\n        reason: reason\n      }, transfers);\n    };\n    var streamSink = {\n      enqueue: function enqueue(chunk) {\n        var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n        var transfers = arguments[2];\n\n        if (this.isCancelled) {\n          return;\n        }\n        var lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        sendStreamRequest({\n          stream: 'enqueue',\n          chunk: chunk,\n          transfers: transfers\n        });\n      },\n      close: function close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({ stream: 'close' });\n        delete self.streamSinks[streamId];\n      },\n      error: function error(reason) {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        sendStreamRequest({\n          stream: 'error',\n          reason: reason\n        });\n      },\n\n      sinkCapability: capability,\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: desiredSize,\n      ready: null\n    };\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    resolveCall(action[0], [data.data, streamSink], action[1]).then(function () {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: true\n      });\n    }, function (reason) {\n      sendStreamRequest({\n        stream: 'start_complete',\n        success: false,\n        reason: reason\n      });\n    });\n  },\n  _processStreamMessage: function _processStreamMessage(data) {\n    var _this4 = this;\n\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    var streamId = data.streamId;\n    var sendStreamResponse = function sendStreamResponse(_ref2) {\n      var stream = _ref2.stream,\n          success = _ref2.success,\n          reason = _ref2.reason;\n\n      _this4.comObj.postMessage({\n        sourceName: sourceName,\n        targetName: targetName,\n        stream: stream,\n        success: success,\n        streamId: streamId,\n        reason: reason\n      });\n    };\n    var deleteStreamController = function deleteStreamController() {\n      Promise.all([_this4.streamControllers[data.streamId].startCall, _this4.streamControllers[data.streamId].pullCall, _this4.streamControllers[data.streamId].cancelCall].map(function (capability) {\n        return capability && finalize(capability.promise);\n      })).then(function () {\n        delete _this4.streamControllers[data.streamId];\n      });\n    };\n    switch (data.stream) {\n      case 'start_complete':\n        resolveOrReject(this.streamControllers[data.streamId].startCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull_complete':\n        resolveOrReject(this.streamControllers[data.streamId].pullCall, data.success, wrapReason(data.reason));\n        break;\n      case 'pull':\n        if (!this.streamSinks[data.streamId]) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n          break;\n        }\n        if (this.streamSinks[data.streamId].desiredSize <= 0 && data.desiredSize > 0) {\n          this.streamSinks[data.streamId].sinkCapability.resolve();\n        }\n        this.streamSinks[data.streamId].desiredSize = data.desiredSize;\n        resolveCall(this.streamSinks[data.streamId].onPull).then(function () {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'pull_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        break;\n      case 'enqueue':\n        assert(this.streamControllers[data.streamId], 'enqueue should have stream controller');\n        if (!this.streamControllers[data.streamId].isClosed) {\n          this.streamControllers[data.streamId].controller.enqueue(data.chunk);\n        }\n        break;\n      case 'close':\n        assert(this.streamControllers[data.streamId], 'close should have stream controller');\n        if (this.streamControllers[data.streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[data.streamId].isClosed = true;\n        this.streamControllers[data.streamId].controller.close();\n        deleteStreamController();\n        break;\n      case 'error':\n        assert(this.streamControllers[data.streamId], 'error should have stream controller');\n        this.streamControllers[data.streamId].controller.error(wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel_complete':\n        resolveOrReject(this.streamControllers[data.streamId].cancelCall, data.success, wrapReason(data.reason));\n        deleteStreamController();\n        break;\n      case 'cancel':\n        if (!this.streamSinks[data.streamId]) {\n          break;\n        }\n        resolveCall(this.streamSinks[data.streamId].onCancel, [wrapReason(data.reason)]).then(function () {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: true\n          });\n        }, function (reason) {\n          sendStreamResponse({\n            stream: 'cancel_complete',\n            success: false,\n            reason: reason\n          });\n        });\n        this.streamSinks[data.streamId].sinkCapability.reject(wrapReason(data.reason));\n        this.streamSinks[data.streamId].isCancelled = true;\n        delete this.streamSinks[data.streamId];\n        break;\n      default:\n        throw new Error('Unexpected stream case');\n    }\n  },\n  postMessage: function postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  },\n  destroy: function destroy() {\n    this.comObj.removeEventListener('message', this._onComObjOnMessage);\n  }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n  var img = new Image();\n  img.onload = function loadJpegStream_onloadClosure() {\n    objs.resolve(id, img);\n  };\n  img.onerror = function loadJpegStream_onerrorClosure() {\n    objs.resolve(id, null);\n    warn('Error during JPEG image loading');\n  };\n  img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.AbortException = AbortException;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NativeImageDecoding = NativeImageDecoding;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.FormatError = FormatError;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.info = info;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.ReadableStream = _streams_polyfill.ReadableStream;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\nexports.unreachable = unreachable;\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function (it) {\n  return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) === 'object' ? it !== null : typeof it === 'function';\n};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar store = __w_pdfjs_require__(49)('wks');\nvar uid = __w_pdfjs_require__(22);\nvar _Symbol = __w_pdfjs_require__(5).Symbol;\nvar USE_SYMBOL = typeof _Symbol == 'function';\nvar $exports = module.exports = function (name) {\n  return store[name] || (store[name] = USE_SYMBOL && _Symbol[name] || (USE_SYMBOL ? _Symbol : uid)('Symbol.' + name));\n};\n$exports.store = store;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = module.exports = typeof window != 'undefined' && window.Math == Math ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\nif (typeof __g == 'number') __g = global;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar core = __w_pdfjs_require__(7);\nvar hide = __w_pdfjs_require__(12);\nvar redefine = __w_pdfjs_require__(10);\nvar ctx = __w_pdfjs_require__(11);\nvar PROTOTYPE = 'prototype';\nvar $export = function $export(type, name, source) {\n  var IS_FORCED = type & $export.F;\n  var IS_GLOBAL = type & $export.G;\n  var IS_STATIC = type & $export.S;\n  var IS_PROTO = type & $export.P;\n  var IS_BIND = type & $export.B;\n  var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];\n  var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});\n  var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});\n  var key, own, out, exp;\n  if (IS_GLOBAL) source = name;\n  for (key in source) {\n    own = !IS_FORCED && target && target[key] !== undefined;\n    out = (own ? target : source)[key];\n    exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n    if (target) redefine(target, key, out, type & $export.U);\n    if (exports[key] != out) hide(exports, key, exp);\n    if (IS_PROTO && expProto[key] != out) expProto[key] = out;\n  }\n};\nglobal.core = core;\n$export.F = 1;\n$export.G = 2;\n$export.S = 4;\n$export.P = 8;\n$export.B = 16;\n$export.W = 32;\n$export.U = 64;\n$export.R = 128;\nmodule.exports = $export;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar core = module.exports = { version: '2.5.3' };\nif (typeof __e == 'number') __e = core;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it) {\n  if (!isObject(it)) throw TypeError(it + ' is not an object!');\n  return it;\n};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar hasOwnProperty = {}.hasOwnProperty;\nmodule.exports = function (it, key) {\n  return hasOwnProperty.call(it, key);\n};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar SRC = __w_pdfjs_require__(22)('src');\nvar TO_STRING = 'toString';\nvar $toString = Function[TO_STRING];\nvar TPL = ('' + $toString).split(TO_STRING);\n__w_pdfjs_require__(7).inspectSource = function (it) {\n  return $toString.call(it);\n};\n(module.exports = function (O, key, val, safe) {\n  var isFunction = typeof val == 'function';\n  if (isFunction) has(val, 'name') || hide(val, 'name', key);\n  if (O[key] === val) return;\n  if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));\n  if (O === global) {\n    O[key] = val;\n  } else if (!safe) {\n    delete O[key];\n    hide(O, key, val);\n  } else if (O[key]) {\n    O[key] = val;\n  } else {\n    hide(O, key, val);\n  }\n})(Function.prototype, TO_STRING, function toString() {\n  return typeof this == 'function' && this[SRC] || $toString.call(this);\n});\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nmodule.exports = function (fn, that, length) {\n  aFunction(fn);\n  if (that === undefined) return fn;\n  switch (length) {\n    case 1:\n      return function (a) {\n        return fn.call(that, a);\n      };\n    case 2:\n      return function (a, b) {\n        return fn.call(that, a, b);\n      };\n    case 3:\n      return function (a, b, c) {\n        return fn.call(that, a, b, c);\n      };\n  }\n  return function () {\n    return fn.apply(that, arguments);\n  };\n};\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar createDesc = __w_pdfjs_require__(28);\nmodule.exports = __w_pdfjs_require__(13) ? function (object, key, value) {\n  return dP.f(object, key, createDesc(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty({}, 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (e) {\n    return true;\n  }\n};\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar dP = Object.defineProperty;\nexports.f = __w_pdfjs_require__(13) ? Object.defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPrimitive(P, true);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return dP(O, P, Attributes);\n  } catch (e) {}\n  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (typeof it != 'function') throw TypeError(it + ' is not a function!');\n  return it;\n};\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar IObject = __w_pdfjs_require__(29);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return IObject(defined(it));\n};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toString = {}.toString;\nmodule.exports = function (it) {\n  return toString.call(it).slice(8, -1);\n};\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = {};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar id = 0;\nvar px = Math.random();\nmodule.exports = function (key) {\n  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $keys = __w_pdfjs_require__(93);\nvar enumBugKeys = __w_pdfjs_require__(53);\nmodule.exports = Object.keys || function keys(O) {\n  return $keys(O, enumBugKeys);\n};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar def = __w_pdfjs_require__(15).f;\nvar has = __w_pdfjs_require__(9);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nmodule.exports = function (it, tag, stat) {\n  if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {\n    configurable: true,\n    value: tag\n  });\n};\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar call = __w_pdfjs_require__(98);\nvar isArrayIter = __w_pdfjs_require__(99);\nvar anObject = __w_pdfjs_require__(8);\nvar toLength = __w_pdfjs_require__(31);\nvar getIterFn = __w_pdfjs_require__(100);\nvar BREAK = {};\nvar RETURN = {};\nvar _exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {\n  var iterFn = ITERATOR ? function () {\n    return iterable;\n  } : getIterFn(iterable);\n  var f = ctx(fn, that, entries ? 2 : 1);\n  var index = 0;\n  var length, step, iterator, result;\n  if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');\n  if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {\n    result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);\n    if (result === BREAK || result === RETURN) return result;\n  } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {\n    result = call(iterator, f, step.value, entries);\n    if (result === BREAK || result === RETURN) return result;\n  }\n};\n_exports.BREAK = BREAK;\n_exports.RETURN = RETURN;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt_stream = __w_pdfjs_require__(129);\n\nvar _jbig2_stream = __w_pdfjs_require__(130);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx_stream = __w_pdfjs_require__(133);\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar document = __w_pdfjs_require__(5).document;\nvar is = isObject(document) && isObject(document.createElement);\nmodule.exports = function (it) {\n  return is ? document.createElement(it) : {};\n};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {\n  return cof(it) == 'String' ? it.split('') : Object(it);\n};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it) {\n  if (it == undefined) throw TypeError(\"Can't call method on  \" + it);\n  return it;\n};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar min = Math.min;\nmodule.exports = function (it) {\n  return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0;\n};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ceil = Math.ceil;\nvar floor = Math.floor;\nmodule.exports = function (it) {\n  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nvar TAG = __w_pdfjs_require__(4)('toStringTag');\nvar ARG = cof(function () {\n  return arguments;\n}()) == 'Arguments';\nvar tryGet = function tryGet(it, key) {\n  try {\n    return it[key];\n  } catch (e) {}\n};\nmodule.exports = function (it) {\n  var O, T, B;\n  return it === undefined ? 'Undefined' : it === null ? 'Null' : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T : ARG ? cof(O) : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar shared = __w_pdfjs_require__(49)('keys');\nvar uid = __w_pdfjs_require__(22);\nmodule.exports = function (key) {\n  return shared[key] || (shared[key] = uid(key));\n};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (it) {\n  return Object(defined(it));\n};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (it, Constructor, name, forbiddenField) {\n  if (!(it instanceof Constructor) || forbiddenField !== undefined && forbiddenField in it) {\n    throw TypeError(name + ': incorrect invocation!');\n  }\n  return it;\n};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar aFunction = __w_pdfjs_require__(16);\nfunction PromiseCapability(C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aFunction(resolve);\n  this.reject = aFunction(reject);\n}\nmodule.exports.f = function (C) {\n  return new PromiseCapability(C);\n};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefine = __w_pdfjs_require__(10);\nmodule.exports = function (target, src, safe) {\n  for (var key in src) {\n    redefine(target, key, src[key], safe);\n  }return target;\n};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar META = __w_pdfjs_require__(22)('meta');\nvar isObject = __w_pdfjs_require__(3);\nvar has = __w_pdfjs_require__(9);\nvar setDesc = __w_pdfjs_require__(15).f;\nvar id = 0;\nvar isExtensible = Object.isExtensible || function () {\n  return true;\n};\nvar FREEZE = !__w_pdfjs_require__(14)(function () {\n  return isExtensible(Object.preventExtensions({}));\n});\nvar setMeta = function setMeta(it) {\n  setDesc(it, META, {\n    value: {\n      i: 'O' + ++id,\n      w: {}\n    }\n  });\n};\nvar fastKey = function fastKey(it, create) {\n  if (!isObject(it)) return (typeof it === 'undefined' ? 'undefined' : _typeof(it)) == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return 'F';\n    if (!create) return 'E';\n    setMeta(it);\n  }\n  return it[META].i;\n};\nvar getWeak = function getWeak(it, create) {\n  if (!has(it, META)) {\n    if (!isExtensible(it)) return true;\n    if (!create) return false;\n    setMeta(it);\n  }\n  return it[META].w;\n};\nvar onFreeze = function onFreeze(it) {\n  if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);\n  return it;\n};\nvar meta = module.exports = {\n  KEY: META,\n  NEED: false,\n  fastKey: fastKey,\n  getWeak: getWeak,\n  onFreeze: onFreeze\n};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = {}.propertyIsEnumerable;\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _jpg = __w_pdfjs_require__(132);\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nmodule.exports = function isNodeJS() {\n  return (typeof process === 'undefined' ? 'undefined' : _typeof(process)) === 'object' && process + '' === '[object process]';\n};\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = !__w_pdfjs_require__(13) && !__w_pdfjs_require__(14)(function () {\n  return Object.defineProperty(__w_pdfjs_require__(27)('div'), 'a', {\n    get: function get() {\n      return 7;\n    }\n  }).a != 7;\n});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, S) {\n  if (!isObject(it)) return it;\n  var fn, val;\n  if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;\n  if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;\n  throw TypeError(\"Can't convert object to primitive value\");\n};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toIObject = __w_pdfjs_require__(17);\nvar toLength = __w_pdfjs_require__(31);\nvar toAbsoluteIndex = __w_pdfjs_require__(79);\nmodule.exports = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIObject($this);\n    var length = toLength(O.length);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      if (value != value) return true;\n    } else for (; length > index; index++) {\n      if (IS_INCLUDES || index in O) {\n        if (O[index] === el) return IS_INCLUDES || index || 0;\n      }\n    }return !IS_INCLUDES && -1;\n  };\n};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar UNSCOPABLES = __w_pdfjs_require__(4)('unscopables');\nvar ArrayProto = Array.prototype;\nif (ArrayProto[UNSCOPABLES] == undefined) __w_pdfjs_require__(12)(ArrayProto, UNSCOPABLES, {});\nmodule.exports = function (key) {\n  ArrayProto[UNSCOPABLES][key] = true;\n};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || (global[SHARED] = {});\nmodule.exports = function (key) {\n  return store[key] || (store[key] = {});\n};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar test = {};\ntest[__w_pdfjs_require__(4)('toStringTag')] = 'z';\nif (test + '' != '[object z]') {\n  __w_pdfjs_require__(10)(Object.prototype, 'toString', function toString() {\n    return '[object ' + classof(this) + ']';\n  }, true);\n}\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar hide = __w_pdfjs_require__(12);\nvar has = __w_pdfjs_require__(9);\nvar Iterators = __w_pdfjs_require__(19);\nvar $iterCreate = __w_pdfjs_require__(90);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar getPrototypeOf = __w_pdfjs_require__(94);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar BUGGY = !([].keys && 'next' in [].keys());\nvar FF_ITERATOR = '@@iterator';\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar returnThis = function returnThis() {\n  return this;\n};\nmodule.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {\n  $iterCreate(Constructor, NAME, next);\n  var getMethod = function getMethod(kind) {\n    if (!BUGGY && kind in proto) return proto[kind];\n    switch (kind) {\n      case KEYS:\n        return function keys() {\n          return new Constructor(this, kind);\n        };\n      case VALUES:\n        return function values() {\n          return new Constructor(this, kind);\n        };\n    }\n    return function entries() {\n      return new Constructor(this, kind);\n    };\n  };\n  var TAG = NAME + ' Iterator';\n  var DEF_VALUES = DEFAULT == VALUES;\n  var VALUES_BUG = false;\n  var proto = Base.prototype;\n  var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];\n  var $default = !BUGGY && $native || getMethod(DEFAULT);\n  var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;\n  var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;\n  var methods, key, IteratorPrototype;\n  if ($anyNative) {\n    IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));\n    if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {\n      setToStringTag(IteratorPrototype, TAG, true);\n      if (!LIBRARY && !has(IteratorPrototype, ITERATOR)) hide(IteratorPrototype, ITERATOR, returnThis);\n    }\n  }\n  if (DEF_VALUES && $native && $native.name !== VALUES) {\n    VALUES_BUG = true;\n    $default = function values() {\n      return $native.call(this);\n    };\n  }\n  if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {\n    hide(proto, ITERATOR, $default);\n  }\n  Iterators[NAME] = $default;\n  Iterators[TAG] = returnThis;\n  if (DEFAULT) {\n    methods = {\n      values: DEF_VALUES ? $default : getMethod(VALUES),\n      keys: IS_SET ? $default : getMethod(KEYS),\n      entries: $entries\n    };\n    if (FORCED) for (key in methods) {\n      if (!(key in proto)) redefine(proto, key, methods[key]);\n    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n  }\n  return methods;\n};\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = false;\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = 'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'.split(',');\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar document = __w_pdfjs_require__(5).document;\nmodule.exports = document && document.documentElement;\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $iterators = __w_pdfjs_require__(95);\nvar getKeys = __w_pdfjs_require__(23);\nvar redefine = __w_pdfjs_require__(10);\nvar global = __w_pdfjs_require__(5);\nvar hide = __w_pdfjs_require__(12);\nvar Iterators = __w_pdfjs_require__(19);\nvar wks = __w_pdfjs_require__(4);\nvar ITERATOR = wks('iterator');\nvar TO_STRING_TAG = wks('toStringTag');\nvar ArrayValues = Iterators.Array;\nvar DOMIterables = {\n  CSSRuleList: true,\n  CSSStyleDeclaration: false,\n  CSSValueList: false,\n  ClientRectList: false,\n  DOMRectList: false,\n  DOMStringList: false,\n  DOMTokenList: true,\n  DataTransferItemList: false,\n  FileList: false,\n  HTMLAllCollection: false,\n  HTMLCollection: false,\n  HTMLFormElement: false,\n  HTMLSelectElement: false,\n  MediaList: true,\n  MimeTypeArray: false,\n  NamedNodeMap: false,\n  NodeList: true,\n  PaintRequestList: false,\n  Plugin: false,\n  PluginArray: false,\n  SVGLengthList: false,\n  SVGNumberList: false,\n  SVGPathSegList: false,\n  SVGPointList: false,\n  SVGStringList: false,\n  SVGTransformList: false,\n  SourceBufferList: false,\n  StyleSheetList: true,\n  TextTrackCueList: false,\n  TextTrackList: false,\n  TouchList: false\n};\nfor (var collections = getKeys(DOMIterables), i = 0; i < collections.length; i++) {\n  var NAME = collections[i];\n  var explicit = DOMIterables[NAME];\n  var Collection = global[NAME];\n  var proto = Collection && Collection.prototype;\n  var key;\n  if (proto) {\n    if (!proto[ITERATOR]) hide(proto, ITERATOR, ArrayValues);\n    if (!proto[TO_STRING_TAG]) hide(proto, TO_STRING_TAG, NAME);\n    Iterators[NAME] = ArrayValues;\n    if (explicit) for (key in $iterators) {\n      if (!proto[key]) redefine(proto, key, $iterators[key], true);\n    }\n  }\n}\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar aFunction = __w_pdfjs_require__(16);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (O, D) {\n  var C = anObject(O).constructor;\n  var S;\n  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);\n};\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar invoke = __w_pdfjs_require__(101);\nvar html = __w_pdfjs_require__(54);\nvar cel = __w_pdfjs_require__(27);\nvar global = __w_pdfjs_require__(5);\nvar process = global.process;\nvar setTask = global.setImmediate;\nvar clearTask = global.clearImmediate;\nvar MessageChannel = global.MessageChannel;\nvar Dispatch = global.Dispatch;\nvar counter = 0;\nvar queue = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar defer, channel, port;\nvar run = function run() {\n  var id = +this;\n  if (queue.hasOwnProperty(id)) {\n    var fn = queue[id];\n    delete queue[id];\n    fn();\n  }\n};\nvar listener = function listener(event) {\n  run.call(event.data);\n};\nif (!setTask || !clearTask) {\n  setTask = function setImmediate(fn) {\n    var args = [];\n    var i = 1;\n    while (arguments.length > i) {\n      args.push(arguments[i++]);\n    }queue[++counter] = function () {\n      invoke(typeof fn == 'function' ? fn : Function(fn), args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clearTask = function clearImmediate(id) {\n    delete queue[id];\n  };\n  if (__w_pdfjs_require__(18)(process) == 'process') {\n    defer = function defer(id) {\n      process.nextTick(ctx(run, id, 1));\n    };\n  } else if (Dispatch && Dispatch.now) {\n    defer = function defer(id) {\n      Dispatch.now(ctx(run, id, 1));\n    };\n  } else if (MessageChannel) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = listener;\n    defer = ctx(port.postMessage, port, 1);\n  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {\n    defer = function defer(id) {\n      global.postMessage(id + '', '*');\n    };\n    global.addEventListener('message', listener, false);\n  } else if (ONREADYSTATECHANGE in cel('script')) {\n    defer = function defer(id) {\n      html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run.call(id);\n      };\n    };\n  } else {\n    defer = function defer(id) {\n      setTimeout(ctx(run, id, 1), 0);\n    };\n  }\n}\nmodule.exports = {\n  set: setTask,\n  clear: clearTask\n};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (exec) {\n  try {\n    return {\n      e: false,\n      v: exec()\n    };\n  } catch (e) {\n    return {\n      e: true,\n      v: e\n    };\n  }\n};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nmodule.exports = function (C, x) {\n  anObject(C);\n  if (isObject(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar SAFE_CLOSING = false;\ntry {\n  var riter = [7][ITERATOR]();\n  riter['return'] = function () {\n    SAFE_CLOSING = true;\n  };\n  Array.from(riter, function () {\n    throw 2;\n  });\n} catch (e) {}\nmodule.exports = function (exec, skipClosing) {\n  if (!skipClosing && !SAFE_CLOSING) return false;\n  var safe = false;\n  try {\n    var arr = [7];\n    var iter = arr[ITERATOR]();\n    iter.next = function () {\n      return { done: safe = true };\n    };\n    arr[ITERATOR] = function () {\n      return iter;\n    };\n    exec(arr);\n  } catch (e) {}\n  return safe;\n};\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar ctx = __w_pdfjs_require__(11);\nvar IObject = __w_pdfjs_require__(29);\nvar toObject = __w_pdfjs_require__(35);\nvar toLength = __w_pdfjs_require__(31);\nvar asc = __w_pdfjs_require__(108);\nmodule.exports = function (TYPE, $create) {\n  var IS_MAP = TYPE == 1;\n  var IS_FILTER = TYPE == 2;\n  var IS_SOME = TYPE == 3;\n  var IS_EVERY = TYPE == 4;\n  var IS_FIND_INDEX = TYPE == 6;\n  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;\n  var create = $create || asc;\n  return function ($this, callbackfn, that) {\n    var O = toObject($this);\n    var self = IObject(O);\n    var f = ctx(callbackfn, that, 3);\n    var length = toLength(self.length);\n    var index = 0;\n    var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;\n    var val, res;\n    for (; length > index; index++) {\n      if (NO_HOLES || index in self) {\n        val = self[index];\n        res = f(val, index, O);\n        if (TYPE) {\n          if (IS_MAP) result[index] = res;else if (res) switch (TYPE) {\n            case 3:\n              return true;\n            case 5:\n              return val;\n            case 6:\n              return index;\n            case 2:\n              result.push(val);\n          } else if (IS_EVERY) return false;\n        }\n      }\n    }return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;\n  };\n};\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nmodule.exports = function (it, TYPE) {\n  if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');\n  return it;\n};\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _charsets = __w_pdfjs_require__(138);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getLookupTableFactory = __w_pdfjs_require__(0).getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\xA8'] = ' \\u0308';\n  t['\\xAF'] = ' \\u0304';\n  t['\\xB4'] = ' \\u0301';\n  t['\\xB5'] = '\\u03BC';\n  t['\\xB8'] = ' \\u0327';\n  t['\\u0132'] = 'IJ';\n  t['\\u0133'] = 'ij';\n  t['\\u013F'] = 'L\\xB7';\n  t['\\u0140'] = 'l\\xB7';\n  t['\\u0149'] = '\\u02BCn';\n  t['\\u017F'] = 's';\n  t['\\u01C4'] = 'D\\u017D';\n  t['\\u01C5'] = 'D\\u017E';\n  t['\\u01C6'] = 'd\\u017E';\n  t['\\u01C7'] = 'LJ';\n  t['\\u01C8'] = 'Lj';\n  t['\\u01C9'] = 'lj';\n  t['\\u01CA'] = 'NJ';\n  t['\\u01CB'] = 'Nj';\n  t['\\u01CC'] = 'nj';\n  t['\\u01F1'] = 'DZ';\n  t['\\u01F2'] = 'Dz';\n  t['\\u01F3'] = 'dz';\n  t['\\u02D8'] = ' \\u0306';\n  t['\\u02D9'] = ' \\u0307';\n  t['\\u02DA'] = ' \\u030A';\n  t['\\u02DB'] = ' \\u0328';\n  t['\\u02DC'] = ' \\u0303';\n  t['\\u02DD'] = ' \\u030B';\n  t['\\u037A'] = ' \\u0345';\n  t['\\u0384'] = ' \\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = 'a\\u02BE';\n  t['\\u1FBD'] = ' \\u0313';\n  t['\\u1FBF'] = ' \\u0313';\n  t['\\u1FC0'] = ' \\u0342';\n  t['\\u1FFE'] = ' \\u0314';\n  t['\\u2002'] = ' ';\n  t['\\u2003'] = ' ';\n  t['\\u2004'] = ' ';\n  t['\\u2005'] = ' ';\n  t['\\u2006'] = ' ';\n  t['\\u2008'] = ' ';\n  t['\\u2009'] = ' ';\n  t['\\u200A'] = ' ';\n  t['\\u2017'] = ' \\u0333';\n  t['\\u2024'] = '.';\n  t['\\u2025'] = '..';\n  t['\\u2026'] = '...';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '!!';\n  t['\\u203E'] = ' \\u0305';\n  t['\\u2047'] = '??';\n  t['\\u2048'] = '?!';\n  t['\\u2049'] = '!?';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = ' ';\n  t['\\u20A8'] = 'Rs';\n  t['\\u2100'] = 'a/c';\n  t['\\u2101'] = 'a/s';\n  t['\\u2103'] = '\\xB0C';\n  t['\\u2105'] = 'c/o';\n  t['\\u2106'] = 'c/u';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\xB0F';\n  t['\\u2116'] = 'No';\n  t['\\u2121'] = 'TEL';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = 'FAX';\n  t['\\u2160'] = 'I';\n  t['\\u2161'] = 'II';\n  t['\\u2162'] = 'III';\n  t['\\u2163'] = 'IV';\n  t['\\u2164'] = 'V';\n  t['\\u2165'] = 'VI';\n  t['\\u2166'] = 'VII';\n  t['\\u2167'] = 'VIII';\n  t['\\u2168'] = 'IX';\n  t['\\u2169'] = 'X';\n  t['\\u216A'] = 'XI';\n  t['\\u216B'] = 'XII';\n  t['\\u216C'] = 'L';\n  t['\\u216D'] = 'C';\n  t['\\u216E'] = 'D';\n  t['\\u216F'] = 'M';\n  t['\\u2170'] = 'i';\n  t['\\u2171'] = 'ii';\n  t['\\u2172'] = 'iii';\n  t['\\u2173'] = 'iv';\n  t['\\u2174'] = 'v';\n  t['\\u2175'] = 'vi';\n  t['\\u2176'] = 'vii';\n  t['\\u2177'] = 'viii';\n  t['\\u2178'] = 'ix';\n  t['\\u2179'] = 'x';\n  t['\\u217A'] = 'xi';\n  t['\\u217B'] = 'xii';\n  t['\\u217C'] = 'l';\n  t['\\u217D'] = 'c';\n  t['\\u217E'] = 'd';\n  t['\\u217F'] = 'm';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '(1)';\n  t['\\u2475'] = '(2)';\n  t['\\u2476'] = '(3)';\n  t['\\u2477'] = '(4)';\n  t['\\u2478'] = '(5)';\n  t['\\u2479'] = '(6)';\n  t['\\u247A'] = '(7)';\n  t['\\u247B'] = '(8)';\n  t['\\u247C'] = '(9)';\n  t['\\u247D'] = '(10)';\n  t['\\u247E'] = '(11)';\n  t['\\u247F'] = '(12)';\n  t['\\u2480'] = '(13)';\n  t['\\u2481'] = '(14)';\n  t['\\u2482'] = '(15)';\n  t['\\u2483'] = '(16)';\n  t['\\u2484'] = '(17)';\n  t['\\u2485'] = '(18)';\n  t['\\u2486'] = '(19)';\n  t['\\u2487'] = '(20)';\n  t['\\u2488'] = '1.';\n  t['\\u2489'] = '2.';\n  t['\\u248A'] = '3.';\n  t['\\u248B'] = '4.';\n  t['\\u248C'] = '5.';\n  t['\\u248D'] = '6.';\n  t['\\u248E'] = '7.';\n  t['\\u248F'] = '8.';\n  t['\\u2490'] = '9.';\n  t['\\u2491'] = '10.';\n  t['\\u2492'] = '11.';\n  t['\\u2493'] = '12.';\n  t['\\u2494'] = '13.';\n  t['\\u2495'] = '14.';\n  t['\\u2496'] = '15.';\n  t['\\u2497'] = '16.';\n  t['\\u2498'] = '17.';\n  t['\\u2499'] = '18.';\n  t['\\u249A'] = '19.';\n  t['\\u249B'] = '20.';\n  t['\\u249C'] = '(a)';\n  t['\\u249D'] = '(b)';\n  t['\\u249E'] = '(c)';\n  t['\\u249F'] = '(d)';\n  t['\\u24A0'] = '(e)';\n  t['\\u24A1'] = '(f)';\n  t['\\u24A2'] = '(g)';\n  t['\\u24A3'] = '(h)';\n  t['\\u24A4'] = '(i)';\n  t['\\u24A5'] = '(j)';\n  t['\\u24A6'] = '(k)';\n  t['\\u24A7'] = '(l)';\n  t['\\u24A8'] = '(m)';\n  t['\\u24A9'] = '(n)';\n  t['\\u24AA'] = '(o)';\n  t['\\u24AB'] = '(p)';\n  t['\\u24AC'] = '(q)';\n  t['\\u24AD'] = '(r)';\n  t['\\u24AE'] = '(s)';\n  t['\\u24AF'] = '(t)';\n  t['\\u24B0'] = '(u)';\n  t['\\u24B1'] = '(v)';\n  t['\\u24B2'] = '(w)';\n  t['\\u24B3'] = '(x)';\n  t['\\u24B4'] = '(y)';\n  t['\\u24B5'] = '(z)';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '::=';\n  t['\\u2A75'] = '==';\n  t['\\u2A76'] = '===';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = ' \\u3099';\n  t['\\u309C'] = ' \\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '(\\u1100)';\n  t['\\u3201'] = '(\\u1102)';\n  t['\\u3202'] = '(\\u1103)';\n  t['\\u3203'] = '(\\u1105)';\n  t['\\u3204'] = '(\\u1106)';\n  t['\\u3205'] = '(\\u1107)';\n  t['\\u3206'] = '(\\u1109)';\n  t['\\u3207'] = '(\\u110B)';\n  t['\\u3208'] = '(\\u110C)';\n  t['\\u3209'] = '(\\u110E)';\n  t['\\u320A'] = '(\\u110F)';\n  t['\\u320B'] = '(\\u1110)';\n  t['\\u320C'] = '(\\u1111)';\n  t['\\u320D'] = '(\\u1112)';\n  t['\\u320E'] = '(\\u1100\\u1161)';\n  t['\\u320F'] = '(\\u1102\\u1161)';\n  t['\\u3210'] = '(\\u1103\\u1161)';\n  t['\\u3211'] = '(\\u1105\\u1161)';\n  t['\\u3212'] = '(\\u1106\\u1161)';\n  t['\\u3213'] = '(\\u1107\\u1161)';\n  t['\\u3214'] = '(\\u1109\\u1161)';\n  t['\\u3215'] = '(\\u110B\\u1161)';\n  t['\\u3216'] = '(\\u110C\\u1161)';\n  t['\\u3217'] = '(\\u110E\\u1161)';\n  t['\\u3218'] = '(\\u110F\\u1161)';\n  t['\\u3219'] = '(\\u1110\\u1161)';\n  t['\\u321A'] = '(\\u1111\\u1161)';\n  t['\\u321B'] = '(\\u1112\\u1161)';\n  t['\\u321C'] = '(\\u110C\\u116E)';\n  t['\\u321D'] = '(\\u110B\\u1169\\u110C\\u1165\\u11AB)';\n  t['\\u321E'] = '(\\u110B\\u1169\\u1112\\u116E)';\n  t['\\u3220'] = '(\\u4E00)';\n  t['\\u3221'] = '(\\u4E8C)';\n  t['\\u3222'] = '(\\u4E09)';\n  t['\\u3223'] = '(\\u56DB)';\n  t['\\u3224'] = '(\\u4E94)';\n  t['\\u3225'] = '(\\u516D)';\n  t['\\u3226'] = '(\\u4E03)';\n  t['\\u3227'] = '(\\u516B)';\n  t['\\u3228'] = '(\\u4E5D)';\n  t['\\u3229'] = '(\\u5341)';\n  t['\\u322A'] = '(\\u6708)';\n  t['\\u322B'] = '(\\u706B)';\n  t['\\u322C'] = '(\\u6C34)';\n  t['\\u322D'] = '(\\u6728)';\n  t['\\u322E'] = '(\\u91D1)';\n  t['\\u322F'] = '(\\u571F)';\n  t['\\u3230'] = '(\\u65E5)';\n  t['\\u3231'] = '(\\u682A)';\n  t['\\u3232'] = '(\\u6709)';\n  t['\\u3233'] = '(\\u793E)';\n  t['\\u3234'] = '(\\u540D)';\n  t['\\u3235'] = '(\\u7279)';\n  t['\\u3236'] = '(\\u8CA1)';\n  t['\\u3237'] = '(\\u795D)';\n  t['\\u3238'] = '(\\u52B4)';\n  t['\\u3239'] = '(\\u4EE3)';\n  t['\\u323A'] = '(\\u547C)';\n  t['\\u323B'] = '(\\u5B66)';\n  t['\\u323C'] = '(\\u76E3)';\n  t['\\u323D'] = '(\\u4F01)';\n  t['\\u323E'] = '(\\u8CC7)';\n  t['\\u323F'] = '(\\u5354)';\n  t['\\u3240'] = '(\\u796D)';\n  t['\\u3241'] = '(\\u4F11)';\n  t['\\u3242'] = '(\\u81EA)';\n  t['\\u3243'] = '(\\u81F3)';\n  t['\\u32C0'] = '1\\u6708';\n  t['\\u32C1'] = '2\\u6708';\n  t['\\u32C2'] = '3\\u6708';\n  t['\\u32C3'] = '4\\u6708';\n  t['\\u32C4'] = '5\\u6708';\n  t['\\u32C5'] = '6\\u6708';\n  t['\\u32C6'] = '7\\u6708';\n  t['\\u32C7'] = '8\\u6708';\n  t['\\u32C8'] = '9\\u6708';\n  t['\\u32C9'] = '10\\u6708';\n  t['\\u32CA'] = '11\\u6708';\n  t['\\u32CB'] = '12\\u6708';\n  t['\\u3358'] = '0\\u70B9';\n  t['\\u3359'] = '1\\u70B9';\n  t['\\u335A'] = '2\\u70B9';\n  t['\\u335B'] = '3\\u70B9';\n  t['\\u335C'] = '4\\u70B9';\n  t['\\u335D'] = '5\\u70B9';\n  t['\\u335E'] = '6\\u70B9';\n  t['\\u335F'] = '7\\u70B9';\n  t['\\u3360'] = '8\\u70B9';\n  t['\\u3361'] = '9\\u70B9';\n  t['\\u3362'] = '10\\u70B9';\n  t['\\u3363'] = '11\\u70B9';\n  t['\\u3364'] = '12\\u70B9';\n  t['\\u3365'] = '13\\u70B9';\n  t['\\u3366'] = '14\\u70B9';\n  t['\\u3367'] = '15\\u70B9';\n  t['\\u3368'] = '16\\u70B9';\n  t['\\u3369'] = '17\\u70B9';\n  t['\\u336A'] = '18\\u70B9';\n  t['\\u336B'] = '19\\u70B9';\n  t['\\u336C'] = '20\\u70B9';\n  t['\\u336D'] = '21\\u70B9';\n  t['\\u336E'] = '22\\u70B9';\n  t['\\u336F'] = '23\\u70B9';\n  t['\\u3370'] = '24\\u70B9';\n  t['\\u33E0'] = '1\\u65E5';\n  t['\\u33E1'] = '2\\u65E5';\n  t['\\u33E2'] = '3\\u65E5';\n  t['\\u33E3'] = '4\\u65E5';\n  t['\\u33E4'] = '5\\u65E5';\n  t['\\u33E5'] = '6\\u65E5';\n  t['\\u33E6'] = '7\\u65E5';\n  t['\\u33E7'] = '8\\u65E5';\n  t['\\u33E8'] = '9\\u65E5';\n  t['\\u33E9'] = '10\\u65E5';\n  t['\\u33EA'] = '11\\u65E5';\n  t['\\u33EB'] = '12\\u65E5';\n  t['\\u33EC'] = '13\\u65E5';\n  t['\\u33ED'] = '14\\u65E5';\n  t['\\u33EE'] = '15\\u65E5';\n  t['\\u33EF'] = '16\\u65E5';\n  t['\\u33F0'] = '17\\u65E5';\n  t['\\u33F1'] = '18\\u65E5';\n  t['\\u33F2'] = '19\\u65E5';\n  t['\\u33F3'] = '20\\u65E5';\n  t['\\u33F4'] = '21\\u65E5';\n  t['\\u33F5'] = '22\\u65E5';\n  t['\\u33F6'] = '23\\u65E5';\n  t['\\u33F7'] = '24\\u65E5';\n  t['\\u33F8'] = '25\\u65E5';\n  t['\\u33F9'] = '26\\u65E5';\n  t['\\u33FA'] = '27\\u65E5';\n  t['\\u33FB'] = '28\\u65E5';\n  t['\\u33FC'] = '29\\u65E5';\n  t['\\u33FD'] = '30\\u65E5';\n  t['\\u33FE'] = '31\\u65E5';\n  t['\\uFB00'] = 'ff';\n  t['\\uFB01'] = 'fi';\n  t['\\uFB02'] = 'fl';\n  t['\\uFB03'] = 'ffi';\n  t['\\uFB04'] = 'ffl';\n  t['\\uFB05'] = '\\u017Ft';\n  t['\\uFB06'] = 'st';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = ' \\u064C\\u0651';\n  t['\\uFC5F'] = ' \\u064D\\u0651';\n  t['\\uFC60'] = ' \\u064E\\u0651';\n  t['\\uFC61'] = ' \\u064F\\u0651';\n  t['\\uFC62'] = ' \\u0650\\u0651';\n  t['\\uFC63'] = ' \\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '_';\n  t['\\uFE4E'] = '_';\n  t['\\uFE4F'] = '_';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ps_parser = __w_pdfjs_require__(144);\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pdfjsVersion = '2.0.305';\nvar pdfjsBuild = '9c6a8801';\nvar pdfjsCoreWorker = __w_pdfjs_require__(74);\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _pdf_manager = __w_pdfjs_require__(127);\n\nvar _is_node = __w_pdfjs_require__(44);\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.305';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n  var globalScope = __w_pdfjs_require__(76);\n  var isNodeJS = __w_pdfjs_require__(44);\n  var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n  var isAndroid = /Android/.test(userAgent);\n  var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n  var isIE = userAgent.indexOf('Trident') >= 0;\n  var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n  var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n  var hasDOM = (typeof window === 'undefined' ? 'undefined' : _typeof(window)) === 'object' && (typeof document === 'undefined' ? 'undefined' : _typeof(document)) === 'object';\n  if (typeof PDFJS === 'undefined') {\n    globalScope.PDFJS = {};\n  }\n  PDFJS.compatibilityChecked = true;\n  (function checkNodeBtoa() {\n    if (globalScope.btoa || !isNodeJS()) {\n      return;\n    }\n    globalScope.btoa = function (chars) {\n      return Buffer.from(chars, 'binary').toString('base64');\n    };\n  })();\n  (function checkNodeAtob() {\n    if (globalScope.atob || !isNodeJS()) {\n      return;\n    }\n    globalScope.atob = function (input) {\n      return Buffer.from(input, 'base64').toString('binary');\n    };\n  })();\n  (function checkOnBlobSupport() {\n    if (isIE || isIOSChrome) {\n      PDFJS.disableCreateObjectURL = true;\n    }\n  })();\n  (function checkNavigatorLanguage() {\n    if (typeof navigator === 'undefined') {\n      return;\n    }\n    if ('language' in navigator) {\n      return;\n    }\n    PDFJS.locale = navigator.userLanguage || 'en-US';\n  })();\n  (function checkRangeRequests() {\n    if (isSafari || isIOS) {\n      PDFJS.disableRange = true;\n      PDFJS.disableStream = true;\n    }\n  })();\n  (function checkCanvasSizeLimitation() {\n    if (isIOS || isAndroid) {\n      PDFJS.maxCanvasPixels = 5242880;\n    }\n  })();\n  (function checkFullscreenSupport() {\n    if (!hasDOM) {\n      return;\n    }\n    if (isIE && window.parent !== window) {\n      PDFJS.disableFullscreen = true;\n    }\n  })();\n  (function checkCurrentScript() {\n    if (!hasDOM) {\n      return;\n    }\n    if ('currentScript' in document) {\n      return;\n    }\n    Object.defineProperty(document, 'currentScript', {\n      get: function get() {\n        var scripts = document.getElementsByTagName('script');\n        return scripts[scripts.length - 1];\n      },\n\n      enumerable: true,\n      configurable: true\n    });\n  })();\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== 'undefined') {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    Array.prototype.includes = __w_pdfjs_require__(77);\n  })();\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = __w_pdfjs_require__(80);\n  })();\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = __w_pdfjs_require__(82);\n  })();\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = __w_pdfjs_require__(84);\n  })();\n  (function checkPromise() {\n    if (globalScope.Promise) {\n      return;\n    }\n    globalScope.Promise = __w_pdfjs_require__(87);\n  })();\n  (function checkWeakMap() {\n    if (globalScope.WeakMap) {\n      return;\n    }\n    globalScope.WeakMap = __w_pdfjs_require__(106);\n  })();\n  (function checkURLConstructor() {\n    var hasWorkingUrl = false;\n    try {\n      if (typeof URL === 'function' && _typeof(URL.prototype) === 'object' && 'origin' in URL.prototype) {\n        var u = new URL('b', 'http://a');\n        u.pathname = 'c%20d';\n        hasWorkingUrl = u.href === 'http://a/c%20d';\n      }\n    } catch (e) {}\n    if (hasWorkingUrl) {\n      return;\n    }\n    var relative = Object.create(null);\n    relative['ftp'] = 21;\n    relative['file'] = 0;\n    relative['gopher'] = 70;\n    relative['http'] = 80;\n    relative['https'] = 443;\n    relative['ws'] = 80;\n    relative['wss'] = 443;\n    var relativePathDotMapping = Object.create(null);\n    relativePathDotMapping['%2e'] = '.';\n    relativePathDotMapping['.%2e'] = '..';\n    relativePathDotMapping['%2e.'] = '..';\n    relativePathDotMapping['%2e%2e'] = '..';\n    function isRelativeScheme(scheme) {\n      return relative[scheme] !== undefined;\n    }\n    function invalid() {\n      clear.call(this);\n      this._isInvalid = true;\n    }\n    function IDNAToASCII(h) {\n      if (h === '') {\n        invalid.call(this);\n      }\n      return h.toLowerCase();\n    }\n    function percentEscape(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x3F, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    function percentEscapeQuery(c) {\n      var unicode = c.charCodeAt(0);\n      if (unicode > 0x20 && unicode < 0x7F && [0x22, 0x23, 0x3C, 0x3E, 0x60].indexOf(unicode) === -1) {\n        return c;\n      }\n      return encodeURIComponent(c);\n    }\n    var EOF,\n        ALPHA = /[a-zA-Z]/,\n        ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n    function parse(input, stateOverride, base) {\n      function err(message) {\n        errors.push(message);\n      }\n      var state = stateOverride || 'scheme start',\n          cursor = 0,\n          buffer = '',\n          seenAt = false,\n          seenBracket = false,\n          errors = [];\n      loop: while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n        var c = input[cursor];\n        switch (state) {\n          case 'scheme start':\n            if (c && ALPHA.test(c)) {\n              buffer += c.toLowerCase();\n              state = 'scheme';\n            } else if (!stateOverride) {\n              buffer = '';\n              state = 'no scheme';\n              continue;\n            } else {\n              err('Invalid scheme.');\n              break loop;\n            }\n            break;\n          case 'scheme':\n            if (c && ALPHANUMERIC.test(c)) {\n              buffer += c.toLowerCase();\n            } else if (c === ':') {\n              this._scheme = buffer;\n              buffer = '';\n              if (stateOverride) {\n                break loop;\n              }\n              if (isRelativeScheme(this._scheme)) {\n                this._isRelative = true;\n              }\n              if (this._scheme === 'file') {\n                state = 'relative';\n              } else if (this._isRelative && base && base._scheme === this._scheme) {\n                state = 'relative or authority';\n              } else if (this._isRelative) {\n                state = 'authority first slash';\n              } else {\n                state = 'scheme data';\n              }\n            } else if (!stateOverride) {\n              buffer = '';\n              cursor = 0;\n              state = 'no scheme';\n              continue;\n            } else if (c === EOF) {\n              break loop;\n            } else {\n              err('Code point not allowed in scheme: ' + c);\n              break loop;\n            }\n            break;\n          case 'scheme data':\n            if (c === '?') {\n              this._query = '?';\n              state = 'query';\n            } else if (c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else {\n              if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n                this._schemeData += percentEscape(c);\n              }\n            }\n            break;\n          case 'no scheme':\n            if (!base || !isRelativeScheme(base._scheme)) {\n              err('Missing scheme.');\n              invalid.call(this);\n            } else {\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative or authority':\n            if (c === '/' && input[cursor + 1] === '/') {\n              state = 'authority ignore slashes';\n            } else {\n              err('Expected /, got: ' + c);\n              state = 'relative';\n              continue;\n            }\n            break;\n          case 'relative':\n            this._isRelative = true;\n            if (this._scheme !== 'file') {\n              this._scheme = base._scheme;\n            }\n            if (c === EOF) {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._username = base._username;\n              this._password = base._password;\n              break loop;\n            } else if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              state = 'relative slash';\n            } else if (c === '?') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = '?';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'query';\n            } else if (c === '#') {\n              this._host = base._host;\n              this._port = base._port;\n              this._path = base._path.slice();\n              this._query = base._query;\n              this._fragment = '#';\n              this._username = base._username;\n              this._password = base._password;\n              state = 'fragment';\n            } else {\n              var nextC = input[cursor + 1];\n              var nextNextC = input[cursor + 2];\n              if (this._scheme !== 'file' || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || nextNextC !== EOF && nextNextC !== '/' && nextNextC !== '\\\\' && nextNextC !== '?' && nextNextC !== '#') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n                this._path = base._path.slice();\n                this._path.pop();\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'relative slash':\n            if (c === '/' || c === '\\\\') {\n              if (c === '\\\\') {\n                err('\\\\ is an invalid code point.');\n              }\n              if (this._scheme === 'file') {\n                state = 'file host';\n              } else {\n                state = 'authority ignore slashes';\n              }\n            } else {\n              if (this._scheme !== 'file') {\n                this._host = base._host;\n                this._port = base._port;\n                this._username = base._username;\n                this._password = base._password;\n              }\n              state = 'relative path';\n              continue;\n            }\n            break;\n          case 'authority first slash':\n            if (c === '/') {\n              state = 'authority second slash';\n            } else {\n              err('Expected \\'/\\', got: ' + c);\n              state = 'authority ignore slashes';\n              continue;\n            }\n            break;\n          case 'authority second slash':\n            state = 'authority ignore slashes';\n            if (c !== '/') {\n              err('Expected \\'/\\', got: ' + c);\n              continue;\n            }\n            break;\n          case 'authority ignore slashes':\n            if (c !== '/' && c !== '\\\\') {\n              state = 'authority';\n              continue;\n            } else {\n              err('Expected authority, got: ' + c);\n            }\n            break;\n          case 'authority':\n            if (c === '@') {\n              if (seenAt) {\n                err('@ already seen.');\n                buffer += '%40';\n              }\n              seenAt = true;\n              for (var i = 0; i < buffer.length; i++) {\n                var cp = buffer[i];\n                if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n                  err('Invalid whitespace in authority.');\n                  continue;\n                }\n                if (cp === ':' && this._password === null) {\n                  this._password = '';\n                  continue;\n                }\n                var tempC = percentEscape(cp);\n                if (this._password !== null) {\n                  this._password += tempC;\n                } else {\n                  this._username += tempC;\n                }\n              }\n              buffer = '';\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              cursor -= buffer.length;\n              buffer = '';\n              state = 'host';\n              continue;\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'file host':\n            if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n                state = 'relative path';\n              } else if (buffer.length === 0) {\n                state = 'relative path start';\n              } else {\n                this._host = IDNAToASCII.call(this, buffer);\n                buffer = '';\n                state = 'relative path start';\n              }\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid whitespace in file host.');\n            } else {\n              buffer += c;\n            }\n            break;\n          case 'host':\n          case 'hostname':\n            if (c === ':' && !seenBracket) {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'port';\n              if (stateOverride === 'hostname') {\n                break loop;\n              }\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n              this._host = IDNAToASCII.call(this, buffer);\n              buffer = '';\n              state = 'relative path start';\n              if (stateOverride) {\n                break loop;\n              }\n              continue;\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              if (c === '[') {\n                seenBracket = true;\n              } else if (c === ']') {\n                seenBracket = false;\n              }\n              buffer += c;\n            } else {\n              err('Invalid code point in host/hostname: ' + c);\n            }\n            break;\n          case 'port':\n            if (/[0-9]/.test(c)) {\n              buffer += c;\n            } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n              if (buffer !== '') {\n                var temp = parseInt(buffer, 10);\n                if (temp !== relative[this._scheme]) {\n                  this._port = temp + '';\n                }\n                buffer = '';\n              }\n              if (stateOverride) {\n                break loop;\n              }\n              state = 'relative path start';\n              continue;\n            } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n              err('Invalid code point in port: ' + c);\n            } else {\n              invalid.call(this);\n            }\n            break;\n          case 'relative path start':\n            if (c === '\\\\') {\n              err('\\'\\\\\\' not allowed in path.');\n            }\n            state = 'relative path';\n            if (c !== '/' && c !== '\\\\') {\n              continue;\n            }\n            break;\n          case 'relative path':\n            if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n              if (c === '\\\\') {\n                err('\\\\ not allowed in relative path.');\n              }\n              var tmp;\n              if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n                buffer = tmp;\n              }\n              if (buffer === '..') {\n                this._path.pop();\n                if (c !== '/' && c !== '\\\\') {\n                  this._path.push('');\n                }\n              } else if (buffer === '.' && c !== '/' && c !== '\\\\') {\n                this._path.push('');\n              } else if (buffer !== '.') {\n                if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n                  buffer = buffer[0] + ':';\n                }\n                this._path.push(buffer);\n              }\n              buffer = '';\n              if (c === '?') {\n                this._query = '?';\n                state = 'query';\n              } else if (c === '#') {\n                this._fragment = '#';\n                state = 'fragment';\n              }\n            } else if (c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              buffer += percentEscape(c);\n            }\n            break;\n          case 'query':\n            if (!stateOverride && c === '#') {\n              this._fragment = '#';\n              state = 'fragment';\n            } else if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._query += percentEscapeQuery(c);\n            }\n            break;\n          case 'fragment':\n            if (c !== EOF && c !== '\\t' && c !== '\\n' && c !== '\\r') {\n              this._fragment += c;\n            }\n            break;\n        }\n        cursor++;\n      }\n    }\n    function clear() {\n      this._scheme = '';\n      this._schemeData = '';\n      this._username = '';\n      this._password = null;\n      this._host = '';\n      this._port = '';\n      this._path = [];\n      this._query = '';\n      this._fragment = '';\n      this._isInvalid = false;\n      this._isRelative = false;\n    }\n    function JURL(url, base) {\n      if (base !== undefined && !(base instanceof JURL)) {\n        base = new JURL(String(base));\n      }\n      this._url = url;\n      clear.call(this);\n      var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n      parse.call(this, input, null, base);\n    }\n    JURL.prototype = {\n      toString: function toString() {\n        return this.href;\n      },\n\n      get href() {\n        if (this._isInvalid) {\n          return this._url;\n        }\n        var authority = '';\n        if (this._username !== '' || this._password !== null) {\n          authority = this._username + (this._password !== null ? ':' + this._password : '') + '@';\n        }\n        return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n      },\n      set href(value) {\n        clear.call(this);\n        parse.call(this, value);\n      },\n      get protocol() {\n        return this._scheme + ':';\n      },\n      set protocol(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        parse.call(this, value + ':', 'scheme start');\n      },\n      get host() {\n        return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n      },\n      set host(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'host');\n      },\n      get hostname() {\n        return this._host;\n      },\n      set hostname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'hostname');\n      },\n      get port() {\n        return this._port;\n      },\n      set port(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        parse.call(this, value, 'port');\n      },\n      get pathname() {\n        return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n      },\n      set pathname(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._path = [];\n        parse.call(this, value, 'relative path start');\n      },\n      get search() {\n        return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n      },\n      set search(value) {\n        if (this._isInvalid || !this._isRelative) {\n          return;\n        }\n        this._query = '?';\n        if (value[0] === '?') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'query');\n      },\n      get hash() {\n        return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n      },\n      set hash(value) {\n        if (this._isInvalid) {\n          return;\n        }\n        this._fragment = '#';\n        if (value[0] === '#') {\n          value = value.slice(1);\n        }\n        parse.call(this, value, 'fragment');\n      },\n      get origin() {\n        var host;\n        if (this._isInvalid || !this._scheme) {\n          return '';\n        }\n        switch (this._scheme) {\n          case 'data':\n          case 'file':\n          case 'javascript':\n          case 'mailto':\n            return 'null';\n          case 'blob':\n            try {\n              return new JURL(this._schemeData).origin || 'null';\n            } catch (_) {}\n            return 'null';\n        }\n        host = this.host;\n        if (!host) {\n          return '';\n        }\n        return this._scheme + '://' + host;\n      }\n    };\n    var OriginalURL = globalScope.URL;\n    if (OriginalURL) {\n      JURL.createObjectURL = function (blob) {\n        return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n      };\n      JURL.revokeObjectURL = function (url) {\n        OriginalURL.revokeObjectURL(url);\n      };\n    }\n    globalScope.URL = JURL;\n  })();\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = __w_pdfjs_require__(122);\n  })();\n}\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = typeof window !== 'undefined' && window.Math === Math ? window : typeof global !== 'undefined' && global.Math === Math ? global : typeof self !== 'undefined' && self.Math === Math ? self : {};\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(78);\nmodule.exports = __w_pdfjs_require__(7).Array.includes;\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $includes = __w_pdfjs_require__(47)(true);\n$export($export.P, 'Array', {\n  includes: function includes(el) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n__w_pdfjs_require__(48)('includes');\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar max = Math.max;\nvar min = Math.min;\nmodule.exports = function (index, length) {\n  index = toInteger(index);\n  return index < 0 ? max(index + length, 0) : min(index, length);\n};\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(81);\nmodule.exports = __w_pdfjs_require__(7).Math.log2;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Math', {\n  log2: function log2(x) {\n    return Math.log(x) / Math.LN2;\n  }\n});\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(83);\nmodule.exports = __w_pdfjs_require__(7).Number.isNaN;\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', {\n  isNaN: function isNaN(number) {\n    return number != number;\n  }\n});\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(85);\nmodule.exports = __w_pdfjs_require__(7).Number.isInteger;\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\n$export($export.S, 'Number', { isInteger: __w_pdfjs_require__(86) });\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar floor = Math.floor;\nmodule.exports = function isInteger(it) {\n  return !isObject(it) && isFinite(it) && floor(it) === it;\n};\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(88);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(97);\n__w_pdfjs_require__(104);\n__w_pdfjs_require__(105);\nmodule.exports = __w_pdfjs_require__(7).Promise;\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $at = __w_pdfjs_require__(89)(true);\n__w_pdfjs_require__(51)(String, 'String', function (iterated) {\n  this._t = String(iterated);\n  this._i = 0;\n}, function () {\n  var O = this._t;\n  var index = this._i;\n  var point;\n  if (index >= O.length) return {\n    value: undefined,\n    done: true\n  };\n  point = $at(O, index);\n  this._i += point.length;\n  return {\n    value: point,\n    done: false\n  };\n});\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar toInteger = __w_pdfjs_require__(32);\nvar defined = __w_pdfjs_require__(30);\nmodule.exports = function (TO_STRING) {\n  return function (that, pos) {\n    var s = String(defined(that));\n    var i = toInteger(pos);\n    var l = s.length;\n    var a, b;\n    if (i < 0 || i >= l) return TO_STRING ? '' : undefined;\n    a = s.charCodeAt(i);\n    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff ? TO_STRING ? s.charAt(i) : a : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n  };\n};\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar create = __w_pdfjs_require__(91);\nvar descriptor = __w_pdfjs_require__(28);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar IteratorPrototype = {};\n__w_pdfjs_require__(12)(IteratorPrototype, __w_pdfjs_require__(4)('iterator'), function () {\n  return this;\n});\nmodule.exports = function (Constructor, NAME, next) {\n  Constructor.prototype = create(IteratorPrototype, { next: descriptor(1, next) });\n  setToStringTag(Constructor, NAME + ' Iterator');\n};\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nvar dPs = __w_pdfjs_require__(92);\nvar enumBugKeys = __w_pdfjs_require__(53);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar Empty = function Empty() {};\nvar PROTOTYPE = 'prototype';\nvar _createDict = function createDict() {\n  var iframe = __w_pdfjs_require__(27)('iframe');\n  var i = enumBugKeys.length;\n  var lt = '<';\n  var gt = '>';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  __w_pdfjs_require__(54).appendChild(iframe);\n  iframe.src = 'javascript:';\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);\n  iframeDocument.close();\n  _createDict = iframeDocument.F;\n  while (i--) {\n    delete _createDict[PROTOTYPE][enumBugKeys[i]];\n  }return _createDict();\n};\nmodule.exports = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    Empty[PROTOTYPE] = anObject(O);\n    result = new Empty();\n    Empty[PROTOTYPE] = null;\n    result[IE_PROTO] = O;\n  } else result = _createDict();\n  return Properties === undefined ? result : dPs(result, Properties);\n};\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar dP = __w_pdfjs_require__(15);\nvar anObject = __w_pdfjs_require__(8);\nvar getKeys = __w_pdfjs_require__(23);\nmodule.exports = __w_pdfjs_require__(13) ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject(O);\n  var keys = getKeys(Properties);\n  var length = keys.length;\n  var i = 0;\n  var P;\n  while (length > i) {\n    dP.f(O, P = keys[i++], Properties[P]);\n  }return O;\n};\n\n/***/ }),\n/* 93 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toIObject = __w_pdfjs_require__(17);\nvar arrayIndexOf = __w_pdfjs_require__(47)(false);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nmodule.exports = function (object, names) {\n  var O = toIObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) {\n    if (key != IE_PROTO) has(O, key) && result.push(key);\n  }while (names.length > i) {\n    if (has(O, key = names[i++])) {\n      ~arrayIndexOf(result, key) || result.push(key);\n    }\n  }return result;\n};\n\n/***/ }),\n/* 94 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar has = __w_pdfjs_require__(9);\nvar toObject = __w_pdfjs_require__(35);\nvar IE_PROTO = __w_pdfjs_require__(34)('IE_PROTO');\nvar ObjectProto = Object.prototype;\nmodule.exports = Object.getPrototypeOf || function (O) {\n  O = toObject(O);\n  if (has(O, IE_PROTO)) return O[IE_PROTO];\n  if (typeof O.constructor == 'function' && O instanceof O.constructor) {\n    return O.constructor.prototype;\n  }\n  return O instanceof Object ? ObjectProto : null;\n};\n\n/***/ }),\n/* 95 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar addToUnscopables = __w_pdfjs_require__(48);\nvar step = __w_pdfjs_require__(96);\nvar Iterators = __w_pdfjs_require__(19);\nvar toIObject = __w_pdfjs_require__(17);\nmodule.exports = __w_pdfjs_require__(51)(Array, 'Array', function (iterated, kind) {\n  this._t = toIObject(iterated);\n  this._i = 0;\n  this._k = kind;\n}, function () {\n  var O = this._t;\n  var kind = this._k;\n  var index = this._i++;\n  if (!O || index >= O.length) {\n    this._t = undefined;\n    return step(1);\n  }\n  if (kind == 'keys') return step(0, index);\n  if (kind == 'values') return step(0, O[index]);\n  return step(0, [index, O[index]]);\n}, 'values');\nIterators.Arguments = Iterators.Array;\naddToUnscopables('keys');\naddToUnscopables('values');\naddToUnscopables('entries');\n\n/***/ }),\n/* 96 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (done, value) {\n  return {\n    value: value,\n    done: !!done\n  };\n};\n\n/***/ }),\n/* 97 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar LIBRARY = __w_pdfjs_require__(52);\nvar global = __w_pdfjs_require__(5);\nvar ctx = __w_pdfjs_require__(11);\nvar classof = __w_pdfjs_require__(33);\nvar $export = __w_pdfjs_require__(6);\nvar isObject = __w_pdfjs_require__(3);\nvar aFunction = __w_pdfjs_require__(16);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(25);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar task = __w_pdfjs_require__(57).set;\nvar microtask = __w_pdfjs_require__(102)();\nvar newPromiseCapabilityModule = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\nvar promiseResolve = __w_pdfjs_require__(59);\nvar PROMISE = 'Promise';\nvar TypeError = global.TypeError;\nvar process = global.process;\nvar $Promise = global[PROMISE];\nvar isNode = classof(process) == 'process';\nvar empty = function empty() {};\nvar Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;\nvar newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;\nvar USE_NATIVE = !!function () {\n  try {\n    var promise = $Promise.resolve(1);\n    var FakePromise = (promise.constructor = {})[__w_pdfjs_require__(4)('species')] = function (exec) {\n      exec(empty, empty);\n    };\n    return (isNode || typeof PromiseRejectionEvent == 'function') && promise.then(empty) instanceof FakePromise;\n  } catch (e) {}\n}();\nvar isThenable = function isThenable(it) {\n  var then;\n  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;\n};\nvar notify = function notify(promise, isReject) {\n  if (promise._n) return;\n  promise._n = true;\n  var chain = promise._c;\n  microtask(function () {\n    var value = promise._v;\n    var ok = promise._s == 1;\n    var i = 0;\n    var run = function run(reaction) {\n      var handler = ok ? reaction.ok : reaction.fail;\n      var resolve = reaction.resolve;\n      var reject = reaction.reject;\n      var domain = reaction.domain;\n      var result, then;\n      try {\n        if (handler) {\n          if (!ok) {\n            if (promise._h == 2) onHandleUnhandled(promise);\n            promise._h = 1;\n          }\n          if (handler === true) result = value;else {\n            if (domain) domain.enter();\n            result = handler(value);\n            if (domain) domain.exit();\n          }\n          if (result === reaction.promise) {\n            reject(TypeError('Promise-chain cycle'));\n          } else if (then = isThenable(result)) {\n            then.call(result, resolve, reject);\n          } else resolve(result);\n        } else reject(value);\n      } catch (e) {\n        reject(e);\n      }\n    };\n    while (chain.length > i) {\n      run(chain[i++]);\n    }promise._c = [];\n    promise._n = false;\n    if (isReject && !promise._h) onUnhandled(promise);\n  });\n};\nvar onUnhandled = function onUnhandled(promise) {\n  task.call(global, function () {\n    var value = promise._v;\n    var unhandled = isUnhandled(promise);\n    var result, handler, console;\n    if (unhandled) {\n      result = perform(function () {\n        if (isNode) {\n          process.emit('unhandledRejection', value, promise);\n        } else if (handler = global.onunhandledrejection) {\n          handler({\n            promise: promise,\n            reason: value\n          });\n        } else if ((console = global.console) && console.error) {\n          console.error('Unhandled promise rejection', value);\n        }\n      });\n      promise._h = isNode || isUnhandled(promise) ? 2 : 1;\n    }\n    promise._a = undefined;\n    if (unhandled && result.e) throw result.v;\n  });\n};\nvar isUnhandled = function isUnhandled(promise) {\n  return promise._h !== 1 && (promise._a || promise._c).length === 0;\n};\nvar onHandleUnhandled = function onHandleUnhandled(promise) {\n  task.call(global, function () {\n    var handler;\n    if (isNode) {\n      process.emit('rejectionHandled', promise);\n    } else if (handler = global.onrejectionhandled) {\n      handler({\n        promise: promise,\n        reason: promise._v\n      });\n    }\n  });\n};\nvar $reject = function $reject(value) {\n  var promise = this;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  promise._v = value;\n  promise._s = 2;\n  if (!promise._a) promise._a = promise._c.slice();\n  notify(promise, true);\n};\nvar $resolve = function $resolve(value) {\n  var promise = this;\n  var then;\n  if (promise._d) return;\n  promise._d = true;\n  promise = promise._w || promise;\n  try {\n    if (promise === value) throw TypeError(\"Promise can't be resolved itself\");\n    if (then = isThenable(value)) {\n      microtask(function () {\n        var wrapper = {\n          _w: promise,\n          _d: false\n        };\n        try {\n          then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));\n        } catch (e) {\n          $reject.call(wrapper, e);\n        }\n      });\n    } else {\n      promise._v = value;\n      promise._s = 1;\n      notify(promise, false);\n    }\n  } catch (e) {\n    $reject.call({\n      _w: promise,\n      _d: false\n    }, e);\n  }\n};\nif (!USE_NATIVE) {\n  $Promise = function Promise(executor) {\n    anInstance(this, $Promise, PROMISE, '_h');\n    aFunction(executor);\n    Internal.call(this);\n    try {\n      executor(ctx($resolve, this, 1), ctx($reject, this, 1));\n    } catch (err) {\n      $reject.call(this, err);\n    }\n  };\n  Internal = function Promise(executor) {\n    this._c = [];\n    this._a = undefined;\n    this._s = 0;\n    this._d = false;\n    this._v = undefined;\n    this._h = 0;\n    this._n = false;\n  };\n  Internal.prototype = __w_pdfjs_require__(38)($Promise.prototype, {\n    then: function then(onFulfilled, onRejected) {\n      var reaction = newPromiseCapability(speciesConstructor(this, $Promise));\n      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;\n      reaction.fail = typeof onRejected == 'function' && onRejected;\n      reaction.domain = isNode ? process.domain : undefined;\n      this._c.push(reaction);\n      if (this._a) this._a.push(reaction);\n      if (this._s) notify(this, false);\n      return reaction.promise;\n    },\n    'catch': function _catch(onRejected) {\n      return this.then(undefined, onRejected);\n    }\n  });\n  OwnPromiseCapability = function OwnPromiseCapability() {\n    var promise = new Internal();\n    this.promise = promise;\n    this.resolve = ctx($resolve, promise, 1);\n    this.reject = ctx($reject, promise, 1);\n  };\n  newPromiseCapabilityModule.f = newPromiseCapability = function newPromiseCapability(C) {\n    return C === $Promise || C === Wrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);\n  };\n}\n$export($export.G + $export.W + $export.F * !USE_NATIVE, { Promise: $Promise });\n__w_pdfjs_require__(24)($Promise, PROMISE);\n__w_pdfjs_require__(103)(PROMISE);\nWrapper = __w_pdfjs_require__(7)[PROMISE];\n$export($export.S + $export.F * !USE_NATIVE, PROMISE, {\n  reject: function reject(r) {\n    var capability = newPromiseCapability(this);\n    var $$reject = capability.reject;\n    $$reject(r);\n    return capability.promise;\n  }\n});\n$export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {\n  resolve: function resolve(x) {\n    return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);\n  }\n});\n$export($export.S + $export.F * !(USE_NATIVE && __w_pdfjs_require__(60)(function (iter) {\n  $Promise.all(iter)['catch'](empty);\n})), PROMISE, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform(function () {\n      var values = [];\n      var index = 0;\n      var remaining = 1;\n      forOf(iterable, false, function (promise) {\n        var $index = index++;\n        var alreadyCalled = false;\n        values.push(undefined);\n        remaining++;\n        C.resolve(promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[$index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  },\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapability(C);\n    var reject = capability.reject;\n    var result = perform(function () {\n      forOf(iterable, false, function (promise) {\n        C.resolve(promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.e) reject(result.v);\n    return capability.promise;\n  }\n});\n\n/***/ }),\n/* 98 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar anObject = __w_pdfjs_require__(8);\nmodule.exports = function (iterator, fn, value, entries) {\n  try {\n    return entries ? fn(anObject(value)[0], value[1]) : fn(value);\n  } catch (e) {\n    var ret = iterator['return'];\n    if (ret !== undefined) anObject(ret.call(iterator));\n    throw e;\n  }\n};\n\n/***/ }),\n/* 99 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar Iterators = __w_pdfjs_require__(19);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar ArrayProto = Array.prototype;\nmodule.exports = function (it) {\n  return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);\n};\n\n/***/ }),\n/* 100 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar classof = __w_pdfjs_require__(33);\nvar ITERATOR = __w_pdfjs_require__(4)('iterator');\nvar Iterators = __w_pdfjs_require__(19);\nmodule.exports = __w_pdfjs_require__(7).getIteratorMethod = function (it) {\n  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];\n};\n\n/***/ }),\n/* 101 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nmodule.exports = function (fn, args, that) {\n  var un = that === undefined;\n  switch (args.length) {\n    case 0:\n      return un ? fn() : fn.call(that);\n    case 1:\n      return un ? fn(args[0]) : fn.call(that, args[0]);\n    case 2:\n      return un ? fn(args[0], args[1]) : fn.call(that, args[0], args[1]);\n    case 3:\n      return un ? fn(args[0], args[1], args[2]) : fn.call(that, args[0], args[1], args[2]);\n    case 4:\n      return un ? fn(args[0], args[1], args[2], args[3]) : fn.call(that, args[0], args[1], args[2], args[3]);\n  }\n  return fn.apply(that, args);\n};\n\n/***/ }),\n/* 102 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar macrotask = __w_pdfjs_require__(57).set;\nvar Observer = global.MutationObserver || global.WebKitMutationObserver;\nvar process = global.process;\nvar Promise = global.Promise;\nvar isNode = __w_pdfjs_require__(18)(process) == 'process';\nmodule.exports = function () {\n  var head, last, notify;\n  var flush = function flush() {\n    var parent, fn;\n    if (isNode && (parent = process.domain)) parent.exit();\n    while (head) {\n      fn = head.fn;\n      head = head.next;\n      try {\n        fn();\n      } catch (e) {\n        if (head) notify();else last = undefined;\n        throw e;\n      }\n    }\n    last = undefined;\n    if (parent) parent.enter();\n  };\n  if (isNode) {\n    notify = function notify() {\n      process.nextTick(flush);\n    };\n  } else if (Observer && !(global.navigator && global.navigator.standalone)) {\n    var toggle = true;\n    var node = document.createTextNode('');\n    new Observer(flush).observe(node, { characterData: true });\n    notify = function notify() {\n      node.data = toggle = !toggle;\n    };\n  } else if (Promise && Promise.resolve) {\n    var promise = Promise.resolve();\n    notify = function notify() {\n      promise.then(flush);\n    };\n  } else {\n    notify = function notify() {\n      macrotask.call(global, flush);\n    };\n  }\n  return function (fn) {\n    var task = {\n      fn: fn,\n      next: undefined\n    };\n    if (last) last.next = task;\n    if (!head) {\n      head = task;\n      notify();\n    }\n    last = task;\n  };\n};\n\n/***/ }),\n/* 103 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar dP = __w_pdfjs_require__(15);\nvar DESCRIPTORS = __w_pdfjs_require__(13);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (KEY) {\n  var C = global[KEY];\n  if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {\n    configurable: true,\n    get: function get() {\n      return this;\n    }\n  });\n};\n\n/***/ }),\n/* 104 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar core = __w_pdfjs_require__(7);\nvar global = __w_pdfjs_require__(5);\nvar speciesConstructor = __w_pdfjs_require__(56);\nvar promiseResolve = __w_pdfjs_require__(59);\n$export($export.P + $export.R, 'Promise', {\n  'finally': function _finally(onFinally) {\n    var C = speciesConstructor(this, core.Promise || global.Promise);\n    var isFunction = typeof onFinally == 'function';\n    return this.then(isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () {\n        return x;\n      });\n    } : onFinally, isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () {\n        throw e;\n      });\n    } : onFinally);\n  }\n});\n\n/***/ }),\n/* 105 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar newPromiseCapability = __w_pdfjs_require__(37);\nvar perform = __w_pdfjs_require__(58);\n$export($export.S, 'Promise', {\n  'try': function _try(callbackfn) {\n    var promiseCapability = newPromiseCapability.f(this);\n    var result = perform(callbackfn);\n    (result.e ? promiseCapability.reject : promiseCapability.resolve)(result.v);\n    return promiseCapability.promise;\n  }\n});\n\n/***/ }),\n/* 106 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(50);\n__w_pdfjs_require__(55);\n__w_pdfjs_require__(107);\n__w_pdfjs_require__(118);\n__w_pdfjs_require__(120);\nmodule.exports = __w_pdfjs_require__(7).WeakMap;\n\n/***/ }),\n/* 107 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar each = __w_pdfjs_require__(61)(0);\nvar redefine = __w_pdfjs_require__(10);\nvar meta = __w_pdfjs_require__(39);\nvar assign = __w_pdfjs_require__(111);\nvar weak = __w_pdfjs_require__(113);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar validate = __w_pdfjs_require__(62);\nvar WEAK_MAP = 'WeakMap';\nvar getWeak = meta.getWeak;\nvar isExtensible = Object.isExtensible;\nvar uncaughtFrozenStore = weak.ufstore;\nvar tmp = {};\nvar InternalMap;\nvar wrapper = function wrapper(get) {\n  return function WeakMap() {\n    return get(this, arguments.length > 0 ? arguments[0] : undefined);\n  };\n};\nvar methods = {\n  get: function get(key) {\n    if (isObject(key)) {\n      var data = getWeak(key);\n      if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);\n      return data ? data[this._i] : undefined;\n    }\n  },\n  set: function set(key, value) {\n    return weak.def(validate(this, WEAK_MAP), key, value);\n  }\n};\nvar $WeakMap = module.exports = __w_pdfjs_require__(114)(WEAK_MAP, wrapper, methods, weak, true, true);\nif (fails(function () {\n  return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;\n})) {\n  InternalMap = weak.getConstructor(wrapper, WEAK_MAP);\n  assign(InternalMap.prototype, methods);\n  meta.NEED = true;\n  each(['delete', 'has', 'get', 'set'], function (key) {\n    var proto = $WeakMap.prototype;\n    var method = proto[key];\n    redefine(proto, key, function (a, b) {\n      if (isObject(a) && !isExtensible(a)) {\n        if (!this._f) this._f = new InternalMap();\n        var result = this._f[key](a, b);\n        return key == 'set' ? this : result;\n      }\n      return method.call(this, a, b);\n    });\n  });\n}\n\n/***/ }),\n/* 108 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar speciesConstructor = __w_pdfjs_require__(109);\nmodule.exports = function (original, length) {\n  return new (speciesConstructor(original))(length);\n};\n\n/***/ }),\n/* 109 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar isArray = __w_pdfjs_require__(110);\nvar SPECIES = __w_pdfjs_require__(4)('species');\nmodule.exports = function (original) {\n  var C;\n  if (isArray(original)) {\n    C = original.constructor;\n    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;\n    if (isObject(C)) {\n      C = C[SPECIES];\n      if (C === null) C = undefined;\n    }\n  }\n  return C === undefined ? Array : C;\n};\n\n/***/ }),\n/* 110 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar cof = __w_pdfjs_require__(18);\nmodule.exports = Array.isArray || function isArray(arg) {\n  return cof(arg) == 'Array';\n};\n\n/***/ }),\n/* 111 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar gOPS = __w_pdfjs_require__(112);\nvar pIE = __w_pdfjs_require__(40);\nvar toObject = __w_pdfjs_require__(35);\nvar IObject = __w_pdfjs_require__(29);\nvar $assign = Object.assign;\nmodule.exports = !$assign || __w_pdfjs_require__(14)(function () {\n  var A = {};\n  var B = {};\n  var S = Symbol();\n  var K = 'abcdefghijklmnopqrst';\n  A[S] = 7;\n  K.split('').forEach(function (k) {\n    B[k] = k;\n  });\n  return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;\n}) ? function assign(target, source) {\n  var T = toObject(target);\n  var aLen = arguments.length;\n  var index = 1;\n  var getSymbols = gOPS.f;\n  var isEnum = pIE.f;\n  while (aLen > index) {\n    var S = IObject(arguments[index++]);\n    var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      if (isEnum.call(S, key = keys[j++])) T[key] = S[key];\n    }\n  }\n  return T;\n} : $assign;\n\n/***/ }),\n/* 112 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nexports.f = Object.getOwnPropertySymbols;\n\n/***/ }),\n/* 113 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar redefineAll = __w_pdfjs_require__(38);\nvar getWeak = __w_pdfjs_require__(39).getWeak;\nvar anObject = __w_pdfjs_require__(8);\nvar isObject = __w_pdfjs_require__(3);\nvar anInstance = __w_pdfjs_require__(36);\nvar forOf = __w_pdfjs_require__(25);\nvar createArrayMethod = __w_pdfjs_require__(61);\nvar $has = __w_pdfjs_require__(9);\nvar validate = __w_pdfjs_require__(62);\nvar arrayFind = createArrayMethod(5);\nvar arrayFindIndex = createArrayMethod(6);\nvar id = 0;\nvar uncaughtFrozenStore = function uncaughtFrozenStore(that) {\n  return that._l || (that._l = new UncaughtFrozenStore());\n};\nvar UncaughtFrozenStore = function UncaughtFrozenStore() {\n  this.a = [];\n};\nvar findUncaughtFrozen = function findUncaughtFrozen(store, key) {\n  return arrayFind(store.a, function (it) {\n    return it[0] === key;\n  });\n};\nUncaughtFrozenStore.prototype = {\n  get: function get(key) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) return entry[1];\n  },\n  has: function has(key) {\n    return !!findUncaughtFrozen(this, key);\n  },\n  set: function set(key, value) {\n    var entry = findUncaughtFrozen(this, key);\n    if (entry) entry[1] = value;else this.a.push([key, value]);\n  },\n  'delete': function _delete(key) {\n    var index = arrayFindIndex(this.a, function (it) {\n      return it[0] === key;\n    });\n    if (~index) this.a.splice(index, 1);\n    return !!~index;\n  }\n};\nmodule.exports = {\n  getConstructor: function getConstructor(wrapper, NAME, IS_MAP, ADDER) {\n    var C = wrapper(function (that, iterable) {\n      anInstance(that, C, NAME, '_i');\n      that._t = NAME;\n      that._i = id++;\n      that._l = undefined;\n      if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n    });\n    redefineAll(C.prototype, {\n      'delete': function _delete(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);\n        return data && $has(data, this._i) && delete data[this._i];\n      },\n      has: function has(key) {\n        if (!isObject(key)) return false;\n        var data = getWeak(key);\n        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);\n        return data && $has(data, this._i);\n      }\n    });\n    return C;\n  },\n  def: function def(that, key, value) {\n    var data = getWeak(anObject(key), true);\n    if (data === true) uncaughtFrozenStore(that).set(key, value);else data[that._i] = value;\n    return that;\n  },\n  ufstore: uncaughtFrozenStore\n};\n\n/***/ }),\n/* 114 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar global = __w_pdfjs_require__(5);\nvar $export = __w_pdfjs_require__(6);\nvar redefine = __w_pdfjs_require__(10);\nvar redefineAll = __w_pdfjs_require__(38);\nvar meta = __w_pdfjs_require__(39);\nvar forOf = __w_pdfjs_require__(25);\nvar anInstance = __w_pdfjs_require__(36);\nvar isObject = __w_pdfjs_require__(3);\nvar fails = __w_pdfjs_require__(14);\nvar $iterDetect = __w_pdfjs_require__(60);\nvar setToStringTag = __w_pdfjs_require__(24);\nvar inheritIfRequired = __w_pdfjs_require__(115);\nmodule.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {\n  var Base = global[NAME];\n  var C = Base;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var proto = C && C.prototype;\n  var O = {};\n  var fixMethod = function fixMethod(KEY) {\n    var fn = proto[KEY];\n    redefine(proto, KEY, KEY == 'delete' ? function (a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'has' ? function has(a) {\n      return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'get' ? function get(a) {\n      return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);\n    } : KEY == 'add' ? function add(a) {\n      fn.call(this, a === 0 ? 0 : a);\n      return this;\n    } : function set(a, b) {\n      fn.call(this, a === 0 ? 0 : a, b);\n      return this;\n    });\n  };\n  if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {\n    new C().entries().next();\n  }))) {\n    C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);\n    redefineAll(C.prototype, methods);\n    meta.NEED = true;\n  } else {\n    var instance = new C();\n    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;\n    var THROWS_ON_PRIMITIVES = fails(function () {\n      instance.has(1);\n    });\n    var ACCEPT_ITERABLES = $iterDetect(function (iter) {\n      new C(iter);\n    });\n    var BUGGY_ZERO = !IS_WEAK && fails(function () {\n      var $instance = new C();\n      var index = 5;\n      while (index--) {\n        $instance[ADDER](index, index);\n      }return !$instance.has(-0);\n    });\n    if (!ACCEPT_ITERABLES) {\n      C = wrapper(function (target, iterable) {\n        anInstance(target, C, NAME);\n        var that = inheritIfRequired(new Base(), target, C);\n        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);\n        return that;\n      });\n      C.prototype = proto;\n      proto.constructor = C;\n    }\n    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {\n      fixMethod('delete');\n      fixMethod('has');\n      IS_MAP && fixMethod('get');\n    }\n    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);\n    if (IS_WEAK && proto.clear) delete proto.clear;\n  }\n  setToStringTag(C, NAME);\n  O[NAME] = C;\n  $export($export.G + $export.W + $export.F * (C != Base), O);\n  if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);\n  return C;\n};\n\n/***/ }),\n/* 115 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar setPrototypeOf = __w_pdfjs_require__(116).set;\nmodule.exports = function (that, target, C) {\n  var S = target.constructor;\n  var P;\n  if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {\n    setPrototypeOf(that, P);\n  }\n  return that;\n};\n\n/***/ }),\n/* 116 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isObject = __w_pdfjs_require__(3);\nvar anObject = __w_pdfjs_require__(8);\nvar check = function check(O, proto) {\n  anObject(O);\n  if (!isObject(proto) && proto !== null) throw TypeError(proto + \": can't set as prototype!\");\n};\nmodule.exports = {\n  set: Object.setPrototypeOf || ('__proto__' in {} ? function (test, buggy, set) {\n    try {\n      set = __w_pdfjs_require__(11)(Function.call, __w_pdfjs_require__(117).f(Object.prototype, '__proto__').set, 2);\n      set(test, []);\n      buggy = !(test instanceof Array);\n    } catch (e) {\n      buggy = true;\n    }\n    return function setPrototypeOf(O, proto) {\n      check(O, proto);\n      if (buggy) O.__proto__ = proto;else set(O, proto);\n      return O;\n    };\n  }({}, false) : undefined),\n  check: check\n};\n\n/***/ }),\n/* 117 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar pIE = __w_pdfjs_require__(40);\nvar createDesc = __w_pdfjs_require__(28);\nvar toIObject = __w_pdfjs_require__(17);\nvar toPrimitive = __w_pdfjs_require__(46);\nvar has = __w_pdfjs_require__(9);\nvar IE8_DOM_DEFINE = __w_pdfjs_require__(45);\nvar gOPD = Object.getOwnPropertyDescriptor;\nexports.f = __w_pdfjs_require__(13) ? gOPD : function getOwnPropertyDescriptor(O, P) {\n  O = toIObject(O);\n  P = toPrimitive(P, true);\n  if (IE8_DOM_DEFINE) try {\n    return gOPD(O, P);\n  } catch (e) {}\n  if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);\n};\n\n/***/ }),\n/* 118 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(119)('WeakMap');\n\n/***/ }),\n/* 119 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    of: function of() {\n      var length = arguments.length;\n      var A = new Array(length);\n      while (length--) {\n        A[length] = arguments[length];\n      }return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 120 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(121)('WeakMap');\n\n/***/ }),\n/* 121 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar aFunction = __w_pdfjs_require__(16);\nvar ctx = __w_pdfjs_require__(11);\nvar forOf = __w_pdfjs_require__(25);\nmodule.exports = function (COLLECTION) {\n  $export($export.S, COLLECTION, {\n    from: function from(source) {\n      var mapFn = arguments[1];\n      var mapping, A, n, cb;\n      aFunction(this);\n      mapping = mapFn !== undefined;\n      if (mapping) aFunction(mapFn);\n      if (source == undefined) return new this();\n      A = [];\n      if (mapping) {\n        n = 0;\n        cb = ctx(mapFn, arguments[2], 2);\n        forOf(source, false, function (nextItem) {\n          A.push(cb(nextItem, n++));\n        });\n      } else {\n        forOf(source, false, A.push, A);\n      }\n      return new this(A);\n    }\n  });\n};\n\n/***/ }),\n/* 122 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\n__w_pdfjs_require__(123);\nmodule.exports = __w_pdfjs_require__(7).Object.values;\n\n/***/ }),\n/* 123 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar $export = __w_pdfjs_require__(6);\nvar $values = __w_pdfjs_require__(124)(false);\n$export($export.S, 'Object', {\n  values: function values(it) {\n    return $values(it);\n  }\n});\n\n/***/ }),\n/* 124 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar getKeys = __w_pdfjs_require__(23);\nvar toIObject = __w_pdfjs_require__(17);\nvar isEnum = __w_pdfjs_require__(40).f;\nmodule.exports = function (isEntries) {\n  return function (it) {\n    var O = toIObject(it);\n    var keys = getKeys(O);\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      if (isEnum.call(O, key = keys[i++])) {\n        result.push(isEntries ? [key, O[key]] : O[key]);\n      }\n    }return result;\n  };\n};\n\n/***/ }),\n/* 125 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar isReadableStreamSupported = false;\nif (typeof ReadableStream !== 'undefined') {\n  try {\n    new ReadableStream({\n      start: function start(controller) {\n        controller.close();\n      }\n    });\n    isReadableStreamSupported = true;\n  } catch (e) {}\n}\nif (isReadableStreamSupported) {\n  exports.ReadableStream = ReadableStream;\n} else {\n  exports.ReadableStream = __w_pdfjs_require__(126).ReadableStream;\n}\n\n/***/ }),\n/* 126 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nvar _typeof2 = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\n(function (e, a) {\n  for (var i in a) {\n    e[i] = a[i];\n  }\n})(exports, function (modules) {\n  var installedModules = {};\n  function __w_pdfjs_require__(moduleId) {\n    if (installedModules[moduleId]) return installedModules[moduleId].exports;\n    var module = installedModules[moduleId] = {\n      i: moduleId,\n      l: false,\n      exports: {}\n    };\n    modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n    module.l = true;\n    return module.exports;\n  }\n  __w_pdfjs_require__.m = modules;\n  __w_pdfjs_require__.c = installedModules;\n  __w_pdfjs_require__.i = function (value) {\n    return value;\n  };\n  __w_pdfjs_require__.d = function (exports, name, getter) {\n    if (!__w_pdfjs_require__.o(exports, name)) {\n      Object.defineProperty(exports, name, {\n        configurable: false,\n        enumerable: true,\n        get: getter\n      });\n    }\n  };\n  __w_pdfjs_require__.n = function (module) {\n    var getter = module && module.__esModule ? function getDefault() {\n      return module['default'];\n    } : function getModuleExports() {\n      return module;\n    };\n    __w_pdfjs_require__.d(getter, 'a', getter);\n    return getter;\n  };\n  __w_pdfjs_require__.o = function (object, property) {\n    return Object.prototype.hasOwnProperty.call(object, property);\n  };\n  __w_pdfjs_require__.p = \"\";\n  return __w_pdfjs_require__(__w_pdfjs_require__.s = 7);\n}([function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n    return typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj === 'undefined' ? 'undefined' : _typeof2(obj);\n  };\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  function IsPropertyKey(argument) {\n    return typeof argument === 'string' || (typeof argument === 'undefined' ? 'undefined' : _typeof(argument)) === 'symbol';\n  }\n  exports.typeIsObject = function (x) {\n    return (typeof x === 'undefined' ? 'undefined' : _typeof(x)) === 'object' && x !== null || typeof x === 'function';\n  };\n  exports.createDataProperty = function (o, p, v) {\n    assert(exports.typeIsObject(o));\n    Object.defineProperty(o, p, {\n      value: v,\n      writable: true,\n      enumerable: true,\n      configurable: true\n    });\n  };\n  exports.createArrayFromList = function (elements) {\n    return elements.slice();\n  };\n  exports.ArrayBufferCopy = function (dest, destOffset, src, srcOffset, n) {\n    new Uint8Array(dest).set(new Uint8Array(src, srcOffset, n), destOffset);\n  };\n  exports.CreateIterResultObject = function (value, done) {\n    assert(typeof done === 'boolean');\n    var obj = {};\n    Object.defineProperty(obj, 'value', {\n      value: value,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    Object.defineProperty(obj, 'done', {\n      value: done,\n      enumerable: true,\n      writable: true,\n      configurable: true\n    });\n    return obj;\n  };\n  exports.IsFiniteNonNegativeNumber = function (v) {\n    if (Number.isNaN(v)) {\n      return false;\n    }\n    if (v === Infinity) {\n      return false;\n    }\n    if (v < 0) {\n      return false;\n    }\n    return true;\n  };\n  function Call(F, V, args) {\n    if (typeof F !== 'function') {\n      throw new TypeError('Argument is not a function');\n    }\n    return Function.prototype.apply.call(F, V, args);\n  }\n  exports.InvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    var method = O[P];\n    if (method === undefined) {\n      return undefined;\n    }\n    return Call(method, O, args);\n  };\n  exports.PromiseInvokeOrNoop = function (O, P, args) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    try {\n      return Promise.resolve(exports.InvokeOrNoop(O, P, args));\n    } catch (returnValueE) {\n      return Promise.reject(returnValueE);\n    }\n  };\n  exports.PromiseInvokeOrPerformFallback = function (O, P, args, F, argsF) {\n    assert(O !== undefined);\n    assert(IsPropertyKey(P));\n    assert(Array.isArray(args));\n    assert(Array.isArray(argsF));\n    var method = void 0;\n    try {\n      method = O[P];\n    } catch (methodE) {\n      return Promise.reject(methodE);\n    }\n    if (method === undefined) {\n      return F.apply(null, argsF);\n    }\n    try {\n      return Promise.resolve(Call(method, O, args));\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  exports.TransferArrayBuffer = function (O) {\n    return O.slice();\n  };\n  exports.ValidateAndNormalizeHighWaterMark = function (highWaterMark) {\n    highWaterMark = Number(highWaterMark);\n    if (Number.isNaN(highWaterMark) || highWaterMark < 0) {\n      throw new RangeError('highWaterMark property of a queuing strategy must be non-negative and non-NaN');\n    }\n    return highWaterMark;\n  };\n  exports.ValidateAndNormalizeQueuingStrategy = function (size, highWaterMark) {\n    if (size !== undefined && typeof size !== 'function') {\n      throw new TypeError('size property of a queuing strategy must be a function');\n    }\n    highWaterMark = exports.ValidateAndNormalizeHighWaterMark(highWaterMark);\n    return {\n      size: size,\n      highWaterMark: highWaterMark\n    };\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  function rethrowAssertionErrorRejection(e) {\n    if (e && e.constructor === AssertionError) {\n      setTimeout(function () {\n        throw e;\n      }, 0);\n    }\n  }\n  function AssertionError(message) {\n    this.name = 'AssertionError';\n    this.message = message || '';\n    this.stack = new Error().stack;\n  }\n  AssertionError.prototype = Object.create(Error.prototype);\n  AssertionError.prototype.constructor = AssertionError;\n  function assert(value, message) {\n    if (!value) {\n      throw new AssertionError(message);\n    }\n  }\n  module.exports = {\n    rethrowAssertionErrorRejection: rethrowAssertionErrorRejection,\n    AssertionError: AssertionError,\n    assert: assert\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      typeIsObject = _require.typeIsObject;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert,\n      rethrowAssertionErrorRejection = _require2.rethrowAssertionErrorRejection;\n  var _require3 = __w_pdfjs_require__(3),\n      DequeueValue = _require3.DequeueValue,\n      EnqueueValueWithSize = _require3.EnqueueValueWithSize,\n      PeekQueueValue = _require3.PeekQueueValue,\n      ResetQueue = _require3.ResetQueue;\n  var WritableStream = function () {\n    function WritableStream() {\n      var underlyingSink = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          _ref$highWaterMark = _ref.highWaterMark,\n          highWaterMark = _ref$highWaterMark === undefined ? 1 : _ref$highWaterMark;\n      _classCallCheck(this, WritableStream);\n      this._state = 'writable';\n      this._storedError = undefined;\n      this._writer = undefined;\n      this._writableStreamController = undefined;\n      this._writeRequests = [];\n      this._inFlightWriteRequest = undefined;\n      this._closeRequest = undefined;\n      this._inFlightCloseRequest = undefined;\n      this._pendingAbortRequest = undefined;\n      this._backpressure = false;\n      var type = underlyingSink.type;\n      if (type !== undefined) {\n        throw new RangeError('Invalid type is specified');\n      }\n      this._writableStreamController = new WritableStreamDefaultController(this, underlyingSink, size, highWaterMark);\n      this._writableStreamController.__startSteps();\n    }\n    _createClass(WritableStream, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('abort'));\n        }\n        if (IsWritableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot abort a stream that already has a writer'));\n        }\n        return WritableStreamAbort(this, reason);\n      }\n    }, {\n      key: 'getWriter',\n      value: function getWriter() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('getWriter');\n        }\n        return AcquireWritableStreamDefaultWriter(this);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsWritableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsWritableStreamLocked(this);\n      }\n    }]);\n    return WritableStream;\n  }();\n  module.exports = {\n    AcquireWritableStreamDefaultWriter: AcquireWritableStreamDefaultWriter,\n    IsWritableStream: IsWritableStream,\n    IsWritableStreamLocked: IsWritableStreamLocked,\n    WritableStream: WritableStream,\n    WritableStreamAbort: WritableStreamAbort,\n    WritableStreamDefaultControllerError: WritableStreamDefaultControllerError,\n    WritableStreamDefaultWriterCloseWithErrorPropagation: WritableStreamDefaultWriterCloseWithErrorPropagation,\n    WritableStreamDefaultWriterRelease: WritableStreamDefaultWriterRelease,\n    WritableStreamDefaultWriterWrite: WritableStreamDefaultWriterWrite,\n    WritableStreamCloseQueuedOrInFlight: WritableStreamCloseQueuedOrInFlight\n  };\n  function AcquireWritableStreamDefaultWriter(stream) {\n    return new WritableStreamDefaultWriter(stream);\n  }\n  function IsWritableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_writableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsWritableStreamLocked(stream) {\n    assert(IsWritableStream(stream) === true, 'IsWritableStreamLocked should only be used on known writable streams');\n    if (stream._writer === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamAbort(stream, reason) {\n    var state = stream._state;\n    if (state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    var error = new TypeError('Requested to abort');\n    if (stream._pendingAbortRequest !== undefined) {\n      return Promise.reject(error);\n    }\n    assert(state === 'writable' || state === 'erroring', 'state must be writable or erroring');\n    var wasAlreadyErroring = false;\n    if (state === 'erroring') {\n      wasAlreadyErroring = true;\n      reason = undefined;\n    }\n    var promise = new Promise(function (resolve, reject) {\n      stream._pendingAbortRequest = {\n        _resolve: resolve,\n        _reject: reject,\n        _reason: reason,\n        _wasAlreadyErroring: wasAlreadyErroring\n      };\n    });\n    if (wasAlreadyErroring === false) {\n      WritableStreamStartErroring(stream, error);\n    }\n    return promise;\n  }\n  function WritableStreamAddWriteRequest(stream) {\n    assert(IsWritableStreamLocked(stream) === true);\n    assert(stream._state === 'writable');\n    var promise = new Promise(function (resolve, reject) {\n      var writeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._writeRequests.push(writeRequest);\n    });\n    return promise;\n  }\n  function WritableStreamDealWithRejection(stream, error) {\n    var state = stream._state;\n    if (state === 'writable') {\n      WritableStreamStartErroring(stream, error);\n      return;\n    }\n    assert(state === 'erroring');\n    WritableStreamFinishErroring(stream);\n  }\n  function WritableStreamStartErroring(stream, reason) {\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n    assert(stream._state === 'writable', 'state must be writable');\n    var controller = stream._writableStreamController;\n    assert(controller !== undefined, 'controller must not be undefined');\n    stream._state = 'erroring';\n    stream._storedError = reason;\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, reason);\n    }\n    if (WritableStreamHasOperationMarkedInFlight(stream) === false && controller._started === true) {\n      WritableStreamFinishErroring(stream);\n    }\n  }\n  function WritableStreamFinishErroring(stream) {\n    assert(stream._state === 'erroring', 'stream._state === erroring');\n    assert(WritableStreamHasOperationMarkedInFlight(stream) === false, 'WritableStreamHasOperationMarkedInFlight(stream) === false');\n    stream._state = 'errored';\n    stream._writableStreamController.__errorSteps();\n    var storedError = stream._storedError;\n    for (var i = 0; i < stream._writeRequests.length; i++) {\n      var writeRequest = stream._writeRequests[i];\n      writeRequest._reject(storedError);\n    }\n    stream._writeRequests = [];\n    if (stream._pendingAbortRequest === undefined) {\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var abortRequest = stream._pendingAbortRequest;\n    stream._pendingAbortRequest = undefined;\n    if (abortRequest._wasAlreadyErroring === true) {\n      abortRequest._reject(storedError);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n      return;\n    }\n    var promise = stream._writableStreamController.__abortSteps(abortRequest._reason);\n    promise.then(function () {\n      abortRequest._resolve();\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    }, function (reason) {\n      abortRequest._reject(reason);\n      WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream);\n    });\n  }\n  function WritableStreamFinishInFlightWrite(stream) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._resolve(undefined);\n    stream._inFlightWriteRequest = undefined;\n  }\n  function WritableStreamFinishInFlightWriteWithError(stream, error) {\n    assert(stream._inFlightWriteRequest !== undefined);\n    stream._inFlightWriteRequest._reject(error);\n    stream._inFlightWriteRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamFinishInFlightClose(stream) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._resolve(undefined);\n    stream._inFlightCloseRequest = undefined;\n    var state = stream._state;\n    assert(state === 'writable' || state === 'erroring');\n    if (state === 'erroring') {\n      stream._storedError = undefined;\n      if (stream._pendingAbortRequest !== undefined) {\n        stream._pendingAbortRequest._resolve();\n        stream._pendingAbortRequest = undefined;\n      }\n    }\n    stream._state = 'closed';\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseResolve(writer);\n    }\n    assert(stream._pendingAbortRequest === undefined, 'stream._pendingAbortRequest === undefined');\n    assert(stream._storedError === undefined, 'stream._storedError === undefined');\n  }\n  function WritableStreamFinishInFlightCloseWithError(stream, error) {\n    assert(stream._inFlightCloseRequest !== undefined);\n    stream._inFlightCloseRequest._reject(error);\n    stream._inFlightCloseRequest = undefined;\n    assert(stream._state === 'writable' || stream._state === 'erroring');\n    if (stream._pendingAbortRequest !== undefined) {\n      stream._pendingAbortRequest._reject(error);\n      stream._pendingAbortRequest = undefined;\n    }\n    WritableStreamDealWithRejection(stream, error);\n  }\n  function WritableStreamCloseQueuedOrInFlight(stream) {\n    if (stream._closeRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamHasOperationMarkedInFlight(stream) {\n    if (stream._inFlightWriteRequest === undefined && stream._inFlightCloseRequest === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamMarkCloseRequestInFlight(stream) {\n    assert(stream._inFlightCloseRequest === undefined);\n    assert(stream._closeRequest !== undefined);\n    stream._inFlightCloseRequest = stream._closeRequest;\n    stream._closeRequest = undefined;\n  }\n  function WritableStreamMarkFirstWriteRequestInFlight(stream) {\n    assert(stream._inFlightWriteRequest === undefined, 'there must be no pending write request');\n    assert(stream._writeRequests.length !== 0, 'writeRequests must not be empty');\n    stream._inFlightWriteRequest = stream._writeRequests.shift();\n  }\n  function WritableStreamRejectCloseAndClosedPromiseIfNeeded(stream) {\n    assert(stream._state === 'errored', '_stream_.[[state]] is `\"errored\"`');\n    if (stream._closeRequest !== undefined) {\n      assert(stream._inFlightCloseRequest === undefined);\n      stream._closeRequest._reject(stream._storedError);\n      stream._closeRequest = undefined;\n    }\n    var writer = stream._writer;\n    if (writer !== undefined) {\n      defaultWriterClosedPromiseReject(writer, stream._storedError);\n      writer._closedPromise.catch(function () {});\n    }\n  }\n  function WritableStreamUpdateBackpressure(stream, backpressure) {\n    assert(stream._state === 'writable');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var writer = stream._writer;\n    if (writer !== undefined && backpressure !== stream._backpressure) {\n      if (backpressure === true) {\n        defaultWriterReadyPromiseReset(writer);\n      } else {\n        assert(backpressure === false);\n        defaultWriterReadyPromiseResolve(writer);\n      }\n    }\n    stream._backpressure = backpressure;\n  }\n  var WritableStreamDefaultWriter = function () {\n    function WritableStreamDefaultWriter(stream) {\n      _classCallCheck(this, WritableStreamDefaultWriter);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultWriter can only be constructed with a WritableStream instance');\n      }\n      if (IsWritableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive writing by another writer');\n      }\n      this._ownerWritableStream = stream;\n      stream._writer = this;\n      var state = stream._state;\n      if (state === 'writable') {\n        if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._backpressure === true) {\n          defaultWriterReadyPromiseInitialize(this);\n        } else {\n          defaultWriterReadyPromiseInitializeAsResolved(this);\n        }\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'erroring') {\n        defaultWriterReadyPromiseInitializeAsRejected(this, stream._storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitialize(this);\n      } else if (state === 'closed') {\n        defaultWriterReadyPromiseInitializeAsResolved(this);\n        defaultWriterClosedPromiseInitializeAsResolved(this);\n      } else {\n        assert(state === 'errored', 'state must be errored');\n        var storedError = stream._storedError;\n        defaultWriterReadyPromiseInitializeAsRejected(this, storedError);\n        this._readyPromise.catch(function () {});\n        defaultWriterClosedPromiseInitializeAsRejected(this, storedError);\n        this._closedPromise.catch(function () {});\n      }\n    }\n    _createClass(WritableStreamDefaultWriter, [{\n      key: 'abort',\n      value: function abort(reason) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('abort'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('abort'));\n        }\n        return WritableStreamDefaultWriterAbort(this, reason);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('close'));\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return Promise.reject(defaultWriterLockException('close'));\n        }\n        if (WritableStreamCloseQueuedOrInFlight(stream) === true) {\n          return Promise.reject(new TypeError('cannot close an already-closing stream'));\n        }\n        return WritableStreamDefaultWriterClose(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('releaseLock');\n        }\n        var stream = this._ownerWritableStream;\n        if (stream === undefined) {\n          return;\n        }\n        assert(stream._writer !== undefined);\n        WritableStreamDefaultWriterRelease(this);\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('write'));\n        }\n        if (this._ownerWritableStream === undefined) {\n          return Promise.reject(defaultWriterLockException('write to'));\n        }\n        return WritableStreamDefaultWriterWrite(this, chunk);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          throw defaultWriterBrandCheckException('desiredSize');\n        }\n        if (this._ownerWritableStream === undefined) {\n          throw defaultWriterLockException('desiredSize');\n        }\n        return WritableStreamDefaultWriterGetDesiredSize(this);\n      }\n    }, {\n      key: 'ready',\n      get: function get() {\n        if (IsWritableStreamDefaultWriter(this) === false) {\n          return Promise.reject(defaultWriterBrandCheckException('ready'));\n        }\n        return this._readyPromise;\n      }\n    }]);\n    return WritableStreamDefaultWriter;\n  }();\n  function IsWritableStreamDefaultWriter(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_ownerWritableStream')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultWriterAbort(writer, reason) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    return WritableStreamAbort(stream, reason);\n  }\n  function WritableStreamDefaultWriterClose(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return Promise.reject(new TypeError('The stream (in ' + state + ' state) is not in the writable state and cannot be closed'));\n    }\n    assert(state === 'writable' || state === 'erroring');\n    assert(WritableStreamCloseQueuedOrInFlight(stream) === false);\n    var promise = new Promise(function (resolve, reject) {\n      var closeRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._closeRequest = closeRequest;\n    });\n    if (stream._backpressure === true && state === 'writable') {\n      defaultWriterReadyPromiseResolve(writer);\n    }\n    WritableStreamDefaultControllerClose(stream._writableStreamController);\n    return promise;\n  }\n  function WritableStreamDefaultWriterCloseWithErrorPropagation(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var state = stream._state;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.resolve();\n    }\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable' || state === 'erroring');\n    return WritableStreamDefaultWriterClose(writer);\n  }\n  function WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, error) {\n    if (writer._closedPromiseState === 'pending') {\n      defaultWriterClosedPromiseReject(writer, error);\n    } else {\n      defaultWriterClosedPromiseResetToRejected(writer, error);\n    }\n    writer._closedPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, error) {\n    if (writer._readyPromiseState === 'pending') {\n      defaultWriterReadyPromiseReject(writer, error);\n    } else {\n      defaultWriterReadyPromiseResetToRejected(writer, error);\n    }\n    writer._readyPromise.catch(function () {});\n  }\n  function WritableStreamDefaultWriterGetDesiredSize(writer) {\n    var stream = writer._ownerWritableStream;\n    var state = stream._state;\n    if (state === 'errored' || state === 'erroring') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return WritableStreamDefaultControllerGetDesiredSize(stream._writableStreamController);\n  }\n  function WritableStreamDefaultWriterRelease(writer) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    assert(stream._writer === writer);\n    var releasedError = new TypeError('Writer was released and can no longer be used to monitor the stream\\'s closedness');\n    WritableStreamDefaultWriterEnsureReadyPromiseRejected(writer, releasedError);\n    WritableStreamDefaultWriterEnsureClosedPromiseRejected(writer, releasedError);\n    stream._writer = undefined;\n    writer._ownerWritableStream = undefined;\n  }\n  function WritableStreamDefaultWriterWrite(writer, chunk) {\n    var stream = writer._ownerWritableStream;\n    assert(stream !== undefined);\n    var controller = stream._writableStreamController;\n    var chunkSize = WritableStreamDefaultControllerGetChunkSize(controller, chunk);\n    if (stream !== writer._ownerWritableStream) {\n      return Promise.reject(defaultWriterLockException('write to'));\n    }\n    var state = stream._state;\n    if (state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    if (WritableStreamCloseQueuedOrInFlight(stream) === true || state === 'closed') {\n      return Promise.reject(new TypeError('The stream is closing or closed and cannot be written to'));\n    }\n    if (state === 'erroring') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(state === 'writable');\n    var promise = WritableStreamAddWriteRequest(stream);\n    WritableStreamDefaultControllerWrite(controller, chunk, chunkSize);\n    return promise;\n  }\n  var WritableStreamDefaultController = function () {\n    function WritableStreamDefaultController(stream, underlyingSink, size, highWaterMark) {\n      _classCallCheck(this, WritableStreamDefaultController);\n      if (IsWritableStream(stream) === false) {\n        throw new TypeError('WritableStreamDefaultController can only be constructed with a WritableStream instance');\n      }\n      if (stream._writableStreamController !== undefined) {\n        throw new TypeError('WritableStreamDefaultController instances can only be created by the WritableStream constructor');\n      }\n      this._controlledWritableStream = stream;\n      this._underlyingSink = underlyingSink;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(this);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    _createClass(WritableStreamDefaultController, [{\n      key: 'error',\n      value: function error(e) {\n        if (IsWritableStreamDefaultController(this) === false) {\n          throw new TypeError('WritableStreamDefaultController.prototype.error can only be used on a WritableStreamDefaultController');\n        }\n        var state = this._controlledWritableStream._state;\n        if (state !== 'writable') {\n          return;\n        }\n        WritableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__abortSteps',\n      value: function __abortSteps(reason) {\n        return PromiseInvokeOrNoop(this._underlyingSink, 'abort', [reason]);\n      }\n    }, {\n      key: '__errorSteps',\n      value: function __errorSteps() {\n        ResetQueue(this);\n      }\n    }, {\n      key: '__startSteps',\n      value: function __startSteps() {\n        var _this = this;\n        var startResult = InvokeOrNoop(this._underlyingSink, 'start', [this]);\n        var stream = this._controlledWritableStream;\n        Promise.resolve(startResult).then(function () {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDefaultControllerAdvanceQueueIfNeeded(_this);\n        }, function (r) {\n          assert(stream._state === 'writable' || stream._state === 'erroring');\n          _this._started = true;\n          WritableStreamDealWithRejection(stream, r);\n        }).catch(rethrowAssertionErrorRejection);\n      }\n    }]);\n    return WritableStreamDefaultController;\n  }();\n  function WritableStreamDefaultControllerClose(controller) {\n    EnqueueValueWithSize(controller, 'close', 0);\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function WritableStreamDefaultControllerGetChunkSize(controller, chunk) {\n    var strategySize = controller._strategySize;\n    if (strategySize === undefined) {\n      return 1;\n    }\n    try {\n      return strategySize(chunk);\n    } catch (chunkSizeE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n      return 1;\n    }\n  }\n  function WritableStreamDefaultControllerGetDesiredSize(controller) {\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function WritableStreamDefaultControllerWrite(controller, chunk, chunkSize) {\n    var writeRecord = { chunk: chunk };\n    try {\n      EnqueueValueWithSize(controller, writeRecord, chunkSize);\n    } catch (enqueueE) {\n      WritableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n      return;\n    }\n    var stream = controller._controlledWritableStream;\n    if (WritableStreamCloseQueuedOrInFlight(stream) === false && stream._state === 'writable') {\n      var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n      WritableStreamUpdateBackpressure(stream, backpressure);\n    }\n    WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n  }\n  function IsWritableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSink')) {\n      return false;\n    }\n    return true;\n  }\n  function WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller) {\n    var stream = controller._controlledWritableStream;\n    if (controller._started === false) {\n      return;\n    }\n    if (stream._inFlightWriteRequest !== undefined) {\n      return;\n    }\n    var state = stream._state;\n    if (state === 'closed' || state === 'errored') {\n      return;\n    }\n    if (state === 'erroring') {\n      WritableStreamFinishErroring(stream);\n      return;\n    }\n    if (controller._queue.length === 0) {\n      return;\n    }\n    var writeRecord = PeekQueueValue(controller);\n    if (writeRecord === 'close') {\n      WritableStreamDefaultControllerProcessClose(controller);\n    } else {\n      WritableStreamDefaultControllerProcessWrite(controller, writeRecord.chunk);\n    }\n  }\n  function WritableStreamDefaultControllerErrorIfNeeded(controller, error) {\n    if (controller._controlledWritableStream._state === 'writable') {\n      WritableStreamDefaultControllerError(controller, error);\n    }\n  }\n  function WritableStreamDefaultControllerProcessClose(controller) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkCloseRequestInFlight(stream);\n    DequeueValue(controller);\n    assert(controller._queue.length === 0, 'queue must be empty once the final write record is dequeued');\n    var sinkClosePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'close', []);\n    sinkClosePromise.then(function () {\n      WritableStreamFinishInFlightClose(stream);\n    }, function (reason) {\n      WritableStreamFinishInFlightCloseWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerProcessWrite(controller, chunk) {\n    var stream = controller._controlledWritableStream;\n    WritableStreamMarkFirstWriteRequestInFlight(stream);\n    var sinkWritePromise = PromiseInvokeOrNoop(controller._underlyingSink, 'write', [chunk, controller]);\n    sinkWritePromise.then(function () {\n      WritableStreamFinishInFlightWrite(stream);\n      var state = stream._state;\n      assert(state === 'writable' || state === 'erroring');\n      DequeueValue(controller);\n      if (WritableStreamCloseQueuedOrInFlight(stream) === false && state === 'writable') {\n        var backpressure = WritableStreamDefaultControllerGetBackpressure(controller);\n        WritableStreamUpdateBackpressure(stream, backpressure);\n      }\n      WritableStreamDefaultControllerAdvanceQueueIfNeeded(controller);\n    }, function (reason) {\n      WritableStreamFinishInFlightWriteWithError(stream, reason);\n    }).catch(rethrowAssertionErrorRejection);\n  }\n  function WritableStreamDefaultControllerGetBackpressure(controller) {\n    var desiredSize = WritableStreamDefaultControllerGetDesiredSize(controller);\n    return desiredSize <= 0;\n  }\n  function WritableStreamDefaultControllerError(controller, error) {\n    var stream = controller._controlledWritableStream;\n    assert(stream._state === 'writable');\n    WritableStreamStartErroring(stream, error);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('WritableStream.prototype.' + name + ' can only be used on a WritableStream');\n  }\n  function defaultWriterBrandCheckException(name) {\n    return new TypeError('WritableStreamDefaultWriter.prototype.' + name + ' can only be used on a WritableStreamDefaultWriter');\n  }\n  function defaultWriterLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released writer');\n  }\n  function defaultWriterClosedPromiseInitialize(writer) {\n    writer._closedPromise = new Promise(function (resolve, reject) {\n      writer._closedPromise_resolve = resolve;\n      writer._closedPromise_reject = reject;\n      writer._closedPromiseState = 'pending';\n    });\n  }\n  function defaultWriterClosedPromiseInitializeAsRejected(writer, reason) {\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseInitializeAsResolved(writer) {\n    writer._closedPromise = Promise.resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterClosedPromiseReject(writer, reason) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_reject(reason);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResetToRejected(writer, reason) {\n    assert(writer._closedPromise_resolve === undefined, 'writer._closedPromise_resolve === undefined');\n    assert(writer._closedPromise_reject === undefined, 'writer._closedPromise_reject === undefined');\n    assert(writer._closedPromiseState !== 'pending', 'writer._closedPromiseState is not pending');\n    writer._closedPromise = Promise.reject(reason);\n    writer._closedPromiseState = 'rejected';\n  }\n  function defaultWriterClosedPromiseResolve(writer) {\n    assert(writer._closedPromise_resolve !== undefined, 'writer._closedPromise_resolve !== undefined');\n    assert(writer._closedPromise_reject !== undefined, 'writer._closedPromise_reject !== undefined');\n    assert(writer._closedPromiseState === 'pending', 'writer._closedPromiseState is pending');\n    writer._closedPromise_resolve(undefined);\n    writer._closedPromise_resolve = undefined;\n    writer._closedPromise_reject = undefined;\n    writer._closedPromiseState = 'resolved';\n  }\n  function defaultWriterReadyPromiseInitialize(writer) {\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseInitializeAsRejected(writer, reason) {\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseInitializeAsResolved(writer) {\n    writer._readyPromise = Promise.resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n  function defaultWriterReadyPromiseReject(writer, reason) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_reject(reason);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseReset(writer) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = new Promise(function (resolve, reject) {\n      writer._readyPromise_resolve = resolve;\n      writer._readyPromise_reject = reject;\n    });\n    writer._readyPromiseState = 'pending';\n  }\n  function defaultWriterReadyPromiseResetToRejected(writer, reason) {\n    assert(writer._readyPromise_resolve === undefined, 'writer._readyPromise_resolve === undefined');\n    assert(writer._readyPromise_reject === undefined, 'writer._readyPromise_reject === undefined');\n    writer._readyPromise = Promise.reject(reason);\n    writer._readyPromiseState = 'rejected';\n  }\n  function defaultWriterReadyPromiseResolve(writer) {\n    assert(writer._readyPromise_resolve !== undefined, 'writer._readyPromise_resolve !== undefined');\n    assert(writer._readyPromise_reject !== undefined, 'writer._readyPromise_reject !== undefined');\n    writer._readyPromise_resolve(undefined);\n    writer._readyPromise_resolve = undefined;\n    writer._readyPromise_reject = undefined;\n    writer._readyPromiseState = 'fulfilled';\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _require = __w_pdfjs_require__(0),\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber;\n  var _require2 = __w_pdfjs_require__(1),\n      assert = _require2.assert;\n  exports.DequeueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: DequeueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never dequeue from an empty queue.');\n    var pair = container._queue.shift();\n    container._queueTotalSize -= pair.size;\n    if (container._queueTotalSize < 0) {\n      container._queueTotalSize = 0;\n    }\n    return pair.value;\n  };\n  exports.EnqueueValueWithSize = function (container, value, size) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: EnqueueValueWithSize should only be used on containers with [[queue]] and ' + '[[queueTotalSize]].');\n    size = Number(size);\n    if (!IsFiniteNonNegativeNumber(size)) {\n      throw new RangeError('Size must be a finite, non-NaN, non-negative number.');\n    }\n    container._queue.push({\n      value: value,\n      size: size\n    });\n    container._queueTotalSize += size;\n  };\n  exports.PeekQueueValue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: PeekQueueValue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    assert(container._queue.length > 0, 'Spec-level failure: should never peek at an empty queue.');\n    var pair = container._queue[0];\n    return pair.value;\n  };\n  exports.ResetQueue = function (container) {\n    assert('_queue' in container && '_queueTotalSize' in container, 'Spec-level failure: ResetQueue should only be used on containers with [[queue]] and [[queueTotalSize]].');\n    container._queue = [];\n    container._queueTotalSize = 0;\n  };\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(0),\n      ArrayBufferCopy = _require.ArrayBufferCopy,\n      CreateIterResultObject = _require.CreateIterResultObject,\n      IsFiniteNonNegativeNumber = _require.IsFiniteNonNegativeNumber,\n      InvokeOrNoop = _require.InvokeOrNoop,\n      PromiseInvokeOrNoop = _require.PromiseInvokeOrNoop,\n      TransferArrayBuffer = _require.TransferArrayBuffer,\n      ValidateAndNormalizeQueuingStrategy = _require.ValidateAndNormalizeQueuingStrategy,\n      ValidateAndNormalizeHighWaterMark = _require.ValidateAndNormalizeHighWaterMark;\n  var _require2 = __w_pdfjs_require__(0),\n      createArrayFromList = _require2.createArrayFromList,\n      createDataProperty = _require2.createDataProperty,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(1),\n      assert = _require3.assert,\n      rethrowAssertionErrorRejection = _require3.rethrowAssertionErrorRejection;\n  var _require4 = __w_pdfjs_require__(3),\n      DequeueValue = _require4.DequeueValue,\n      EnqueueValueWithSize = _require4.EnqueueValueWithSize,\n      ResetQueue = _require4.ResetQueue;\n  var _require5 = __w_pdfjs_require__(2),\n      AcquireWritableStreamDefaultWriter = _require5.AcquireWritableStreamDefaultWriter,\n      IsWritableStream = _require5.IsWritableStream,\n      IsWritableStreamLocked = _require5.IsWritableStreamLocked,\n      WritableStreamAbort = _require5.WritableStreamAbort,\n      WritableStreamDefaultWriterCloseWithErrorPropagation = _require5.WritableStreamDefaultWriterCloseWithErrorPropagation,\n      WritableStreamDefaultWriterRelease = _require5.WritableStreamDefaultWriterRelease,\n      WritableStreamDefaultWriterWrite = _require5.WritableStreamDefaultWriterWrite,\n      WritableStreamCloseQueuedOrInFlight = _require5.WritableStreamCloseQueuedOrInFlight;\n  var ReadableStream = function () {\n    function ReadableStream() {\n      var underlyingSource = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n          size = _ref.size,\n          highWaterMark = _ref.highWaterMark;\n      _classCallCheck(this, ReadableStream);\n      this._state = 'readable';\n      this._reader = undefined;\n      this._storedError = undefined;\n      this._disturbed = false;\n      this._readableStreamController = undefined;\n      var type = underlyingSource.type;\n      var typeString = String(type);\n      if (typeString === 'bytes') {\n        if (highWaterMark === undefined) {\n          highWaterMark = 0;\n        }\n        this._readableStreamController = new ReadableByteStreamController(this, underlyingSource, highWaterMark);\n      } else if (type === undefined) {\n        if (highWaterMark === undefined) {\n          highWaterMark = 1;\n        }\n        this._readableStreamController = new ReadableStreamDefaultController(this, underlyingSource, size, highWaterMark);\n      } else {\n        throw new RangeError('Invalid type is specified');\n      }\n    }\n    _createClass(ReadableStream, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('cancel'));\n        }\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('Cannot cancel a stream that already has a reader'));\n        }\n        return ReadableStreamCancel(this, reason);\n      }\n    }, {\n      key: 'getReader',\n      value: function getReader() {\n        var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n            mode = _ref2.mode;\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('getReader');\n        }\n        if (mode === undefined) {\n          return AcquireReadableStreamDefaultReader(this);\n        }\n        mode = String(mode);\n        if (mode === 'byob') {\n          return AcquireReadableStreamBYOBReader(this);\n        }\n        throw new RangeError('Invalid mode is specified');\n      }\n    }, {\n      key: 'pipeThrough',\n      value: function pipeThrough(_ref3, options) {\n        var writable = _ref3.writable,\n            readable = _ref3.readable;\n        var promise = this.pipeTo(writable, options);\n        ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise);\n        return readable;\n      }\n    }, {\n      key: 'pipeTo',\n      value: function pipeTo(dest) {\n        var _this = this;\n        var _ref4 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n            preventClose = _ref4.preventClose,\n            preventAbort = _ref4.preventAbort,\n            preventCancel = _ref4.preventCancel;\n        if (IsReadableStream(this) === false) {\n          return Promise.reject(streamBrandCheckException('pipeTo'));\n        }\n        if (IsWritableStream(dest) === false) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo\\'s first argument must be a WritableStream'));\n        }\n        preventClose = Boolean(preventClose);\n        preventAbort = Boolean(preventAbort);\n        preventCancel = Boolean(preventCancel);\n        if (IsReadableStreamLocked(this) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked ReadableStream'));\n        }\n        if (IsWritableStreamLocked(dest) === true) {\n          return Promise.reject(new TypeError('ReadableStream.prototype.pipeTo cannot be used on a locked WritableStream'));\n        }\n        var reader = AcquireReadableStreamDefaultReader(this);\n        var writer = AcquireWritableStreamDefaultWriter(dest);\n        var shuttingDown = false;\n        var currentWrite = Promise.resolve();\n        return new Promise(function (resolve, reject) {\n          function pipeLoop() {\n            currentWrite = Promise.resolve();\n            if (shuttingDown === true) {\n              return Promise.resolve();\n            }\n            return writer._readyPromise.then(function () {\n              return ReadableStreamDefaultReaderRead(reader).then(function (_ref5) {\n                var value = _ref5.value,\n                    done = _ref5.done;\n                if (done === true) {\n                  return;\n                }\n                currentWrite = WritableStreamDefaultWriterWrite(writer, value).catch(function () {});\n              });\n            }).then(pipeLoop);\n          }\n          isOrBecomesErrored(_this, reader._closedPromise, function (storedError) {\n            if (preventAbort === false) {\n              shutdownWithAction(function () {\n                return WritableStreamAbort(dest, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesErrored(dest, writer._closedPromise, function (storedError) {\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, storedError);\n              }, true, storedError);\n            } else {\n              shutdown(true, storedError);\n            }\n          });\n          isOrBecomesClosed(_this, reader._closedPromise, function () {\n            if (preventClose === false) {\n              shutdownWithAction(function () {\n                return WritableStreamDefaultWriterCloseWithErrorPropagation(writer);\n              });\n            } else {\n              shutdown();\n            }\n          });\n          if (WritableStreamCloseQueuedOrInFlight(dest) === true || dest._state === 'closed') {\n            var destClosed = new TypeError('the destination writable stream closed before all data could be piped to it');\n            if (preventCancel === false) {\n              shutdownWithAction(function () {\n                return ReadableStreamCancel(_this, destClosed);\n              }, true, destClosed);\n            } else {\n              shutdown(true, destClosed);\n            }\n          }\n          pipeLoop().catch(function (err) {\n            currentWrite = Promise.resolve();\n            rethrowAssertionErrorRejection(err);\n          });\n          function waitForWritesToFinish() {\n            var oldCurrentWrite = currentWrite;\n            return currentWrite.then(function () {\n              return oldCurrentWrite !== currentWrite ? waitForWritesToFinish() : undefined;\n            });\n          }\n          function isOrBecomesErrored(stream, promise, action) {\n            if (stream._state === 'errored') {\n              action(stream._storedError);\n            } else {\n              promise.catch(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function isOrBecomesClosed(stream, promise, action) {\n            if (stream._state === 'closed') {\n              action();\n            } else {\n              promise.then(action).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdownWithAction(action, originalIsError, originalError) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(doTheRest);\n            } else {\n              doTheRest();\n            }\n            function doTheRest() {\n              action().then(function () {\n                return finalize(originalIsError, originalError);\n              }, function (newError) {\n                return finalize(true, newError);\n              }).catch(rethrowAssertionErrorRejection);\n            }\n          }\n          function shutdown(isError, error) {\n            if (shuttingDown === true) {\n              return;\n            }\n            shuttingDown = true;\n            if (dest._state === 'writable' && WritableStreamCloseQueuedOrInFlight(dest) === false) {\n              waitForWritesToFinish().then(function () {\n                return finalize(isError, error);\n              }).catch(rethrowAssertionErrorRejection);\n            } else {\n              finalize(isError, error);\n            }\n          }\n          function finalize(isError, error) {\n            WritableStreamDefaultWriterRelease(writer);\n            ReadableStreamReaderGenericRelease(reader);\n            if (isError) {\n              reject(error);\n            } else {\n              resolve(undefined);\n            }\n          }\n        });\n      }\n    }, {\n      key: 'tee',\n      value: function tee() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('tee');\n        }\n        var branches = ReadableStreamTee(this, false);\n        return createArrayFromList(branches);\n      }\n    }, {\n      key: 'locked',\n      get: function get() {\n        if (IsReadableStream(this) === false) {\n          throw streamBrandCheckException('locked');\n        }\n        return IsReadableStreamLocked(this);\n      }\n    }]);\n    return ReadableStream;\n  }();\n  module.exports = {\n    ReadableStream: ReadableStream,\n    IsReadableStreamDisturbed: IsReadableStreamDisturbed,\n    ReadableStreamDefaultControllerClose: ReadableStreamDefaultControllerClose,\n    ReadableStreamDefaultControllerEnqueue: ReadableStreamDefaultControllerEnqueue,\n    ReadableStreamDefaultControllerError: ReadableStreamDefaultControllerError,\n    ReadableStreamDefaultControllerGetDesiredSize: ReadableStreamDefaultControllerGetDesiredSize\n  };\n  function AcquireReadableStreamBYOBReader(stream) {\n    return new ReadableStreamBYOBReader(stream);\n  }\n  function AcquireReadableStreamDefaultReader(stream) {\n    return new ReadableStreamDefaultReader(stream);\n  }\n  function IsReadableStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readableStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDisturbed(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamDisturbed should only be used on known readable streams');\n    return stream._disturbed;\n  }\n  function IsReadableStreamLocked(stream) {\n    assert(IsReadableStream(stream) === true, 'IsReadableStreamLocked should only be used on known readable streams');\n    if (stream._reader === undefined) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamTee(stream, cloneForBranch2) {\n    assert(IsReadableStream(stream) === true);\n    assert(typeof cloneForBranch2 === 'boolean');\n    var reader = AcquireReadableStreamDefaultReader(stream);\n    var teeState = {\n      closedOrErrored: false,\n      canceled1: false,\n      canceled2: false,\n      reason1: undefined,\n      reason2: undefined\n    };\n    teeState.promise = new Promise(function (resolve) {\n      teeState._resolve = resolve;\n    });\n    var pull = create_ReadableStreamTeePullFunction();\n    pull._reader = reader;\n    pull._teeState = teeState;\n    pull._cloneForBranch2 = cloneForBranch2;\n    var cancel1 = create_ReadableStreamTeeBranch1CancelFunction();\n    cancel1._stream = stream;\n    cancel1._teeState = teeState;\n    var cancel2 = create_ReadableStreamTeeBranch2CancelFunction();\n    cancel2._stream = stream;\n    cancel2._teeState = teeState;\n    var underlyingSource1 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource1, 'pull', pull);\n    createDataProperty(underlyingSource1, 'cancel', cancel1);\n    var branch1Stream = new ReadableStream(underlyingSource1);\n    var underlyingSource2 = Object.create(Object.prototype);\n    createDataProperty(underlyingSource2, 'pull', pull);\n    createDataProperty(underlyingSource2, 'cancel', cancel2);\n    var branch2Stream = new ReadableStream(underlyingSource2);\n    pull._branch1 = branch1Stream._readableStreamController;\n    pull._branch2 = branch2Stream._readableStreamController;\n    reader._closedPromise.catch(function (r) {\n      if (teeState.closedOrErrored === true) {\n        return;\n      }\n      ReadableStreamDefaultControllerError(pull._branch1, r);\n      ReadableStreamDefaultControllerError(pull._branch2, r);\n      teeState.closedOrErrored = true;\n    });\n    return [branch1Stream, branch2Stream];\n  }\n  function create_ReadableStreamTeePullFunction() {\n    function f() {\n      var reader = f._reader,\n          branch1 = f._branch1,\n          branch2 = f._branch2,\n          teeState = f._teeState;\n      return ReadableStreamDefaultReaderRead(reader).then(function (result) {\n        assert(typeIsObject(result));\n        var value = result.value;\n        var done = result.done;\n        assert(typeof done === 'boolean');\n        if (done === true && teeState.closedOrErrored === false) {\n          if (teeState.canceled1 === false) {\n            ReadableStreamDefaultControllerClose(branch1);\n          }\n          if (teeState.canceled2 === false) {\n            ReadableStreamDefaultControllerClose(branch2);\n          }\n          teeState.closedOrErrored = true;\n        }\n        if (teeState.closedOrErrored === true) {\n          return;\n        }\n        var value1 = value;\n        var value2 = value;\n        if (teeState.canceled1 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch1, value1);\n        }\n        if (teeState.canceled2 === false) {\n          ReadableStreamDefaultControllerEnqueue(branch2, value2);\n        }\n      });\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch1CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled1 = true;\n      teeState.reason1 = reason;\n      if (teeState.canceled2 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function create_ReadableStreamTeeBranch2CancelFunction() {\n    function f(reason) {\n      var stream = f._stream,\n          teeState = f._teeState;\n      teeState.canceled2 = true;\n      teeState.reason2 = reason;\n      if (teeState.canceled1 === true) {\n        var compositeReason = createArrayFromList([teeState.reason1, teeState.reason2]);\n        var cancelResult = ReadableStreamCancel(stream, compositeReason);\n        teeState._resolve(cancelResult);\n      }\n      return teeState.promise;\n    }\n    return f;\n  }\n  function ReadableStreamAddReadIntoRequest(stream) {\n    assert(IsReadableStreamBYOBReader(stream._reader) === true);\n    assert(stream._state === 'readable' || stream._state === 'closed');\n    var promise = new Promise(function (resolve, reject) {\n      var readIntoRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readIntoRequests.push(readIntoRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamAddReadRequest(stream) {\n    assert(IsReadableStreamDefaultReader(stream._reader) === true);\n    assert(stream._state === 'readable');\n    var promise = new Promise(function (resolve, reject) {\n      var readRequest = {\n        _resolve: resolve,\n        _reject: reject\n      };\n      stream._reader._readRequests.push(readRequest);\n    });\n    return promise;\n  }\n  function ReadableStreamCancel(stream, reason) {\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(undefined);\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    ReadableStreamClose(stream);\n    var sourceCancelPromise = stream._readableStreamController.__cancelSteps(reason);\n    return sourceCancelPromise.then(function () {\n      return undefined;\n    });\n  }\n  function ReadableStreamClose(stream) {\n    assert(stream._state === 'readable');\n    stream._state = 'closed';\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var _resolve = reader._readRequests[i]._resolve;\n        _resolve(CreateIterResultObject(undefined, true));\n      }\n      reader._readRequests = [];\n    }\n    defaultReaderClosedPromiseResolve(reader);\n    return undefined;\n  }\n  function ReadableStreamError(stream, e) {\n    assert(IsReadableStream(stream) === true, 'stream must be ReadableStream');\n    assert(stream._state === 'readable', 'state must be readable');\n    stream._state = 'errored';\n    stream._storedError = e;\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return undefined;\n    }\n    if (IsReadableStreamDefaultReader(reader) === true) {\n      for (var i = 0; i < reader._readRequests.length; i++) {\n        var readRequest = reader._readRequests[i];\n        readRequest._reject(e);\n      }\n      reader._readRequests = [];\n    } else {\n      assert(IsReadableStreamBYOBReader(reader), 'reader must be ReadableStreamBYOBReader');\n      for (var _i = 0; _i < reader._readIntoRequests.length; _i++) {\n        var readIntoRequest = reader._readIntoRequests[_i];\n        readIntoRequest._reject(e);\n      }\n      reader._readIntoRequests = [];\n    }\n    defaultReaderClosedPromiseReject(reader, e);\n    reader._closedPromise.catch(function () {});\n  }\n  function ReadableStreamFulfillReadIntoRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readIntoRequests.length > 0);\n    var readIntoRequest = reader._readIntoRequests.shift();\n    readIntoRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamFulfillReadRequest(stream, chunk, done) {\n    var reader = stream._reader;\n    assert(reader._readRequests.length > 0);\n    var readRequest = reader._readRequests.shift();\n    readRequest._resolve(CreateIterResultObject(chunk, done));\n  }\n  function ReadableStreamGetNumReadIntoRequests(stream) {\n    return stream._reader._readIntoRequests.length;\n  }\n  function ReadableStreamGetNumReadRequests(stream) {\n    return stream._reader._readRequests.length;\n  }\n  function ReadableStreamHasBYOBReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamBYOBReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamHasDefaultReader(stream) {\n    var reader = stream._reader;\n    if (reader === undefined) {\n      return false;\n    }\n    if (IsReadableStreamDefaultReader(reader) === false) {\n      return false;\n    }\n    return true;\n  }\n  var ReadableStreamDefaultReader = function () {\n    function ReadableStreamDefaultReader(stream) {\n      _classCallCheck(this, ReadableStreamDefaultReader);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultReader can only be constructed with a ReadableStream instance');\n      }\n      if (IsReadableStreamLocked(stream) === true) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readRequests = [];\n    }\n    _createClass(ReadableStreamDefaultReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        return ReadableStreamDefaultReaderRead(this);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          throw defaultReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (IsReadableStreamDefaultReader(this) === false) {\n          return Promise.reject(defaultReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamDefaultReader;\n  }();\n  var ReadableStreamBYOBReader = function () {\n    function ReadableStreamBYOBReader(stream) {\n      _classCallCheck(this, ReadableStreamBYOBReader);\n      if (!IsReadableStream(stream)) {\n        throw new TypeError('ReadableStreamBYOBReader can only be constructed with a ReadableStream instance given a ' + 'byte source');\n      }\n      if (IsReadableByteStreamController(stream._readableStreamController) === false) {\n        throw new TypeError('Cannot construct a ReadableStreamBYOBReader for a stream not constructed with a byte ' + 'source');\n      }\n      if (IsReadableStreamLocked(stream)) {\n        throw new TypeError('This stream has already been locked for exclusive reading by another reader');\n      }\n      ReadableStreamReaderGenericInitialize(this, stream);\n      this._readIntoRequests = [];\n    }\n    _createClass(ReadableStreamBYOBReader, [{\n      key: 'cancel',\n      value: function cancel(reason) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('cancel'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('cancel'));\n        }\n        return ReadableStreamReaderGenericCancel(this, reason);\n      }\n    }, {\n      key: 'read',\n      value: function read(view) {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('read'));\n        }\n        if (this._ownerReadableStream === undefined) {\n          return Promise.reject(readerLockException('read from'));\n        }\n        if (!ArrayBuffer.isView(view)) {\n          return Promise.reject(new TypeError('view must be an array buffer view'));\n        }\n        if (view.byteLength === 0) {\n          return Promise.reject(new TypeError('view must have non-zero byteLength'));\n        }\n        return ReadableStreamBYOBReaderRead(this, view);\n      }\n    }, {\n      key: 'releaseLock',\n      value: function releaseLock() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          throw byobReaderBrandCheckException('releaseLock');\n        }\n        if (this._ownerReadableStream === undefined) {\n          return;\n        }\n        if (this._readIntoRequests.length > 0) {\n          throw new TypeError('Tried to release a reader lock when that reader has pending read() calls un-settled');\n        }\n        ReadableStreamReaderGenericRelease(this);\n      }\n    }, {\n      key: 'closed',\n      get: function get() {\n        if (!IsReadableStreamBYOBReader(this)) {\n          return Promise.reject(byobReaderBrandCheckException('closed'));\n        }\n        return this._closedPromise;\n      }\n    }]);\n    return ReadableStreamBYOBReader;\n  }();\n  function IsReadableStreamBYOBReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readIntoRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamDefaultReader(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_readRequests')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamReaderGenericInitialize(reader, stream) {\n    reader._ownerReadableStream = stream;\n    stream._reader = reader;\n    if (stream._state === 'readable') {\n      defaultReaderClosedPromiseInitialize(reader);\n    } else if (stream._state === 'closed') {\n      defaultReaderClosedPromiseInitializeAsResolved(reader);\n    } else {\n      assert(stream._state === 'errored', 'state must be errored');\n      defaultReaderClosedPromiseInitializeAsRejected(reader, stream._storedError);\n      reader._closedPromise.catch(function () {});\n    }\n  }\n  function ReadableStreamReaderGenericCancel(reader, reason) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    return ReadableStreamCancel(stream, reason);\n  }\n  function ReadableStreamReaderGenericRelease(reader) {\n    assert(reader._ownerReadableStream !== undefined);\n    assert(reader._ownerReadableStream._reader === reader);\n    if (reader._ownerReadableStream._state === 'readable') {\n      defaultReaderClosedPromiseReject(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    } else {\n      defaultReaderClosedPromiseResetToRejected(reader, new TypeError('Reader was released and can no longer be used to monitor the stream\\'s closedness'));\n    }\n    reader._closedPromise.catch(function () {});\n    reader._ownerReadableStream._reader = undefined;\n    reader._ownerReadableStream = undefined;\n  }\n  function ReadableStreamBYOBReaderRead(reader, view) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    return ReadableByteStreamControllerPullInto(stream._readableStreamController, view);\n  }\n  function ReadableStreamDefaultReaderRead(reader) {\n    var stream = reader._ownerReadableStream;\n    assert(stream !== undefined);\n    stream._disturbed = true;\n    if (stream._state === 'closed') {\n      return Promise.resolve(CreateIterResultObject(undefined, true));\n    }\n    if (stream._state === 'errored') {\n      return Promise.reject(stream._storedError);\n    }\n    assert(stream._state === 'readable');\n    return stream._readableStreamController.__pullSteps();\n  }\n  var ReadableStreamDefaultController = function () {\n    function ReadableStreamDefaultController(stream, underlyingSource, size, highWaterMark) {\n      _classCallCheck(this, ReadableStreamDefaultController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableStreamDefaultController can only be constructed with a ReadableStream instance');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableStreamDefaultController instances can only be created by the ReadableStream constructor');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingSource = underlyingSource;\n      this._queue = undefined;\n      this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._started = false;\n      this._closeRequested = false;\n      this._pullAgain = false;\n      this._pulling = false;\n      var normalizedStrategy = ValidateAndNormalizeQueuingStrategy(size, highWaterMark);\n      this._strategySize = normalizedStrategy.size;\n      this._strategyHWM = normalizedStrategy.highWaterMark;\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, r);\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableStreamDefaultController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableStreamDefaultControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        return ReadableStreamDefaultControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableStreamDefaultControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        if (this._queue.length > 0) {\n          var chunk = DequeueValue(this);\n          if (this._closeRequested === true && this._queue.length === 0) {\n            ReadableStreamClose(stream);\n          } else {\n            ReadableStreamDefaultControllerCallPullIfNeeded(this);\n          }\n          return Promise.resolve(CreateIterResultObject(chunk, false));\n        }\n        var pendingPromise = ReadableStreamAddReadRequest(stream);\n        ReadableStreamDefaultControllerCallPullIfNeeded(this);\n        return pendingPromise;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        return ReadableStreamDefaultControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableStreamDefaultController;\n  }();\n  function IsReadableStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingSource')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableStreamDefaultControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableStreamDefaultControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        return ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n      }\n      return undefined;\n    }, function (e) {\n      ReadableStreamDefaultControllerErrorIfNeeded(controller, e);\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed' || stream._state === 'errored') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    if (desiredSize > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableStreamDefaultControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    controller._closeRequested = true;\n    if (controller._queue.length === 0) {\n      ReadableStreamClose(stream);\n    }\n  }\n  function ReadableStreamDefaultControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (IsReadableStreamLocked(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      ReadableStreamFulfillReadRequest(stream, chunk, false);\n    } else {\n      var chunkSize = 1;\n      if (controller._strategySize !== undefined) {\n        var strategySize = controller._strategySize;\n        try {\n          chunkSize = strategySize(chunk);\n        } catch (chunkSizeE) {\n          ReadableStreamDefaultControllerErrorIfNeeded(controller, chunkSizeE);\n          throw chunkSizeE;\n        }\n      }\n      try {\n        EnqueueValueWithSize(controller, chunk, chunkSize);\n      } catch (enqueueE) {\n        ReadableStreamDefaultControllerErrorIfNeeded(controller, enqueueE);\n        throw enqueueE;\n      }\n    }\n    ReadableStreamDefaultControllerCallPullIfNeeded(controller);\n    return undefined;\n  }\n  function ReadableStreamDefaultControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableStreamDefaultControllerErrorIfNeeded(controller, e) {\n    if (controller._controlledReadableStream._state === 'readable') {\n      ReadableStreamDefaultControllerError(controller, e);\n    }\n  }\n  function ReadableStreamDefaultControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  var ReadableStreamBYOBRequest = function () {\n    function ReadableStreamBYOBRequest(controller, view) {\n      _classCallCheck(this, ReadableStreamBYOBRequest);\n      this._associatedReadableByteStreamController = controller;\n      this._view = view;\n    }\n    _createClass(ReadableStreamBYOBRequest, [{\n      key: 'respond',\n      value: function respond(bytesWritten) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        ReadableByteStreamControllerRespond(this._associatedReadableByteStreamController, bytesWritten);\n      }\n    }, {\n      key: 'respondWithNewView',\n      value: function respondWithNewView(view) {\n        if (IsReadableStreamBYOBRequest(this) === false) {\n          throw byobRequestBrandCheckException('respond');\n        }\n        if (this._associatedReadableByteStreamController === undefined) {\n          throw new TypeError('This BYOB request has been invalidated');\n        }\n        if (!ArrayBuffer.isView(view)) {\n          throw new TypeError('You can only respond with array buffer views');\n        }\n        ReadableByteStreamControllerRespondWithNewView(this._associatedReadableByteStreamController, view);\n      }\n    }, {\n      key: 'view',\n      get: function get() {\n        return this._view;\n      }\n    }]);\n    return ReadableStreamBYOBRequest;\n  }();\n  var ReadableByteStreamController = function () {\n    function ReadableByteStreamController(stream, underlyingByteSource, highWaterMark) {\n      _classCallCheck(this, ReadableByteStreamController);\n      if (IsReadableStream(stream) === false) {\n        throw new TypeError('ReadableByteStreamController can only be constructed with a ReadableStream instance given ' + 'a byte source');\n      }\n      if (stream._readableStreamController !== undefined) {\n        throw new TypeError('ReadableByteStreamController instances can only be created by the ReadableStream constructor given a byte ' + 'source');\n      }\n      this._controlledReadableStream = stream;\n      this._underlyingByteSource = underlyingByteSource;\n      this._pullAgain = false;\n      this._pulling = false;\n      ReadableByteStreamControllerClearPendingPullIntos(this);\n      this._queue = this._queueTotalSize = undefined;\n      ResetQueue(this);\n      this._closeRequested = false;\n      this._started = false;\n      this._strategyHWM = ValidateAndNormalizeHighWaterMark(highWaterMark);\n      var autoAllocateChunkSize = underlyingByteSource.autoAllocateChunkSize;\n      if (autoAllocateChunkSize !== undefined) {\n        if (Number.isInteger(autoAllocateChunkSize) === false || autoAllocateChunkSize <= 0) {\n          throw new RangeError('autoAllocateChunkSize must be a positive integer');\n        }\n      }\n      this._autoAllocateChunkSize = autoAllocateChunkSize;\n      this._pendingPullIntos = [];\n      var controller = this;\n      var startResult = InvokeOrNoop(underlyingByteSource, 'start', [this]);\n      Promise.resolve(startResult).then(function () {\n        controller._started = true;\n        assert(controller._pulling === false);\n        assert(controller._pullAgain === false);\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }, function (r) {\n        if (stream._state === 'readable') {\n          ReadableByteStreamControllerError(controller, r);\n        }\n      }).catch(rethrowAssertionErrorRejection);\n    }\n    _createClass(ReadableByteStreamController, [{\n      key: 'close',\n      value: function close() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('close');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('The stream has already been closed; do not close it again!');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be closed');\n        }\n        ReadableByteStreamControllerClose(this);\n      }\n    }, {\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('enqueue');\n        }\n        if (this._closeRequested === true) {\n          throw new TypeError('stream is closed or draining');\n        }\n        var state = this._controlledReadableStream._state;\n        if (state !== 'readable') {\n          throw new TypeError('The stream (in ' + state + ' state) is not in the readable state and cannot be enqueued to');\n        }\n        if (!ArrayBuffer.isView(chunk)) {\n          throw new TypeError('You can only enqueue array buffer views when using a ReadableByteStreamController');\n        }\n        ReadableByteStreamControllerEnqueue(this, chunk);\n      }\n    }, {\n      key: 'error',\n      value: function error(e) {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('error');\n        }\n        var stream = this._controlledReadableStream;\n        if (stream._state !== 'readable') {\n          throw new TypeError('The stream is ' + stream._state + ' and so cannot be errored');\n        }\n        ReadableByteStreamControllerError(this, e);\n      }\n    }, {\n      key: '__cancelSteps',\n      value: function __cancelSteps(reason) {\n        if (this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          firstDescriptor.bytesFilled = 0;\n        }\n        ResetQueue(this);\n        return PromiseInvokeOrNoop(this._underlyingByteSource, 'cancel', [reason]);\n      }\n    }, {\n      key: '__pullSteps',\n      value: function __pullSteps() {\n        var stream = this._controlledReadableStream;\n        assert(ReadableStreamHasDefaultReader(stream) === true);\n        if (this._queueTotalSize > 0) {\n          assert(ReadableStreamGetNumReadRequests(stream) === 0);\n          var entry = this._queue.shift();\n          this._queueTotalSize -= entry.byteLength;\n          ReadableByteStreamControllerHandleQueueDrain(this);\n          var view = void 0;\n          try {\n            view = new Uint8Array(entry.buffer, entry.byteOffset, entry.byteLength);\n          } catch (viewE) {\n            return Promise.reject(viewE);\n          }\n          return Promise.resolve(CreateIterResultObject(view, false));\n        }\n        var autoAllocateChunkSize = this._autoAllocateChunkSize;\n        if (autoAllocateChunkSize !== undefined) {\n          var buffer = void 0;\n          try {\n            buffer = new ArrayBuffer(autoAllocateChunkSize);\n          } catch (bufferE) {\n            return Promise.reject(bufferE);\n          }\n          var pullIntoDescriptor = {\n            buffer: buffer,\n            byteOffset: 0,\n            byteLength: autoAllocateChunkSize,\n            bytesFilled: 0,\n            elementSize: 1,\n            ctor: Uint8Array,\n            readerType: 'default'\n          };\n          this._pendingPullIntos.push(pullIntoDescriptor);\n        }\n        var promise = ReadableStreamAddReadRequest(stream);\n        ReadableByteStreamControllerCallPullIfNeeded(this);\n        return promise;\n      }\n    }, {\n      key: 'byobRequest',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('byobRequest');\n        }\n        if (this._byobRequest === undefined && this._pendingPullIntos.length > 0) {\n          var firstDescriptor = this._pendingPullIntos[0];\n          var view = new Uint8Array(firstDescriptor.buffer, firstDescriptor.byteOffset + firstDescriptor.bytesFilled, firstDescriptor.byteLength - firstDescriptor.bytesFilled);\n          this._byobRequest = new ReadableStreamBYOBRequest(this, view);\n        }\n        return this._byobRequest;\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsReadableByteStreamController(this) === false) {\n          throw byteStreamControllerBrandCheckException('desiredSize');\n        }\n        return ReadableByteStreamControllerGetDesiredSize(this);\n      }\n    }]);\n    return ReadableByteStreamController;\n  }();\n  function IsReadableByteStreamController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_underlyingByteSource')) {\n      return false;\n    }\n    return true;\n  }\n  function IsReadableStreamBYOBRequest(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_associatedReadableByteStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  function ReadableByteStreamControllerCallPullIfNeeded(controller) {\n    var shouldPull = ReadableByteStreamControllerShouldCallPull(controller);\n    if (shouldPull === false) {\n      return undefined;\n    }\n    if (controller._pulling === true) {\n      controller._pullAgain = true;\n      return undefined;\n    }\n    assert(controller._pullAgain === false);\n    controller._pulling = true;\n    var pullPromise = PromiseInvokeOrNoop(controller._underlyingByteSource, 'pull', [controller]);\n    pullPromise.then(function () {\n      controller._pulling = false;\n      if (controller._pullAgain === true) {\n        controller._pullAgain = false;\n        ReadableByteStreamControllerCallPullIfNeeded(controller);\n      }\n    }, function (e) {\n      if (controller._controlledReadableStream._state === 'readable') {\n        ReadableByteStreamControllerError(controller, e);\n      }\n    }).catch(rethrowAssertionErrorRejection);\n    return undefined;\n  }\n  function ReadableByteStreamControllerClearPendingPullIntos(controller) {\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    controller._pendingPullIntos = [];\n  }\n  function ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor) {\n    assert(stream._state !== 'errored', 'state must not be errored');\n    var done = false;\n    if (stream._state === 'closed') {\n      assert(pullIntoDescriptor.bytesFilled === 0);\n      done = true;\n    }\n    var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n    if (pullIntoDescriptor.readerType === 'default') {\n      ReadableStreamFulfillReadRequest(stream, filledView, done);\n    } else {\n      assert(pullIntoDescriptor.readerType === 'byob');\n      ReadableStreamFulfillReadIntoRequest(stream, filledView, done);\n    }\n  }\n  function ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor) {\n    var bytesFilled = pullIntoDescriptor.bytesFilled;\n    var elementSize = pullIntoDescriptor.elementSize;\n    assert(bytesFilled <= pullIntoDescriptor.byteLength);\n    assert(bytesFilled % elementSize === 0);\n    return new pullIntoDescriptor.ctor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, bytesFilled / elementSize);\n  }\n  function ReadableByteStreamControllerEnqueueChunkToQueue(controller, buffer, byteOffset, byteLength) {\n    controller._queue.push({\n      buffer: buffer,\n      byteOffset: byteOffset,\n      byteLength: byteLength\n    });\n    controller._queueTotalSize += byteLength;\n  }\n  function ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) {\n    var elementSize = pullIntoDescriptor.elementSize;\n    var currentAlignedBytes = pullIntoDescriptor.bytesFilled - pullIntoDescriptor.bytesFilled % elementSize;\n    var maxBytesToCopy = Math.min(controller._queueTotalSize, pullIntoDescriptor.byteLength - pullIntoDescriptor.bytesFilled);\n    var maxBytesFilled = pullIntoDescriptor.bytesFilled + maxBytesToCopy;\n    var maxAlignedBytes = maxBytesFilled - maxBytesFilled % elementSize;\n    var totalBytesToCopyRemaining = maxBytesToCopy;\n    var ready = false;\n    if (maxAlignedBytes > currentAlignedBytes) {\n      totalBytesToCopyRemaining = maxAlignedBytes - pullIntoDescriptor.bytesFilled;\n      ready = true;\n    }\n    var queue = controller._queue;\n    while (totalBytesToCopyRemaining > 0) {\n      var headOfQueue = queue[0];\n      var bytesToCopy = Math.min(totalBytesToCopyRemaining, headOfQueue.byteLength);\n      var destStart = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      ArrayBufferCopy(pullIntoDescriptor.buffer, destStart, headOfQueue.buffer, headOfQueue.byteOffset, bytesToCopy);\n      if (headOfQueue.byteLength === bytesToCopy) {\n        queue.shift();\n      } else {\n        headOfQueue.byteOffset += bytesToCopy;\n        headOfQueue.byteLength -= bytesToCopy;\n      }\n      controller._queueTotalSize -= bytesToCopy;\n      ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesToCopy, pullIntoDescriptor);\n      totalBytesToCopyRemaining -= bytesToCopy;\n    }\n    if (ready === false) {\n      assert(controller._queueTotalSize === 0, 'queue must be empty');\n      assert(pullIntoDescriptor.bytesFilled > 0);\n      assert(pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize);\n    }\n    return ready;\n  }\n  function ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, size, pullIntoDescriptor) {\n    assert(controller._pendingPullIntos.length === 0 || controller._pendingPullIntos[0] === pullIntoDescriptor);\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    pullIntoDescriptor.bytesFilled += size;\n  }\n  function ReadableByteStreamControllerHandleQueueDrain(controller) {\n    assert(controller._controlledReadableStream._state === 'readable');\n    if (controller._queueTotalSize === 0 && controller._closeRequested === true) {\n      ReadableStreamClose(controller._controlledReadableStream);\n    } else {\n      ReadableByteStreamControllerCallPullIfNeeded(controller);\n    }\n  }\n  function ReadableByteStreamControllerInvalidateBYOBRequest(controller) {\n    if (controller._byobRequest === undefined) {\n      return;\n    }\n    controller._byobRequest._associatedReadableByteStreamController = undefined;\n    controller._byobRequest._view = undefined;\n    controller._byobRequest = undefined;\n  }\n  function ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller) {\n    assert(controller._closeRequested === false);\n    while (controller._pendingPullIntos.length > 0) {\n      if (controller._queueTotalSize === 0) {\n        return;\n      }\n      var pullIntoDescriptor = controller._pendingPullIntos[0];\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerPullInto(controller, view) {\n    var stream = controller._controlledReadableStream;\n    var elementSize = 1;\n    if (view.constructor !== DataView) {\n      elementSize = view.constructor.BYTES_PER_ELEMENT;\n    }\n    var ctor = view.constructor;\n    var pullIntoDescriptor = {\n      buffer: view.buffer,\n      byteOffset: view.byteOffset,\n      byteLength: view.byteLength,\n      bytesFilled: 0,\n      elementSize: elementSize,\n      ctor: ctor,\n      readerType: 'byob'\n    };\n    if (controller._pendingPullIntos.length > 0) {\n      pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n      controller._pendingPullIntos.push(pullIntoDescriptor);\n      return ReadableStreamAddReadIntoRequest(stream);\n    }\n    if (stream._state === 'closed') {\n      var emptyView = new view.constructor(pullIntoDescriptor.buffer, pullIntoDescriptor.byteOffset, 0);\n      return Promise.resolve(CreateIterResultObject(emptyView, true));\n    }\n    if (controller._queueTotalSize > 0) {\n      if (ReadableByteStreamControllerFillPullIntoDescriptorFromQueue(controller, pullIntoDescriptor) === true) {\n        var filledView = ReadableByteStreamControllerConvertPullIntoDescriptor(pullIntoDescriptor);\n        ReadableByteStreamControllerHandleQueueDrain(controller);\n        return Promise.resolve(CreateIterResultObject(filledView, false));\n      }\n      if (controller._closeRequested === true) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        return Promise.reject(e);\n      }\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    controller._pendingPullIntos.push(pullIntoDescriptor);\n    var promise = ReadableStreamAddReadIntoRequest(stream);\n    ReadableByteStreamControllerCallPullIfNeeded(controller);\n    return promise;\n  }\n  function ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor) {\n    firstDescriptor.buffer = TransferArrayBuffer(firstDescriptor.buffer);\n    assert(firstDescriptor.bytesFilled === 0, 'bytesFilled must be 0');\n    var stream = controller._controlledReadableStream;\n    if (ReadableStreamHasBYOBReader(stream) === true) {\n      while (ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n        var pullIntoDescriptor = ReadableByteStreamControllerShiftPendingPullInto(controller);\n        ReadableByteStreamControllerCommitPullIntoDescriptor(stream, pullIntoDescriptor);\n      }\n    }\n  }\n  function ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, pullIntoDescriptor) {\n    if (pullIntoDescriptor.bytesFilled + bytesWritten > pullIntoDescriptor.byteLength) {\n      throw new RangeError('bytesWritten out of range');\n    }\n    ReadableByteStreamControllerFillHeadPullIntoDescriptor(controller, bytesWritten, pullIntoDescriptor);\n    if (pullIntoDescriptor.bytesFilled < pullIntoDescriptor.elementSize) {\n      return;\n    }\n    ReadableByteStreamControllerShiftPendingPullInto(controller);\n    var remainderSize = pullIntoDescriptor.bytesFilled % pullIntoDescriptor.elementSize;\n    if (remainderSize > 0) {\n      var end = pullIntoDescriptor.byteOffset + pullIntoDescriptor.bytesFilled;\n      var remainder = pullIntoDescriptor.buffer.slice(end - remainderSize, end);\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, remainder, 0, remainder.byteLength);\n    }\n    pullIntoDescriptor.buffer = TransferArrayBuffer(pullIntoDescriptor.buffer);\n    pullIntoDescriptor.bytesFilled -= remainderSize;\n    ReadableByteStreamControllerCommitPullIntoDescriptor(controller._controlledReadableStream, pullIntoDescriptor);\n    ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n  }\n  function ReadableByteStreamControllerRespondInternal(controller, bytesWritten) {\n    var firstDescriptor = controller._pendingPullIntos[0];\n    var stream = controller._controlledReadableStream;\n    if (stream._state === 'closed') {\n      if (bytesWritten !== 0) {\n        throw new TypeError('bytesWritten must be 0 when calling respond() on a closed stream');\n      }\n      ReadableByteStreamControllerRespondInClosedState(controller, firstDescriptor);\n    } else {\n      assert(stream._state === 'readable');\n      ReadableByteStreamControllerRespondInReadableState(controller, bytesWritten, firstDescriptor);\n    }\n  }\n  function ReadableByteStreamControllerShiftPendingPullInto(controller) {\n    var descriptor = controller._pendingPullIntos.shift();\n    ReadableByteStreamControllerInvalidateBYOBRequest(controller);\n    return descriptor;\n  }\n  function ReadableByteStreamControllerShouldCallPull(controller) {\n    var stream = controller._controlledReadableStream;\n    if (stream._state !== 'readable') {\n      return false;\n    }\n    if (controller._closeRequested === true) {\n      return false;\n    }\n    if (controller._started === false) {\n      return false;\n    }\n    if (ReadableStreamHasDefaultReader(stream) === true && ReadableStreamGetNumReadRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableStreamHasBYOBReader(stream) === true && ReadableStreamGetNumReadIntoRequests(stream) > 0) {\n      return true;\n    }\n    if (ReadableByteStreamControllerGetDesiredSize(controller) > 0) {\n      return true;\n    }\n    return false;\n  }\n  function ReadableByteStreamControllerClose(controller) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    if (controller._queueTotalSize > 0) {\n      controller._closeRequested = true;\n      return;\n    }\n    if (controller._pendingPullIntos.length > 0) {\n      var firstPendingPullInto = controller._pendingPullIntos[0];\n      if (firstPendingPullInto.bytesFilled > 0) {\n        var e = new TypeError('Insufficient bytes to fill elements in the given buffer');\n        ReadableByteStreamControllerError(controller, e);\n        throw e;\n      }\n    }\n    ReadableStreamClose(stream);\n  }\n  function ReadableByteStreamControllerEnqueue(controller, chunk) {\n    var stream = controller._controlledReadableStream;\n    assert(controller._closeRequested === false);\n    assert(stream._state === 'readable');\n    var buffer = chunk.buffer;\n    var byteOffset = chunk.byteOffset;\n    var byteLength = chunk.byteLength;\n    var transferredBuffer = TransferArrayBuffer(buffer);\n    if (ReadableStreamHasDefaultReader(stream) === true) {\n      if (ReadableStreamGetNumReadRequests(stream) === 0) {\n        ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      } else {\n        assert(controller._queue.length === 0);\n        var transferredView = new Uint8Array(transferredBuffer, byteOffset, byteLength);\n        ReadableStreamFulfillReadRequest(stream, transferredView, false);\n      }\n    } else if (ReadableStreamHasBYOBReader(stream) === true) {\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n      ReadableByteStreamControllerProcessPullIntoDescriptorsUsingQueue(controller);\n    } else {\n      assert(IsReadableStreamLocked(stream) === false, 'stream must not be locked');\n      ReadableByteStreamControllerEnqueueChunkToQueue(controller, transferredBuffer, byteOffset, byteLength);\n    }\n  }\n  function ReadableByteStreamControllerError(controller, e) {\n    var stream = controller._controlledReadableStream;\n    assert(stream._state === 'readable');\n    ReadableByteStreamControllerClearPendingPullIntos(controller);\n    ResetQueue(controller);\n    ReadableStreamError(stream, e);\n  }\n  function ReadableByteStreamControllerGetDesiredSize(controller) {\n    var stream = controller._controlledReadableStream;\n    var state = stream._state;\n    if (state === 'errored') {\n      return null;\n    }\n    if (state === 'closed') {\n      return 0;\n    }\n    return controller._strategyHWM - controller._queueTotalSize;\n  }\n  function ReadableByteStreamControllerRespond(controller, bytesWritten) {\n    bytesWritten = Number(bytesWritten);\n    if (IsFiniteNonNegativeNumber(bytesWritten) === false) {\n      throw new RangeError('bytesWritten must be a finite');\n    }\n    assert(controller._pendingPullIntos.length > 0);\n    ReadableByteStreamControllerRespondInternal(controller, bytesWritten);\n  }\n  function ReadableByteStreamControllerRespondWithNewView(controller, view) {\n    assert(controller._pendingPullIntos.length > 0);\n    var firstDescriptor = controller._pendingPullIntos[0];\n    if (firstDescriptor.byteOffset + firstDescriptor.bytesFilled !== view.byteOffset) {\n      throw new RangeError('The region specified by view does not match byobRequest');\n    }\n    if (firstDescriptor.byteLength !== view.byteLength) {\n      throw new RangeError('The buffer of view has different capacity than byobRequest');\n    }\n    firstDescriptor.buffer = view.buffer;\n    ReadableByteStreamControllerRespondInternal(controller, view.byteLength);\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('ReadableStream.prototype.' + name + ' can only be used on a ReadableStream');\n  }\n  function readerLockException(name) {\n    return new TypeError('Cannot ' + name + ' a stream using a released reader');\n  }\n  function defaultReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultReader.prototype.' + name + ' can only be used on a ReadableStreamDefaultReader');\n  }\n  function defaultReaderClosedPromiseInitialize(reader) {\n    reader._closedPromise = new Promise(function (resolve, reject) {\n      reader._closedPromise_resolve = resolve;\n      reader._closedPromise_reject = reject;\n    });\n  }\n  function defaultReaderClosedPromiseInitializeAsRejected(reader, reason) {\n    reader._closedPromise = Promise.reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseInitializeAsResolved(reader) {\n    reader._closedPromise = Promise.resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseReject(reader, reason) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_reject(reason);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function defaultReaderClosedPromiseResetToRejected(reader, reason) {\n    assert(reader._closedPromise_resolve === undefined);\n    assert(reader._closedPromise_reject === undefined);\n    reader._closedPromise = Promise.reject(reason);\n  }\n  function defaultReaderClosedPromiseResolve(reader) {\n    assert(reader._closedPromise_resolve !== undefined);\n    assert(reader._closedPromise_reject !== undefined);\n    reader._closedPromise_resolve(undefined);\n    reader._closedPromise_resolve = undefined;\n    reader._closedPromise_reject = undefined;\n  }\n  function byobReaderBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBReader.prototype.' + name + ' can only be used on a ReadableStreamBYOBReader');\n  }\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('ReadableStreamDefaultController.prototype.' + name + ' can only be used on a ReadableStreamDefaultController');\n  }\n  function byobRequestBrandCheckException(name) {\n    return new TypeError('ReadableStreamBYOBRequest.prototype.' + name + ' can only be used on a ReadableStreamBYOBRequest');\n  }\n  function byteStreamControllerBrandCheckException(name) {\n    return new TypeError('ReadableByteStreamController.prototype.' + name + ' can only be used on a ReadableByteStreamController');\n  }\n  function ifIsObjectAndHasAPromiseIsHandledInternalSlotSetPromiseIsHandledToTrue(promise) {\n    try {\n      Promise.prototype.then.call(promise, undefined, function () {});\n    } catch (e) {}\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var transformStream = __w_pdfjs_require__(6);\n  var readableStream = __w_pdfjs_require__(4);\n  var writableStream = __w_pdfjs_require__(2);\n  exports.TransformStream = transformStream.TransformStream;\n  exports.ReadableStream = readableStream.ReadableStream;\n  exports.IsReadableStreamDisturbed = readableStream.IsReadableStreamDisturbed;\n  exports.ReadableStreamDefaultControllerClose = readableStream.ReadableStreamDefaultControllerClose;\n  exports.ReadableStreamDefaultControllerEnqueue = readableStream.ReadableStreamDefaultControllerEnqueue;\n  exports.ReadableStreamDefaultControllerError = readableStream.ReadableStreamDefaultControllerError;\n  exports.ReadableStreamDefaultControllerGetDesiredSize = readableStream.ReadableStreamDefaultControllerGetDesiredSize;\n  exports.AcquireWritableStreamDefaultWriter = writableStream.AcquireWritableStreamDefaultWriter;\n  exports.IsWritableStream = writableStream.IsWritableStream;\n  exports.IsWritableStreamLocked = writableStream.IsWritableStreamLocked;\n  exports.WritableStream = writableStream.WritableStream;\n  exports.WritableStreamAbort = writableStream.WritableStreamAbort;\n  exports.WritableStreamDefaultControllerError = writableStream.WritableStreamDefaultControllerError;\n  exports.WritableStreamDefaultWriterCloseWithErrorPropagation = writableStream.WritableStreamDefaultWriterCloseWithErrorPropagation;\n  exports.WritableStreamDefaultWriterRelease = writableStream.WritableStreamDefaultWriterRelease;\n  exports.WritableStreamDefaultWriterWrite = writableStream.WritableStreamDefaultWriterWrite;\n}, function (module, exports, __w_pdfjs_require__) {\n  \"use strict\";\n\n  var _createClass = function () {\n    function defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n    return function (Constructor, protoProps, staticProps) {\n      if (protoProps) defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) defineProperties(Constructor, staticProps);\n      return Constructor;\n    };\n  }();\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n  var _require = __w_pdfjs_require__(1),\n      assert = _require.assert;\n  var _require2 = __w_pdfjs_require__(0),\n      InvokeOrNoop = _require2.InvokeOrNoop,\n      PromiseInvokeOrPerformFallback = _require2.PromiseInvokeOrPerformFallback,\n      PromiseInvokeOrNoop = _require2.PromiseInvokeOrNoop,\n      typeIsObject = _require2.typeIsObject;\n  var _require3 = __w_pdfjs_require__(4),\n      ReadableStream = _require3.ReadableStream,\n      ReadableStreamDefaultControllerClose = _require3.ReadableStreamDefaultControllerClose,\n      ReadableStreamDefaultControllerEnqueue = _require3.ReadableStreamDefaultControllerEnqueue,\n      ReadableStreamDefaultControllerError = _require3.ReadableStreamDefaultControllerError,\n      ReadableStreamDefaultControllerGetDesiredSize = _require3.ReadableStreamDefaultControllerGetDesiredSize;\n  var _require4 = __w_pdfjs_require__(2),\n      WritableStream = _require4.WritableStream,\n      WritableStreamDefaultControllerError = _require4.WritableStreamDefaultControllerError;\n  function TransformStreamCloseReadable(transformStream) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    TransformStreamCloseReadableInternal(transformStream);\n  }\n  function TransformStreamEnqueueToReadable(transformStream, chunk) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    if (transformStream._readableClosed === true) {\n      throw new TypeError('Readable side is already closed');\n    }\n    var controller = transformStream._readableController;\n    try {\n      ReadableStreamDefaultControllerEnqueue(controller, chunk);\n    } catch (e) {\n      transformStream._readableClosed = true;\n      TransformStreamErrorIfNeeded(transformStream, e);\n      throw transformStream._storedError;\n    }\n    var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(controller);\n    var maybeBackpressure = desiredSize <= 0;\n    if (maybeBackpressure === true && transformStream._backpressure === false) {\n      TransformStreamSetBackpressure(transformStream, true);\n    }\n  }\n  function TransformStreamError(transformStream, e) {\n    if (transformStream._errored === true) {\n      throw new TypeError('TransformStream is already errored');\n    }\n    TransformStreamErrorInternal(transformStream, e);\n  }\n  function TransformStreamCloseReadableInternal(transformStream) {\n    assert(transformStream._errored === false);\n    assert(transformStream._readableClosed === false);\n    try {\n      ReadableStreamDefaultControllerClose(transformStream._readableController);\n    } catch (e) {\n      assert(false);\n    }\n    transformStream._readableClosed = true;\n  }\n  function TransformStreamErrorIfNeeded(transformStream, e) {\n    if (transformStream._errored === false) {\n      TransformStreamErrorInternal(transformStream, e);\n    }\n  }\n  function TransformStreamErrorInternal(transformStream, e) {\n    assert(transformStream._errored === false);\n    transformStream._errored = true;\n    transformStream._storedError = e;\n    if (transformStream._writableDone === false) {\n      WritableStreamDefaultControllerError(transformStream._writableController, e);\n    }\n    if (transformStream._readableClosed === false) {\n      ReadableStreamDefaultControllerError(transformStream._readableController, e);\n    }\n  }\n  function TransformStreamReadableReadyPromise(transformStream) {\n    assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n    if (transformStream._backpressure === false) {\n      return Promise.resolve();\n    }\n    assert(transformStream._backpressure === true, '_backpressure should have been initialized');\n    return transformStream._backpressureChangePromise;\n  }\n  function TransformStreamSetBackpressure(transformStream, backpressure) {\n    assert(transformStream._backpressure !== backpressure, 'TransformStreamSetBackpressure() should be called only when backpressure is changed');\n    if (transformStream._backpressureChangePromise !== undefined) {\n      transformStream._backpressureChangePromise_resolve(backpressure);\n    }\n    transformStream._backpressureChangePromise = new Promise(function (resolve) {\n      transformStream._backpressureChangePromise_resolve = resolve;\n    });\n    transformStream._backpressureChangePromise.then(function (resolution) {\n      assert(resolution !== backpressure, '_backpressureChangePromise should be fulfilled only when backpressure is changed');\n    });\n    transformStream._backpressure = backpressure;\n  }\n  function TransformStreamDefaultTransform(chunk, transformStreamController) {\n    var transformStream = transformStreamController._controlledTransformStream;\n    TransformStreamEnqueueToReadable(transformStream, chunk);\n    return Promise.resolve();\n  }\n  function TransformStreamTransform(transformStream, chunk) {\n    assert(transformStream._errored === false);\n    assert(transformStream._transforming === false);\n    assert(transformStream._backpressure === false);\n    transformStream._transforming = true;\n    var transformer = transformStream._transformer;\n    var controller = transformStream._transformStreamController;\n    var transformPromise = PromiseInvokeOrPerformFallback(transformer, 'transform', [chunk, controller], TransformStreamDefaultTransform, [chunk, controller]);\n    return transformPromise.then(function () {\n      transformStream._transforming = false;\n      return TransformStreamReadableReadyPromise(transformStream);\n    }, function (e) {\n      TransformStreamErrorIfNeeded(transformStream, e);\n      return Promise.reject(e);\n    });\n  }\n  function IsTransformStreamDefaultController(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_controlledTransformStream')) {\n      return false;\n    }\n    return true;\n  }\n  function IsTransformStream(x) {\n    if (!typeIsObject(x)) {\n      return false;\n    }\n    if (!Object.prototype.hasOwnProperty.call(x, '_transformStreamController')) {\n      return false;\n    }\n    return true;\n  }\n  var TransformStreamSink = function () {\n    function TransformStreamSink(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSink);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSink, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._writableController = c;\n        return this._startPromise.then(function () {\n          return TransformStreamReadableReadyPromise(transformStream);\n        });\n      }\n    }, {\n      key: 'write',\n      value: function write(chunk) {\n        var transformStream = this._transformStream;\n        return TransformStreamTransform(transformStream, chunk);\n      }\n    }, {\n      key: 'abort',\n      value: function abort() {\n        var transformStream = this._transformStream;\n        transformStream._writableDone = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Writable side aborted'));\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        var transformStream = this._transformStream;\n        assert(transformStream._transforming === false);\n        transformStream._writableDone = true;\n        var flushPromise = PromiseInvokeOrNoop(transformStream._transformer, 'flush', [transformStream._transformStreamController]);\n        return flushPromise.then(function () {\n          if (transformStream._errored === true) {\n            return Promise.reject(transformStream._storedError);\n          }\n          if (transformStream._readableClosed === false) {\n            TransformStreamCloseReadableInternal(transformStream);\n          }\n          return Promise.resolve();\n        }).catch(function (r) {\n          TransformStreamErrorIfNeeded(transformStream, r);\n          return Promise.reject(transformStream._storedError);\n        });\n      }\n    }]);\n    return TransformStreamSink;\n  }();\n  var TransformStreamSource = function () {\n    function TransformStreamSource(transformStream, startPromise) {\n      _classCallCheck(this, TransformStreamSource);\n      this._transformStream = transformStream;\n      this._startPromise = startPromise;\n    }\n    _createClass(TransformStreamSource, [{\n      key: 'start',\n      value: function start(c) {\n        var transformStream = this._transformStream;\n        transformStream._readableController = c;\n        return this._startPromise.then(function () {\n          assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n          if (transformStream._backpressure === true) {\n            return Promise.resolve();\n          }\n          assert(transformStream._backpressure === false, '_backpressure should have been initialized');\n          return transformStream._backpressureChangePromise;\n        });\n      }\n    }, {\n      key: 'pull',\n      value: function pull() {\n        var transformStream = this._transformStream;\n        assert(transformStream._backpressure === true, 'pull() should be never called while _backpressure is false');\n        assert(transformStream._backpressureChangePromise !== undefined, '_backpressureChangePromise should have been initialized');\n        TransformStreamSetBackpressure(transformStream, false);\n        return transformStream._backpressureChangePromise;\n      }\n    }, {\n      key: 'cancel',\n      value: function cancel() {\n        var transformStream = this._transformStream;\n        transformStream._readableClosed = true;\n        TransformStreamErrorInternal(transformStream, new TypeError('Readable side canceled'));\n      }\n    }]);\n    return TransformStreamSource;\n  }();\n  var TransformStreamDefaultController = function () {\n    function TransformStreamDefaultController(transformStream) {\n      _classCallCheck(this, TransformStreamDefaultController);\n      if (IsTransformStream(transformStream) === false) {\n        throw new TypeError('TransformStreamDefaultController can only be ' + 'constructed with a TransformStream instance');\n      }\n      if (transformStream._transformStreamController !== undefined) {\n        throw new TypeError('TransformStreamDefaultController instances can ' + 'only be created by the TransformStream constructor');\n      }\n      this._controlledTransformStream = transformStream;\n    }\n    _createClass(TransformStreamDefaultController, [{\n      key: 'enqueue',\n      value: function enqueue(chunk) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('enqueue');\n        }\n        TransformStreamEnqueueToReadable(this._controlledTransformStream, chunk);\n      }\n    }, {\n      key: 'close',\n      value: function close() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('close');\n        }\n        TransformStreamCloseReadable(this._controlledTransformStream);\n      }\n    }, {\n      key: 'error',\n      value: function error(reason) {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('error');\n        }\n        TransformStreamError(this._controlledTransformStream, reason);\n      }\n    }, {\n      key: 'desiredSize',\n      get: function get() {\n        if (IsTransformStreamDefaultController(this) === false) {\n          throw defaultControllerBrandCheckException('desiredSize');\n        }\n        var transformStream = this._controlledTransformStream;\n        var readableController = transformStream._readableController;\n        return ReadableStreamDefaultControllerGetDesiredSize(readableController);\n      }\n    }]);\n    return TransformStreamDefaultController;\n  }();\n  var TransformStream = function () {\n    function TransformStream() {\n      var transformer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      _classCallCheck(this, TransformStream);\n      this._transformer = transformer;\n      var readableStrategy = transformer.readableStrategy,\n          writableStrategy = transformer.writableStrategy;\n      this._transforming = false;\n      this._errored = false;\n      this._storedError = undefined;\n      this._writableController = undefined;\n      this._readableController = undefined;\n      this._transformStreamController = undefined;\n      this._writableDone = false;\n      this._readableClosed = false;\n      this._backpressure = undefined;\n      this._backpressureChangePromise = undefined;\n      this._backpressureChangePromise_resolve = undefined;\n      this._transformStreamController = new TransformStreamDefaultController(this);\n      var startPromise_resolve = void 0;\n      var startPromise = new Promise(function (resolve) {\n        startPromise_resolve = resolve;\n      });\n      var source = new TransformStreamSource(this, startPromise);\n      this._readable = new ReadableStream(source, readableStrategy);\n      var sink = new TransformStreamSink(this, startPromise);\n      this._writable = new WritableStream(sink, writableStrategy);\n      assert(this._writableController !== undefined);\n      assert(this._readableController !== undefined);\n      var desiredSize = ReadableStreamDefaultControllerGetDesiredSize(this._readableController);\n      TransformStreamSetBackpressure(this, desiredSize <= 0);\n      var transformStream = this;\n      var startResult = InvokeOrNoop(transformer, 'start', [transformStream._transformStreamController]);\n      startPromise_resolve(startResult);\n      startPromise.catch(function (e) {\n        if (transformStream._errored === false) {\n          transformStream._errored = true;\n          transformStream._storedError = e;\n        }\n      });\n    }\n    _createClass(TransformStream, [{\n      key: 'readable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('readable');\n        }\n        return this._readable;\n      }\n    }, {\n      key: 'writable',\n      get: function get() {\n        if (IsTransformStream(this) === false) {\n          throw streamBrandCheckException('writable');\n        }\n        return this._writable;\n      }\n    }]);\n    return TransformStream;\n  }();\n  module.exports = { TransformStream: TransformStream };\n  function defaultControllerBrandCheckException(name) {\n    return new TypeError('TransformStreamDefaultController.prototype.' + name + ' can only be used on a TransformStreamDefaultController');\n  }\n  function streamBrandCheckException(name) {\n    return new TypeError('TransformStream.prototype.' + name + ' can only be used on a TransformStream');\n  }\n}, function (module, exports, __w_pdfjs_require__) {\n  module.exports = __w_pdfjs_require__(5);\n}]));\n\n/***/ }),\n/* 127 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _chunked_stream = __w_pdfjs_require__(63);\n\nvar _document = __w_pdfjs_require__(128);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 128 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _annotation = __w_pdfjs_require__(134);\n\nvar _crypto = __w_pdfjs_require__(68);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _evaluator = __w_pdfjs_require__(135);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 129 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;\n\n/***/ }),\n/* 130 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jbig = __w_pdfjs_require__(131);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;\n\n/***/ }),\n/* 131 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _arithmetic_decoder = __w_pdfjs_require__(66);\n\nvar _ccitt = __w_pdfjs_require__(65);\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 132 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 133 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar _util = __w_pdfjs_require__(0);\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;\n\n/***/ }),\n/* 134 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _obj = __w_pdfjs_require__(64);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _stream = __w_pdfjs_require__(2);\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 135 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cmap = __w_pdfjs_require__(136);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _fonts = __w_pdfjs_require__(137);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _pattern = __w_pdfjs_require__(141);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _bidi = __w_pdfjs_require__(142);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _metrics = __w_pdfjs_require__(143);\n\nvar _function = __w_pdfjs_require__(72);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _murmurhash = __w_pdfjs_require__(145);\n\nvar _operator_list = __w_pdfjs_require__(42);\n\nvar _image = __w_pdfjs_require__(146);\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: inline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: inline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 136 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _parser = __w_pdfjs_require__(26);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;\n\n/***/ }),\n/* 137 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _standard_fonts = __w_pdfjs_require__(70);\n\nvar _unicode = __w_pdfjs_require__(71);\n\nvar _font_renderer = __w_pdfjs_require__(139);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _type1_parser = __w_pdfjs_require__(140);\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 138 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 139 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _cff_parser = __w_pdfjs_require__(69);\n\nvar _glyphlist = __w_pdfjs_require__(43);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 140 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _encodings = __w_pdfjs_require__(21);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 141 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 142 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 143 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 144 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 145 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = __w_pdfjs_require__(0);\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 146 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = __w_pdfjs_require__(0);\n\nvar _primitives = __w_pdfjs_require__(1);\n\nvar _colorspace = __w_pdfjs_require__(20);\n\nvar _stream = __w_pdfjs_require__(2);\n\nvar _jpeg_stream = __w_pdfjs_require__(41);\n\nvar _jpx = __w_pdfjs_require__(67);\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ })\n/******/ ]);\n});\n//# sourceMappingURL=pdf.worker.js.map"],"sourceRoot":""}