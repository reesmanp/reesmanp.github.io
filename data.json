{
	"Welcome": {
		"VÃ¤lkommen": "Welcome to my online portfolio! Feel free to browse around my webpage and even send me an email if you have any questions. If you are a possible employer or someone who wants some work done, don't feel shy; please reach out and let me know what you are looking for. Safe travels, friend!"
	},
	"Bio": {
		"Introduction": "My name is Paul Reesman and I have a long and colorful history filled with experience, creativity, curiosity, and leadership. Originally from Phoenix, Arizona I joined the army after high school and became a member of the elite unit known as 'Rangers' up in the state of Washington. Throughout my tenure I advanced to the rank of sergeant and deployed to Afghanistan on four separate occasions. Upon separating from the armed forces, I was left with the same thoughts of nearly any other veteran, 'What next?'",
        "College": "I looked toward college as the next chapter of my life started to unfold. Starting off at Arizona State University, I felt that the school was not a good match for who I was. I then transferred to Oregon State University and continued on my track pursuing a four year degree in computer science. It only took me three years from the end of my enlistment to gain my degree. During my last term, I looked forward to finally joining the industry.",
        "Career": "Immediately after graduating from college, I received an email from Seattle Children's Hospital offering me a position as an application developer up in Seattle. This opportunity provided me to get my foot in the door in the Seattle area. A month or two after moving to Seattle I was also hired on by <a href\"www.codingwithkids.com\" target=\"_blank\">Coding With Kids<\/a> as an instructor. I have been teaching coding to children ever since then.",
        "Special Projects of Note": "I am one of the founders of an app called Lender. Lender is a platform for people to administer nano-loans anonymously. This application is currently under development and the release of Alpha testing is imminent. You can find more at <a href=\"www.wearelender.com\" target=\"_blank\">wearelender.com<\/a>",
		"Interests": "Lastly, I am looking forward to grad school as my interests are broad: Artificial Intelligence, Parallelization/Distributed Computing (Including Cloud and Enterprise computing), and Compiler Design."
	},
	"Portfolio": {
		"Current Projects": {
			"Github": "All of my current projects and most of my completed projects' source code can be found at my github <a href=\"https:\/\/github.com\/reesmanp\" target=\"_blank\">repository<\/a> including the source code for this website <a href=\"https:\/\/github.com\/reesmanp\/reesmanp.github.io\" target=\"_blank\">here<\/a>.",
			"Lender": "I am co-founder and lead backend developer for a new and upcoming app called Lender. The source code lives in a private repo on GitHub, thus I cannot share it with you. To learn more about Lender, visit us at <a href=\"www.wearelender.com\" target=\"_blank\">wearelender.com<\/a> or visit us on <a href=\"https:\/\/www.facebook.com\/wearelender\/\" target=\"_blank\">Facebook<\/a> or even follow us on Twitter at <a href=\"https:\/\/twitter.com\/wearelender\" target=\"_blank\">@WeAreLender<\/a>",
			"BoothTool": "I am currently building a ReactJS program to be used in festival booths to help with front-end transactions and kitchen area accountability. This is being built with TypeScript and will be deployed as a standalone application. My first version of this was with Python using the Tkinter toolkit. Building and maintaining a fitting frontend for the app became overwhelming and I decided a programming language switch was necessary. The old Python code lives in it's own repository for nostalgia's sake.",
			"#": "I am developing my own programming language called #. Since that symbol has several pronunciations (mostly depending on which generation you relate to), it has no standard verbal name. This will be a compiled language that will hopefully be be completely customizable with what I am calling attributes."
		},
		"Completed Projects": {
			"Laser Targeting Device": "I was employed as the 'Senior Computer Science Expert' for a laser targeting device prototype that was being researched at the Oregon State University which was funded by the United States Army. I designed several User Interfaces to help find the most 'intuitive' format based off of rel soldiers feedback. <b>January 2015 - December 2015<\/b>",
			"Splunk App": "For my Senior Design Project, I was assigned into a random group of 4 students and we were randomly assigned a real life project sponsored by an actual company. I was assigned to build a Splunk Application for Elemental Technologies. <b>September 2014 - June 2015<\/b>",
			"MicroGravity": "During my stint at Arizona State University I joined the Microgravity team. We proposed an experiment to NASA where we would study dust coagulation in microgravity to help explain how galaxies are formed. We were one of only a few teams to get selected and be able to conduct our experiment on NASA's microgravity plane. <b>October 2013 - Spring 2014<\/b>"
		}
	},
	"Tools I Use": {
		"Programming Languages": {
			"JavaScript, Node, and React": "I have been using JavaScript as my front end solution for some time now. I have also used it a little bit for backend development using node. React has been my framework of choice for frontend development because I has the most professional experience with it. The way it makes writing HTML and CSS easy and stops full page re-rendering when it isn't needed makes my life so much easier when I am using it.",
			"Python": "Python is by far the quickest language to write in. Whenever I need a solution in a time sensitive environment, python is my go to language. It may not be the fastest language to run but that isn't always needed. I have built standalone one-off projects with python but I usually just develop quick scripts with it.",
			"Cache ObjectScript": "I have a good amount of experience when it comes to InterSystems, Cache, Ensemble, and HealthShare. This language has many features that I dislike about it but at the same time it has so many more that I do like. For instance, objects created (as long as they are persistent) are actually written to the database. In fact, there is no need to even connect to a database since the language is built on top of one. The read and write speeds of the database is phenomenal.",
			"C, C++, and OpenMP": "I have only written academic assignments and personal projects in the c languages. I am currently building a compiler in C since I think the efficiency increase would be worth it as well as learning more about the language would be a plus. I have a love for parallel programming and OpenMP makes my life so much easier by abstracting the creation of threads.",
			"Other languages": "Other languages that I have developed in, either professionally or privately, that I have not recognized are: PHP, Haskell, Bash, Batch, C#, and Java."
		},
		"Atlassian": {
			"Jira": "I have been using Jira for a while now and it is a great tool. Since Atlassian has an entire suite of tools that easily integrate with one another, this tool has helped me throughout the development cycle to help track my issues. When I commit my code through Bitbucket, I can reference the issue I am working on and it will show up whenever I am looking at my issue.",
			"Bitbucket": "I started off using GitHub which was great since it is just Git. However When I switched to Bitbucket, I haven't looked back. The ability to add reviewers to your pull requests and several other features make it more Admin friendly which really helps out when there are new people on the team.",
			"Bamboo": "My deployment tool of choice is Bamboo. This allows for many ways of deploying code including NodeJS and even Bash with SSH and SCP protocols and more. This ies in well with Bitbucket, allowing webhooks to be generated and code builds to happen after certain commits or pull requests."
		},
		"Jetbrains": {
			"WebStorm": "I was developing a lot of JavaScript code including JSX syntax on Notepad++ and I just about had it. After searching around for JavaScript IDE's, I finally came across WebStorm and it has solved all issues I had previously. It integrates seamlessly with Git (or even SVN and Mercurial) and project management is a breeze.",
			"CLion": "I have never been a fan of Visual Studio. It seems very clunky, slow, and I can never get it right. After my success with WebStorm I again looked toward Jetbrains for my IDE platform and found CLion. Since it is identical to WebStorm, I found it very easy to use."
		}
	},
	"Resume": {
	},
	"Blog": {
		"11/3/2016 -> Learn a Proper Tool, Not All of Them": {
			"Starting a Project": "At the very beginning of any project, there are a few things that must be done right away before any real work can get done. Setting up Version Control and finding out what actually needs to be built are the two big ones.",
			"My Early Experience": "I have always been pretty good at whiteboarding the project and seeing what the different components really are and how to architect the project. However I haven't always been good at using the right tool for the job. Back in college I was very pro Python, not to say I am not anymore but I have since found that it has a time and place as opposed to all the time. Typically speaking, if you're going to make an application for actual users, then a GUI is going to need to be built. Learning GUI programming is a hard concept to understand and python doesn't make it much easier. I was developing using the Tkinter toolkit which was great but I have since strayed away from that.",
			"Post-Python": "I put one of my incomplete Python projects on the back burner for a bit while I dealt with my new job. After I was settling in I decided to get back at it and to my astonishment, I hated it. We have been using ReactJS at work which (In my personal opinion) is beautiful. Javascript, being made for the front end, really handles all the GUI elements for you and having React on top of it simplifies it for you. So I am in the process of rebuilding the application in JavaScript after ditching the python code.",
			"New Projects": "Recently I have started up yet another project and in the beginning phase I decided I wanted to expand my horizons and build it with something new to hopefully make me more hireable. I decided on Vue2.0 because, why not? I even looked at Angular2.0. I went even further and tried developing in Pug (Formerly known as Jade). Then a thought occurred to me while reading <a href\"https:\/\/hackernoon.com\/how-it-feels-to-learn-javascript-in-2016-d3a717dd577f#.5i5dy52d8\">this article<\/a>, 'If the tools I know can solve this problem and do it well, why do I need to learn something else that can do the same exact thing?'",
			"Lessons Learned": "At the end of the day it doesn't mater if you're using a framework that was popular a year or two ago and is dead now. It doesn't matter if you're using the latest and greatest framework either. If what you're using can solve the problem, solve it well (by your standards), and make the application maintainable then go ahead and use it. If you're just learning and want to make your very first application, sure go ahead and use the latest and greatest since you'll have to learn something new anyways. If it isn't broke, don't fix it."
		},
		"10/21/2016 -> Git and Messing Up": {
			"Real Quick": "This is my first blog entry and I will hopefully be posting here regularly with potentially relevant topics around what I have experienced while performing my job. Today's topic is about Git and how even when you mess up, you can still save your (and your co-workers') behind.",
			"Not So Bad": "There have been two incidents of late, both dealing with Git, that I have learned from. I will start off with the most recent of the two as it was less bad than the other. Someone, let's call him Walker, accidentally deleted a few files from the Git repo. He did this on a Friday and he didn't tell anyone that he did this. Granted he made a pull request with these changes and had <b>three<\/b> of us review it. Not one of us caught these deleted files and we approved the merge. Come next week I am trying to build our environment and Yarn is yelling at me because the package.json file doesn't exist anymore. Big ol' red flag. I do the right thing and double check the repo and even find the exact commit where he deleted the file. I then tell him to fix it. All is well now but things could have been worse. The next scenario is worse by far.",
			"So Very Bad": "Again on a Friday (I think I have learnt my lesson) a while back, my boss and I were adding some files that needed to be in the repo ASAP. we were creating hotfix branches and making pull requests from these hotfix branches into both Develop and Master. We had about five of these for each branch so about 10 branches were made. Being the good, responsible people we are, we made sure that the Develop branch could only be changed through pull requests, not directly modified (Thank you Bitbucket). So we are making pull requests and having the other review it. Bang, bang, bang. We knock them all out. The next Monday I have to do something with Master (Honestly, I don't even remember what) and.... I can't find it. I look for about 20 minutes and <b>Master does not exist<\/b>. Needless to say, I begin to freak out.",
			"Git Saves the Day": "I was able to locate what had happened: My boss, during the last pull request, forgot to make a new branch. He instead made changes directly to master and made a pull request to develop. Since all of our hotfix branches were one-off things, I had checked a box that said <b>delete after merge<\/b> and it persists until it is unchecked. So without noticing that I am merging master into develop, I merged them <b>and I deleted the master branch<\/b>. Luckily we have a tool called Google that helped me find the ability to perform necromancy and bring the master branch back from the dead. I have saved the day because of Git.",
			"Lessons Learned": "Always actually review the code you are reviewing and pay special close attention to which branch is being merged into what. Also, pay attention to when you are deleting branches; Ask yourself, 'should I really delete this branch?' Lastly, double check that you have permissions up that say Develop <b>and<\/b> Master branches can only be changed through pull requests and that neither can be deleted."
		}
	},
	"Contact Me": {
		"Email": "<a href=\"mailto:Paul.R.Reesman@gmail.com\">Paul.R.Reesman@gmail.com<\/a>"
	}
}