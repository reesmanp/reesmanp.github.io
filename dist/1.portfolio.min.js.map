{"version":3,"sources":["webpack:///./node_modules/pdfjs-dist/lib/pdf.worker.js","webpack:///./node_modules/pdfjs-dist/lib/core/primitives.js","webpack:///./node_modules/pdfjs-dist/lib/core/stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/encodings.js","webpack:///./node_modules/pdfjs-dist/lib/core/colorspace.js","webpack:///./node_modules/pdfjs-dist/lib/core/parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/glyphlist.js","webpack:///./node_modules/pdfjs-dist/lib/core/operator_list.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpeg_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/function.js","webpack:///./node_modules/pdfjs-dist/lib/core/unicode.js","webpack:///./node_modules/pdfjs-dist/lib/core/standard_fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/cff_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/crypto.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx.js","webpack:///./node_modules/pdfjs-dist/lib/core/arithmetic_decoder.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt.js","webpack:///./node_modules/pdfjs-dist/lib/core/obj.js","webpack:///./node_modules/pdfjs-dist/lib/core/chunked_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/image.js","webpack:///./node_modules/pdfjs-dist/lib/core/murmurhash3.js","webpack:///./node_modules/pdfjs-dist/lib/core/ps_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/metrics.js","webpack:///./node_modules/pdfjs-dist/lib/core/bidi.js","webpack:///./node_modules/pdfjs-dist/lib/core/pattern.js","webpack:///./node_modules/pdfjs-dist/lib/core/type1_parser.js","webpack:///./node_modules/pdfjs-dist/lib/core/font_renderer.js","webpack:///./node_modules/pdfjs-dist/lib/core/charsets.js","webpack:///./node_modules/pdfjs-dist/lib/core/fonts.js","webpack:///./node_modules/pdfjs-dist/lib/core/cmap.js","webpack:///./node_modules/pdfjs-dist/lib/core/evaluator.js","webpack:///./node_modules/pdfjs-dist/lib/core/annotation.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpx_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/jpg.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2.js","webpack:///./node_modules/pdfjs-dist/lib/core/jbig2_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/ccitt_stream.js","webpack:///./node_modules/pdfjs-dist/lib/core/document.js","webpack:///./node_modules/pdfjs-dist/lib/core/pdf_manager.js","webpack:///./node_modules/pdfjs-dist/lib/core/worker.js"],"names":["pdfjsCoreWorker","__webpack_require__","exports","WorkerMessageHandler","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","EOF","Name","name","this","nameCache","create","get","nameValue","Cmd","cmd","cmdCache","cmdValue","Dict","nonSerializable","xref","_map","objId","suppressEncryption","__nonSerializable__","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","Promise","resolve","getArray","Array","isArray","i","ii","slice","length","isRef","fetch","getRaw","key","getKeys","keys","set","has","forEach","callback","empty","merge","dictArray","mergedDict","dict","isDict","keyName","undefined","Ref","num","gen","toString","str","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","call","clear","isName","v","type","isEOF","isCmd","isRefsEqual","v1","v2","isStream","getBytes","LZWStream","StringStream","StreamsSequenceStream","Stream","RunLengthStream","PredictorStream","NullStream","FlateStream","DecodeStream","DecryptStream","AsciiHexStream","Ascii85Stream","_util","_primitives","arrayBuffer","start","bytes","Uint8Array","pos","end","isEmpty","getByte","getUint16","b0","b1","getInt32","strEnd","subarray","peekByte","peekedByte","peekBytes","skip","n","reset","moveStart","makeSubStream","buffer","stringToBytes","emptyBuffer","maybeMinBufferLength","bufferLength","eof","minBufferLength","readBlock","ensureBuffer","requested","byteLength","size","buffer2","bufEnd","getBaseStreams","streams","chunk","shift","newLength","baseStreams","stream","Util","appendToArray","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","maybeLength","cmf","flg","FormatError","codeSize","codeBuf","getBits","bits","b","getCode","table","codes","maxLen","code","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","c","bytesPerPixel","sum","compArray","bitMask","j","kk","prevRow","up","upLeft","left","p","pa","pb","pc","decrypt","nextChunk","initialized","hasMoreData","input","isSpace","firstDigit","maxDecodeLength","digit","ch","repeatHeader","source","earlyChange","cachedData","bitsCached","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","Uint16Array","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","estimatedDecodedSize","blockSize","prevCode","decodedLength","currentBufferLength","hasPrev","Math","min","log","ExpertEncoding","MacExpertEncoding","MacRomanEncoding","StandardEncoding","WinAnsiEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","getEncoding","encodingName","ColorSpace","unreachable","getRgb","src","srcOffset","rgb","getRgbItem","dest","destOffset","getRgbBuffer","count","alpha01","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","width","height","actualHeight","bpc","comps","rgbBuf","numComponentColors","needsResizing","numComps","allColors","destPos","rgbPos","colorMap","w1","h1","w2","h2","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","resizeRgbImage","usesZeroToOneRange","parse","cs","res","pdfFunctionFactory","IR","parseToIR","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","lookup","IndexedCS","alt","tintFnIR","AlternateCS","createFromIR","range","LabCS","arguments","colorSpaces","resCS","mode","altIR","warn","createIR","isDefaultDecode","decode","shadow","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","base","tintFn","defaultColor","Float32Array","tmpBuf","scale","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","isString","charCodeAt","outputDelta","lookupPos","r","g","convertToRgb","srcScale","m","y","XW","YW","ZW","XB","YB","ZB","G","info","A","AG","pow","L","max","BRADFORD_SCALE_MATRIX","BRADFORD_SCALE_INVERSE_MATRIX","SRGB_D65_XYZ_TO_RGB_MATRIX","FLAT_WHITEPOINT_MATRIX","tempNormalizeMatrix","tempConvertMatrix1","tempConvertMatrix2","DECODE_L_CONSTANT","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","a","result","sRGBTransferFunction","color","adjustToRange","decodeL","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","XYZ_Flat","sourceWhitePoint","XYZ_In","LMS","LMS_Flat","convertToFlat","normalizeWhitePointToFlat","XYZ_Black","sourceBlackPoint","zeroDecodeL","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","compensateBlackPoint","XYZ_D65","LMS_D65","convertToD65","normalizeWhitePointToD65","SRGB","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","x","high1","low2","high2","maxVal","Ls","as","bs","M","N","sqrt","Parser","Linearization","Lexer","_stream","_ccitt_stream","_jbig2_stream","_jpeg_stream","_jpx_stream","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","e","MissingDataException","cipherTransform","makeInlineImage","array","push","makeStream","Number","isInteger","decryptString","findDefaultInlineStreamEnd","startPos","state","maybeEIPos","assert","followingBytes","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","cacheEntry","createStream","cacheKey","skipToNextLine","nextChar","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","StreamType","FLATE","LZW","DCT","JpegStream","JPX","JpxStream","A85","AHX","CCF","CCITTFaxStream","RL","JBIG","Jbig2Stream","ex","knownCommands","strBuf","specialChars","toHexDigit","currentChar","peekChar","getNumber","eNotation","divideBy","sign","String","fromCharCode","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","join","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","getInt","allowZeroValue","linDict","Error","parser","obj1","obj2","obj3","isNum","hints","hintsLength","item","index","getHints","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","getLookupTableFactory","getGlyphsUnicode","getDingbatsGlyphsUnicode","OperatorList","QueueOptimizer","addState","parentState","pattern","checkFn","iterateFn","processFn","InitialState","queue","context","iCurr","fnArray","argsArray","match","lastProcessed","OPS","save","transform","paintInlineImageXObject","restore","curr","iFirstSave","iFirstTransform","iFirstPIIXO","maxX","map","maxLineHeight","currentX","currentY","img","w","h","imgWidth","imgHeight","imgData","imgRowSize","data","rowSize","dataOffset","offset","splice","paintInlineImageXObjectGroup","kind","ImageKind","RGBA_32BPP","paintImageMaskXObject","iFirstPIMXO","arg","imageMask","paintSolidColorImageMask","handlePaintSolidColorImageMask","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","paintImageMaskXObjectRepeat","images","maskParams","paintImageMaskXObjectGroup","paintImageXObject","firstPIXOArg0","args","paintImageXObjectRepeat","beginText","setFont","setTextMatrix","showText","endText","iFirstSetFont","firstSetFontArg0","firstSetFontArg1","iFirstBeginText","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","iFirst","iEndText","_optimize","flush","NullOptimizer","intent","messageHandler","pageIndex","optimizer","dependencies","_totalLength","weight","totalLength","addOp","CHUNK_SIZE","addDependency","dependency","addDependencies","addOpList","opList","extendObj","getIR","lastChunk","transfers","cached","getTransfers","send","operatorList","_jpg","configurable","jpegImage","JpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","getData","drawWidth","drawHeight","forceDataSchema","createObjectURL","PostScriptCompiler","PostScriptEvaluator","PDFFunctionFactory","isPDFFunction","_createClass","defineProperties","target","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_ps_parser","IsEvalSupportedCached","isEvalSupported","_ref","_ref$isEvalSupported","instance","TypeError","_classCallCheck","PDFFunction","fnObj","parseArray","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","_ref2","typeFn","constructSampled","constructInterpolated","constructStiched","constructPostScript","_ref3","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","_ref4","_ref5","jj","_ref6","toMultiArray","arr","out","domain","inputSize","order","encode","_ref7","interpolate","xmin","xmax","ymin","ymax","samples","cubeVertices","cubeN","Float64Array","cubeVertex","Uint32Array","domain_2i","domain_2i_1","size_i","e0","n0","n1","offset0","offset1","rj","_ref8","c0","c1","diff","_ref9","_ref10","fnRefs","fns","_ref11","bounds","fnsIR","clip","dmin","dmax","rmin","rmax","_ref12","PostScriptLexer","PostScriptParser","_ref13","compiled","compile","Function","numOutputs","numInputs","evaluator","cache","cache_available","cachedValue","output","stack","execute","stackIndex","bound","PostScriptStack","initialStack","pop","copy","roll","l","operators","operator","counter","abs","isBool","atan","ceil","cos","LN10","sin","AstNode","AstArgument","AstLiteral","number","AstBinaryOperation","op","arg1","arg2","AstMin","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","apply","instruction","statementBuilder","expr","unshift","fnDict","getSpecialPUASymbols","UnicodeRanges","begin","getNormalizedUnicodes","mapSpecialUnicodeValues","reverseIfRtl","chars","charsLength","s","getUnicodeRangeFor","getUnicodeForGlyph","glyphsUnicodeMap","unicode","hexStr","nameLen","substr","toUpperCase","parseInt","getSupplementalGlyphMapForCalibri","getSupplementalGlyphMapForArialBlack","getGlyphMapForStandardFonts","getSymbolsFonts","getSerifFonts","getNonStdFontMap","getStdFontMap","CFFCompiler","CFFPrivateDict","CFFTopDict","CFFCharset","CFFIndex","CFFStrings","CFFHeader","CFF","CFFParser","CFFStandardStrings","_charsets","_encodings","CharstringValidationData","id","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","file","properties","seacAnalysisEnabled","cff","header","parseHeader","nameIndex","parseIndex","endPos","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","topDict","createDict","strings","names","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","charset","encoding","fontBBox","ascent","descent","ascentScaled","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","charStrings","localSubrIndex","privateDict","subrsIndex","seacs","widths","bytesLength","major","minor","hdrSize","offSize","parseOperand","b2","parseFloat","parseFloatOperand","NaN","operands","entries","cffIndex","offsets","offsetSize","offsetStart","offsetEnd","add","bytesToString","Type","cffDict","pair","setByKey","parseCharString","callDepth","stackSize","validationCommand","seac","bias","subrNumber","isNaN","firstStackClearing","charstring","valid","localSubrToUse","privateDictToUse","fdIndex","getFDIndex","nominalWidth","defaultWidth","emptyPrivateDictionary","parentDict","privateOffset","privateDictEnd","dictData","subrsOffset","relativeOffset","removeByName","cid","CFFCharsetPredefinedTypes","ISO_ADOBE","ISOAdobeCharset","EXPERT","ExpertCharset","EXPERT_SUBSET","ExpertSubsetCharset","format","raw","predefined","baseEncoding","indexOf","dataStart","glyphsCount","rangesCount","gid","dataEnd","supplementsCount","sid","readSupplement","CFFEncoding","invalidFirstGID","first","next","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","types","opcodes","values","valueLength","setByName","createTables","layout","entry","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","offset2","offset3","offset4","concat","compileHeader","compileNameIndex","subDict","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","encodeFloat","encodeInteger","exec","epsilon","nibbles","sanitizedName","char","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","outputLength","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","calculateSHA512","calculateSHA384","calculateSHA256","calculateMD5","PDF20","PDF17","CipherTransformFactory","ARCFourCipher","AES256Cipher","AES128Cipher","tmp","keyLength","encryptBlock","tmp2","decryptBlock","h0","h3","paddedLength","padded","f","d","rotateArg","rotate","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","lowAdd","highAdd","copyTo","assign","rotr","z","maj","sigma","sigmaPrime","littleSigma","h4","h5","h6","h7","t1","t2","littleSigmaPrime","mode384","tmp3","tmp1","NullCipher","rcon","inv_s","mixCol","mix","decrypt128","u","s0","s1","s2","s3","encrypt128","cipherKey","t3","t4","expandKey128","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","lastBlock","psLen","encrypt","cipher","decrypt256","encrypt256","expandKey256","compareByteArrays","array1","array2","checkOwnerPassword","password","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","hash","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","defaultPasswordBytes","prepareKeyData","fileId","flags","revision","encryptMetadata","hashDataSize","keyLengthInBytes","checkData","encryptionKey","derivedKey","identityName","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","utf8StringToString","uBytes","perms","passwordLength","pdfAlgorithm","createEncryptionKey20","PasswordException","PasswordResponses","NEED_PASSWORD","decodeUserPassword","INCORRECT_PASSWORD","cf","stmf","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","createCipherTransform","cipherConstructor","JpxImage","_arithmetic_decoder","JpxError","msg","message","SubbandsGainLog2","LL","LH","HL","HH","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","tiles","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","getPrecinctIndexIfExist","pxIndex","pyIndex","sizeInImageScale","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","getPrecinctSizesInImageScale","componentsCount","MAX_VALUE","maxNumWide","maxNumHigh","sizePerComponent","decompositionLevelsCount","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","resolutions","widthCurrentResolution","heightCurrentResolution","buildPackets","tileIndex","currentTile","blocksDimensions","bscale","resolutionSubbands","progressionOrder","codingStyleDefaultParameters","packetsIterator","layersCount","maxDecompositionLevelsCount","nextPacket","packet","maxNumPrecinctsInLevel","maxNumPrecincts","precinctsIterationSizes","px","parseTilePackets","dataLength","position","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","log2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","charAt","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","ArithmeticDecoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","gainLog2","items","calculate","top","initializeTile","qcdOrQcc","QCC","QCD","COC","readUint16","headerSize","lbox","readUint32","tbox","jumpDataLength","method","colorspace","parseCodestream","headerType","parseImageProperties","newByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","cqcc","qcc","cod","scod","multipleComponentTransform","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","resultImages","transformedTiles","y2","tile0","Uint8ClampedArray","fourComponents","y0items","y1items","y2items","y3items","component0","transformComponents","levelsLength","levels","level","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","LLAndLHContextsLabel","HLContextLabel","HHContextLabel","contextLabelTable","coefficientCount","neighborsSignificance","processingFlags","contexts","Int8Array","setNeighborsSignificance","row","column","labels","i0","i1","contextLabel","readBit","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","QeTable","qe","nmps","nlps","switchFlag","bp","chigh","clow","byteIn","ct","cx_index","cx_mps","qeTableIcx","qeIcx","CCITTFaxDecoder","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","options","eoline","byteAlign","rows","eoblock","black","codingLine","refLine","codingPos","nextLine2D","inputBits","inputBuf","outputBits","rowsDone","_lookBits","_eatBits","readNextChar","refPos","blackPixels","err","code3","_getTwoDimCode","_addPixels","_getBlackCode","_getWhiteCode","_addPixelsNeg","gotEOL","a1","_findTableCode","limitValue","FileSpec","XRef","ObjectLoader","Catalog","_slicedToArray","_arr","_n","_d","_e","_s","_i","sliceIterator","_parser","_chunked_stream","_crypto","_colorspace","pdfManager","pageFactory","catDict","getCatalogObj","fontCache","builtInCMapCache","pageKidsCountCache","pagePromises","metadata","streamRef","subtype","stringToUTF8String","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","root","parent","processed","blackColor","outlineDict","url","parseDestDictionary","destDict","resultObj","docBaseUrl","title","rgbColor","outlineItem","unsafeUrl","newWindow","stringToPDFString","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","nums","NumberTree","currentLabel","currentIndex","labelDict","st","toRoman","baseCharCode","letterIndex","character","charBuf","pageMode","attachments","fs","serializable","javaScript","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","action","cleanup","_this","promises","promise","all","then","translatedFonts","translated","getPage","_this2","getPageDict","createPage","capability","createPromiseCapability","nodesToVisit","currentPageIndex","currentNode","fetchAsync","reject","kids","last","getPageIndex","pageRef","total","kidRef","parentRef","node","kidPromises","kid","pagesBeforeRef","actionName","addDefaultProtocolToUrl","urlDict","remoteDest","baseUrl","split","JSON","stringify","namedAction","jsAction","jsUrl","RegExp","tryConvertUrlEncoding","absoluteUrl","createValidAbsoluteUrl","href","xrefstms","fontTypes","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","LF","CR","LT","readToken","token","skipUntil","objRegExp","endobjRegExp","nestedObjRegExp","trailerBytes","startxrefBytes","objBytes","xrefBytes","trailers","xrefStms","test","contentLength","checkPos","tokenStr","objToken","content","xrefTagOffset","InvalidPDFException","startXRefParsedCache","XRefParseException","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","tableOffset","streamManager","manager","tryFetch","requestRange","NameOrNumberTree","_type","kidsOrEntries","loopCount","limits","currentKey","inherit","description","contentAvailable","pickPlatformItem","filename","_filename","replace","contentRef","fileObj","mayHaveChildren","addChildren","dictKeys","rawValue","_ii","refSet","load","ChunkedStream","getMissingChunks","_walk","_this3","nodesToRevisit","pendingRequests","foundMissingData","requestRanges","_i2","_ii2","ChunkedStreamManager","chunkSize","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","chunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","pdfNetworkStream","rangeChunkSize","disableAutoFetch","msgHandler","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","onLoadedStream","sendRequest","rangeReader","getRangeReader","isStreamingSupported","onProgress","bind","loaded","read","readChunk","arrayByteLength","chunkData","arraysToBytes","requestAllChunks","_requestChunks","requestId","chunksNeeded","isEmptyObj","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","getBeginChunk","getEndChunk","ranges","sort","groupedChunks","prevChunk","bytesLoaded","isProgressive","loadedRequests","requestIds","onError","abort","cancelAllRequests","PDFImage","_jpx","handleImageData","image","nativeDecoder","canDecode","decodeAndClamp","addend","coefficient","resizeImageMask","_ref$isInline","isInline","_ref$smask","smask","_ref$mask","mask","_ref$isMask","isMask","jpxImage","matte","colorSpace","resources","needsDecode","decodeCoefficients","decodeAddends","buildImage","handler","smaskPromise","maskPromise","_ref2$isInline","_ref2$nativeDecoder","imagePromise","imageData","smaskData","maskData","createMask","imgArray","imageIsFromDecodeStream","inverseDecode","computedLength","actualLength","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","createImageData","forceRGBA","GRAYSCALE_1BPP","RGB_24BPP","getImageBytes","newArray","imageLength","maybeUndoPreblend","MurmurHash3_64","seed","update","isArrayBuffer","blockCounts","tailLength","dataUint32","k2","C1","C2","hexdigest","hex","prev","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","toLowerCase","getMetrics","bidi","baseTypes","arabicTypes","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","vertical","dir","startLevel","strLength","numBidi","charCode","charType","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","getTilingPatternIR","Pattern","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","parseShading","shading","Shadings","RadialAxial","Mesh","featureId","UNSUPPORTED_FEATURES","shadingPattern","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","createFromArray","step","colorStops","ratio","cssColor","makeCssRgb","background","p0","p1","r0","applyTransform","singularValueDecompose2dScale","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","hasData","nextByte","align","readFlag","bitsPerFlag","readCoordinate","bitsPerCoordinate","xi","yi","readComponents","ci","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","TRIANGLE_DENSITY","getB","lut","t_","buildB","buildFigureFromPatch","mesh","figure","figures","coords","pi","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","splitYBy","verticesPerRow","figureCoords","figureColors","cl","cr","c2","c3","bRow","bCol","col","newColor","updateBounds","minX","minY","maxY","bbox","reader","patchMesh","ps","verticesLeft","coord","decodeType4Shading","decodeType5Shading","tmp4","decodeType6Shading","decodeType7Shading","coordsPacked","xy","colorsPacked","packData","normalizeRect","xstep","ystep","paintType","tilingType","Type1Parser","Type1CharString","COMMAND_MAP","lsb","flexing","convert","encoded","wx","sbx","error","dy","executeCommand","sby","numArgs","flexArgs","howManyArgs","command","keepStack","stackLength","EEXEC_ENCRYPT_KEY","isHexDigit","discardNumber","decrypted","isSpecial","encrypted","isBinary","digit1","digit2","decryptAscii","readNumberArray","readNumber","readInt","readBoolean","readCharStrings","lenIV","extractFontProgram","charstrings","privateData","program","glyph","blueArray","charString","glyphName","extractFontHeader","encodingArg","builtInEncoding","FontRendererFactory","_cff_parser","_glyphlist","getLong","getUshort","parseCmap","segCount","idDelta","idOffset","groups","parseCff","glyphs","gsubrs","lookupCmap","glyphId","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","cmap","Type2Compiled","cffInfo","glyphNameMap","gsubrsBias","subrsBias","getPathJs","compileGlyph","cmds","compileGlyphImpl","hasBuiltPath","compileGlyf","font","moveTo","lineTo","quadraticCurveTo","xa","ya","numberOfContours","scaleX","scaleY","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","repeat","startPoint","endPoint","contour","compileCharString","stems","bezierCurveTo","xb","yb","subrCode","stackClean","achar","bchar","glyf","loca","indexToLocFormat","unitsPerEm","numTables","tag","isGlyphLocationsLong","itemSize","itemDecode","startOffset","endOffset","parseGlyfTable","getFontType","ProblematicCharRanges","IdentityToUnicodeMap","ToUnicodeMap","FontFlags","Font","ErrorFont","PRIVATE_USE_OFFSET_END","PRIVATE_USE_OFFSET_START","SEAC_ANALYSIS_ENABLED","_standard_fonts","_unicode","_font_renderer","_type1_parser","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","FixedPitch","Serif","Symbolic","Script","Nonsymbolic","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","adjustWidths","FONT_IDENTITY_MATRIX","glyphsWidths","FontType","TYPE1C","TYPE1","CIDFONTTYPE0C","CIDFONTTYPE0","OPENTYPE","TRUETYPE","CIDFONTTYPE2","MMTYPE1","TYPE0","UNKNOWN","recoverGlyphName","Glyph","fontChar","accent","vmetric","operatorListId","isInFont","matchesForCache","charCodeOf","amend","firstChar","lastChar","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","toArray","tablesNames","tableName","tableOffsets","string32","searchParams","checksum","addTable","loadedName","isType3Font","sizes","missingFile","glyphCache","isSerifFont","isSymbolicFont","isMonospace","fallbackName","differences","composite","wideChars","cMap","defaultEncoding","toUnicode","fallbackToUnicode","toFontChar","cidEncoding","vmetrics","defaultVMetrics","fallbackToSystemFont","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","checkAndRepair","isOpenType","fontType","seacMap","loading","TYPE3","ID","int16","signedInt16","string16","safeString16","buildToFontChar","isProblematicUnicodeLocation","adjustMapping","charCodeToGlyphId","missingGlyphs","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","createCmapTable","numGlyphs","codeIndices","getRanges","bmpLength","trailingRangesCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","createOS2Table","override","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","fixedPitch","italicAngle","xHeight","capHeight","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","getFontID","renderer","exportData","hasOwnProperty","fontName","stdFontMap","nonStdFontMap","isStandardFont","search","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","SupplementalGlyphMapForCalibri","unicodeCharCode","VALID_TABLES","readTables","readTableEntry","previousPosition","readOpenTypeHeader","ttf","version","entrySelector","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","glyphProfile","sizeOfInstructions","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","flag","xyLength","glyphDataLength","readNameTable","numRecords","stringsStart","records","platform","language","record","TTOpsStackDeltas","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","foldTTTable","isTrueTypeCollectionFile","ttcData","ttc","_readTrueTypeCollecti","ttcTag","majorVersion","minorVersion","numFonts","offsetTable","dsigTag","dsigLength","dsigOffset","readTrueTypeCollectionHeader","potentialHeader","potentialTables","nameEntry","readTrueTypeCollectionData","cffFile","isTrueType","cidToGidMap","maxFunctionDefs","maxSizeOfInstructions","dupFirstEntry","fpgm","prep","cvt","checkInvalidFunctions","cvtData","sanitizeTTPrograms","metrics","numOfMetrics","numMissing","sanitizeMetrics","head","locaLength","b3","numGlyphsPlusOne","sanitizeHead","glyphsInfo","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","locaCount","simpleGlyph","firstEntryLength","sanitizeGlyphLocations","metricsOverride","post","maxpNumGlyphs","glyphNames","glyphNameIndexes","customNames","stringLength","readPostScriptTable","hasGlyph","isCidToGidMapEmpty","cmapTable","hasEncoding","platformId","encodingId","mappings","hasShortCmap","segment","potentialTable","canBreak","useTable","segIndex","segments","offsetsCount","rangeOffset","offsetIndex","firstCode","readCmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","baseEncodingName","standardGlyphName","unicodeOrCharCode","newMapping","os2","selection","validateOS2Table","compiler","namePrototype","builder","tableTag","hasIncludedToUnicodeMap","adjustToUnicode","mapping","getGlyphMapping","getCharCodes","charCodes","createCharCode","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","spaceWidth","_shadowWidth","possibleSpaceReplacements","glyphUnicode","charcode","contains","charToGlyph","widthCode","charsToGlyphs","charsCache","charsCacheKey","readCharCode","type1FontGlyphMapping","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","headerBlockLength","length1","pfbHeader","length2","pfbHeaderPresent","headerBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","getHeaderBlock","eexecBytes","eexecBlock","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","fields","field","subrIndex","charsets","navigator","userAgent","CMapFactory","IdentityCMap","CMap","BUILT_IN_CMAPS","builtInCMap","codespaceRanges","numCodespaceRanges","useCMap","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","getMap","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","MAX_NUM_SIZE","MAX_ENCODED_NUM_SIZE","BinaryCMapStream","readByte","readSigned","readHex","readHexNumber","sp","readHexSigned","readString","process","sequence","dataSize","subitemsCount","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","fetchBuiltInCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","compressionType","CMapCompressionType","BINARY","NONE","parsedCMap","PartialEvaluator","_cmap","_fonts","_pattern","_bidi","_metrics","_function","_murmurhash","_operator_list","_image","DefaultPartialEvaluatorOptions","maxImageSize","disableFontFace","nativeImageDecoderSupport","NativeImageDecoding","DECODE","ignoreErrors","NativeImageDecoder","_ref$forceDataSchema","idFactory","_ref2$options","cachedCMap","sendWithPromise","isDecodable","isSupported","TimeSlotManager","checked","endTime","Date","now","deferred","clone","newOptions","newEvaluator","hasBlendModes","nodes","graphicStates","graphicStatesKeys","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","task","initialState","group","groupOptions","isolated","knockout","groupSubtype","backdrop","beginGroup","paintFormXObjectBegin","getOperatorList","paintFormXObjectEnd","endGroup","buildPaintImageXObject","inline","bitStrideLength","softMask","createObjId","paintJpegXObject","nativeImageDecoder","imageObj","catch","reason","handleSMask","stateManager","smaskContent","smaskOptions","transferObj","transferFn","transferMap","handleTilingType","patternDict","tilingOpList","resourcesArray","patternResources","tilingPatternIR","unknown","handleSetFont","fontArgs","fontRef","_this4","loadFont","loadType3Data","TranslatedFont","handleText","_this5","isAddToPathSet","textRenderingMode","TextRenderingMode","ADD_TO_PATH_FLAG","fillColorSpace","buildPath","path","setGState","gState","_this6","gStateObj","gStateKeys","_loop","normalizeBlendMode","_this7","errorFont","fontRes","fontID","translatedPromise","fontCapability","preEvaluatedFont","preEvaluateFont","fontRefIsRef","fontAliases","aliasFontRef","docId","translateFont","translatedFont","fontFile3","lastIndex","constructPath","opArgs","handleColorN","patterns","patternName","typeNum","_this8","_ref3$initialState","EvalState","self","xobjs","StateManager","preprocessor","EvaluatorPreprocessor","timeSlotManager","closePendingRestoreOPS","argument","savedStatesDepth","promiseBody","ensureNotTerminated","stop","paintXObject","resolveXObject","rejectXObject","fontSize","endInlineImage","showSpacedText","combinedGlyphs","arrLength","arrItem","nextLineShowText","nextLine","nextLineSetSpacingShowText","setWordSpacing","setCharSpacing","setTextRenderingMode","setFillColorSpace","setStrokeColorSpace","strokeColorSpace","setFillColor","setFillRGBColor","setStrokeColor","setStrokeRGBColor","setFillGray","setStrokeGray","setFillCMYKColor","setStrokeCMYKColor","setFillColorN","setStrokeColorN","shadingFill","shadingRes","patternIR","dictName","extGState","curveTo","curveTo2","curveTo3","closePath","rectangle","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","getTextContent","_this9","_ref4$stateManager","_ref4$normalizeWhites","normalizeWhitespace","_ref4$combineTextItem","combineTextItems","sink","_ref4$seenStyles","seenStyles","TextState","textState","WhitespaceRegexp","textContent","styles","textContentItem","lastAdvanceWidth","lastAdvanceHeight","textAdvanceScale","fakeSpaceMin","Infinity","fakeMultiSpaceMin","fakeMultiSpaceMax","textRunBreakAllowed","SPACE_FACTOR","MULTI_SPACE_FACTOR","MULTI_SPACE_FACTOR_MAX","skipEmptyXObjs","ensureTextContentItem","fontFamily","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","runBidiTransform","textChunk","bidiResult","replaceWhitespace","buildTextContentItem","glyphWidth","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","enqueueChunk","enqueue","ready","advance","fontNameArg","fontSizeArg","setTextRise","setHScale","setLeading","leading","moveText","isSameTextLine","translateTextLineMatrix","setLeadingMoveText","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","IDENTITY_MATRIX","breakTextRun","currentState","xObjStateManager","sinkWrapper","enqueueInvoked","desiredSize","AbortException","gStateFont","extractDataStructures","baseDict","_this10","toUnicodePromise","readToUnicode","cidSystemInfo","registry","ordering","supplement","readCidToGidMap","diffEncoding","isNonsymbolicFont","buildToUnicode","_buildSimpleFontToUnicode","ucs2CMapName","ucs2CMap","ucs2","cmapObj","cidToGidStream","glyphsData","glyphID","extractWidths","glyphsVMetrics","baseFontName","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","fontNameWoStyle","monospace","lookupName","Metrics","glyphWidths","widthsByGlyphName","uint8array","df","diffLength","diffBuf","diffEntry","_this11","maxCharIndex","baseFont","fontNameStr","baseFontStr","cMapPromise","fontFile","length3","type3Loaded","sent","fontData","parentOperatorList","type3Options","type3Evaluator","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","_loop2","glyphStream","stateStack","old","txDiff","tyDiff","denominator","calcRenderMatrix","FILL","getOPMap","setLineWidth","variableArgs","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","eoClip","setCharWidth","setCharWidthAndBounds","beginInlineImage","beginImageData","opMap","nonProcessedArgs","opSpec","argsLength","preprocessCommand","AnnotationFactory","AnnotationBorderStyle","Annotation","_get","object","property","receiver","desc","getOwnPropertyDescriptor","getPrototypeOf","getter","_obj","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","parameters","LinkAnnotation","TextAnnotation","fieldType","getInheritableProperty","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","LineAnnotation","SquareAnnotation","CircleAnnotation","PolylineAnnotation","PolygonAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","StampAnnotation","FileAttachmentAnnotation","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","rect","_hasFlag","AnnotationFlag","INVISIBLE","HIDDEN","NOVIEW","PRINT","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","hasPopup","contents","renderForms","appearanceDict","resourcesPromise","loadResources","getAxialAlignedBoundingBox","getTransformMatrix","beginAnnotation","endAnnotation","_isViewable","_isPrintable","AnnotationBorderStyleType","SOLID","dashArray","horizontalCornerRadius","verticalCornerRadius","DASHED","BEVELED","INSET","UNDERLINE","isValid","allZeros","element","radius","_Annotation","annotationType","AnnotationType","WIDGET","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","AnnotationFieldFlag","READONLY","loopDict","_WidgetAnnotation","alignment","textAlignment","maximumLength","multiLine","MULTILINE","comb","COMB","PASSWORD","FILESELECT","_WidgetAnnotation2","checkBox","RADIO","PUSHBUTTON","radioButton","pushButton","_processCheckBox","_processRadioButton","_processPushButton","buttonValue","fieldParent","fieldParentValue","_WidgetAnnotation3","option","isOptionArray","exportValue","displayValue","combo","COMBO","multiSelect","MULTISELECT","_Annotation2","TEXT","_preparePopup","_Annotation3","LINK","_Annotation4","POPUP","parentItem","parentSubtype","parentType","parentId","viewable","parentFlags","_Annotation5","LINE","lineCoordinates","_Annotation6","SQUARE","_Annotation7","CIRCLE","_Annotation8","_this12","POLYLINE","rawVertices","vertices","_PolylineAnnotation","_this13","POLYGON","_Annotation9","_this14","HIGHLIGHT","_Annotation10","_this15","_Annotation11","_this16","SQUIGGLY","_Annotation12","_this17","STRIKEOUT","_Annotation13","_this18","STAMP","_Annotation14","_this19","FILEATTACHMENT","tileCount","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","srcPosition","dataPosition","tileRowSize","JpegError","dctZigZag","dctCos1","dctSin1","dctCos3","dctSin3","dctCos6","dctSin6","dctSqrt2","dctSqrt1d2","buildHuffmanTable","children","getBlockBufferOffset","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","mcusPerLine","progressive","bitsData","bitsCount","decodeHuffman","tree","receive","receiveAndExtend","eobrun","successiveACNextValue","successiveACState","decodeMcu","mcu","mcuCol","decodeBlock","decodeFn","componentsLength","huffmanTableDC","blockData","pred","rs","huffmanTableAC","offsetZ","fileMarker","mcuExpected","blocksPerColumn","mcusPerColumn","mcuToRead","findNextFileMarker","invalid","marker","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p2","p3","p4","p5","p6","p7","qt","quantizationTable","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","currentPos","peekUint16","maxPos","newPos","currentMarker","newMarker","readDataBlock","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","Jbig2Image","_ccitt","Jbig2Error","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","SegmentTypes","CodingTemplates","RefinementTemplates","coding","reference","ReusedContexts","RefinementReusedContexts","decodeBitmap","mmr","templateIndex","prediction","at","decodingContext","decodeMMRBitmap","Reader","pixel","row1","row2","bitmap","decodeBitmapTemplate0","useskip","template","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ltp","decodeRefinement","referenceBitmap","offsetX","offsetY","codingTemplate","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","decodeTextRegion","huffman","refinement","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","symbolCodeLength","transposed","dsOffset","referenceCorner","combinationOperator","huffmanTables","refinementTemplateIndex","refinementAt","logStripSize","huffmanInput","stripT","tableDeltaT","firstS","currentS","tableFirstS","currentT","symbolId","symbolIDTable","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","tableDeltaS","readSegmentHeader","segmentHeader","segmentType","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionMmr","RegionSegmentInformationFieldLength","searchPattern","headerEnd","readSegments","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","readInt8","numberOfExportedSymbols","numberOfNewSymbols","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","patternDictionary","patternDictionaryFlags","patternWidth","patternHeight","maxPatternIndex","halftoneRegion","halftoneRegionFlags","enableSkip","gridWidth","gridHeight","gridOffsetX","gridOffsetY","gridVectorX","gridVectorY","genericRegion","genericRegionSegmentFlags","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","SimpleSegmentVisitor","HuffmanLine","lineData","isOOB","rangeLow","prefixLength","rangeLength","prefixCode","isLowerRange","HuffmanTreeNode","line","isLeaf","HuffmanTable","lines","prefixCodesDone","assignPrefixCodes","rootNode","buildTree","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","onSymbolDictionary","currentSegment","referredSegments","customTables","customIndex","tableDeltaHeight","tableDeltaWidth","getStandardTable","getCustomHuffmanTable","tableBitmapSize","tableAggregateInstances","getSymbolDictionaryHuffmanTables","symbols","referredSymbols","newSymbols","currentHeight","tableB1","symbolWidths","currentWidth","totalWidth","firstSymbol","deltaWidth","numberOfInstances","rdx","rdy","bitmapSize","collectiveBitmap","readUncompressedBitmap","originalEnd","bitmapEnd","numberOfSymbolsDecoded","xMin","xMax","exportedSymbols","currentFlag","totalSymbolsLength","runLength","decodeSymbolDictionary","onImmediateTextRegion","numberOfSymbols","runCodesTable","repeatedLength","numberOfRepeats","getTextRegionHuffmanTables","onImmediateLosslessTextRegion","onPatternDictionary","patternBitmap","decodePatternDictionary","onImmediateHalftoneRegion","regionWidth","regionHeight","regionBitmap","numberOfPatterns","pattern0","bitsPerValue","grayScaleBitPlanes","mmrInput","mg","ng","patternIndex","patternRow","regionRow","regionX","regionY","decodeHalftoneRegion","onImmediateLosslessHalftoneRegion","onTables","lowestValue","highestValue","prefixSizeBits","rangeSizeBits","currentRangeLow","decodeTablesSegment","decodeNode","htOffset","linesLength","prefixLengthMax","histogram","currentLength","currentCode","currentTemp","standardTablesCache","currentByte","endOfBlock","Columns","Rows","BlackIs1","EndOfBlock","numBits","parseChunks","parseJbig2Chunks","_jbig","jbig2Image","globalsStream","globals","ccittFaxDecoder","EndOfLine","EncodedByteAlign","PDFDocument","Page","_annotation","_evaluator","LETTER_SIZE_MEDIABOX","isAnnotationRenderable","annotation","printable","pageDict","evaluatorOptions","uniquePrefix","idCounters","getPageProp","getInheritedPageProp","valueArray","mediaBox","cropBox","userUnit","view","intersection","intersect","getContentStream","ensure","renderInteractiveForms","contentStreamPromise","partialEvaluator","pageListPromise","contentStream","transparency","annotationsPromise","pageOpList","annotations","opListPromises","opLists","beginAnnotations","endAnnotations","extractTextContent","getAnnotationsData","annotationsData","annotationRefs","annotationRef","find","needle","backwards","lastIndexOf","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","setup","catalog","pdfFormatVersion","acroForm","xfa","linearization","checkHeader","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fingerprint","fileID","idArray","NetworkPdfManager","LocalPdfManager","_document","BasePdfManager","_docId","_password","_docBaseUrl","NotImplementedException","ensureDoc","prop","pdfDocument","ensureXRef","ensureCatalog","requestLoadedStream","sendProgressiveData","updatePassword","terminate","ensureHelper","WorkerTask","_pdf_manager","_is_node","_is_node2","__esModule","default","maybePort","terminated","_capability","finished","finish","PDFWorkerStream","_msgHandler","_contentLength","_fullRequestReader","_rangeRequestReaders","PDFWorkerStreamReader","_isRangeSupported","_isStreamingSupported","readableStream","sendWithStream","_reader","getReader","_headersReady","isRangeSupported","PDFWorkerStreamRangeReader","getFullReader","cancel","headersReady","port","testMessageProcessed","on","supportTransfers","postMessageTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","setVerbosityLevel","verbosity","createDocumentHandler","docParams","cancelXHRs","WorkerTasks","apiVersion","workerHandlerName","MessageHandler","startWorkerTask","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","parseFailure","getPdfManager","pdfManagerCapability","pdfStream","cachedChunks","fullRequest","pdfFile","flushChunks","page","rotatePromise","refPromise","userUnitPromise","viewPromise","results","pageNum","wrappedException","minimumStackMessage","onPull","onCancel","close","waitOn","destroy","onSuccess","doc","pdfInfo","onFailure","pdfManagerReady","MissingPDFException","UnexpectedResponseException","UnknownErrorException","disableCreateObjectURL","newPdfManager","setupDoc","initializeFromPort","window","postMessage"],"mappings":"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,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EA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AAA,IACA7wB,IAAA,OAEA6wB,MAAA,MACA7wB,IAAA,QAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,MACA7wB,IAAA,QAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,OAEA6wB,MAAA,KACA7wB,IAAA,QAEA6wB,MAAA,MACA7wB,IAAA,QAEA6wB,MAAA,MACA7wB,IAAA,QAEA6wB,MAAA,MACA7wB,IAAA,QAEA6wB,MAAA,MACA7wB,IAAA,QAEA6wB,MAAA,MACA7wB,IAAA,QAEA6wB,MAAA,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EAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,IACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,EACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAEAH,GAAA,KAC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","file":"1.portfolio.min.js","sourcesContent":["/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar pdfjsVersion = '2.0.305';\nvar pdfjsBuild = '9c6a8801';\nvar pdfjsCoreWorker = require('./core/worker.js');\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar EOF = {};\nvar Name = function NameClosure() {\n  function Name(name) {\n    this.name = name;\n  }\n  Name.prototype = {};\n  var nameCache = Object.create(null);\n  Name.get = function Name_get(name) {\n    var nameValue = nameCache[name];\n    return nameValue ? nameValue : nameCache[name] = new Name(name);\n  };\n  return Name;\n}();\nvar Cmd = function CmdClosure() {\n  function Cmd(cmd) {\n    this.cmd = cmd;\n  }\n  Cmd.prototype = {};\n  var cmdCache = Object.create(null);\n  Cmd.get = function Cmd_get(cmd) {\n    var cmdValue = cmdCache[cmd];\n    return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n  };\n  return Cmd;\n}();\nvar Dict = function DictClosure() {\n  var nonSerializable = function nonSerializableClosure() {\n    return nonSerializable;\n  };\n  function Dict(xref) {\n    this._map = Object.create(null);\n    this.xref = xref;\n    this.objId = null;\n    this.suppressEncryption = false;\n    this.__nonSerializable__ = nonSerializable;\n  }\n  Dict.prototype = {\n    assignXref: function Dict_assignXref(newXref) {\n      this.xref = newXref;\n    },\n    get: function Dict_get(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n      }\n      value = this._map[key3] || null;\n      return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n    },\n    getAsync: function Dict_getAsync(key1, key2, key3) {\n      var value;\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (typeof (value = this._map[key1]) !== 'undefined' || key1 in this._map || typeof key2 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      if (typeof (value = this._map[key2]) !== 'undefined' || key2 in this._map || typeof key3 === 'undefined') {\n        if (xref) {\n          return xref.fetchIfRefAsync(value, suppressEncryption);\n        }\n        return Promise.resolve(value);\n      }\n      value = this._map[key3] || null;\n      if (xref) {\n        return xref.fetchIfRefAsync(value, suppressEncryption);\n      }\n      return Promise.resolve(value);\n    },\n    getArray: function Dict_getArray(key1, key2, key3) {\n      var value = this.get(key1, key2, key3);\n      var xref = this.xref,\n          suppressEncryption = this.suppressEncryption;\n      if (!Array.isArray(value) || !xref) {\n        return value;\n      }\n      value = value.slice();\n      for (var i = 0, ii = value.length; i < ii; i++) {\n        if (!isRef(value[i])) {\n          continue;\n        }\n        value[i] = xref.fetch(value[i], suppressEncryption);\n      }\n      return value;\n    },\n    getRaw: function Dict_getRaw(key) {\n      return this._map[key];\n    },\n    getKeys: function Dict_getKeys() {\n      return Object.keys(this._map);\n    },\n    set: function Dict_set(key, value) {\n      this._map[key] = value;\n    },\n    has: function Dict_has(key) {\n      return key in this._map;\n    },\n    forEach: function Dict_forEach(callback) {\n      for (var key in this._map) {\n        callback(key, this.get(key));\n      }\n    }\n  };\n  Dict.empty = new Dict(null);\n  Dict.merge = function (xref, dictArray) {\n    var mergedDict = new Dict(xref);\n    for (var i = 0, ii = dictArray.length; i < ii; i++) {\n      var dict = dictArray[i];\n      if (!isDict(dict)) {\n        continue;\n      }\n      for (var keyName in dict._map) {\n        if (mergedDict._map[keyName] !== undefined) {\n          continue;\n        }\n        mergedDict._map[keyName] = dict._map[keyName];\n      }\n    }\n    return mergedDict;\n  };\n  return Dict;\n}();\nvar Ref = function RefClosure() {\n  function Ref(num, gen) {\n    this.num = num;\n    this.gen = gen;\n  }\n  Ref.prototype = {\n    toString: function Ref_toString() {\n      var str = this.num + 'R';\n      if (this.gen !== 0) {\n        str += this.gen;\n      }\n      return str;\n    }\n  };\n  return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n  function RefSet() {\n    this.dict = Object.create(null);\n  }\n  RefSet.prototype = {\n    has: function RefSet_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSet_put(ref) {\n      this.dict[ref.toString()] = true;\n    },\n    remove: function RefSet_remove(ref) {\n      delete this.dict[ref.toString()];\n    }\n  };\n  return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n  function RefSetCache() {\n    this.dict = Object.create(null);\n  }\n  RefSetCache.prototype = {\n    get: function RefSetCache_get(ref) {\n      return this.dict[ref.toString()];\n    },\n    has: function RefSetCache_has(ref) {\n      return ref.toString() in this.dict;\n    },\n    put: function RefSetCache_put(ref, obj) {\n      this.dict[ref.toString()] = obj;\n    },\n    putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n      this.dict[ref.toString()] = this.get(aliasRef);\n    },\n    forEach: function RefSetCache_forEach(fn, thisArg) {\n      for (var i in this.dict) {\n        fn.call(thisArg, this.dict[i]);\n      }\n    },\n    clear: function RefSetCache_clear() {\n      this.dict = Object.create(null);\n    }\n  };\n  return RefSetCache;\n}();\nfunction isEOF(v) {\n  return v === EOF;\n}\nfunction isName(v, name) {\n  return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n  return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n  return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n  return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n  return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n  return (typeof v === 'undefined' ? 'undefined' : _typeof(v)) === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.LZWStream = exports.StringStream = exports.StreamsSequenceStream = exports.Stream = exports.RunLengthStream = exports.PredictorStream = exports.NullStream = exports.FlateStream = exports.DecodeStream = exports.DecryptStream = exports.AsciiHexStream = exports.Ascii85Stream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar Stream = function StreamClosure() {\n  function Stream(arrayBuffer, start, length, dict) {\n    this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n    this.start = start || 0;\n    this.pos = this.start;\n    this.end = start + length || this.bytes.length;\n    this.dict = dict;\n  }\n  Stream.prototype = {\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function Stream_getByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.bytes[this.pos++];\n    },\n    getUint16: function Stream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function Stream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function Stream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function Stream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function Stream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    skip: function Stream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function Stream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function Stream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function Stream_makeSubStream(start, length, dict) {\n      return new Stream(this.bytes.buffer, start, length, dict);\n    }\n  };\n  return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n  function StringStream(str) {\n    var bytes = (0, _util.stringToBytes)(str);\n    Stream.call(this, bytes);\n  }\n  StringStream.prototype = Stream.prototype;\n  return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n  var emptyBuffer = new Uint8Array(0);\n  function DecodeStream(maybeMinBufferLength) {\n    this.pos = 0;\n    this.bufferLength = 0;\n    this.eof = false;\n    this.buffer = emptyBuffer;\n    this.minBufferLength = 512;\n    if (maybeMinBufferLength) {\n      while (this.minBufferLength < maybeMinBufferLength) {\n        this.minBufferLength *= 2;\n      }\n    }\n  }\n  DecodeStream.prototype = {\n    get isEmpty() {\n      while (!this.eof && this.bufferLength === 0) {\n        this.readBlock();\n      }\n      return this.bufferLength === 0;\n    },\n    ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n      var buffer = this.buffer;\n      if (requested <= buffer.byteLength) {\n        return buffer;\n      }\n      var size = this.minBufferLength;\n      while (size < requested) {\n        size *= 2;\n      }\n      var buffer2 = new Uint8Array(size);\n      buffer2.set(buffer);\n      return this.buffer = buffer2;\n    },\n    getByte: function DecodeStream_getByte() {\n      var pos = this.pos;\n      while (this.bufferLength <= pos) {\n        if (this.eof) {\n          return -1;\n        }\n        this.readBlock();\n      }\n      return this.buffer[this.pos++];\n    },\n    getUint16: function DecodeStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function DecodeStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function DecodeStream_getBytes(length) {\n      var end,\n          pos = this.pos;\n      if (length) {\n        this.ensureBuffer(pos + length);\n        end = pos + length;\n        while (!this.eof && this.bufferLength < end) {\n          this.readBlock();\n        }\n        var bufEnd = this.bufferLength;\n        if (end > bufEnd) {\n          end = bufEnd;\n        }\n      } else {\n        while (!this.eof) {\n          this.readBlock();\n        }\n        end = this.bufferLength;\n      }\n      this.pos = end;\n      return this.buffer.subarray(pos, end);\n    },\n    peekByte: function DecodeStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function DecodeStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n      var end = start + length;\n      while (this.bufferLength <= end && !this.eof) {\n        this.readBlock();\n      }\n      return new Stream(this.buffer, start, length, dict);\n    },\n    skip: function DecodeStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function DecodeStream_reset() {\n      this.pos = 0;\n    },\n    getBaseStreams: function DecodeStream_getBaseStreams() {\n      if (this.str && this.str.getBaseStreams) {\n        return this.str.getBaseStreams();\n      }\n      return [];\n    }\n  };\n  return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n  function StreamsSequenceStream(streams) {\n    this.streams = streams;\n    DecodeStream.call(this, null);\n  }\n  StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n  StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n    var streams = this.streams;\n    if (streams.length === 0) {\n      this.eof = true;\n      return;\n    }\n    var stream = streams.shift();\n    var chunk = stream.getBytes();\n    var bufferLength = this.bufferLength;\n    var newLength = bufferLength + chunk.length;\n    var buffer = this.ensureBuffer(newLength);\n    buffer.set(chunk, bufferLength);\n    this.bufferLength = newLength;\n  };\n  StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n    var baseStreams = [];\n    for (var i = 0, ii = this.streams.length; i < ii; i++) {\n      var stream = this.streams[i];\n      if (stream.getBaseStreams) {\n        _util.Util.appendToArray(baseStreams, stream.getBaseStreams());\n      }\n    }\n    return baseStreams;\n  };\n  return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n  var codeLenCodeMap = new Int32Array([16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]);\n  var lengthDecode = new Int32Array([0x00003, 0x00004, 0x00005, 0x00006, 0x00007, 0x00008, 0x00009, 0x0000a, 0x1000b, 0x1000d, 0x1000f, 0x10011, 0x20013, 0x20017, 0x2001b, 0x2001f, 0x30023, 0x3002b, 0x30033, 0x3003b, 0x40043, 0x40053, 0x40063, 0x40073, 0x50083, 0x500a3, 0x500c3, 0x500e3, 0x00102, 0x00102, 0x00102]);\n  var distDecode = new Int32Array([0x00001, 0x00002, 0x00003, 0x00004, 0x10005, 0x10007, 0x20009, 0x2000d, 0x30011, 0x30019, 0x40021, 0x40031, 0x50041, 0x50061, 0x60081, 0x600c1, 0x70101, 0x70181, 0x80201, 0x80301, 0x90401, 0x90601, 0xa0801, 0xa0c01, 0xb1001, 0xb1801, 0xc2001, 0xc3001, 0xd4001, 0xd6001]);\n  var fixedLitCodeTab = [new Int32Array([0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c0, 0x70108, 0x80060, 0x80020, 0x900a0, 0x80000, 0x80080, 0x80040, 0x900e0, 0x70104, 0x80058, 0x80018, 0x90090, 0x70114, 0x80078, 0x80038, 0x900d0, 0x7010c, 0x80068, 0x80028, 0x900b0, 0x80008, 0x80088, 0x80048, 0x900f0, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c8, 0x7010a, 0x80064, 0x80024, 0x900a8, 0x80004, 0x80084, 0x80044, 0x900e8, 0x70106, 0x8005c, 0x8001c, 0x90098, 0x70116, 0x8007c, 0x8003c, 0x900d8, 0x7010e, 0x8006c, 0x8002c, 0x900b8, 0x8000c, 0x8008c, 0x8004c, 0x900f8, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c4, 0x70109, 0x80062, 0x80022, 0x900a4, 0x80002, 0x80082, 0x80042, 0x900e4, 0x70105, 0x8005a, 0x8001a, 0x90094, 0x70115, 0x8007a, 0x8003a, 0x900d4, 0x7010d, 0x8006a, 0x8002a, 0x900b4, 0x8000a, 0x8008a, 0x8004a, 0x900f4, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cc, 0x7010b, 0x80066, 0x80026, 0x900ac, 0x80006, 0x80086, 0x80046, 0x900ec, 0x70107, 0x8005e, 0x8001e, 0x9009c, 0x70117, 0x8007e, 0x8003e, 0x900dc, 0x7010f, 0x8006e, 0x8002e, 0x900bc, 0x8000e, 0x8008e, 0x8004e, 0x900fc, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c2, 0x70108, 0x80061, 0x80021, 0x900a2, 0x80001, 0x80081, 0x80041, 0x900e2, 0x70104, 0x80059, 0x80019, 0x90092, 0x70114, 0x80079, 0x80039, 0x900d2, 0x7010c, 0x80069, 0x80029, 0x900b2, 0x80009, 0x80089, 0x80049, 0x900f2, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900ca, 0x7010a, 0x80065, 0x80025, 0x900aa, 0x80005, 0x80085, 0x80045, 0x900ea, 0x70106, 0x8005d, 0x8001d, 0x9009a, 0x70116, 0x8007d, 0x8003d, 0x900da, 0x7010e, 0x8006d, 0x8002d, 0x900ba, 0x8000d, 0x8008d, 0x8004d, 0x900fa, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c6, 0x70109, 0x80063, 0x80023, 0x900a6, 0x80003, 0x80083, 0x80043, 0x900e6, 0x70105, 0x8005b, 0x8001b, 0x90096, 0x70115, 0x8007b, 0x8003b, 0x900d6, 0x7010d, 0x8006b, 0x8002b, 0x900b6, 0x8000b, 0x8008b, 0x8004b, 0x900f6, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900ce, 0x7010b, 0x80067, 0x80027, 0x900ae, 0x80007, 0x80087, 0x80047, 0x900ee, 0x70107, 0x8005f, 0x8001f, 0x9009e, 0x70117, 0x8007f, 0x8003f, 0x900de, 0x7010f, 0x8006f, 0x8002f, 0x900be, 0x8000f, 0x8008f, 0x8004f, 0x900fe, 0x70100, 0x80050, 0x80010, 0x80118, 0x70110, 0x80070, 0x80030, 0x900c1, 0x70108, 0x80060, 0x80020, 0x900a1, 0x80000, 0x80080, 0x80040, 0x900e1, 0x70104, 0x80058, 0x80018, 0x90091, 0x70114, 0x80078, 0x80038, 0x900d1, 0x7010c, 0x80068, 0x80028, 0x900b1, 0x80008, 0x80088, 0x80048, 0x900f1, 0x70102, 0x80054, 0x80014, 0x8011c, 0x70112, 0x80074, 0x80034, 0x900c9, 0x7010a, 0x80064, 0x80024, 0x900a9, 0x80004, 0x80084, 0x80044, 0x900e9, 0x70106, 0x8005c, 0x8001c, 0x90099, 0x70116, 0x8007c, 0x8003c, 0x900d9, 0x7010e, 0x8006c, 0x8002c, 0x900b9, 0x8000c, 0x8008c, 0x8004c, 0x900f9, 0x70101, 0x80052, 0x80012, 0x8011a, 0x70111, 0x80072, 0x80032, 0x900c5, 0x70109, 0x80062, 0x80022, 0x900a5, 0x80002, 0x80082, 0x80042, 0x900e5, 0x70105, 0x8005a, 0x8001a, 0x90095, 0x70115, 0x8007a, 0x8003a, 0x900d5, 0x7010d, 0x8006a, 0x8002a, 0x900b5, 0x8000a, 0x8008a, 0x8004a, 0x900f5, 0x70103, 0x80056, 0x80016, 0x8011e, 0x70113, 0x80076, 0x80036, 0x900cd, 0x7010b, 0x80066, 0x80026, 0x900ad, 0x80006, 0x80086, 0x80046, 0x900ed, 0x70107, 0x8005e, 0x8001e, 0x9009d, 0x70117, 0x8007e, 0x8003e, 0x900dd, 0x7010f, 0x8006e, 0x8002e, 0x900bd, 0x8000e, 0x8008e, 0x8004e, 0x900fd, 0x70100, 0x80051, 0x80011, 0x80119, 0x70110, 0x80071, 0x80031, 0x900c3, 0x70108, 0x80061, 0x80021, 0x900a3, 0x80001, 0x80081, 0x80041, 0x900e3, 0x70104, 0x80059, 0x80019, 0x90093, 0x70114, 0x80079, 0x80039, 0x900d3, 0x7010c, 0x80069, 0x80029, 0x900b3, 0x80009, 0x80089, 0x80049, 0x900f3, 0x70102, 0x80055, 0x80015, 0x8011d, 0x70112, 0x80075, 0x80035, 0x900cb, 0x7010a, 0x80065, 0x80025, 0x900ab, 0x80005, 0x80085, 0x80045, 0x900eb, 0x70106, 0x8005d, 0x8001d, 0x9009b, 0x70116, 0x8007d, 0x8003d, 0x900db, 0x7010e, 0x8006d, 0x8002d, 0x900bb, 0x8000d, 0x8008d, 0x8004d, 0x900fb, 0x70101, 0x80053, 0x80013, 0x8011b, 0x70111, 0x80073, 0x80033, 0x900c7, 0x70109, 0x80063, 0x80023, 0x900a7, 0x80003, 0x80083, 0x80043, 0x900e7, 0x70105, 0x8005b, 0x8001b, 0x90097, 0x70115, 0x8007b, 0x8003b, 0x900d7, 0x7010d, 0x8006b, 0x8002b, 0x900b7, 0x8000b, 0x8008b, 0x8004b, 0x900f7, 0x70103, 0x80057, 0x80017, 0x8011f, 0x70113, 0x80077, 0x80037, 0x900cf, 0x7010b, 0x80067, 0x80027, 0x900af, 0x80007, 0x80087, 0x80047, 0x900ef, 0x70107, 0x8005f, 0x8001f, 0x9009f, 0x70117, 0x8007f, 0x8003f, 0x900df, 0x7010f, 0x8006f, 0x8002f, 0x900bf, 0x8000f, 0x8008f, 0x8004f, 0x900ff]), 9];\n  var fixedDistCodeTab = [new Int32Array([0x50000, 0x50010, 0x50008, 0x50018, 0x50004, 0x50014, 0x5000c, 0x5001c, 0x50002, 0x50012, 0x5000a, 0x5001a, 0x50006, 0x50016, 0x5000e, 0x00000, 0x50001, 0x50011, 0x50009, 0x50019, 0x50005, 0x50015, 0x5000d, 0x5001d, 0x50003, 0x50013, 0x5000b, 0x5001b, 0x50007, 0x50017, 0x5000f, 0x00000]), 5];\n  function FlateStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    var cmf = str.getByte();\n    var flg = str.getByte();\n    if (cmf === -1 || flg === -1) {\n      throw new _util.FormatError('Invalid header in flate stream: ' + cmf + ', ' + flg);\n    }\n    if ((cmf & 0x0f) !== 0x08) {\n      throw new _util.FormatError('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (((cmf << 8) + flg) % 31 !== 0) {\n      throw new _util.FormatError('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n    }\n    if (flg & 0x20) {\n      throw new _util.FormatError('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n    }\n    this.codeSize = 0;\n    this.codeBuf = 0;\n    DecodeStream.call(this, maybeLength);\n  }\n  FlateStream.prototype = Object.create(DecodeStream.prototype);\n  FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n    var str = this.str;\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < bits) {\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad encoding in flate stream');\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    b = codeBuf & (1 << bits) - 1;\n    this.codeBuf = codeBuf >> bits;\n    this.codeSize = codeSize -= bits;\n    return b;\n  };\n  FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n    var str = this.str;\n    var codes = table[0];\n    var maxLen = table[1];\n    var codeSize = this.codeSize;\n    var codeBuf = this.codeBuf;\n    var b;\n    while (codeSize < maxLen) {\n      if ((b = str.getByte()) === -1) {\n        break;\n      }\n      codeBuf |= b << codeSize;\n      codeSize += 8;\n    }\n    var code = codes[codeBuf & (1 << maxLen) - 1];\n    var codeLen = code >> 16;\n    var codeVal = code & 0xffff;\n    if (codeLen < 1 || codeSize < codeLen) {\n      throw new _util.FormatError('Bad encoding in flate stream');\n    }\n    this.codeBuf = codeBuf >> codeLen;\n    this.codeSize = codeSize - codeLen;\n    return codeVal;\n  };\n  FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n    var n = lengths.length;\n    var maxLen = 0;\n    var i;\n    for (i = 0; i < n; ++i) {\n      if (lengths[i] > maxLen) {\n        maxLen = lengths[i];\n      }\n    }\n    var size = 1 << maxLen;\n    var codes = new Int32Array(size);\n    for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n      for (var val = 0; val < n; ++val) {\n        if (lengths[val] === len) {\n          var code2 = 0;\n          var t = code;\n          for (i = 0; i < len; ++i) {\n            code2 = code2 << 1 | t & 1;\n            t >>= 1;\n          }\n          for (i = code2; i < size; i += skip) {\n            codes[i] = len << 16 | val;\n          }\n          ++code;\n        }\n      }\n    }\n    return [codes, maxLen];\n  };\n  FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n    var buffer, len;\n    var str = this.str;\n    var hdr = this.getBits(3);\n    if (hdr & 1) {\n      this.eof = true;\n    }\n    hdr >>= 1;\n    if (hdr === 0) {\n      var b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var blockLen = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      blockLen |= b << 8;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      var check = b;\n      if ((b = str.getByte()) === -1) {\n        throw new _util.FormatError('Bad block header in flate stream');\n      }\n      check |= b << 8;\n      if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n        throw new _util.FormatError('Bad uncompressed block length in flate stream');\n      }\n      this.codeBuf = 0;\n      this.codeSize = 0;\n      var bufferLength = this.bufferLength;\n      buffer = this.ensureBuffer(bufferLength + blockLen);\n      var end = bufferLength + blockLen;\n      this.bufferLength = end;\n      if (blockLen === 0) {\n        if (str.peekByte() === -1) {\n          this.eof = true;\n        }\n      } else {\n        for (var n = bufferLength; n < end; ++n) {\n          if ((b = str.getByte()) === -1) {\n            this.eof = true;\n            break;\n          }\n          buffer[n] = b;\n        }\n      }\n      return;\n    }\n    var litCodeTable;\n    var distCodeTable;\n    if (hdr === 1) {\n      litCodeTable = fixedLitCodeTab;\n      distCodeTable = fixedDistCodeTab;\n    } else if (hdr === 2) {\n      var numLitCodes = this.getBits(5) + 257;\n      var numDistCodes = this.getBits(5) + 1;\n      var numCodeLenCodes = this.getBits(4) + 4;\n      var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n      var i;\n      for (i = 0; i < numCodeLenCodes; ++i) {\n        codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n      }\n      var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n      len = 0;\n      i = 0;\n      var codes = numLitCodes + numDistCodes;\n      var codeLengths = new Uint8Array(codes);\n      var bitsLength, bitsOffset, what;\n      while (i < codes) {\n        var code = this.getCode(codeLenCodeTab);\n        if (code === 16) {\n          bitsLength = 2;\n          bitsOffset = 3;\n          what = len;\n        } else if (code === 17) {\n          bitsLength = 3;\n          bitsOffset = 3;\n          what = len = 0;\n        } else if (code === 18) {\n          bitsLength = 7;\n          bitsOffset = 11;\n          what = len = 0;\n        } else {\n          codeLengths[i++] = len = code;\n          continue;\n        }\n        var repeatLength = this.getBits(bitsLength) + bitsOffset;\n        while (repeatLength-- > 0) {\n          codeLengths[i++] = what;\n        }\n      }\n      litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n      distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n    } else {\n      throw new _util.FormatError('Unknown block type in flate stream');\n    }\n    buffer = this.buffer;\n    var limit = buffer ? buffer.length : 0;\n    var pos = this.bufferLength;\n    while (true) {\n      var code1 = this.getCode(litCodeTable);\n      if (code1 < 256) {\n        if (pos + 1 >= limit) {\n          buffer = this.ensureBuffer(pos + 1);\n          limit = buffer.length;\n        }\n        buffer[pos++] = code1;\n        continue;\n      }\n      if (code1 === 256) {\n        this.bufferLength = pos;\n        return;\n      }\n      code1 -= 257;\n      code1 = lengthDecode[code1];\n      var code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      len = (code1 & 0xffff) + code2;\n      code1 = this.getCode(distCodeTable);\n      code1 = distDecode[code1];\n      code2 = code1 >> 16;\n      if (code2 > 0) {\n        code2 = this.getBits(code2);\n      }\n      var dist = (code1 & 0xffff) + code2;\n      if (pos + len >= limit) {\n        buffer = this.ensureBuffer(pos + len);\n        limit = buffer.length;\n      }\n      for (var k = 0; k < len; ++k, ++pos) {\n        buffer[pos] = buffer[pos - dist];\n      }\n    }\n  };\n  return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n  function PredictorStream(str, maybeLength, params) {\n    if (!(0, _primitives.isDict)(params)) {\n      return str;\n    }\n    var predictor = this.predictor = params.get('Predictor') || 1;\n    if (predictor <= 1) {\n      return str;\n    }\n    if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n      throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    if (predictor === 2) {\n      this.readBlock = this.readBlockTiff;\n    } else {\n      this.readBlock = this.readBlockPng;\n    }\n    this.str = str;\n    this.dict = str.dict;\n    var colors = this.colors = params.get('Colors') || 1;\n    var bits = this.bits = params.get('BitsPerComponent') || 8;\n    var columns = this.columns = params.get('Columns') || 1;\n    this.pixBytes = colors * bits + 7 >> 3;\n    this.rowBytes = columns * colors * bits + 7 >> 3;\n    DecodeStream.call(this, maybeLength);\n    return this;\n  }\n  PredictorStream.prototype = Object.create(DecodeStream.prototype);\n  PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n    var rowBytes = this.rowBytes;\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var bits = this.bits;\n    var colors = this.colors;\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var inbuf = 0,\n        outbuf = 0;\n    var inbits = 0,\n        outbits = 0;\n    var pos = bufferLength;\n    var i;\n    if (bits === 1 && colors === 1) {\n      for (i = 0; i < rowBytes; ++i) {\n        var c = rawBytes[i] ^ inbuf;\n        c ^= c >> 1;\n        c ^= c >> 2;\n        c ^= c >> 4;\n        inbuf = (c & 1) << 7;\n        buffer[pos++] = c;\n      }\n    } else if (bits === 8) {\n      for (i = 0; i < colors; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; ++i) {\n        buffer[pos] = buffer[pos - colors] + rawBytes[i];\n        pos++;\n      }\n    } else if (bits === 16) {\n      var bytesPerPixel = colors * 2;\n      for (i = 0; i < bytesPerPixel; ++i) {\n        buffer[pos++] = rawBytes[i];\n      }\n      for (; i < rowBytes; i += 2) {\n        var sum = ((rawBytes[i] & 0xFF) << 8) + (rawBytes[i + 1] & 0xFF) + ((buffer[pos - bytesPerPixel] & 0xFF) << 8) + (buffer[pos - bytesPerPixel + 1] & 0xFF);\n        buffer[pos++] = sum >> 8 & 0xFF;\n        buffer[pos++] = sum & 0xFF;\n      }\n    } else {\n      var compArray = new Uint8Array(colors + 1);\n      var bitMask = (1 << bits) - 1;\n      var j = 0,\n          k = bufferLength;\n      var columns = this.columns;\n      for (i = 0; i < columns; ++i) {\n        for (var kk = 0; kk < colors; ++kk) {\n          if (inbits < bits) {\n            inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n            inbits += 8;\n          }\n          compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n          inbits -= bits;\n          outbuf = outbuf << bits | compArray[kk];\n          outbits += bits;\n          if (outbits >= 8) {\n            buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n            outbits -= 8;\n          }\n        }\n      }\n      if (outbits > 0) {\n        buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n      }\n    }\n    this.bufferLength += rowBytes;\n  };\n  PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n    var rowBytes = this.rowBytes;\n    var pixBytes = this.pixBytes;\n    var predictor = this.str.getByte();\n    var rawBytes = this.str.getBytes(rowBytes);\n    this.eof = !rawBytes.length;\n    if (this.eof) {\n      return;\n    }\n    var bufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(bufferLength + rowBytes);\n    var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n    if (prevRow.length === 0) {\n      prevRow = new Uint8Array(rowBytes);\n    }\n    var i,\n        j = bufferLength,\n        up,\n        c;\n    switch (predictor) {\n      case 0:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        break;\n      case 1:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 2:\n        for (i = 0; i < rowBytes; ++i) {\n          buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n        }\n        break;\n      case 3:\n        for (i = 0; i < pixBytes; ++i) {\n          buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n        }\n        for (; i < rowBytes; ++i) {\n          buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n          j++;\n        }\n        break;\n      case 4:\n        for (i = 0; i < pixBytes; ++i) {\n          up = prevRow[i];\n          c = rawBytes[i];\n          buffer[j++] = up + c;\n        }\n        for (; i < rowBytes; ++i) {\n          up = prevRow[i];\n          var upLeft = prevRow[i - pixBytes];\n          var left = buffer[j - pixBytes];\n          var p = left + up - upLeft;\n          var pa = p - left;\n          if (pa < 0) {\n            pa = -pa;\n          }\n          var pb = p - up;\n          if (pb < 0) {\n            pb = -pb;\n          }\n          var pc = p - upLeft;\n          if (pc < 0) {\n            pc = -pc;\n          }\n          c = rawBytes[i];\n          if (pa <= pb && pa <= pc) {\n            buffer[j++] = left + c;\n          } else if (pb <= pc) {\n            buffer[j++] = up + c;\n          } else {\n            buffer[j++] = upLeft + c;\n          }\n        }\n        break;\n      default:\n        throw new _util.FormatError('Unsupported predictor: ' + predictor);\n    }\n    this.bufferLength += rowBytes;\n  };\n  return PredictorStream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n  function DecryptStream(str, maybeLength, decrypt) {\n    this.str = str;\n    this.dict = str.dict;\n    this.decrypt = decrypt;\n    this.nextChunk = null;\n    this.initialized = false;\n    DecodeStream.call(this, maybeLength);\n  }\n  var chunkSize = 512;\n  DecryptStream.prototype = Object.create(DecodeStream.prototype);\n  DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n    var chunk;\n    if (this.initialized) {\n      chunk = this.nextChunk;\n    } else {\n      chunk = this.str.getBytes(chunkSize);\n      this.initialized = true;\n    }\n    if (!chunk || chunk.length === 0) {\n      this.eof = true;\n      return;\n    }\n    this.nextChunk = this.str.getBytes(chunkSize);\n    var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n    var decrypt = this.decrypt;\n    chunk = decrypt(chunk, !hasMoreData);\n    var bufferLength = this.bufferLength;\n    var i,\n        n = chunk.length;\n    var buffer = this.ensureBuffer(bufferLength + n);\n    for (i = 0; i < n; i++) {\n      buffer[bufferLength++] = chunk[i];\n    }\n    this.bufferLength = bufferLength;\n  };\n  return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n  function Ascii85Stream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.input = new Uint8Array(5);\n    if (maybeLength) {\n      maybeLength = 0.8 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n  Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n    var TILDA_CHAR = 0x7E;\n    var Z_LOWER_CHAR = 0x7A;\n    var EOF = -1;\n    var str = this.str;\n    var c = str.getByte();\n    while ((0, _util.isSpace)(c)) {\n      c = str.getByte();\n    }\n    if (c === EOF || c === TILDA_CHAR) {\n      this.eof = true;\n      return;\n    }\n    var bufferLength = this.bufferLength,\n        buffer;\n    var i;\n    if (c === Z_LOWER_CHAR) {\n      buffer = this.ensureBuffer(bufferLength + 4);\n      for (i = 0; i < 4; ++i) {\n        buffer[bufferLength + i] = 0;\n      }\n      this.bufferLength += 4;\n    } else {\n      var input = this.input;\n      input[0] = c;\n      for (i = 1; i < 5; ++i) {\n        c = str.getByte();\n        while ((0, _util.isSpace)(c)) {\n          c = str.getByte();\n        }\n        input[i] = c;\n        if (c === EOF || c === TILDA_CHAR) {\n          break;\n        }\n      }\n      buffer = this.ensureBuffer(bufferLength + i - 1);\n      this.bufferLength += i - 1;\n      if (i < 5) {\n        for (; i < 5; ++i) {\n          input[i] = 0x21 + 84;\n        }\n        this.eof = true;\n      }\n      var t = 0;\n      for (i = 0; i < 5; ++i) {\n        t = t * 85 + (input[i] - 0x21);\n      }\n      for (i = 3; i >= 0; --i) {\n        buffer[bufferLength + i] = t & 0xFF;\n        t >>= 8;\n      }\n    }\n  };\n  return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n  function AsciiHexStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    this.firstDigit = -1;\n    if (maybeLength) {\n      maybeLength = 0.5 * maybeLength;\n    }\n    DecodeStream.call(this, maybeLength);\n  }\n  AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n  AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n    var UPSTREAM_BLOCK_SIZE = 8000;\n    var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n    if (!bytes.length) {\n      this.eof = true;\n      return;\n    }\n    var maxDecodeLength = bytes.length + 1 >> 1;\n    var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n    var bufferLength = this.bufferLength;\n    var firstDigit = this.firstDigit;\n    for (var i = 0, ii = bytes.length; i < ii; i++) {\n      var ch = bytes[i],\n          digit;\n      if (ch >= 0x30 && ch <= 0x39) {\n        digit = ch & 0x0F;\n      } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n        digit = (ch & 0x0F) + 9;\n      } else if (ch === 0x3E) {\n        this.eof = true;\n        break;\n      } else {\n        continue;\n      }\n      if (firstDigit < 0) {\n        firstDigit = digit;\n      } else {\n        buffer[bufferLength++] = firstDigit << 4 | digit;\n        firstDigit = -1;\n      }\n    }\n    if (firstDigit >= 0 && this.eof) {\n      buffer[bufferLength++] = firstDigit << 4;\n      firstDigit = -1;\n    }\n    this.firstDigit = firstDigit;\n    this.bufferLength = bufferLength;\n  };\n  return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n  function RunLengthStream(str, maybeLength) {\n    this.str = str;\n    this.dict = str.dict;\n    DecodeStream.call(this, maybeLength);\n  }\n  RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n  RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n    var repeatHeader = this.str.getBytes(2);\n    if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n      this.eof = true;\n      return;\n    }\n    var buffer;\n    var bufferLength = this.bufferLength;\n    var n = repeatHeader[0];\n    if (n < 128) {\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      buffer[bufferLength++] = repeatHeader[1];\n      if (n > 0) {\n        var source = this.str.getBytes(n);\n        buffer.set(source, bufferLength);\n        bufferLength += n;\n      }\n    } else {\n      n = 257 - n;\n      var b = repeatHeader[1];\n      buffer = this.ensureBuffer(bufferLength + n + 1);\n      for (var i = 0; i < n; i++) {\n        buffer[bufferLength++] = b;\n      }\n    }\n    this.bufferLength = bufferLength;\n  };\n  return RunLengthStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n  function LZWStream(str, maybeLength, earlyChange) {\n    this.str = str;\n    this.dict = str.dict;\n    this.cachedData = 0;\n    this.bitsCached = 0;\n    var maxLzwDictionarySize = 4096;\n    var lzwState = {\n      earlyChange: earlyChange,\n      codeLength: 9,\n      nextCode: 258,\n      dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n      dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n      dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n      currentSequence: new Uint8Array(maxLzwDictionarySize),\n      currentSequenceLength: 0\n    };\n    for (var i = 0; i < 256; ++i) {\n      lzwState.dictionaryValues[i] = i;\n      lzwState.dictionaryLengths[i] = 1;\n    }\n    this.lzwState = lzwState;\n    DecodeStream.call(this, maybeLength);\n  }\n  LZWStream.prototype = Object.create(DecodeStream.prototype);\n  LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n    var bitsCached = this.bitsCached;\n    var cachedData = this.cachedData;\n    while (bitsCached < n) {\n      var c = this.str.getByte();\n      if (c === -1) {\n        this.eof = true;\n        return null;\n      }\n      cachedData = cachedData << 8 | c;\n      bitsCached += 8;\n    }\n    this.bitsCached = bitsCached -= n;\n    this.cachedData = cachedData;\n    this.lastCode = null;\n    return cachedData >>> bitsCached & (1 << n) - 1;\n  };\n  LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n    var blockSize = 512;\n    var estimatedDecodedSize = blockSize * 2,\n        decodedSizeDelta = blockSize;\n    var i, j, q;\n    var lzwState = this.lzwState;\n    if (!lzwState) {\n      return;\n    }\n    var earlyChange = lzwState.earlyChange;\n    var nextCode = lzwState.nextCode;\n    var dictionaryValues = lzwState.dictionaryValues;\n    var dictionaryLengths = lzwState.dictionaryLengths;\n    var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n    var codeLength = lzwState.codeLength;\n    var prevCode = lzwState.prevCode;\n    var currentSequence = lzwState.currentSequence;\n    var currentSequenceLength = lzwState.currentSequenceLength;\n    var decodedLength = 0;\n    var currentBufferLength = this.bufferLength;\n    var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n    for (i = 0; i < blockSize; i++) {\n      var code = this.readBits(codeLength);\n      var hasPrev = currentSequenceLength > 0;\n      if (code < 256) {\n        currentSequence[0] = code;\n        currentSequenceLength = 1;\n      } else if (code >= 258) {\n        if (code < nextCode) {\n          currentSequenceLength = dictionaryLengths[code];\n          for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n            currentSequence[j] = dictionaryValues[q];\n            q = dictionaryPrevCodes[q];\n          }\n        } else {\n          currentSequence[currentSequenceLength++] = currentSequence[0];\n        }\n      } else if (code === 256) {\n        codeLength = 9;\n        nextCode = 258;\n        currentSequenceLength = 0;\n        continue;\n      } else {\n        this.eof = true;\n        delete this.lzwState;\n        break;\n      }\n      if (hasPrev) {\n        dictionaryPrevCodes[nextCode] = prevCode;\n        dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n        dictionaryValues[nextCode] = currentSequence[0];\n        nextCode++;\n        codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n      }\n      prevCode = code;\n      decodedLength += currentSequenceLength;\n      if (estimatedDecodedSize < decodedLength) {\n        do {\n          estimatedDecodedSize += decodedSizeDelta;\n        } while (estimatedDecodedSize < decodedLength);\n        buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n      }\n      for (j = 0; j < currentSequenceLength; j++) {\n        buffer[currentBufferLength++] = currentSequence[j];\n      }\n    }\n    lzwState.nextCode = nextCode;\n    lzwState.codeLength = codeLength;\n    lzwState.prevCode = prevCode;\n    lzwState.currentSequenceLength = currentSequenceLength;\n    this.bufferLength = currentBufferLength;\n  };\n  return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n  function NullStream() {\n    Stream.call(this, new Uint8Array(0));\n  }\n  NullStream.prototype = Stream.prototype;\n  return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', '', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', '', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', '', '', '', 'isuperior', '', '', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', '', '', 'rsuperior', 'ssuperior', 'tsuperior', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', '', '', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', '', 'Dotaccentsmall', '', '', 'Macronsmall', '', '', 'figuredash', 'hypheninferior', '', '', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', '', '', '', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar MacExpertEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclamsmall', 'Hungarumlautsmall', 'centoldstyle', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', '', 'threequartersemdash', '', 'questionsmall', '', '', '', '', 'Ethsmall', '', '', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', '', '', '', '', '', '', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', '', 'parenrightinferior', 'Circumflexsmall', 'hypheninferior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', '', '', 'asuperior', 'centsuperior', '', '', '', '', 'Aacutesmall', 'Agravesmall', 'Acircumflexsmall', 'Adieresissmall', 'Atildesmall', 'Aringsmall', 'Ccedillasmall', 'Eacutesmall', 'Egravesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Iacutesmall', 'Igravesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ntildesmall', 'Oacutesmall', 'Ogravesmall', 'Ocircumflexsmall', 'Odieresissmall', 'Otildesmall', 'Uacutesmall', 'Ugravesmall', 'Ucircumflexsmall', 'Udieresissmall', '', 'eightsuperior', 'fourinferior', 'threeinferior', 'sixinferior', 'eightinferior', 'seveninferior', 'Scaronsmall', '', 'centinferior', 'twoinferior', '', 'Dieresissmall', '', 'Caronsmall', 'osuperior', 'fiveinferior', '', 'commainferior', 'periodinferior', 'Yacutesmall', '', 'dollarinferior', '', '', 'Thornsmall', '', 'nineinferior', 'zeroinferior', 'Zcaronsmall', 'AEsmall', 'Oslashsmall', 'questiondownsmall', 'oneinferior', 'Lslashsmall', '', '', '', '', '', '', 'Cedillasmall', '', '', '', '', '', 'OEsmall', 'figuredash', 'hyphensuperior', '', '', '', '', 'exclamdownsmall', '', 'Ydieresissmall', '', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'ninesuperior', 'zerosuperior', '', 'esuperior', 'rsuperior', 'tsuperior', '', '', 'isuperior', 'ssuperior', 'dsuperior', '', '', '', '', '', 'lsuperior', 'Ogoneksmall', 'Brevesmall', 'Macronsmall', 'bsuperior', 'nsuperior', 'msuperior', 'commasuperior', 'periodsuperior', 'Dotaccentsmall', 'Ringsmall', '', '', '', ''];\nvar MacRomanEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'space', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron'];\nvar StandardEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', '', 'endash', 'dagger', 'daggerdbl', 'periodcentered', '', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', '', 'questiondown', '', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', '', 'ring', 'cedilla', '', 'hungarumlaut', 'ogonek', 'caron', 'emdash', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'AE', '', 'ordfeminine', '', '', '', '', 'Lslash', 'Oslash', 'OE', 'ordmasculine', '', '', '', '', '', 'ae', '', '', '', 'dotlessi', '', '', 'lslash', 'oslash', 'oe', 'germandbls', '', '', '', ''];\nvar WinAnsiEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'bullet', 'Euro', 'bullet', 'quotesinglbase', 'florin', 'quotedblbase', 'ellipsis', 'dagger', 'daggerdbl', 'circumflex', 'perthousand', 'Scaron', 'guilsinglleft', 'OE', 'bullet', 'Zcaron', 'bullet', 'bullet', 'quoteleft', 'quoteright', 'quotedblleft', 'quotedblright', 'bullet', 'endash', 'emdash', 'tilde', 'trademark', 'scaron', 'guilsinglright', 'oe', 'bullet', 'zcaron', 'Ydieresis', 'space', 'exclamdown', 'cent', 'sterling', 'currency', 'yen', 'brokenbar', 'section', 'dieresis', 'copyright', 'ordfeminine', 'guillemotleft', 'logicalnot', 'hyphen', 'registered', 'macron', 'degree', 'plusminus', 'twosuperior', 'threesuperior', 'acute', 'mu', 'paragraph', 'periodcentered', 'cedilla', 'onesuperior', 'ordmasculine', 'guillemotright', 'onequarter', 'onehalf', 'threequarters', 'questiondown', 'Agrave', 'Aacute', 'Acircumflex', 'Atilde', 'Adieresis', 'Aring', 'AE', 'Ccedilla', 'Egrave', 'Eacute', 'Ecircumflex', 'Edieresis', 'Igrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Eth', 'Ntilde', 'Ograve', 'Oacute', 'Ocircumflex', 'Otilde', 'Odieresis', 'multiply', 'Oslash', 'Ugrave', 'Uacute', 'Ucircumflex', 'Udieresis', 'Yacute', 'Thorn', 'germandbls', 'agrave', 'aacute', 'acircumflex', 'atilde', 'adieresis', 'aring', 'ae', 'ccedilla', 'egrave', 'eacute', 'ecircumflex', 'edieresis', 'igrave', 'iacute', 'icircumflex', 'idieresis', 'eth', 'ntilde', 'ograve', 'oacute', 'ocircumflex', 'otilde', 'odieresis', 'divide', 'oslash', 'ugrave', 'uacute', 'ucircumflex', 'udieresis', 'yacute', 'thorn', 'ydieresis'];\nvar SymbolSetEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'exclam', 'universal', 'numbersign', 'existential', 'percent', 'ampersand', 'suchthat', 'parenleft', 'parenright', 'asteriskmath', 'plus', 'comma', 'minus', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'congruent', 'Alpha', 'Beta', 'Chi', 'Delta', 'Epsilon', 'Phi', 'Gamma', 'Eta', 'Iota', 'theta1', 'Kappa', 'Lambda', 'Mu', 'Nu', 'Omicron', 'Pi', 'Theta', 'Rho', 'Sigma', 'Tau', 'Upsilon', 'sigma1', 'Omega', 'Xi', 'Psi', 'Zeta', 'bracketleft', 'therefore', 'bracketright', 'perpendicular', 'underscore', 'radicalex', 'alpha', 'beta', 'chi', 'delta', 'epsilon', 'phi', 'gamma', 'eta', 'iota', 'phi1', 'kappa', 'lambda', 'mu', 'nu', 'omicron', 'pi', 'theta', 'rho', 'sigma', 'tau', 'upsilon', 'omega1', 'omega', 'xi', 'psi', 'zeta', 'braceleft', 'bar', 'braceright', 'similar', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'Euro', 'Upsilon1', 'minute', 'lessequal', 'fraction', 'infinity', 'florin', 'club', 'diamond', 'heart', 'spade', 'arrowboth', 'arrowleft', 'arrowup', 'arrowright', 'arrowdown', 'degree', 'plusminus', 'second', 'greaterequal', 'multiply', 'proportional', 'partialdiff', 'bullet', 'divide', 'notequal', 'equivalence', 'approxequal', 'ellipsis', 'arrowvertex', 'arrowhorizex', 'carriagereturn', 'aleph', 'Ifraktur', 'Rfraktur', 'weierstrass', 'circlemultiply', 'circleplus', 'emptyset', 'intersection', 'union', 'propersuperset', 'reflexsuperset', 'notsubset', 'propersubset', 'reflexsubset', 'element', 'notelement', 'angle', 'gradient', 'registerserif', 'copyrightserif', 'trademarkserif', 'product', 'radical', 'dotmath', 'logicalnot', 'logicaland', 'logicalor', 'arrowdblboth', 'arrowdblleft', 'arrowdblup', 'arrowdblright', 'arrowdbldown', 'lozenge', 'angleleft', 'registersans', 'copyrightsans', 'trademarksans', 'summation', 'parenlefttp', 'parenleftex', 'parenleftbt', 'bracketlefttp', 'bracketleftex', 'bracketleftbt', 'bracelefttp', 'braceleftmid', 'braceleftbt', 'braceex', '', 'angleright', 'integral', 'integraltp', 'integralex', 'integralbt', 'parenrighttp', 'parenrightex', 'parenrightbt', 'bracketrighttp', 'bracketrightex', 'bracketrightbt', 'bracerighttp', 'bracerightmid', 'bracerightbt', ''];\nvar ZapfDingbatsEncoding = ['', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'space', 'a1', 'a2', 'a202', 'a3', 'a4', 'a5', 'a119', 'a118', 'a117', 'a11', 'a12', 'a13', 'a14', 'a15', 'a16', 'a105', 'a17', 'a18', 'a19', 'a20', 'a21', 'a22', 'a23', 'a24', 'a25', 'a26', 'a27', 'a28', 'a6', 'a7', 'a8', 'a9', 'a10', 'a29', 'a30', 'a31', 'a32', 'a33', 'a34', 'a35', 'a36', 'a37', 'a38', 'a39', 'a40', 'a41', 'a42', 'a43', 'a44', 'a45', 'a46', 'a47', 'a48', 'a49', 'a50', 'a51', 'a52', 'a53', 'a54', 'a55', 'a56', 'a57', 'a58', 'a59', 'a60', 'a61', 'a62', 'a63', 'a64', 'a65', 'a66', 'a67', 'a68', 'a69', 'a70', 'a71', 'a72', 'a73', 'a74', 'a203', 'a75', 'a204', 'a76', 'a77', 'a78', 'a79', 'a81', 'a82', 'a83', 'a84', 'a97', 'a98', 'a99', 'a100', '', 'a89', 'a90', 'a93', 'a94', 'a91', 'a92', 'a205', 'a85', 'a206', 'a86', 'a87', 'a88', 'a95', 'a96', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'a101', 'a102', 'a103', 'a104', 'a106', 'a107', 'a108', 'a112', 'a111', 'a110', 'a109', 'a120', 'a121', 'a122', 'a123', 'a124', 'a125', 'a126', 'a127', 'a128', 'a129', 'a130', 'a131', 'a132', 'a133', 'a134', 'a135', 'a136', 'a137', 'a138', 'a139', 'a140', 'a141', 'a142', 'a143', 'a144', 'a145', 'a146', 'a147', 'a148', 'a149', 'a150', 'a151', 'a152', 'a153', 'a154', 'a155', 'a156', 'a157', 'a158', 'a159', 'a160', 'a161', 'a163', 'a164', 'a196', 'a165', 'a192', 'a166', 'a167', 'a168', 'a169', 'a170', 'a171', 'a172', 'a173', 'a162', 'a174', 'a175', 'a176', 'a177', 'a178', 'a179', 'a193', 'a180', 'a199', 'a181', 'a200', 'a182', '', 'a201', 'a183', 'a184', 'a197', 'a185', 'a194', 'a198', 'a186', 'a195', 'a187', 'a188', 'a189', 'a190', 'a191', ''];\nfunction getEncoding(encodingName) {\n  switch (encodingName) {\n    case 'WinAnsiEncoding':\n      return WinAnsiEncoding;\n    case 'StandardEncoding':\n      return StandardEncoding;\n    case 'MacRomanEncoding':\n      return MacRomanEncoding;\n    case 'SymbolSetEncoding':\n      return SymbolSetEncoding;\n    case 'ZapfDingbatsEncoding':\n      return ZapfDingbatsEncoding;\n    case 'ExpertEncoding':\n      return ExpertEncoding;\n    case 'MacExpertEncoding':\n      return MacExpertEncoding;\n    default:\n      return null;\n  }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ColorSpace = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar ColorSpace = function ColorSpaceClosure() {\n  function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n    var COMPONENTS = 3;\n    alpha01 = alpha01 !== 1 ? 0 : alpha01;\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1 * COMPONENTS;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        dest[newIndex++] = src[oldIndex++];\n        newIndex += alpha01;\n      }\n    }\n  }\n  function ColorSpace() {\n    (0, _util.unreachable)('should not call ColorSpace constructor');\n  }\n  ColorSpace.prototype = {\n    getRgb: function ColorSpace_getRgb(src, srcOffset) {\n      var rgb = new Uint8Array(3);\n      this.getRgbItem(src, srcOffset, rgb, 0);\n      return rgb;\n    },\n    getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbItem');\n    },\n    getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getRgbBuffer');\n    },\n    getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n      (0, _util.unreachable)('Should not call ColorSpace.getOutputLength');\n    },\n    isPassthrough: function ColorSpace_isPassthrough(bits) {\n      return false;\n    },\n    fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n      var count = originalWidth * originalHeight;\n      var rgbBuf = null;\n      var numComponentColors = 1 << bpc;\n      var needsResizing = originalHeight !== height || originalWidth !== width;\n      var i, ii;\n      if (this.isPassthrough(bpc)) {\n        rgbBuf = comps;\n      } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n        var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n        var key;\n        for (i = 0; i < numComponentColors; i++) {\n          allColors[i] = i;\n        }\n        var colorMap = new Uint8Array(numComponentColors * 3);\n        this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n        var destPos, rgbPos;\n        if (!needsResizing) {\n          destPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            dest[destPos++] = colorMap[key];\n            dest[destPos++] = colorMap[key + 1];\n            dest[destPos++] = colorMap[key + 2];\n            destPos += alpha01;\n          }\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          rgbPos = 0;\n          for (i = 0; i < count; ++i) {\n            key = comps[i] * 3;\n            rgbBuf[rgbPos++] = colorMap[key];\n            rgbBuf[rgbPos++] = colorMap[key + 1];\n            rgbBuf[rgbPos++] = colorMap[key + 2];\n          }\n        }\n      } else {\n        if (!needsResizing) {\n          this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n        } else {\n          rgbBuf = new Uint8Array(count * 3);\n          this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n        }\n      }\n      if (rgbBuf) {\n        if (needsResizing) {\n          resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n        } else {\n          rgbPos = 0;\n          destPos = 0;\n          for (i = 0, ii = width * actualHeight; i < ii; i++) {\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            dest[destPos++] = rgbBuf[rgbPos++];\n            destPos += alpha01;\n          }\n        }\n      }\n    },\n    usesZeroToOneRange: true\n  };\n  ColorSpace.parse = function (cs, xref, res, pdfFunctionFactory) {\n    var IR = ColorSpace.parseToIR(cs, xref, res, pdfFunctionFactory);\n    return ColorSpace.fromIR(IR, pdfFunctionFactory);\n  };\n  ColorSpace.fromIR = function (IR, pdfFunctionFactory) {\n    var name = Array.isArray(IR) ? IR[0] : IR;\n    var whitePoint, blackPoint, gamma;\n    switch (name) {\n      case 'DeviceGrayCS':\n        return this.singletons.gray;\n      case 'DeviceRgbCS':\n        return this.singletons.rgb;\n      case 'DeviceCmykCS':\n        return this.singletons.cmyk;\n      case 'CalGrayCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        return new CalGrayCS(whitePoint, blackPoint, gamma);\n      case 'CalRGBCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        gamma = IR[3];\n        var matrix = IR[4];\n        return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n      case 'PatternCS':\n        var basePatternCS = IR[1];\n        if (basePatternCS) {\n          basePatternCS = ColorSpace.fromIR(basePatternCS, pdfFunctionFactory);\n        }\n        return new PatternCS(basePatternCS);\n      case 'IndexedCS':\n        var baseIndexedCS = IR[1];\n        var hiVal = IR[2];\n        var lookup = IR[3];\n        return new IndexedCS(ColorSpace.fromIR(baseIndexedCS, pdfFunctionFactory), hiVal, lookup);\n      case 'AlternateCS':\n        var numComps = IR[1];\n        var alt = IR[2];\n        var tintFnIR = IR[3];\n        return new AlternateCS(numComps, ColorSpace.fromIR(alt, pdfFunctionFactory), pdfFunctionFactory.createFromIR(tintFnIR));\n      case 'LabCS':\n        whitePoint = IR[1];\n        blackPoint = IR[2];\n        var range = IR[3];\n        return new LabCS(whitePoint, blackPoint, range);\n      default:\n        throw new _util.FormatError('Unknown colorspace name: ' + name);\n    }\n  };\n  ColorSpace.parseToIR = function (cs, xref) {\n    var res = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n    var pdfFunctionFactory = arguments[3];\n\n    cs = xref.fetchIfRef(cs);\n    if ((0, _primitives.isName)(cs)) {\n      switch (cs.name) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'Pattern':\n          return ['PatternCS', null];\n        default:\n          if ((0, _primitives.isDict)(res)) {\n            var colorSpaces = res.get('ColorSpace');\n            if ((0, _primitives.isDict)(colorSpaces)) {\n              var resCS = colorSpaces.get(cs.name);\n              if (resCS) {\n                if ((0, _primitives.isName)(resCS)) {\n                  return ColorSpace.parseToIR(resCS, xref, res, pdfFunctionFactory);\n                }\n                cs = resCS;\n                break;\n              }\n            }\n          }\n          throw new _util.FormatError('unrecognized colorspace ' + cs.name);\n      }\n    }\n    if (Array.isArray(cs)) {\n      var mode = xref.fetchIfRef(cs[0]).name;\n      var numComps, params, alt, whitePoint, blackPoint, gamma;\n      switch (mode) {\n        case 'DeviceGray':\n        case 'G':\n          return 'DeviceGrayCS';\n        case 'DeviceRGB':\n        case 'RGB':\n          return 'DeviceRgbCS';\n        case 'DeviceCMYK':\n        case 'CMYK':\n          return 'DeviceCmykCS';\n        case 'CalGray':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.get('Gamma');\n          return ['CalGrayCS', whitePoint, blackPoint, gamma];\n        case 'CalRGB':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          gamma = params.getArray('Gamma');\n          var matrix = params.getArray('Matrix');\n          return ['CalRGBCS', whitePoint, blackPoint, gamma, matrix];\n        case 'ICCBased':\n          var stream = xref.fetchIfRef(cs[1]);\n          var dict = stream.dict;\n          numComps = dict.get('N');\n          alt = dict.get('Alternate');\n          if (alt) {\n            var altIR = ColorSpace.parseToIR(alt, xref, res, pdfFunctionFactory);\n            var altCS = ColorSpace.fromIR(altIR, pdfFunctionFactory);\n            if (altCS.numComps === numComps) {\n              return altIR;\n            }\n            (0, _util.warn)('ICCBased color space: Ignoring incorrect /Alternate entry.');\n          }\n          if (numComps === 1) {\n            return 'DeviceGrayCS';\n          } else if (numComps === 3) {\n            return 'DeviceRgbCS';\n          } else if (numComps === 4) {\n            return 'DeviceCmykCS';\n          }\n          break;\n        case 'Pattern':\n          var basePatternCS = cs[1] || null;\n          if (basePatternCS) {\n            basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res, pdfFunctionFactory);\n          }\n          return ['PatternCS', basePatternCS];\n        case 'Indexed':\n        case 'I':\n          var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res, pdfFunctionFactory);\n          var hiVal = xref.fetchIfRef(cs[2]) + 1;\n          var lookup = xref.fetchIfRef(cs[3]);\n          if ((0, _primitives.isStream)(lookup)) {\n            lookup = lookup.getBytes();\n          }\n          return ['IndexedCS', baseIndexedCS, hiVal, lookup];\n        case 'Separation':\n        case 'DeviceN':\n          var name = xref.fetchIfRef(cs[1]);\n          numComps = Array.isArray(name) ? name.length : 1;\n          alt = ColorSpace.parseToIR(cs[2], xref, res, pdfFunctionFactory);\n          var tintFnIR = pdfFunctionFactory.createIR(xref.fetchIfRef(cs[3]));\n          return ['AlternateCS', numComps, alt, tintFnIR];\n        case 'Lab':\n          params = xref.fetchIfRef(cs[1]);\n          whitePoint = params.getArray('WhitePoint');\n          blackPoint = params.getArray('BlackPoint');\n          var range = params.getArray('Range');\n          return ['LabCS', whitePoint, blackPoint, range];\n        default:\n          throw new _util.FormatError('unimplemented color space object \"' + mode + '\"');\n      }\n    }\n    throw new _util.FormatError('unrecognized color space object: \"' + cs + '\"');\n  };\n  ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n    if (!Array.isArray(decode)) {\n      return true;\n    }\n    if (n * 2 !== decode.length) {\n      (0, _util.warn)('The decode map is not the correct length');\n      return true;\n    }\n    for (var i = 0, ii = decode.length; i < ii; i += 2) {\n      if (decode[i] !== 0 || decode[i + 1] !== 1) {\n        return false;\n      }\n    }\n    return true;\n  };\n  ColorSpace.singletons = {\n    get gray() {\n      return (0, _util.shadow)(this, 'gray', new DeviceGrayCS());\n    },\n    get rgb() {\n      return (0, _util.shadow)(this, 'rgb', new DeviceRgbCS());\n    },\n    get cmyk() {\n      return (0, _util.shadow)(this, 'cmyk', new DeviceCmykCS());\n    }\n  };\n  return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n  function AlternateCS(numComps, base, tintFn) {\n    this.name = 'Alternate';\n    this.numComps = numComps;\n    this.defaultColor = new Float32Array(numComps);\n    for (var i = 0; i < numComps; ++i) {\n      this.defaultColor[i] = 1;\n    }\n    this.base = base;\n    this.tintFn = tintFn;\n    this.tmpBuf = new Float32Array(base.numComps);\n  }\n  AlternateCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var tmpBuf = this.tmpBuf;\n      this.tintFn(src, srcOffset, tmpBuf, 0);\n      this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n    },\n    getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var tintFn = this.tintFn;\n      var base = this.base;\n      var scale = 1 / ((1 << bits) - 1);\n      var baseNumComps = base.numComps;\n      var usesZeroToOneRange = base.usesZeroToOneRange;\n      var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n      var pos = isPassthrough ? destOffset : 0;\n      var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n      var numComps = this.numComps;\n      var scaled = new Float32Array(numComps);\n      var tinted = new Float32Array(baseNumComps);\n      var i, j;\n      for (i = 0; i < count; i++) {\n        for (j = 0; j < numComps; j++) {\n          scaled[j] = src[srcOffset++] * scale;\n        }\n        tintFn(scaled, 0, tinted, 0);\n        if (usesZeroToOneRange) {\n          for (j = 0; j < baseNumComps; j++) {\n            baseBuf[pos++] = tinted[j] * 255;\n          }\n        } else {\n          base.getRgbItem(tinted, 0, baseBuf, pos);\n          pos += baseNumComps;\n        }\n      }\n      if (!isPassthrough) {\n        base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n      }\n    },\n    getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n  function PatternCS(baseCS) {\n    this.name = 'Pattern';\n    this.base = baseCS;\n  }\n  PatternCS.prototype = {};\n  return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n  function IndexedCS(base, highVal, lookup) {\n    this.name = 'Indexed';\n    this.numComps = 1;\n    this.defaultColor = new Uint8Array(this.numComps);\n    this.base = base;\n    this.highVal = highVal;\n    var baseNumComps = base.numComps;\n    var length = baseNumComps * highVal;\n    if ((0, _primitives.isStream)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      var bytes = lookup.getBytes(length);\n      this.lookup.set(bytes);\n    } else if ((0, _util.isString)(lookup)) {\n      this.lookup = new Uint8Array(length);\n      for (var i = 0; i < length; ++i) {\n        this.lookup[i] = lookup.charCodeAt(i);\n      }\n    } else if (lookup instanceof Uint8Array) {\n      this.lookup = lookup;\n    } else {\n      throw new _util.FormatError('Unrecognized lookup table: ' + lookup);\n    }\n  }\n  IndexedCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var numComps = this.base.numComps;\n      var start = src[srcOffset] * numComps;\n      this.base.getRgbBuffer(this.lookup, start, 1, dest, destOffset, 8, 0);\n    },\n    getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var base = this.base;\n      var numComps = base.numComps;\n      var outputDelta = base.getOutputLength(numComps, alpha01);\n      var lookup = this.lookup;\n      for (var i = 0; i < count; ++i) {\n        var lookupPos = src[srcOffset++] * numComps;\n        base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n        destOffset += outputDelta;\n      }\n    },\n    getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n      return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: true\n  };\n  return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n  function DeviceGrayCS() {\n    this.name = 'DeviceGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var c = src[srcOffset] * 255 | 0;\n      c = c < 0 ? 0 : c > 255 ? 255 : c;\n      dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n    },\n    getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        var c = scale * src[j++] | 0;\n        dest[q++] = c;\n        dest[q++] = c;\n        dest[q++] = c;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n  function DeviceRgbCS() {\n    this.name = 'DeviceRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n  }\n  DeviceRgbCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      var r = src[srcOffset] * 255 | 0;\n      var g = src[srcOffset + 1] * 255 | 0;\n      var b = src[srcOffset + 2] * 255 | 0;\n      dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n      dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n      dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n    },\n    getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      if (bits === 8 && alpha01 === 0) {\n        dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n        return;\n      }\n      var scale = 255 / ((1 << bits) - 1);\n      var j = srcOffset,\n          q = destOffset;\n      for (var i = 0; i < count; ++i) {\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        dest[q++] = scale * src[j++] | 0;\n        q += alpha01;\n      }\n    },\n    getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n      return bits === 8;\n    },\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n  function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n    var c = src[srcOffset + 0] * srcScale;\n    var m = src[srcOffset + 1] * srcScale;\n    var y = src[srcOffset + 2] * srcScale;\n    var k = src[srcOffset + 3] * srcScale;\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n    dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n    dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n    dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n  }\n  function DeviceCmykCS() {\n    this.name = 'DeviceCMYK';\n    this.numComps = 4;\n    this.defaultColor = new Float32Array(this.numComps);\n    this.defaultColor[3] = 1;\n  }\n  DeviceCmykCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(src, srcOffset, 1, dest, destOffset);\n    },\n    getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; i++) {\n        convertToRgb(src, srcOffset, scale, dest, destOffset);\n        srcOffset += 4;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n      return inputLength / 4 * (3 + alpha01) | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n  function CalGrayCS(whitePoint, blackPoint, gamma) {\n    this.name = 'CalGray';\n    this.numComps = 1;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalGray');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    gamma = gamma || 1;\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    this.G = gamma;\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ', falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n      (0, _util.warn)(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n    }\n    if (this.G < 1) {\n      (0, _util.info)('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n      this.G = 1;\n    }\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = src[srcOffset] * scale;\n    var AG = Math.pow(A, cs.G);\n    var L = cs.YW * AG;\n    var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n    dest[destOffset] = val;\n    dest[destOffset + 1] = val;\n    dest[destOffset + 2] = val;\n  }\n  CalGrayCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 1;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01);\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n  var BRADFORD_SCALE_MATRIX = new Float32Array([0.8951, 0.2664, -0.1614, -0.7502, 1.7135, 0.0367, 0.0389, -0.0685, 1.0296]);\n  var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([0.9869929, -0.1470543, 0.1599627, 0.4323053, 0.5183603, 0.0492912, -0.0085287, 0.0400428, 0.9684867]);\n  var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([3.2404542, -1.5371385, -0.4985314, -0.9692660, 1.8760108, 0.0415560, 0.0556434, -0.2040259, 1.0572252]);\n  var FLAT_WHITEPOINT_MATRIX = new Float32Array([1, 1, 1]);\n  var tempNormalizeMatrix = new Float32Array(3);\n  var tempConvertMatrix1 = new Float32Array(3);\n  var tempConvertMatrix2 = new Float32Array(3);\n  var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n  function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n    this.name = 'CalRGB';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space CalRGB');\n    }\n    blackPoint = blackPoint || new Float32Array(3);\n    gamma = gamma || new Float32Array([1, 1, 1]);\n    matrix = matrix || new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n    var XW = whitePoint[0];\n    var YW = whitePoint[1];\n    var ZW = whitePoint[2];\n    this.whitePoint = whitePoint;\n    var XB = blackPoint[0];\n    var YB = blackPoint[1];\n    var ZB = blackPoint[2];\n    this.blackPoint = blackPoint;\n    this.GR = gamma[0];\n    this.GG = gamma[1];\n    this.GB = gamma[2];\n    this.MXA = matrix[0];\n    this.MYA = matrix[1];\n    this.MZA = matrix[2];\n    this.MXB = matrix[3];\n    this.MYB = matrix[4];\n    this.MZB = matrix[5];\n    this.MXC = matrix[6];\n    this.MYC = matrix[7];\n    this.MZC = matrix[8];\n    if (XW < 0 || ZW < 0 || YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n    }\n    if (XB < 0 || YB < 0 || ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n      this.blackPoint = new Float32Array(3);\n    }\n    if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n      (0, _util.info)('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n      this.GR = this.GG = this.GB = 1;\n    }\n    if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n      (0, _util.info)('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n      this.MXA = this.MYB = this.MZC = 1;\n      this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n    }\n  }\n  function matrixProduct(a, b, result) {\n    result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n    result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n    result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n  }\n  function convertToFlat(sourceWhitePoint, LMS, result) {\n    result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n    result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n    result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n  }\n  function convertToD65(sourceWhitePoint, LMS, result) {\n    var D65X = 0.95047;\n    var D65Y = 1;\n    var D65Z = 1.08883;\n    result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n    result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n    result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n  }\n  function sRGBTransferFunction(color) {\n    if (color <= 0.0031308) {\n      return adjustToRange(0, 1, 12.92 * color);\n    }\n    return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n  }\n  function adjustToRange(min, max, value) {\n    return Math.max(min, Math.min(max, value));\n  }\n  function decodeL(L) {\n    if (L < 0) {\n      return -decodeL(-L);\n    }\n    if (L > 8.0) {\n      return Math.pow((L + 16) / 116, 3);\n    }\n    return L * DECODE_L_CONSTANT;\n  }\n  function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n    if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n      result[0] = XYZ_Flat[0];\n      result[1] = XYZ_Flat[1];\n      result[2] = XYZ_Flat[2];\n      return;\n    }\n    var zeroDecodeL = decodeL(0);\n    var X_DST = zeroDecodeL;\n    var X_SRC = decodeL(sourceBlackPoint[0]);\n    var Y_DST = zeroDecodeL;\n    var Y_SRC = decodeL(sourceBlackPoint[1]);\n    var Z_DST = zeroDecodeL;\n    var Z_SRC = decodeL(sourceBlackPoint[2]);\n    var X_Scale = (1 - X_DST) / (1 - X_SRC);\n    var X_Offset = 1 - X_Scale;\n    var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n    var Y_Offset = 1 - Y_Scale;\n    var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n    var Z_Offset = 1 - Z_Scale;\n    result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n    result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n    result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n  }\n  function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n    if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n      result[0] = XYZ_In[0];\n      result[1] = XYZ_In[1];\n      result[2] = XYZ_In[2];\n      return;\n    }\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_Flat = tempNormalizeMatrix;\n    convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n  }\n  function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n    var LMS = result;\n    matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n    var LMS_D65 = tempNormalizeMatrix;\n    convertToD65(sourceWhitePoint, LMS, LMS_D65);\n    matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n  }\n  function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n    var A = adjustToRange(0, 1, src[srcOffset] * scale);\n    var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n    var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n    var AGR = Math.pow(A, cs.GR);\n    var BGG = Math.pow(B, cs.GG);\n    var CGB = Math.pow(C, cs.GB);\n    var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n    var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n    var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n    var XYZ = tempConvertMatrix1;\n    XYZ[0] = X;\n    XYZ[1] = Y;\n    XYZ[2] = Z;\n    var XYZ_Flat = tempConvertMatrix2;\n    normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n    var XYZ_Black = tempConvertMatrix1;\n    compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n    var XYZ_D65 = tempConvertMatrix2;\n    normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n    var SRGB = tempConvertMatrix1;\n    matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n    var sR = sRGBTransferFunction(SRGB[0]);\n    var sG = sRGBTransferFunction(SRGB[1]);\n    var sB = sRGBTransferFunction(SRGB[2]);\n    dest[destOffset] = Math.round(sR * 255);\n    dest[destOffset + 1] = Math.round(sG * 255);\n    dest[destOffset + 2] = Math.round(sB * 255);\n  }\n  CalRGBCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n    },\n    getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var scale = 1 / ((1 << bits) - 1);\n      for (var i = 0; i < count; ++i) {\n        convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n      return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n    },\n    usesZeroToOneRange: true\n  };\n  return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n  function LabCS(whitePoint, blackPoint, range) {\n    this.name = 'Lab';\n    this.numComps = 3;\n    this.defaultColor = new Float32Array(this.numComps);\n    if (!whitePoint) {\n      throw new _util.FormatError('WhitePoint missing - required for color space Lab');\n    }\n    blackPoint = blackPoint || [0, 0, 0];\n    range = range || [-100, 100, -100, 100];\n    this.XW = whitePoint[0];\n    this.YW = whitePoint[1];\n    this.ZW = whitePoint[2];\n    this.amin = range[0];\n    this.amax = range[1];\n    this.bmin = range[2];\n    this.bmax = range[3];\n    this.XB = blackPoint[0];\n    this.YB = blackPoint[1];\n    this.ZB = blackPoint[2];\n    if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n      throw new _util.FormatError('Invalid WhitePoint components, no fallback available');\n    }\n    if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n      (0, _util.info)('Invalid BlackPoint, falling back to default');\n      this.XB = this.YB = this.ZB = 0;\n    }\n    if (this.amin > this.amax || this.bmin > this.bmax) {\n      (0, _util.info)('Invalid Range, falling back to defaults');\n      this.amin = -100;\n      this.amax = 100;\n      this.bmin = -100;\n      this.bmax = 100;\n    }\n  }\n  function fn_g(x) {\n    var result;\n    if (x >= 6 / 29) {\n      result = x * x * x;\n    } else {\n      result = 108 / 841 * (x - 4 / 29);\n    }\n    return result;\n  }\n  function decode(value, high1, low2, high2) {\n    return low2 + value * (high2 - low2) / high1;\n  }\n  function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n    var Ls = src[srcOffset];\n    var as = src[srcOffset + 1];\n    var bs = src[srcOffset + 2];\n    if (maxVal !== false) {\n      Ls = decode(Ls, maxVal, 0, 100);\n      as = decode(as, maxVal, cs.amin, cs.amax);\n      bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n    }\n    as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n    bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n    var M = (Ls + 16) / 116;\n    var L = M + as / 500;\n    var N = M - bs / 200;\n    var X = cs.XW * fn_g(L);\n    var Y = cs.YW * fn_g(M);\n    var Z = cs.ZW * fn_g(N);\n    var r, g, b;\n    if (cs.ZW < 1) {\n      r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n      g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n      b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n    } else {\n      r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n      g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n      b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n    }\n    dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n    dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n    dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n  }\n  LabCS.prototype = {\n    getRgb: ColorSpace.prototype.getRgb,\n    getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n      convertToRgb(this, src, srcOffset, false, dest, destOffset);\n    },\n    getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n      var maxVal = (1 << bits) - 1;\n      for (var i = 0; i < count; i++) {\n        convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n        srcOffset += 3;\n        destOffset += 3 + alpha01;\n      }\n    },\n    getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n      return inputLength * (3 + alpha01) / 3 | 0;\n    },\n    isPassthrough: ColorSpace.prototype.isPassthrough,\n    fillRgb: ColorSpace.prototype.fillRgb,\n    isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n      return true;\n    },\n    usesZeroToOneRange: false\n  };\n  return LabCS;\n}();\nexports.ColorSpace = ColorSpace;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Parser = exports.Linearization = exports.Lexer = undefined;\n\nvar _stream = require('./stream');\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ccitt_stream = require('./ccitt_stream');\n\nvar _jbig2_stream = require('./jbig2_stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx_stream = require('./jpx_stream');\n\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n  function Parser(lexer, allowStreams, xref, recoveryMode) {\n    this.lexer = lexer;\n    this.allowStreams = allowStreams;\n    this.xref = xref;\n    this.recoveryMode = recoveryMode || false;\n    this.imageCache = Object.create(null);\n    this.refill();\n  }\n  Parser.prototype = {\n    refill: function Parser_refill() {\n      this.buf1 = this.lexer.getObj();\n      this.buf2 = this.lexer.getObj();\n    },\n    shift: function Parser_shift() {\n      if ((0, _primitives.isCmd)(this.buf2, 'ID')) {\n        this.buf1 = this.buf2;\n        this.buf2 = null;\n      } else {\n        this.buf1 = this.buf2;\n        this.buf2 = this.lexer.getObj();\n      }\n    },\n    tryShift: function Parser_tryShift() {\n      try {\n        this.shift();\n        return true;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        return false;\n      }\n    },\n    getObj: function Parser_getObj(cipherTransform) {\n      var buf1 = this.buf1;\n      this.shift();\n      if (buf1 instanceof _primitives.Cmd) {\n        switch (buf1.cmd) {\n          case 'BI':\n            return this.makeInlineImage(cipherTransform);\n          case '[':\n            var array = [];\n            while (!(0, _primitives.isCmd)(this.buf1, ']') && !(0, _primitives.isEOF)(this.buf1)) {\n              array.push(this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside array');\n              }\n              return array;\n            }\n            this.shift();\n            return array;\n          case '<<':\n            var dict = new _primitives.Dict(this.xref);\n            while (!(0, _primitives.isCmd)(this.buf1, '>>') && !(0, _primitives.isEOF)(this.buf1)) {\n              if (!(0, _primitives.isName)(this.buf1)) {\n                (0, _util.info)('Malformed dictionary: key must be a name object');\n                this.shift();\n                continue;\n              }\n              var key = this.buf1.name;\n              this.shift();\n              if ((0, _primitives.isEOF)(this.buf1)) {\n                break;\n              }\n              dict.set(key, this.getObj(cipherTransform));\n            }\n            if ((0, _primitives.isEOF)(this.buf1)) {\n              if (!this.recoveryMode) {\n                throw new _util.FormatError('End of file inside dictionary');\n              }\n              return dict;\n            }\n            if ((0, _primitives.isCmd)(this.buf2, 'stream')) {\n              return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n            }\n            this.shift();\n            return dict;\n          default:\n            return buf1;\n        }\n      }\n      if (Number.isInteger(buf1)) {\n        var num = buf1;\n        if (Number.isInteger(this.buf1) && (0, _primitives.isCmd)(this.buf2, 'R')) {\n          var ref = new _primitives.Ref(num, this.buf1);\n          this.shift();\n          this.shift();\n          return ref;\n        }\n        return num;\n      }\n      if ((0, _util.isString)(buf1)) {\n        var str = buf1;\n        if (cipherTransform) {\n          str = cipherTransform.decryptString(str);\n        }\n        return str;\n      }\n      return buf1;\n    },\n    findDefaultInlineStreamEnd: function findDefaultInlineStreamEnd(stream) {\n      var E = 0x45,\n          I = 0x49,\n          SPACE = 0x20,\n          LF = 0xA,\n          CR = 0xD;\n      var n = 10,\n          NUL = 0x0;\n      var startPos = stream.pos,\n          state = 0,\n          ch = void 0,\n          maybeEIPos = void 0;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else {\n          (0, _util.assert)(state === 2);\n          if (ch === SPACE || ch === LF || ch === CR) {\n            maybeEIPos = stream.pos;\n            var followingBytes = stream.peekBytes(n);\n            for (var i = 0, ii = followingBytes.length; i < ii; i++) {\n              ch = followingBytes[i];\n              if (ch === NUL && followingBytes[i + 1] !== NUL) {\n                continue;\n              }\n              if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n                state = 0;\n                break;\n              }\n            }\n            if (state === 2) {\n              break;\n            }\n          } else {\n            state = 0;\n          }\n        }\n      }\n      if (ch === -1) {\n        (0, _util.warn)('findDefaultInlineStreamEnd: ' + 'Reached the end of the stream without finding a valid EI marker');\n        if (maybeEIPos) {\n          (0, _util.warn)('... trying to recover by using the last \"EI\" occurrence.');\n          stream.skip(-(stream.pos - maybeEIPos));\n        }\n      }\n      return stream.pos - 4 - startPos;\n    },\n\n    findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n      var startPos = stream.pos,\n          foundEOI = false,\n          b,\n          markerLength,\n          length;\n      while ((b = stream.getByte()) !== -1) {\n        if (b !== 0xFF) {\n          continue;\n        }\n        switch (stream.getByte()) {\n          case 0x00:\n            break;\n          case 0xFF:\n            stream.skip(-1);\n            break;\n          case 0xD9:\n            foundEOI = true;\n            break;\n          case 0xC0:\n          case 0xC1:\n          case 0xC2:\n          case 0xC3:\n          case 0xC5:\n          case 0xC6:\n          case 0xC7:\n          case 0xC9:\n          case 0xCA:\n          case 0xCB:\n          case 0xCD:\n          case 0xCE:\n          case 0xCF:\n          case 0xC4:\n          case 0xCC:\n          case 0xDA:\n          case 0xDB:\n          case 0xDC:\n          case 0xDD:\n          case 0xDE:\n          case 0xDF:\n          case 0xE0:\n          case 0xE1:\n          case 0xE2:\n          case 0xE3:\n          case 0xE4:\n          case 0xE5:\n          case 0xE6:\n          case 0xE7:\n          case 0xE8:\n          case 0xE9:\n          case 0xEA:\n          case 0xEB:\n          case 0xEC:\n          case 0xED:\n          case 0xEE:\n          case 0xEF:\n          case 0xFE:\n            markerLength = stream.getUint16();\n            if (markerLength > 2) {\n              stream.skip(markerLength - 2);\n            } else {\n              stream.skip(-2);\n            }\n            break;\n        }\n        if (foundEOI) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (b === -1) {\n        (0, _util.warn)('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n      var TILDE = 0x7E,\n          GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === TILDE && stream.peekByte() === GT) {\n          stream.skip();\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n      var GT = 0x3E;\n      var startPos = stream.pos,\n          ch,\n          length;\n      while ((ch = stream.getByte()) !== -1) {\n        if (ch === GT) {\n          break;\n        }\n      }\n      length = stream.pos - startPos;\n      if (ch === -1) {\n        (0, _util.warn)('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n        stream.skip(-length);\n        return this.findDefaultInlineStreamEnd(stream);\n      }\n      this.inlineStreamSkipEI(stream);\n      return length;\n    },\n    inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n      var E = 0x45,\n          I = 0x49;\n      var state = 0,\n          ch;\n      while ((ch = stream.getByte()) !== -1) {\n        if (state === 0) {\n          state = ch === E ? 1 : 0;\n        } else if (state === 1) {\n          state = ch === I ? 2 : 0;\n        } else if (state === 2) {\n          break;\n        }\n      }\n    },\n    makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      var dict = new _primitives.Dict(this.xref);\n      while (!(0, _primitives.isCmd)(this.buf1, 'ID') && !(0, _primitives.isEOF)(this.buf1)) {\n        if (!(0, _primitives.isName)(this.buf1)) {\n          throw new _util.FormatError('Dictionary key must be a name object');\n        }\n        var key = this.buf1.name;\n        this.shift();\n        if ((0, _primitives.isEOF)(this.buf1)) {\n          break;\n        }\n        dict.set(key, this.getObj(cipherTransform));\n      }\n      var filter = dict.get('Filter', 'F'),\n          filterName;\n      if ((0, _primitives.isName)(filter)) {\n        filterName = filter.name;\n      } else if (Array.isArray(filter)) {\n        var filterZero = this.xref.fetchIfRef(filter[0]);\n        if ((0, _primitives.isName)(filterZero)) {\n          filterName = filterZero.name;\n        }\n      }\n      var startPos = stream.pos,\n          length,\n          i,\n          ii;\n      if (filterName === 'DCTDecode' || filterName === 'DCT') {\n        length = this.findDCTDecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCII85Decode' || filterName === 'A85') {\n        length = this.findASCII85DecodeInlineStreamEnd(stream);\n      } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n        length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n      } else {\n        length = this.findDefaultInlineStreamEnd(stream);\n      }\n      var imageStream = stream.makeSubStream(startPos, length, dict);\n      var adler32;\n      if (length < MAX_LENGTH_TO_CACHE) {\n        var imageBytes = imageStream.getBytes();\n        imageStream.reset();\n        var a = 1;\n        var b = 0;\n        for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n          a += imageBytes[i] & 0xff;\n          b += a;\n        }\n        adler32 = b % 65521 << 16 | a % 65521;\n        var cacheEntry = this.imageCache[adler32];\n        if (cacheEntry !== undefined) {\n          this.buf2 = _primitives.Cmd.get('EI');\n          this.shift();\n          cacheEntry.reset();\n          return cacheEntry;\n        }\n      }\n      if (cipherTransform) {\n        imageStream = cipherTransform.createStream(imageStream, length);\n      }\n      imageStream = this.filter(imageStream, dict, length);\n      imageStream.dict = dict;\n      if (adler32 !== undefined) {\n        imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n        this.imageCache[adler32] = imageStream;\n      }\n      this.buf2 = _primitives.Cmd.get('EI');\n      this.shift();\n      return imageStream;\n    },\n    makeStream: function Parser_makeStream(dict, cipherTransform) {\n      var lexer = this.lexer;\n      var stream = lexer.stream;\n      lexer.skipToNextLine();\n      var pos = stream.pos - 1;\n      var length = dict.get('Length');\n      if (!Number.isInteger(length)) {\n        (0, _util.info)('Bad ' + length + ' attribute in stream');\n        length = 0;\n      }\n      stream.pos = pos + length;\n      lexer.nextChar();\n      if (this.tryShift() && (0, _primitives.isCmd)(this.buf2, 'endstream')) {\n        this.shift();\n      } else {\n        stream.pos = pos;\n        var SCAN_BLOCK_SIZE = 2048;\n        var ENDSTREAM_SIGNATURE_LENGTH = 9;\n        var ENDSTREAM_SIGNATURE = [0x65, 0x6E, 0x64, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6D];\n        var skipped = 0,\n            found = false,\n            i,\n            j;\n        while (stream.pos < stream.end) {\n          var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n          var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n          if (scanLength <= 0) {\n            break;\n          }\n          found = false;\n          i = 0;\n          while (i < scanLength) {\n            j = 0;\n            while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n              j++;\n            }\n            if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n              found = true;\n              break;\n            }\n            i++;\n          }\n          if (found) {\n            skipped += i;\n            stream.pos += i;\n            break;\n          }\n          skipped += scanLength;\n          stream.pos += scanLength;\n        }\n        if (!found) {\n          throw new _util.FormatError('Missing endstream');\n        }\n        length = skipped;\n        lexer.nextChar();\n        this.shift();\n        this.shift();\n      }\n      this.shift();\n      stream = stream.makeSubStream(pos, length, dict);\n      if (cipherTransform) {\n        stream = cipherTransform.createStream(stream, length);\n      }\n      stream = this.filter(stream, dict, length);\n      stream.dict = dict;\n      return stream;\n    },\n    filter: function Parser_filter(stream, dict, length) {\n      var filter = dict.get('Filter', 'F');\n      var params = dict.get('DecodeParms', 'DP');\n      if ((0, _primitives.isName)(filter)) {\n        if (Array.isArray(params)) {\n          (0, _util.warn)('/DecodeParms should not contain an Array, ' + 'when /Filter contains a Name.');\n        }\n        return this.makeFilter(stream, filter.name, length, params);\n      }\n      var maybeLength = length;\n      if (Array.isArray(filter)) {\n        var filterArray = filter;\n        var paramsArray = params;\n        for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n          filter = this.xref.fetchIfRef(filterArray[i]);\n          if (!(0, _primitives.isName)(filter)) {\n            throw new _util.FormatError('Bad filter name: ' + filter);\n          }\n          params = null;\n          if (Array.isArray(paramsArray) && i in paramsArray) {\n            params = this.xref.fetchIfRef(paramsArray[i]);\n          }\n          stream = this.makeFilter(stream, filter.name, maybeLength, params);\n          maybeLength = null;\n        }\n      }\n      return stream;\n    },\n    makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n      if (maybeLength === 0) {\n        (0, _util.warn)('Empty \"' + name + '\" stream.');\n        return new _stream.NullStream();\n      }\n      try {\n        var xrefStreamStats = this.xref.stats.streamTypes;\n        if (name === 'FlateDecode' || name === 'Fl') {\n          xrefStreamStats[_util.StreamType.FLATE] = true;\n          if (params) {\n            return new _stream.PredictorStream(new _stream.FlateStream(stream, maybeLength), maybeLength, params);\n          }\n          return new _stream.FlateStream(stream, maybeLength);\n        }\n        if (name === 'LZWDecode' || name === 'LZW') {\n          xrefStreamStats[_util.StreamType.LZW] = true;\n          var earlyChange = 1;\n          if (params) {\n            if (params.has('EarlyChange')) {\n              earlyChange = params.get('EarlyChange');\n            }\n            return new _stream.PredictorStream(new _stream.LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n          }\n          return new _stream.LZWStream(stream, maybeLength, earlyChange);\n        }\n        if (name === 'DCTDecode' || name === 'DCT') {\n          xrefStreamStats[_util.StreamType.DCT] = true;\n          return new _jpeg_stream.JpegStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'JPXDecode' || name === 'JPX') {\n          xrefStreamStats[_util.StreamType.JPX] = true;\n          return new _jpx_stream.JpxStream(stream, maybeLength, stream.dict, params);\n        }\n        if (name === 'ASCII85Decode' || name === 'A85') {\n          xrefStreamStats[_util.StreamType.A85] = true;\n          return new _stream.Ascii85Stream(stream, maybeLength);\n        }\n        if (name === 'ASCIIHexDecode' || name === 'AHx') {\n          xrefStreamStats[_util.StreamType.AHX] = true;\n          return new _stream.AsciiHexStream(stream, maybeLength);\n        }\n        if (name === 'CCITTFaxDecode' || name === 'CCF') {\n          xrefStreamStats[_util.StreamType.CCF] = true;\n          return new _ccitt_stream.CCITTFaxStream(stream, maybeLength, params);\n        }\n        if (name === 'RunLengthDecode' || name === 'RL') {\n          xrefStreamStats[_util.StreamType.RL] = true;\n          return new _stream.RunLengthStream(stream, maybeLength);\n        }\n        if (name === 'JBIG2Decode') {\n          xrefStreamStats[_util.StreamType.JBIG] = true;\n          return new _jbig2_stream.Jbig2Stream(stream, maybeLength, stream.dict, params);\n        }\n        (0, _util.warn)('filter \"' + name + '\" not supported yet');\n        return stream;\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid stream: \\\"' + ex + '\\\"');\n        return new _stream.NullStream();\n      }\n    }\n  };\n  return Parser;\n}();\nvar Lexer = function LexerClosure() {\n  function Lexer(stream, knownCommands) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n    this.knownCommands = knownCommands;\n  }\n  var specialChars = [1, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 2, 0, 0, 2, 2, 0, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  function toHexDigit(ch) {\n    if (ch >= 0x30 && ch <= 0x39) {\n      return ch & 0x0F;\n    }\n    if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n      return (ch & 0x0F) + 9;\n    }\n    return -1;\n  }\n  Lexer.prototype = {\n    nextChar: function Lexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    peekChar: function Lexer_peekChar() {\n      return this.stream.peekByte();\n    },\n    getNumber: function Lexer_getNumber() {\n      var ch = this.currentChar;\n      var eNotation = false;\n      var divideBy = 0;\n      var sign = 1;\n      if (ch === 0x2D) {\n        sign = -1;\n        ch = this.nextChar();\n        if (ch === 0x2D) {\n          ch = this.nextChar();\n        }\n      } else if (ch === 0x2B) {\n        ch = this.nextChar();\n      }\n      if (ch === 0x2E) {\n        divideBy = 10;\n        ch = this.nextChar();\n      }\n      if (ch === 0x0A || ch === 0x0D) {\n        do {\n          ch = this.nextChar();\n        } while (ch === 0x0A || ch === 0x0D);\n      }\n      if (ch < 0x30 || ch > 0x39) {\n        throw new _util.FormatError('Invalid number: ' + String.fromCharCode(ch) + ' (charCode ' + ch + ')');\n      }\n      var baseValue = ch - 0x30;\n      var powerValue = 0;\n      var powerValueSign = 1;\n      while ((ch = this.nextChar()) >= 0) {\n        if (0x30 <= ch && ch <= 0x39) {\n          var currentDigit = ch - 0x30;\n          if (eNotation) {\n            powerValue = powerValue * 10 + currentDigit;\n          } else {\n            if (divideBy !== 0) {\n              divideBy *= 10;\n            }\n            baseValue = baseValue * 10 + currentDigit;\n          }\n        } else if (ch === 0x2E) {\n          if (divideBy === 0) {\n            divideBy = 1;\n          } else {\n            break;\n          }\n        } else if (ch === 0x2D) {\n          (0, _util.warn)('Badly formatted number');\n        } else if (ch === 0x45 || ch === 0x65) {\n          ch = this.peekChar();\n          if (ch === 0x2B || ch === 0x2D) {\n            powerValueSign = ch === 0x2D ? -1 : 1;\n            this.nextChar();\n          } else if (ch < 0x30 || ch > 0x39) {\n            break;\n          }\n          eNotation = true;\n        } else {\n          break;\n        }\n      }\n      if (divideBy !== 0) {\n        baseValue /= divideBy;\n      }\n      if (eNotation) {\n        baseValue *= Math.pow(10, powerValueSign * powerValue);\n      }\n      return sign * baseValue;\n    },\n    getString: function Lexer_getString() {\n      var numParen = 1;\n      var done = false;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.nextChar();\n      while (true) {\n        var charBuffered = false;\n        switch (ch | 0) {\n          case -1:\n            (0, _util.warn)('Unterminated string');\n            done = true;\n            break;\n          case 0x28:\n            ++numParen;\n            strBuf.push('(');\n            break;\n          case 0x29:\n            if (--numParen === 0) {\n              this.nextChar();\n              done = true;\n            } else {\n              strBuf.push(')');\n            }\n            break;\n          case 0x5C:\n            ch = this.nextChar();\n            switch (ch) {\n              case -1:\n                (0, _util.warn)('Unterminated string');\n                done = true;\n                break;\n              case 0x6E:\n                strBuf.push('\\n');\n                break;\n              case 0x72:\n                strBuf.push('\\r');\n                break;\n              case 0x74:\n                strBuf.push('\\t');\n                break;\n              case 0x62:\n                strBuf.push('\\b');\n                break;\n              case 0x66:\n                strBuf.push('\\f');\n                break;\n              case 0x5C:\n              case 0x28:\n              case 0x29:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n              case 0x30:\n              case 0x31:\n              case 0x32:\n              case 0x33:\n              case 0x34:\n              case 0x35:\n              case 0x36:\n              case 0x37:\n                var x = ch & 0x0F;\n                ch = this.nextChar();\n                charBuffered = true;\n                if (ch >= 0x30 && ch <= 0x37) {\n                  x = (x << 3) + (ch & 0x0F);\n                  ch = this.nextChar();\n                  if (ch >= 0x30 && ch <= 0x37) {\n                    charBuffered = false;\n                    x = (x << 3) + (ch & 0x0F);\n                  }\n                }\n                strBuf.push(String.fromCharCode(x));\n                break;\n              case 0x0D:\n                if (this.peekChar() === 0x0A) {\n                  this.nextChar();\n                }\n                break;\n              case 0x0A:\n                break;\n              default:\n                strBuf.push(String.fromCharCode(ch));\n                break;\n            }\n            break;\n          default:\n            strBuf.push(String.fromCharCode(ch));\n            break;\n        }\n        if (done) {\n          break;\n        }\n        if (!charBuffered) {\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getName: function Lexer_getName() {\n      var ch, previousCh;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        if (ch === 0x23) {\n          ch = this.nextChar();\n          if (specialChars[ch]) {\n            (0, _util.warn)('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n            strBuf.push('#');\n            break;\n          }\n          var x = toHexDigit(ch);\n          if (x !== -1) {\n            previousCh = ch;\n            ch = this.nextChar();\n            var x2 = toHexDigit(ch);\n            if (x2 === -1) {\n              (0, _util.warn)('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n              strBuf.push('#', String.fromCharCode(previousCh));\n              if (specialChars[ch]) {\n                break;\n              }\n              strBuf.push(String.fromCharCode(ch));\n              continue;\n            }\n            strBuf.push(String.fromCharCode(x << 4 | x2));\n          } else {\n            strBuf.push('#', String.fromCharCode(ch));\n          }\n        } else {\n          strBuf.push(String.fromCharCode(ch));\n        }\n      }\n      if (strBuf.length > 127) {\n        (0, _util.warn)('name token is longer than allowed by the spec: ' + strBuf.length);\n      }\n      return _primitives.Name.get(strBuf.join(''));\n    },\n    getHexString: function Lexer_getHexString() {\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      var ch = this.currentChar;\n      var isFirstHex = true;\n      var firstDigit;\n      var secondDigit;\n      while (true) {\n        if (ch < 0) {\n          (0, _util.warn)('Unterminated hex string');\n          break;\n        } else if (ch === 0x3E) {\n          this.nextChar();\n          break;\n        } else if (specialChars[ch] === 1) {\n          ch = this.nextChar();\n          continue;\n        } else {\n          if (isFirstHex) {\n            firstDigit = toHexDigit(ch);\n            if (firstDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n          } else {\n            secondDigit = toHexDigit(ch);\n            if (secondDigit === -1) {\n              (0, _util.warn)('Ignoring invalid character \"' + ch + '\" in hex string');\n              ch = this.nextChar();\n              continue;\n            }\n            strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n          }\n          isFirstHex = !isFirstHex;\n          ch = this.nextChar();\n        }\n      }\n      return strBuf.join('');\n    },\n    getObj: function Lexer_getObj() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (specialChars[ch] !== 1) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return this.getNumber();\n        case 0x28:\n          return this.getString();\n        case 0x2F:\n          return this.getName();\n        case 0x5B:\n          this.nextChar();\n          return _primitives.Cmd.get('[');\n        case 0x5D:\n          this.nextChar();\n          return _primitives.Cmd.get(']');\n        case 0x3C:\n          ch = this.nextChar();\n          if (ch === 0x3C) {\n            this.nextChar();\n            return _primitives.Cmd.get('<<');\n          }\n          return this.getHexString();\n        case 0x3E:\n          ch = this.nextChar();\n          if (ch === 0x3E) {\n            this.nextChar();\n            return _primitives.Cmd.get('>>');\n          }\n          return _primitives.Cmd.get('>');\n        case 0x7B:\n          this.nextChar();\n          return _primitives.Cmd.get('{');\n        case 0x7D:\n          this.nextChar();\n          return _primitives.Cmd.get('}');\n        case 0x29:\n          this.nextChar();\n          throw new _util.FormatError('Illegal character: ' + ch);\n      }\n      var str = String.fromCharCode(ch);\n      var knownCommands = this.knownCommands;\n      var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n        var possibleCommand = str + String.fromCharCode(ch);\n        if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n          break;\n        }\n        if (str.length === 128) {\n          throw new _util.FormatError('Command token too long: ' + str.length);\n        }\n        str = possibleCommand;\n        knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n      }\n      if (str === 'true') {\n        return true;\n      }\n      if (str === 'false') {\n        return false;\n      }\n      if (str === 'null') {\n        return null;\n      }\n      return _primitives.Cmd.get(str);\n    },\n    skipToNextLine: function Lexer_skipToNextLine() {\n      var ch = this.currentChar;\n      while (ch >= 0) {\n        if (ch === 0x0D) {\n          ch = this.nextChar();\n          if (ch === 0x0A) {\n            this.nextChar();\n          }\n          break;\n        } else if (ch === 0x0A) {\n          this.nextChar();\n          break;\n        }\n        ch = this.nextChar();\n      }\n    }\n  };\n  return Lexer;\n}();\nvar Linearization = {\n  create: function LinearizationCreate(stream) {\n    function getInt(name, allowZeroValue) {\n      var obj = linDict.get(name);\n      if (Number.isInteger(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n        return obj;\n      }\n      throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n    }\n    function getHints() {\n      var hints = linDict.get('H'),\n          hintsLength,\n          item;\n      if (Array.isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n        for (var index = 0; index < hintsLength; index++) {\n          if (!(Number.isInteger(item = hints[index]) && item > 0)) {\n            throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n          }\n        }\n        return hints;\n      }\n      throw new Error('Hint array in the linearization dictionary is invalid.');\n    }\n    var parser = new Parser(new Lexer(stream), false, null);\n    var obj1 = parser.getObj();\n    var obj2 = parser.getObj();\n    var obj3 = parser.getObj();\n    var linDict = parser.getObj();\n    var obj, length;\n    if (!(Number.isInteger(obj1) && Number.isInteger(obj2) && (0, _primitives.isCmd)(obj3, 'obj') && (0, _primitives.isDict)(linDict) && (0, _util.isNum)(obj = linDict.get('Linearized')) && obj > 0)) {\n      return null;\n    } else if ((length = getInt('L')) !== stream.length) {\n      throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n    }\n    return {\n      length: length,\n      hints: getHints(),\n      objectNumberFirst: getInt('O'),\n      endFirst: getInt('E'),\n      numPages: getInt('N'),\n      mainXRefEntriesOffset: getInt('T'),\n      pageFirst: linDict.has('P') ? getInt('P', true) : 0\n    };\n  }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['A'] = 0x0041;\n  t['AE'] = 0x00C6;\n  t['AEacute'] = 0x01FC;\n  t['AEmacron'] = 0x01E2;\n  t['AEsmall'] = 0xF7E6;\n  t['Aacute'] = 0x00C1;\n  t['Aacutesmall'] = 0xF7E1;\n  t['Abreve'] = 0x0102;\n  t['Abreveacute'] = 0x1EAE;\n  t['Abrevecyrillic'] = 0x04D0;\n  t['Abrevedotbelow'] = 0x1EB6;\n  t['Abrevegrave'] = 0x1EB0;\n  t['Abrevehookabove'] = 0x1EB2;\n  t['Abrevetilde'] = 0x1EB4;\n  t['Acaron'] = 0x01CD;\n  t['Acircle'] = 0x24B6;\n  t['Acircumflex'] = 0x00C2;\n  t['Acircumflexacute'] = 0x1EA4;\n  t['Acircumflexdotbelow'] = 0x1EAC;\n  t['Acircumflexgrave'] = 0x1EA6;\n  t['Acircumflexhookabove'] = 0x1EA8;\n  t['Acircumflexsmall'] = 0xF7E2;\n  t['Acircumflextilde'] = 0x1EAA;\n  t['Acute'] = 0xF6C9;\n  t['Acutesmall'] = 0xF7B4;\n  t['Acyrillic'] = 0x0410;\n  t['Adblgrave'] = 0x0200;\n  t['Adieresis'] = 0x00C4;\n  t['Adieresiscyrillic'] = 0x04D2;\n  t['Adieresismacron'] = 0x01DE;\n  t['Adieresissmall'] = 0xF7E4;\n  t['Adotbelow'] = 0x1EA0;\n  t['Adotmacron'] = 0x01E0;\n  t['Agrave'] = 0x00C0;\n  t['Agravesmall'] = 0xF7E0;\n  t['Ahookabove'] = 0x1EA2;\n  t['Aiecyrillic'] = 0x04D4;\n  t['Ainvertedbreve'] = 0x0202;\n  t['Alpha'] = 0x0391;\n  t['Alphatonos'] = 0x0386;\n  t['Amacron'] = 0x0100;\n  t['Amonospace'] = 0xFF21;\n  t['Aogonek'] = 0x0104;\n  t['Aring'] = 0x00C5;\n  t['Aringacute'] = 0x01FA;\n  t['Aringbelow'] = 0x1E00;\n  t['Aringsmall'] = 0xF7E5;\n  t['Asmall'] = 0xF761;\n  t['Atilde'] = 0x00C3;\n  t['Atildesmall'] = 0xF7E3;\n  t['Aybarmenian'] = 0x0531;\n  t['B'] = 0x0042;\n  t['Bcircle'] = 0x24B7;\n  t['Bdotaccent'] = 0x1E02;\n  t['Bdotbelow'] = 0x1E04;\n  t['Becyrillic'] = 0x0411;\n  t['Benarmenian'] = 0x0532;\n  t['Beta'] = 0x0392;\n  t['Bhook'] = 0x0181;\n  t['Blinebelow'] = 0x1E06;\n  t['Bmonospace'] = 0xFF22;\n  t['Brevesmall'] = 0xF6F4;\n  t['Bsmall'] = 0xF762;\n  t['Btopbar'] = 0x0182;\n  t['C'] = 0x0043;\n  t['Caarmenian'] = 0x053E;\n  t['Cacute'] = 0x0106;\n  t['Caron'] = 0xF6CA;\n  t['Caronsmall'] = 0xF6F5;\n  t['Ccaron'] = 0x010C;\n  t['Ccedilla'] = 0x00C7;\n  t['Ccedillaacute'] = 0x1E08;\n  t['Ccedillasmall'] = 0xF7E7;\n  t['Ccircle'] = 0x24B8;\n  t['Ccircumflex'] = 0x0108;\n  t['Cdot'] = 0x010A;\n  t['Cdotaccent'] = 0x010A;\n  t['Cedillasmall'] = 0xF7B8;\n  t['Chaarmenian'] = 0x0549;\n  t['Cheabkhasiancyrillic'] = 0x04BC;\n  t['Checyrillic'] = 0x0427;\n  t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n  t['Chedescendercyrillic'] = 0x04B6;\n  t['Chedieresiscyrillic'] = 0x04F4;\n  t['Cheharmenian'] = 0x0543;\n  t['Chekhakassiancyrillic'] = 0x04CB;\n  t['Cheverticalstrokecyrillic'] = 0x04B8;\n  t['Chi'] = 0x03A7;\n  t['Chook'] = 0x0187;\n  t['Circumflexsmall'] = 0xF6F6;\n  t['Cmonospace'] = 0xFF23;\n  t['Coarmenian'] = 0x0551;\n  t['Csmall'] = 0xF763;\n  t['D'] = 0x0044;\n  t['DZ'] = 0x01F1;\n  t['DZcaron'] = 0x01C4;\n  t['Daarmenian'] = 0x0534;\n  t['Dafrican'] = 0x0189;\n  t['Dcaron'] = 0x010E;\n  t['Dcedilla'] = 0x1E10;\n  t['Dcircle'] = 0x24B9;\n  t['Dcircumflexbelow'] = 0x1E12;\n  t['Dcroat'] = 0x0110;\n  t['Ddotaccent'] = 0x1E0A;\n  t['Ddotbelow'] = 0x1E0C;\n  t['Decyrillic'] = 0x0414;\n  t['Deicoptic'] = 0x03EE;\n  t['Delta'] = 0x2206;\n  t['Deltagreek'] = 0x0394;\n  t['Dhook'] = 0x018A;\n  t['Dieresis'] = 0xF6CB;\n  t['DieresisAcute'] = 0xF6CC;\n  t['DieresisGrave'] = 0xF6CD;\n  t['Dieresissmall'] = 0xF7A8;\n  t['Digammagreek'] = 0x03DC;\n  t['Djecyrillic'] = 0x0402;\n  t['Dlinebelow'] = 0x1E0E;\n  t['Dmonospace'] = 0xFF24;\n  t['Dotaccentsmall'] = 0xF6F7;\n  t['Dslash'] = 0x0110;\n  t['Dsmall'] = 0xF764;\n  t['Dtopbar'] = 0x018B;\n  t['Dz'] = 0x01F2;\n  t['Dzcaron'] = 0x01C5;\n  t['Dzeabkhasiancyrillic'] = 0x04E0;\n  t['Dzecyrillic'] = 0x0405;\n  t['Dzhecyrillic'] = 0x040F;\n  t['E'] = 0x0045;\n  t['Eacute'] = 0x00C9;\n  t['Eacutesmall'] = 0xF7E9;\n  t['Ebreve'] = 0x0114;\n  t['Ecaron'] = 0x011A;\n  t['Ecedillabreve'] = 0x1E1C;\n  t['Echarmenian'] = 0x0535;\n  t['Ecircle'] = 0x24BA;\n  t['Ecircumflex'] = 0x00CA;\n  t['Ecircumflexacute'] = 0x1EBE;\n  t['Ecircumflexbelow'] = 0x1E18;\n  t['Ecircumflexdotbelow'] = 0x1EC6;\n  t['Ecircumflexgrave'] = 0x1EC0;\n  t['Ecircumflexhookabove'] = 0x1EC2;\n  t['Ecircumflexsmall'] = 0xF7EA;\n  t['Ecircumflextilde'] = 0x1EC4;\n  t['Ecyrillic'] = 0x0404;\n  t['Edblgrave'] = 0x0204;\n  t['Edieresis'] = 0x00CB;\n  t['Edieresissmall'] = 0xF7EB;\n  t['Edot'] = 0x0116;\n  t['Edotaccent'] = 0x0116;\n  t['Edotbelow'] = 0x1EB8;\n  t['Efcyrillic'] = 0x0424;\n  t['Egrave'] = 0x00C8;\n  t['Egravesmall'] = 0xF7E8;\n  t['Eharmenian'] = 0x0537;\n  t['Ehookabove'] = 0x1EBA;\n  t['Eightroman'] = 0x2167;\n  t['Einvertedbreve'] = 0x0206;\n  t['Eiotifiedcyrillic'] = 0x0464;\n  t['Elcyrillic'] = 0x041B;\n  t['Elevenroman'] = 0x216A;\n  t['Emacron'] = 0x0112;\n  t['Emacronacute'] = 0x1E16;\n  t['Emacrongrave'] = 0x1E14;\n  t['Emcyrillic'] = 0x041C;\n  t['Emonospace'] = 0xFF25;\n  t['Encyrillic'] = 0x041D;\n  t['Endescendercyrillic'] = 0x04A2;\n  t['Eng'] = 0x014A;\n  t['Enghecyrillic'] = 0x04A4;\n  t['Enhookcyrillic'] = 0x04C7;\n  t['Eogonek'] = 0x0118;\n  t['Eopen'] = 0x0190;\n  t['Epsilon'] = 0x0395;\n  t['Epsilontonos'] = 0x0388;\n  t['Ercyrillic'] = 0x0420;\n  t['Ereversed'] = 0x018E;\n  t['Ereversedcyrillic'] = 0x042D;\n  t['Escyrillic'] = 0x0421;\n  t['Esdescendercyrillic'] = 0x04AA;\n  t['Esh'] = 0x01A9;\n  t['Esmall'] = 0xF765;\n  t['Eta'] = 0x0397;\n  t['Etarmenian'] = 0x0538;\n  t['Etatonos'] = 0x0389;\n  t['Eth'] = 0x00D0;\n  t['Ethsmall'] = 0xF7F0;\n  t['Etilde'] = 0x1EBC;\n  t['Etildebelow'] = 0x1E1A;\n  t['Euro'] = 0x20AC;\n  t['Ezh'] = 0x01B7;\n  t['Ezhcaron'] = 0x01EE;\n  t['Ezhreversed'] = 0x01B8;\n  t['F'] = 0x0046;\n  t['Fcircle'] = 0x24BB;\n  t['Fdotaccent'] = 0x1E1E;\n  t['Feharmenian'] = 0x0556;\n  t['Feicoptic'] = 0x03E4;\n  t['Fhook'] = 0x0191;\n  t['Fitacyrillic'] = 0x0472;\n  t['Fiveroman'] = 0x2164;\n  t['Fmonospace'] = 0xFF26;\n  t['Fourroman'] = 0x2163;\n  t['Fsmall'] = 0xF766;\n  t['G'] = 0x0047;\n  t['GBsquare'] = 0x3387;\n  t['Gacute'] = 0x01F4;\n  t['Gamma'] = 0x0393;\n  t['Gammaafrican'] = 0x0194;\n  t['Gangiacoptic'] = 0x03EA;\n  t['Gbreve'] = 0x011E;\n  t['Gcaron'] = 0x01E6;\n  t['Gcedilla'] = 0x0122;\n  t['Gcircle'] = 0x24BC;\n  t['Gcircumflex'] = 0x011C;\n  t['Gcommaaccent'] = 0x0122;\n  t['Gdot'] = 0x0120;\n  t['Gdotaccent'] = 0x0120;\n  t['Gecyrillic'] = 0x0413;\n  t['Ghadarmenian'] = 0x0542;\n  t['Ghemiddlehookcyrillic'] = 0x0494;\n  t['Ghestrokecyrillic'] = 0x0492;\n  t['Gheupturncyrillic'] = 0x0490;\n  t['Ghook'] = 0x0193;\n  t['Gimarmenian'] = 0x0533;\n  t['Gjecyrillic'] = 0x0403;\n  t['Gmacron'] = 0x1E20;\n  t['Gmonospace'] = 0xFF27;\n  t['Grave'] = 0xF6CE;\n  t['Gravesmall'] = 0xF760;\n  t['Gsmall'] = 0xF767;\n  t['Gsmallhook'] = 0x029B;\n  t['Gstroke'] = 0x01E4;\n  t['H'] = 0x0048;\n  t['H18533'] = 0x25CF;\n  t['H18543'] = 0x25AA;\n  t['H18551'] = 0x25AB;\n  t['H22073'] = 0x25A1;\n  t['HPsquare'] = 0x33CB;\n  t['Haabkhasiancyrillic'] = 0x04A8;\n  t['Hadescendercyrillic'] = 0x04B2;\n  t['Hardsigncyrillic'] = 0x042A;\n  t['Hbar'] = 0x0126;\n  t['Hbrevebelow'] = 0x1E2A;\n  t['Hcedilla'] = 0x1E28;\n  t['Hcircle'] = 0x24BD;\n  t['Hcircumflex'] = 0x0124;\n  t['Hdieresis'] = 0x1E26;\n  t['Hdotaccent'] = 0x1E22;\n  t['Hdotbelow'] = 0x1E24;\n  t['Hmonospace'] = 0xFF28;\n  t['Hoarmenian'] = 0x0540;\n  t['Horicoptic'] = 0x03E8;\n  t['Hsmall'] = 0xF768;\n  t['Hungarumlaut'] = 0xF6CF;\n  t['Hungarumlautsmall'] = 0xF6F8;\n  t['Hzsquare'] = 0x3390;\n  t['I'] = 0x0049;\n  t['IAcyrillic'] = 0x042F;\n  t['IJ'] = 0x0132;\n  t['IUcyrillic'] = 0x042E;\n  t['Iacute'] = 0x00CD;\n  t['Iacutesmall'] = 0xF7ED;\n  t['Ibreve'] = 0x012C;\n  t['Icaron'] = 0x01CF;\n  t['Icircle'] = 0x24BE;\n  t['Icircumflex'] = 0x00CE;\n  t['Icircumflexsmall'] = 0xF7EE;\n  t['Icyrillic'] = 0x0406;\n  t['Idblgrave'] = 0x0208;\n  t['Idieresis'] = 0x00CF;\n  t['Idieresisacute'] = 0x1E2E;\n  t['Idieresiscyrillic'] = 0x04E4;\n  t['Idieresissmall'] = 0xF7EF;\n  t['Idot'] = 0x0130;\n  t['Idotaccent'] = 0x0130;\n  t['Idotbelow'] = 0x1ECA;\n  t['Iebrevecyrillic'] = 0x04D6;\n  t['Iecyrillic'] = 0x0415;\n  t['Ifraktur'] = 0x2111;\n  t['Igrave'] = 0x00CC;\n  t['Igravesmall'] = 0xF7EC;\n  t['Ihookabove'] = 0x1EC8;\n  t['Iicyrillic'] = 0x0418;\n  t['Iinvertedbreve'] = 0x020A;\n  t['Iishortcyrillic'] = 0x0419;\n  t['Imacron'] = 0x012A;\n  t['Imacroncyrillic'] = 0x04E2;\n  t['Imonospace'] = 0xFF29;\n  t['Iniarmenian'] = 0x053B;\n  t['Iocyrillic'] = 0x0401;\n  t['Iogonek'] = 0x012E;\n  t['Iota'] = 0x0399;\n  t['Iotaafrican'] = 0x0196;\n  t['Iotadieresis'] = 0x03AA;\n  t['Iotatonos'] = 0x038A;\n  t['Ismall'] = 0xF769;\n  t['Istroke'] = 0x0197;\n  t['Itilde'] = 0x0128;\n  t['Itildebelow'] = 0x1E2C;\n  t['Izhitsacyrillic'] = 0x0474;\n  t['Izhitsadblgravecyrillic'] = 0x0476;\n  t['J'] = 0x004A;\n  t['Jaarmenian'] = 0x0541;\n  t['Jcircle'] = 0x24BF;\n  t['Jcircumflex'] = 0x0134;\n  t['Jecyrillic'] = 0x0408;\n  t['Jheharmenian'] = 0x054B;\n  t['Jmonospace'] = 0xFF2A;\n  t['Jsmall'] = 0xF76A;\n  t['K'] = 0x004B;\n  t['KBsquare'] = 0x3385;\n  t['KKsquare'] = 0x33CD;\n  t['Kabashkircyrillic'] = 0x04A0;\n  t['Kacute'] = 0x1E30;\n  t['Kacyrillic'] = 0x041A;\n  t['Kadescendercyrillic'] = 0x049A;\n  t['Kahookcyrillic'] = 0x04C3;\n  t['Kappa'] = 0x039A;\n  t['Kastrokecyrillic'] = 0x049E;\n  t['Kaverticalstrokecyrillic'] = 0x049C;\n  t['Kcaron'] = 0x01E8;\n  t['Kcedilla'] = 0x0136;\n  t['Kcircle'] = 0x24C0;\n  t['Kcommaaccent'] = 0x0136;\n  t['Kdotbelow'] = 0x1E32;\n  t['Keharmenian'] = 0x0554;\n  t['Kenarmenian'] = 0x053F;\n  t['Khacyrillic'] = 0x0425;\n  t['Kheicoptic'] = 0x03E6;\n  t['Khook'] = 0x0198;\n  t['Kjecyrillic'] = 0x040C;\n  t['Klinebelow'] = 0x1E34;\n  t['Kmonospace'] = 0xFF2B;\n  t['Koppacyrillic'] = 0x0480;\n  t['Koppagreek'] = 0x03DE;\n  t['Ksicyrillic'] = 0x046E;\n  t['Ksmall'] = 0xF76B;\n  t['L'] = 0x004C;\n  t['LJ'] = 0x01C7;\n  t['LL'] = 0xF6BF;\n  t['Lacute'] = 0x0139;\n  t['Lambda'] = 0x039B;\n  t['Lcaron'] = 0x013D;\n  t['Lcedilla'] = 0x013B;\n  t['Lcircle'] = 0x24C1;\n  t['Lcircumflexbelow'] = 0x1E3C;\n  t['Lcommaaccent'] = 0x013B;\n  t['Ldot'] = 0x013F;\n  t['Ldotaccent'] = 0x013F;\n  t['Ldotbelow'] = 0x1E36;\n  t['Ldotbelowmacron'] = 0x1E38;\n  t['Liwnarmenian'] = 0x053C;\n  t['Lj'] = 0x01C8;\n  t['Ljecyrillic'] = 0x0409;\n  t['Llinebelow'] = 0x1E3A;\n  t['Lmonospace'] = 0xFF2C;\n  t['Lslash'] = 0x0141;\n  t['Lslashsmall'] = 0xF6F9;\n  t['Lsmall'] = 0xF76C;\n  t['M'] = 0x004D;\n  t['MBsquare'] = 0x3386;\n  t['Macron'] = 0xF6D0;\n  t['Macronsmall'] = 0xF7AF;\n  t['Macute'] = 0x1E3E;\n  t['Mcircle'] = 0x24C2;\n  t['Mdotaccent'] = 0x1E40;\n  t['Mdotbelow'] = 0x1E42;\n  t['Menarmenian'] = 0x0544;\n  t['Mmonospace'] = 0xFF2D;\n  t['Msmall'] = 0xF76D;\n  t['Mturned'] = 0x019C;\n  t['Mu'] = 0x039C;\n  t['N'] = 0x004E;\n  t['NJ'] = 0x01CA;\n  t['Nacute'] = 0x0143;\n  t['Ncaron'] = 0x0147;\n  t['Ncedilla'] = 0x0145;\n  t['Ncircle'] = 0x24C3;\n  t['Ncircumflexbelow'] = 0x1E4A;\n  t['Ncommaaccent'] = 0x0145;\n  t['Ndotaccent'] = 0x1E44;\n  t['Ndotbelow'] = 0x1E46;\n  t['Nhookleft'] = 0x019D;\n  t['Nineroman'] = 0x2168;\n  t['Nj'] = 0x01CB;\n  t['Njecyrillic'] = 0x040A;\n  t['Nlinebelow'] = 0x1E48;\n  t['Nmonospace'] = 0xFF2E;\n  t['Nowarmenian'] = 0x0546;\n  t['Nsmall'] = 0xF76E;\n  t['Ntilde'] = 0x00D1;\n  t['Ntildesmall'] = 0xF7F1;\n  t['Nu'] = 0x039D;\n  t['O'] = 0x004F;\n  t['OE'] = 0x0152;\n  t['OEsmall'] = 0xF6FA;\n  t['Oacute'] = 0x00D3;\n  t['Oacutesmall'] = 0xF7F3;\n  t['Obarredcyrillic'] = 0x04E8;\n  t['Obarreddieresiscyrillic'] = 0x04EA;\n  t['Obreve'] = 0x014E;\n  t['Ocaron'] = 0x01D1;\n  t['Ocenteredtilde'] = 0x019F;\n  t['Ocircle'] = 0x24C4;\n  t['Ocircumflex'] = 0x00D4;\n  t['Ocircumflexacute'] = 0x1ED0;\n  t['Ocircumflexdotbelow'] = 0x1ED8;\n  t['Ocircumflexgrave'] = 0x1ED2;\n  t['Ocircumflexhookabove'] = 0x1ED4;\n  t['Ocircumflexsmall'] = 0xF7F4;\n  t['Ocircumflextilde'] = 0x1ED6;\n  t['Ocyrillic'] = 0x041E;\n  t['Odblacute'] = 0x0150;\n  t['Odblgrave'] = 0x020C;\n  t['Odieresis'] = 0x00D6;\n  t['Odieresiscyrillic'] = 0x04E6;\n  t['Odieresissmall'] = 0xF7F6;\n  t['Odotbelow'] = 0x1ECC;\n  t['Ogoneksmall'] = 0xF6FB;\n  t['Ograve'] = 0x00D2;\n  t['Ogravesmall'] = 0xF7F2;\n  t['Oharmenian'] = 0x0555;\n  t['Ohm'] = 0x2126;\n  t['Ohookabove'] = 0x1ECE;\n  t['Ohorn'] = 0x01A0;\n  t['Ohornacute'] = 0x1EDA;\n  t['Ohorndotbelow'] = 0x1EE2;\n  t['Ohorngrave'] = 0x1EDC;\n  t['Ohornhookabove'] = 0x1EDE;\n  t['Ohorntilde'] = 0x1EE0;\n  t['Ohungarumlaut'] = 0x0150;\n  t['Oi'] = 0x01A2;\n  t['Oinvertedbreve'] = 0x020E;\n  t['Omacron'] = 0x014C;\n  t['Omacronacute'] = 0x1E52;\n  t['Omacrongrave'] = 0x1E50;\n  t['Omega'] = 0x2126;\n  t['Omegacyrillic'] = 0x0460;\n  t['Omegagreek'] = 0x03A9;\n  t['Omegaroundcyrillic'] = 0x047A;\n  t['Omegatitlocyrillic'] = 0x047C;\n  t['Omegatonos'] = 0x038F;\n  t['Omicron'] = 0x039F;\n  t['Omicrontonos'] = 0x038C;\n  t['Omonospace'] = 0xFF2F;\n  t['Oneroman'] = 0x2160;\n  t['Oogonek'] = 0x01EA;\n  t['Oogonekmacron'] = 0x01EC;\n  t['Oopen'] = 0x0186;\n  t['Oslash'] = 0x00D8;\n  t['Oslashacute'] = 0x01FE;\n  t['Oslashsmall'] = 0xF7F8;\n  t['Osmall'] = 0xF76F;\n  t['Ostrokeacute'] = 0x01FE;\n  t['Otcyrillic'] = 0x047E;\n  t['Otilde'] = 0x00D5;\n  t['Otildeacute'] = 0x1E4C;\n  t['Otildedieresis'] = 0x1E4E;\n  t['Otildesmall'] = 0xF7F5;\n  t['P'] = 0x0050;\n  t['Pacute'] = 0x1E54;\n  t['Pcircle'] = 0x24C5;\n  t['Pdotaccent'] = 0x1E56;\n  t['Pecyrillic'] = 0x041F;\n  t['Peharmenian'] = 0x054A;\n  t['Pemiddlehookcyrillic'] = 0x04A6;\n  t['Phi'] = 0x03A6;\n  t['Phook'] = 0x01A4;\n  t['Pi'] = 0x03A0;\n  t['Piwrarmenian'] = 0x0553;\n  t['Pmonospace'] = 0xFF30;\n  t['Psi'] = 0x03A8;\n  t['Psicyrillic'] = 0x0470;\n  t['Psmall'] = 0xF770;\n  t['Q'] = 0x0051;\n  t['Qcircle'] = 0x24C6;\n  t['Qmonospace'] = 0xFF31;\n  t['Qsmall'] = 0xF771;\n  t['R'] = 0x0052;\n  t['Raarmenian'] = 0x054C;\n  t['Racute'] = 0x0154;\n  t['Rcaron'] = 0x0158;\n  t['Rcedilla'] = 0x0156;\n  t['Rcircle'] = 0x24C7;\n  t['Rcommaaccent'] = 0x0156;\n  t['Rdblgrave'] = 0x0210;\n  t['Rdotaccent'] = 0x1E58;\n  t['Rdotbelow'] = 0x1E5A;\n  t['Rdotbelowmacron'] = 0x1E5C;\n  t['Reharmenian'] = 0x0550;\n  t['Rfraktur'] = 0x211C;\n  t['Rho'] = 0x03A1;\n  t['Ringsmall'] = 0xF6FC;\n  t['Rinvertedbreve'] = 0x0212;\n  t['Rlinebelow'] = 0x1E5E;\n  t['Rmonospace'] = 0xFF32;\n  t['Rsmall'] = 0xF772;\n  t['Rsmallinverted'] = 0x0281;\n  t['Rsmallinvertedsuperior'] = 0x02B6;\n  t['S'] = 0x0053;\n  t['SF010000'] = 0x250C;\n  t['SF020000'] = 0x2514;\n  t['SF030000'] = 0x2510;\n  t['SF040000'] = 0x2518;\n  t['SF050000'] = 0x253C;\n  t['SF060000'] = 0x252C;\n  t['SF070000'] = 0x2534;\n  t['SF080000'] = 0x251C;\n  t['SF090000'] = 0x2524;\n  t['SF100000'] = 0x2500;\n  t['SF110000'] = 0x2502;\n  t['SF190000'] = 0x2561;\n  t['SF200000'] = 0x2562;\n  t['SF210000'] = 0x2556;\n  t['SF220000'] = 0x2555;\n  t['SF230000'] = 0x2563;\n  t['SF240000'] = 0x2551;\n  t['SF250000'] = 0x2557;\n  t['SF260000'] = 0x255D;\n  t['SF270000'] = 0x255C;\n  t['SF280000'] = 0x255B;\n  t['SF360000'] = 0x255E;\n  t['SF370000'] = 0x255F;\n  t['SF380000'] = 0x255A;\n  t['SF390000'] = 0x2554;\n  t['SF400000'] = 0x2569;\n  t['SF410000'] = 0x2566;\n  t['SF420000'] = 0x2560;\n  t['SF430000'] = 0x2550;\n  t['SF440000'] = 0x256C;\n  t['SF450000'] = 0x2567;\n  t['SF460000'] = 0x2568;\n  t['SF470000'] = 0x2564;\n  t['SF480000'] = 0x2565;\n  t['SF490000'] = 0x2559;\n  t['SF500000'] = 0x2558;\n  t['SF510000'] = 0x2552;\n  t['SF520000'] = 0x2553;\n  t['SF530000'] = 0x256B;\n  t['SF540000'] = 0x256A;\n  t['Sacute'] = 0x015A;\n  t['Sacutedotaccent'] = 0x1E64;\n  t['Sampigreek'] = 0x03E0;\n  t['Scaron'] = 0x0160;\n  t['Scarondotaccent'] = 0x1E66;\n  t['Scaronsmall'] = 0xF6FD;\n  t['Scedilla'] = 0x015E;\n  t['Schwa'] = 0x018F;\n  t['Schwacyrillic'] = 0x04D8;\n  t['Schwadieresiscyrillic'] = 0x04DA;\n  t['Scircle'] = 0x24C8;\n  t['Scircumflex'] = 0x015C;\n  t['Scommaaccent'] = 0x0218;\n  t['Sdotaccent'] = 0x1E60;\n  t['Sdotbelow'] = 0x1E62;\n  t['Sdotbelowdotaccent'] = 0x1E68;\n  t['Seharmenian'] = 0x054D;\n  t['Sevenroman'] = 0x2166;\n  t['Shaarmenian'] = 0x0547;\n  t['Shacyrillic'] = 0x0428;\n  t['Shchacyrillic'] = 0x0429;\n  t['Sheicoptic'] = 0x03E2;\n  t['Shhacyrillic'] = 0x04BA;\n  t['Shimacoptic'] = 0x03EC;\n  t['Sigma'] = 0x03A3;\n  t['Sixroman'] = 0x2165;\n  t['Smonospace'] = 0xFF33;\n  t['Softsigncyrillic'] = 0x042C;\n  t['Ssmall'] = 0xF773;\n  t['Stigmagreek'] = 0x03DA;\n  t['T'] = 0x0054;\n  t['Tau'] = 0x03A4;\n  t['Tbar'] = 0x0166;\n  t['Tcaron'] = 0x0164;\n  t['Tcedilla'] = 0x0162;\n  t['Tcircle'] = 0x24C9;\n  t['Tcircumflexbelow'] = 0x1E70;\n  t['Tcommaaccent'] = 0x0162;\n  t['Tdotaccent'] = 0x1E6A;\n  t['Tdotbelow'] = 0x1E6C;\n  t['Tecyrillic'] = 0x0422;\n  t['Tedescendercyrillic'] = 0x04AC;\n  t['Tenroman'] = 0x2169;\n  t['Tetsecyrillic'] = 0x04B4;\n  t['Theta'] = 0x0398;\n  t['Thook'] = 0x01AC;\n  t['Thorn'] = 0x00DE;\n  t['Thornsmall'] = 0xF7FE;\n  t['Threeroman'] = 0x2162;\n  t['Tildesmall'] = 0xF6FE;\n  t['Tiwnarmenian'] = 0x054F;\n  t['Tlinebelow'] = 0x1E6E;\n  t['Tmonospace'] = 0xFF34;\n  t['Toarmenian'] = 0x0539;\n  t['Tonefive'] = 0x01BC;\n  t['Tonesix'] = 0x0184;\n  t['Tonetwo'] = 0x01A7;\n  t['Tretroflexhook'] = 0x01AE;\n  t['Tsecyrillic'] = 0x0426;\n  t['Tshecyrillic'] = 0x040B;\n  t['Tsmall'] = 0xF774;\n  t['Twelveroman'] = 0x216B;\n  t['Tworoman'] = 0x2161;\n  t['U'] = 0x0055;\n  t['Uacute'] = 0x00DA;\n  t['Uacutesmall'] = 0xF7FA;\n  t['Ubreve'] = 0x016C;\n  t['Ucaron'] = 0x01D3;\n  t['Ucircle'] = 0x24CA;\n  t['Ucircumflex'] = 0x00DB;\n  t['Ucircumflexbelow'] = 0x1E76;\n  t['Ucircumflexsmall'] = 0xF7FB;\n  t['Ucyrillic'] = 0x0423;\n  t['Udblacute'] = 0x0170;\n  t['Udblgrave'] = 0x0214;\n  t['Udieresis'] = 0x00DC;\n  t['Udieresisacute'] = 0x01D7;\n  t['Udieresisbelow'] = 0x1E72;\n  t['Udieresiscaron'] = 0x01D9;\n  t['Udieresiscyrillic'] = 0x04F0;\n  t['Udieresisgrave'] = 0x01DB;\n  t['Udieresismacron'] = 0x01D5;\n  t['Udieresissmall'] = 0xF7FC;\n  t['Udotbelow'] = 0x1EE4;\n  t['Ugrave'] = 0x00D9;\n  t['Ugravesmall'] = 0xF7F9;\n  t['Uhookabove'] = 0x1EE6;\n  t['Uhorn'] = 0x01AF;\n  t['Uhornacute'] = 0x1EE8;\n  t['Uhorndotbelow'] = 0x1EF0;\n  t['Uhorngrave'] = 0x1EEA;\n  t['Uhornhookabove'] = 0x1EEC;\n  t['Uhorntilde'] = 0x1EEE;\n  t['Uhungarumlaut'] = 0x0170;\n  t['Uhungarumlautcyrillic'] = 0x04F2;\n  t['Uinvertedbreve'] = 0x0216;\n  t['Ukcyrillic'] = 0x0478;\n  t['Umacron'] = 0x016A;\n  t['Umacroncyrillic'] = 0x04EE;\n  t['Umacrondieresis'] = 0x1E7A;\n  t['Umonospace'] = 0xFF35;\n  t['Uogonek'] = 0x0172;\n  t['Upsilon'] = 0x03A5;\n  t['Upsilon1'] = 0x03D2;\n  t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n  t['Upsilonafrican'] = 0x01B1;\n  t['Upsilondieresis'] = 0x03AB;\n  t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n  t['Upsilonhooksymbol'] = 0x03D2;\n  t['Upsilontonos'] = 0x038E;\n  t['Uring'] = 0x016E;\n  t['Ushortcyrillic'] = 0x040E;\n  t['Usmall'] = 0xF775;\n  t['Ustraightcyrillic'] = 0x04AE;\n  t['Ustraightstrokecyrillic'] = 0x04B0;\n  t['Utilde'] = 0x0168;\n  t['Utildeacute'] = 0x1E78;\n  t['Utildebelow'] = 0x1E74;\n  t['V'] = 0x0056;\n  t['Vcircle'] = 0x24CB;\n  t['Vdotbelow'] = 0x1E7E;\n  t['Vecyrillic'] = 0x0412;\n  t['Vewarmenian'] = 0x054E;\n  t['Vhook'] = 0x01B2;\n  t['Vmonospace'] = 0xFF36;\n  t['Voarmenian'] = 0x0548;\n  t['Vsmall'] = 0xF776;\n  t['Vtilde'] = 0x1E7C;\n  t['W'] = 0x0057;\n  t['Wacute'] = 0x1E82;\n  t['Wcircle'] = 0x24CC;\n  t['Wcircumflex'] = 0x0174;\n  t['Wdieresis'] = 0x1E84;\n  t['Wdotaccent'] = 0x1E86;\n  t['Wdotbelow'] = 0x1E88;\n  t['Wgrave'] = 0x1E80;\n  t['Wmonospace'] = 0xFF37;\n  t['Wsmall'] = 0xF777;\n  t['X'] = 0x0058;\n  t['Xcircle'] = 0x24CD;\n  t['Xdieresis'] = 0x1E8C;\n  t['Xdotaccent'] = 0x1E8A;\n  t['Xeharmenian'] = 0x053D;\n  t['Xi'] = 0x039E;\n  t['Xmonospace'] = 0xFF38;\n  t['Xsmall'] = 0xF778;\n  t['Y'] = 0x0059;\n  t['Yacute'] = 0x00DD;\n  t['Yacutesmall'] = 0xF7FD;\n  t['Yatcyrillic'] = 0x0462;\n  t['Ycircle'] = 0x24CE;\n  t['Ycircumflex'] = 0x0176;\n  t['Ydieresis'] = 0x0178;\n  t['Ydieresissmall'] = 0xF7FF;\n  t['Ydotaccent'] = 0x1E8E;\n  t['Ydotbelow'] = 0x1EF4;\n  t['Yericyrillic'] = 0x042B;\n  t['Yerudieresiscyrillic'] = 0x04F8;\n  t['Ygrave'] = 0x1EF2;\n  t['Yhook'] = 0x01B3;\n  t['Yhookabove'] = 0x1EF6;\n  t['Yiarmenian'] = 0x0545;\n  t['Yicyrillic'] = 0x0407;\n  t['Yiwnarmenian'] = 0x0552;\n  t['Ymonospace'] = 0xFF39;\n  t['Ysmall'] = 0xF779;\n  t['Ytilde'] = 0x1EF8;\n  t['Yusbigcyrillic'] = 0x046A;\n  t['Yusbigiotifiedcyrillic'] = 0x046C;\n  t['Yuslittlecyrillic'] = 0x0466;\n  t['Yuslittleiotifiedcyrillic'] = 0x0468;\n  t['Z'] = 0x005A;\n  t['Zaarmenian'] = 0x0536;\n  t['Zacute'] = 0x0179;\n  t['Zcaron'] = 0x017D;\n  t['Zcaronsmall'] = 0xF6FF;\n  t['Zcircle'] = 0x24CF;\n  t['Zcircumflex'] = 0x1E90;\n  t['Zdot'] = 0x017B;\n  t['Zdotaccent'] = 0x017B;\n  t['Zdotbelow'] = 0x1E92;\n  t['Zecyrillic'] = 0x0417;\n  t['Zedescendercyrillic'] = 0x0498;\n  t['Zedieresiscyrillic'] = 0x04DE;\n  t['Zeta'] = 0x0396;\n  t['Zhearmenian'] = 0x053A;\n  t['Zhebrevecyrillic'] = 0x04C1;\n  t['Zhecyrillic'] = 0x0416;\n  t['Zhedescendercyrillic'] = 0x0496;\n  t['Zhedieresiscyrillic'] = 0x04DC;\n  t['Zlinebelow'] = 0x1E94;\n  t['Zmonospace'] = 0xFF3A;\n  t['Zsmall'] = 0xF77A;\n  t['Zstroke'] = 0x01B5;\n  t['a'] = 0x0061;\n  t['aabengali'] = 0x0986;\n  t['aacute'] = 0x00E1;\n  t['aadeva'] = 0x0906;\n  t['aagujarati'] = 0x0A86;\n  t['aagurmukhi'] = 0x0A06;\n  t['aamatragurmukhi'] = 0x0A3E;\n  t['aarusquare'] = 0x3303;\n  t['aavowelsignbengali'] = 0x09BE;\n  t['aavowelsigndeva'] = 0x093E;\n  t['aavowelsigngujarati'] = 0x0ABE;\n  t['abbreviationmarkarmenian'] = 0x055F;\n  t['abbreviationsigndeva'] = 0x0970;\n  t['abengali'] = 0x0985;\n  t['abopomofo'] = 0x311A;\n  t['abreve'] = 0x0103;\n  t['abreveacute'] = 0x1EAF;\n  t['abrevecyrillic'] = 0x04D1;\n  t['abrevedotbelow'] = 0x1EB7;\n  t['abrevegrave'] = 0x1EB1;\n  t['abrevehookabove'] = 0x1EB3;\n  t['abrevetilde'] = 0x1EB5;\n  t['acaron'] = 0x01CE;\n  t['acircle'] = 0x24D0;\n  t['acircumflex'] = 0x00E2;\n  t['acircumflexacute'] = 0x1EA5;\n  t['acircumflexdotbelow'] = 0x1EAD;\n  t['acircumflexgrave'] = 0x1EA7;\n  t['acircumflexhookabove'] = 0x1EA9;\n  t['acircumflextilde'] = 0x1EAB;\n  t['acute'] = 0x00B4;\n  t['acutebelowcmb'] = 0x0317;\n  t['acutecmb'] = 0x0301;\n  t['acutecomb'] = 0x0301;\n  t['acutedeva'] = 0x0954;\n  t['acutelowmod'] = 0x02CF;\n  t['acutetonecmb'] = 0x0341;\n  t['acyrillic'] = 0x0430;\n  t['adblgrave'] = 0x0201;\n  t['addakgurmukhi'] = 0x0A71;\n  t['adeva'] = 0x0905;\n  t['adieresis'] = 0x00E4;\n  t['adieresiscyrillic'] = 0x04D3;\n  t['adieresismacron'] = 0x01DF;\n  t['adotbelow'] = 0x1EA1;\n  t['adotmacron'] = 0x01E1;\n  t['ae'] = 0x00E6;\n  t['aeacute'] = 0x01FD;\n  t['aekorean'] = 0x3150;\n  t['aemacron'] = 0x01E3;\n  t['afii00208'] = 0x2015;\n  t['afii08941'] = 0x20A4;\n  t['afii10017'] = 0x0410;\n  t['afii10018'] = 0x0411;\n  t['afii10019'] = 0x0412;\n  t['afii10020'] = 0x0413;\n  t['afii10021'] = 0x0414;\n  t['afii10022'] = 0x0415;\n  t['afii10023'] = 0x0401;\n  t['afii10024'] = 0x0416;\n  t['afii10025'] = 0x0417;\n  t['afii10026'] = 0x0418;\n  t['afii10027'] = 0x0419;\n  t['afii10028'] = 0x041A;\n  t['afii10029'] = 0x041B;\n  t['afii10030'] = 0x041C;\n  t['afii10031'] = 0x041D;\n  t['afii10032'] = 0x041E;\n  t['afii10033'] = 0x041F;\n  t['afii10034'] = 0x0420;\n  t['afii10035'] = 0x0421;\n  t['afii10036'] = 0x0422;\n  t['afii10037'] = 0x0423;\n  t['afii10038'] = 0x0424;\n  t['afii10039'] = 0x0425;\n  t['afii10040'] = 0x0426;\n  t['afii10041'] = 0x0427;\n  t['afii10042'] = 0x0428;\n  t['afii10043'] = 0x0429;\n  t['afii10044'] = 0x042A;\n  t['afii10045'] = 0x042B;\n  t['afii10046'] = 0x042C;\n  t['afii10047'] = 0x042D;\n  t['afii10048'] = 0x042E;\n  t['afii10049'] = 0x042F;\n  t['afii10050'] = 0x0490;\n  t['afii10051'] = 0x0402;\n  t['afii10052'] = 0x0403;\n  t['afii10053'] = 0x0404;\n  t['afii10054'] = 0x0405;\n  t['afii10055'] = 0x0406;\n  t['afii10056'] = 0x0407;\n  t['afii10057'] = 0x0408;\n  t['afii10058'] = 0x0409;\n  t['afii10059'] = 0x040A;\n  t['afii10060'] = 0x040B;\n  t['afii10061'] = 0x040C;\n  t['afii10062'] = 0x040E;\n  t['afii10063'] = 0xF6C4;\n  t['afii10064'] = 0xF6C5;\n  t['afii10065'] = 0x0430;\n  t['afii10066'] = 0x0431;\n  t['afii10067'] = 0x0432;\n  t['afii10068'] = 0x0433;\n  t['afii10069'] = 0x0434;\n  t['afii10070'] = 0x0435;\n  t['afii10071'] = 0x0451;\n  t['afii10072'] = 0x0436;\n  t['afii10073'] = 0x0437;\n  t['afii10074'] = 0x0438;\n  t['afii10075'] = 0x0439;\n  t['afii10076'] = 0x043A;\n  t['afii10077'] = 0x043B;\n  t['afii10078'] = 0x043C;\n  t['afii10079'] = 0x043D;\n  t['afii10080'] = 0x043E;\n  t['afii10081'] = 0x043F;\n  t['afii10082'] = 0x0440;\n  t['afii10083'] = 0x0441;\n  t['afii10084'] = 0x0442;\n  t['afii10085'] = 0x0443;\n  t['afii10086'] = 0x0444;\n  t['afii10087'] = 0x0445;\n  t['afii10088'] = 0x0446;\n  t['afii10089'] = 0x0447;\n  t['afii10090'] = 0x0448;\n  t['afii10091'] = 0x0449;\n  t['afii10092'] = 0x044A;\n  t['afii10093'] = 0x044B;\n  t['afii10094'] = 0x044C;\n  t['afii10095'] = 0x044D;\n  t['afii10096'] = 0x044E;\n  t['afii10097'] = 0x044F;\n  t['afii10098'] = 0x0491;\n  t['afii10099'] = 0x0452;\n  t['afii10100'] = 0x0453;\n  t['afii10101'] = 0x0454;\n  t['afii10102'] = 0x0455;\n  t['afii10103'] = 0x0456;\n  t['afii10104'] = 0x0457;\n  t['afii10105'] = 0x0458;\n  t['afii10106'] = 0x0459;\n  t['afii10107'] = 0x045A;\n  t['afii10108'] = 0x045B;\n  t['afii10109'] = 0x045C;\n  t['afii10110'] = 0x045E;\n  t['afii10145'] = 0x040F;\n  t['afii10146'] = 0x0462;\n  t['afii10147'] = 0x0472;\n  t['afii10148'] = 0x0474;\n  t['afii10192'] = 0xF6C6;\n  t['afii10193'] = 0x045F;\n  t['afii10194'] = 0x0463;\n  t['afii10195'] = 0x0473;\n  t['afii10196'] = 0x0475;\n  t['afii10831'] = 0xF6C7;\n  t['afii10832'] = 0xF6C8;\n  t['afii10846'] = 0x04D9;\n  t['afii299'] = 0x200E;\n  t['afii300'] = 0x200F;\n  t['afii301'] = 0x200D;\n  t['afii57381'] = 0x066A;\n  t['afii57388'] = 0x060C;\n  t['afii57392'] = 0x0660;\n  t['afii57393'] = 0x0661;\n  t['afii57394'] = 0x0662;\n  t['afii57395'] = 0x0663;\n  t['afii57396'] = 0x0664;\n  t['afii57397'] = 0x0665;\n  t['afii57398'] = 0x0666;\n  t['afii57399'] = 0x0667;\n  t['afii57400'] = 0x0668;\n  t['afii57401'] = 0x0669;\n  t['afii57403'] = 0x061B;\n  t['afii57407'] = 0x061F;\n  t['afii57409'] = 0x0621;\n  t['afii57410'] = 0x0622;\n  t['afii57411'] = 0x0623;\n  t['afii57412'] = 0x0624;\n  t['afii57413'] = 0x0625;\n  t['afii57414'] = 0x0626;\n  t['afii57415'] = 0x0627;\n  t['afii57416'] = 0x0628;\n  t['afii57417'] = 0x0629;\n  t['afii57418'] = 0x062A;\n  t['afii57419'] = 0x062B;\n  t['afii57420'] = 0x062C;\n  t['afii57421'] = 0x062D;\n  t['afii57422'] = 0x062E;\n  t['afii57423'] = 0x062F;\n  t['afii57424'] = 0x0630;\n  t['afii57425'] = 0x0631;\n  t['afii57426'] = 0x0632;\n  t['afii57427'] = 0x0633;\n  t['afii57428'] = 0x0634;\n  t['afii57429'] = 0x0635;\n  t['afii57430'] = 0x0636;\n  t['afii57431'] = 0x0637;\n  t['afii57432'] = 0x0638;\n  t['afii57433'] = 0x0639;\n  t['afii57434'] = 0x063A;\n  t['afii57440'] = 0x0640;\n  t['afii57441'] = 0x0641;\n  t['afii57442'] = 0x0642;\n  t['afii57443'] = 0x0643;\n  t['afii57444'] = 0x0644;\n  t['afii57445'] = 0x0645;\n  t['afii57446'] = 0x0646;\n  t['afii57448'] = 0x0648;\n  t['afii57449'] = 0x0649;\n  t['afii57450'] = 0x064A;\n  t['afii57451'] = 0x064B;\n  t['afii57452'] = 0x064C;\n  t['afii57453'] = 0x064D;\n  t['afii57454'] = 0x064E;\n  t['afii57455'] = 0x064F;\n  t['afii57456'] = 0x0650;\n  t['afii57457'] = 0x0651;\n  t['afii57458'] = 0x0652;\n  t['afii57470'] = 0x0647;\n  t['afii57505'] = 0x06A4;\n  t['afii57506'] = 0x067E;\n  t['afii57507'] = 0x0686;\n  t['afii57508'] = 0x0698;\n  t['afii57509'] = 0x06AF;\n  t['afii57511'] = 0x0679;\n  t['afii57512'] = 0x0688;\n  t['afii57513'] = 0x0691;\n  t['afii57514'] = 0x06BA;\n  t['afii57519'] = 0x06D2;\n  t['afii57534'] = 0x06D5;\n  t['afii57636'] = 0x20AA;\n  t['afii57645'] = 0x05BE;\n  t['afii57658'] = 0x05C3;\n  t['afii57664'] = 0x05D0;\n  t['afii57665'] = 0x05D1;\n  t['afii57666'] = 0x05D2;\n  t['afii57667'] = 0x05D3;\n  t['afii57668'] = 0x05D4;\n  t['afii57669'] = 0x05D5;\n  t['afii57670'] = 0x05D6;\n  t['afii57671'] = 0x05D7;\n  t['afii57672'] = 0x05D8;\n  t['afii57673'] = 0x05D9;\n  t['afii57674'] = 0x05DA;\n  t['afii57675'] = 0x05DB;\n  t['afii57676'] = 0x05DC;\n  t['afii57677'] = 0x05DD;\n  t['afii57678'] = 0x05DE;\n  t['afii57679'] = 0x05DF;\n  t['afii57680'] = 0x05E0;\n  t['afii57681'] = 0x05E1;\n  t['afii57682'] = 0x05E2;\n  t['afii57683'] = 0x05E3;\n  t['afii57684'] = 0x05E4;\n  t['afii57685'] = 0x05E5;\n  t['afii57686'] = 0x05E6;\n  t['afii57687'] = 0x05E7;\n  t['afii57688'] = 0x05E8;\n  t['afii57689'] = 0x05E9;\n  t['afii57690'] = 0x05EA;\n  t['afii57694'] = 0xFB2A;\n  t['afii57695'] = 0xFB2B;\n  t['afii57700'] = 0xFB4B;\n  t['afii57705'] = 0xFB1F;\n  t['afii57716'] = 0x05F0;\n  t['afii57717'] = 0x05F1;\n  t['afii57718'] = 0x05F2;\n  t['afii57723'] = 0xFB35;\n  t['afii57793'] = 0x05B4;\n  t['afii57794'] = 0x05B5;\n  t['afii57795'] = 0x05B6;\n  t['afii57796'] = 0x05BB;\n  t['afii57797'] = 0x05B8;\n  t['afii57798'] = 0x05B7;\n  t['afii57799'] = 0x05B0;\n  t['afii57800'] = 0x05B2;\n  t['afii57801'] = 0x05B1;\n  t['afii57802'] = 0x05B3;\n  t['afii57803'] = 0x05C2;\n  t['afii57804'] = 0x05C1;\n  t['afii57806'] = 0x05B9;\n  t['afii57807'] = 0x05BC;\n  t['afii57839'] = 0x05BD;\n  t['afii57841'] = 0x05BF;\n  t['afii57842'] = 0x05C0;\n  t['afii57929'] = 0x02BC;\n  t['afii61248'] = 0x2105;\n  t['afii61289'] = 0x2113;\n  t['afii61352'] = 0x2116;\n  t['afii61573'] = 0x202C;\n  t['afii61574'] = 0x202D;\n  t['afii61575'] = 0x202E;\n  t['afii61664'] = 0x200C;\n  t['afii63167'] = 0x066D;\n  t['afii64937'] = 0x02BD;\n  t['agrave'] = 0x00E0;\n  t['agujarati'] = 0x0A85;\n  t['agurmukhi'] = 0x0A05;\n  t['ahiragana'] = 0x3042;\n  t['ahookabove'] = 0x1EA3;\n  t['aibengali'] = 0x0990;\n  t['aibopomofo'] = 0x311E;\n  t['aideva'] = 0x0910;\n  t['aiecyrillic'] = 0x04D5;\n  t['aigujarati'] = 0x0A90;\n  t['aigurmukhi'] = 0x0A10;\n  t['aimatragurmukhi'] = 0x0A48;\n  t['ainarabic'] = 0x0639;\n  t['ainfinalarabic'] = 0xFECA;\n  t['aininitialarabic'] = 0xFECB;\n  t['ainmedialarabic'] = 0xFECC;\n  t['ainvertedbreve'] = 0x0203;\n  t['aivowelsignbengali'] = 0x09C8;\n  t['aivowelsigndeva'] = 0x0948;\n  t['aivowelsigngujarati'] = 0x0AC8;\n  t['akatakana'] = 0x30A2;\n  t['akatakanahalfwidth'] = 0xFF71;\n  t['akorean'] = 0x314F;\n  t['alef'] = 0x05D0;\n  t['alefarabic'] = 0x0627;\n  t['alefdageshhebrew'] = 0xFB30;\n  t['aleffinalarabic'] = 0xFE8E;\n  t['alefhamzaabovearabic'] = 0x0623;\n  t['alefhamzaabovefinalarabic'] = 0xFE84;\n  t['alefhamzabelowarabic'] = 0x0625;\n  t['alefhamzabelowfinalarabic'] = 0xFE88;\n  t['alefhebrew'] = 0x05D0;\n  t['aleflamedhebrew'] = 0xFB4F;\n  t['alefmaddaabovearabic'] = 0x0622;\n  t['alefmaddaabovefinalarabic'] = 0xFE82;\n  t['alefmaksuraarabic'] = 0x0649;\n  t['alefmaksurafinalarabic'] = 0xFEF0;\n  t['alefmaksurainitialarabic'] = 0xFEF3;\n  t['alefmaksuramedialarabic'] = 0xFEF4;\n  t['alefpatahhebrew'] = 0xFB2E;\n  t['alefqamatshebrew'] = 0xFB2F;\n  t['aleph'] = 0x2135;\n  t['allequal'] = 0x224C;\n  t['alpha'] = 0x03B1;\n  t['alphatonos'] = 0x03AC;\n  t['amacron'] = 0x0101;\n  t['amonospace'] = 0xFF41;\n  t['ampersand'] = 0x0026;\n  t['ampersandmonospace'] = 0xFF06;\n  t['ampersandsmall'] = 0xF726;\n  t['amsquare'] = 0x33C2;\n  t['anbopomofo'] = 0x3122;\n  t['angbopomofo'] = 0x3124;\n  t['angbracketleft'] = 0x3008;\n  t['angbracketright'] = 0x3009;\n  t['angkhankhuthai'] = 0x0E5A;\n  t['angle'] = 0x2220;\n  t['anglebracketleft'] = 0x3008;\n  t['anglebracketleftvertical'] = 0xFE3F;\n  t['anglebracketright'] = 0x3009;\n  t['anglebracketrightvertical'] = 0xFE40;\n  t['angleleft'] = 0x2329;\n  t['angleright'] = 0x232A;\n  t['angstrom'] = 0x212B;\n  t['anoteleia'] = 0x0387;\n  t['anudattadeva'] = 0x0952;\n  t['anusvarabengali'] = 0x0982;\n  t['anusvaradeva'] = 0x0902;\n  t['anusvaragujarati'] = 0x0A82;\n  t['aogonek'] = 0x0105;\n  t['apaatosquare'] = 0x3300;\n  t['aparen'] = 0x249C;\n  t['apostrophearmenian'] = 0x055A;\n  t['apostrophemod'] = 0x02BC;\n  t['apple'] = 0xF8FF;\n  t['approaches'] = 0x2250;\n  t['approxequal'] = 0x2248;\n  t['approxequalorimage'] = 0x2252;\n  t['approximatelyequal'] = 0x2245;\n  t['araeaekorean'] = 0x318E;\n  t['araeakorean'] = 0x318D;\n  t['arc'] = 0x2312;\n  t['arighthalfring'] = 0x1E9A;\n  t['aring'] = 0x00E5;\n  t['aringacute'] = 0x01FB;\n  t['aringbelow'] = 0x1E01;\n  t['arrowboth'] = 0x2194;\n  t['arrowdashdown'] = 0x21E3;\n  t['arrowdashleft'] = 0x21E0;\n  t['arrowdashright'] = 0x21E2;\n  t['arrowdashup'] = 0x21E1;\n  t['arrowdblboth'] = 0x21D4;\n  t['arrowdbldown'] = 0x21D3;\n  t['arrowdblleft'] = 0x21D0;\n  t['arrowdblright'] = 0x21D2;\n  t['arrowdblup'] = 0x21D1;\n  t['arrowdown'] = 0x2193;\n  t['arrowdownleft'] = 0x2199;\n  t['arrowdownright'] = 0x2198;\n  t['arrowdownwhite'] = 0x21E9;\n  t['arrowheaddownmod'] = 0x02C5;\n  t['arrowheadleftmod'] = 0x02C2;\n  t['arrowheadrightmod'] = 0x02C3;\n  t['arrowheadupmod'] = 0x02C4;\n  t['arrowhorizex'] = 0xF8E7;\n  t['arrowleft'] = 0x2190;\n  t['arrowleftdbl'] = 0x21D0;\n  t['arrowleftdblstroke'] = 0x21CD;\n  t['arrowleftoverright'] = 0x21C6;\n  t['arrowleftwhite'] = 0x21E6;\n  t['arrowright'] = 0x2192;\n  t['arrowrightdblstroke'] = 0x21CF;\n  t['arrowrightheavy'] = 0x279E;\n  t['arrowrightoverleft'] = 0x21C4;\n  t['arrowrightwhite'] = 0x21E8;\n  t['arrowtableft'] = 0x21E4;\n  t['arrowtabright'] = 0x21E5;\n  t['arrowup'] = 0x2191;\n  t['arrowupdn'] = 0x2195;\n  t['arrowupdnbse'] = 0x21A8;\n  t['arrowupdownbase'] = 0x21A8;\n  t['arrowupleft'] = 0x2196;\n  t['arrowupleftofdown'] = 0x21C5;\n  t['arrowupright'] = 0x2197;\n  t['arrowupwhite'] = 0x21E7;\n  t['arrowvertex'] = 0xF8E6;\n  t['asciicircum'] = 0x005E;\n  t['asciicircummonospace'] = 0xFF3E;\n  t['asciitilde'] = 0x007E;\n  t['asciitildemonospace'] = 0xFF5E;\n  t['ascript'] = 0x0251;\n  t['ascriptturned'] = 0x0252;\n  t['asmallhiragana'] = 0x3041;\n  t['asmallkatakana'] = 0x30A1;\n  t['asmallkatakanahalfwidth'] = 0xFF67;\n  t['asterisk'] = 0x002A;\n  t['asteriskaltonearabic'] = 0x066D;\n  t['asteriskarabic'] = 0x066D;\n  t['asteriskmath'] = 0x2217;\n  t['asteriskmonospace'] = 0xFF0A;\n  t['asterisksmall'] = 0xFE61;\n  t['asterism'] = 0x2042;\n  t['asuperior'] = 0xF6E9;\n  t['asymptoticallyequal'] = 0x2243;\n  t['at'] = 0x0040;\n  t['atilde'] = 0x00E3;\n  t['atmonospace'] = 0xFF20;\n  t['atsmall'] = 0xFE6B;\n  t['aturned'] = 0x0250;\n  t['aubengali'] = 0x0994;\n  t['aubopomofo'] = 0x3120;\n  t['audeva'] = 0x0914;\n  t['augujarati'] = 0x0A94;\n  t['augurmukhi'] = 0x0A14;\n  t['aulengthmarkbengali'] = 0x09D7;\n  t['aumatragurmukhi'] = 0x0A4C;\n  t['auvowelsignbengali'] = 0x09CC;\n  t['auvowelsigndeva'] = 0x094C;\n  t['auvowelsigngujarati'] = 0x0ACC;\n  t['avagrahadeva'] = 0x093D;\n  t['aybarmenian'] = 0x0561;\n  t['ayin'] = 0x05E2;\n  t['ayinaltonehebrew'] = 0xFB20;\n  t['ayinhebrew'] = 0x05E2;\n  t['b'] = 0x0062;\n  t['babengali'] = 0x09AC;\n  t['backslash'] = 0x005C;\n  t['backslashmonospace'] = 0xFF3C;\n  t['badeva'] = 0x092C;\n  t['bagujarati'] = 0x0AAC;\n  t['bagurmukhi'] = 0x0A2C;\n  t['bahiragana'] = 0x3070;\n  t['bahtthai'] = 0x0E3F;\n  t['bakatakana'] = 0x30D0;\n  t['bar'] = 0x007C;\n  t['barmonospace'] = 0xFF5C;\n  t['bbopomofo'] = 0x3105;\n  t['bcircle'] = 0x24D1;\n  t['bdotaccent'] = 0x1E03;\n  t['bdotbelow'] = 0x1E05;\n  t['beamedsixteenthnotes'] = 0x266C;\n  t['because'] = 0x2235;\n  t['becyrillic'] = 0x0431;\n  t['beharabic'] = 0x0628;\n  t['behfinalarabic'] = 0xFE90;\n  t['behinitialarabic'] = 0xFE91;\n  t['behiragana'] = 0x3079;\n  t['behmedialarabic'] = 0xFE92;\n  t['behmeeminitialarabic'] = 0xFC9F;\n  t['behmeemisolatedarabic'] = 0xFC08;\n  t['behnoonfinalarabic'] = 0xFC6D;\n  t['bekatakana'] = 0x30D9;\n  t['benarmenian'] = 0x0562;\n  t['bet'] = 0x05D1;\n  t['beta'] = 0x03B2;\n  t['betasymbolgreek'] = 0x03D0;\n  t['betdagesh'] = 0xFB31;\n  t['betdageshhebrew'] = 0xFB31;\n  t['bethebrew'] = 0x05D1;\n  t['betrafehebrew'] = 0xFB4C;\n  t['bhabengali'] = 0x09AD;\n  t['bhadeva'] = 0x092D;\n  t['bhagujarati'] = 0x0AAD;\n  t['bhagurmukhi'] = 0x0A2D;\n  t['bhook'] = 0x0253;\n  t['bihiragana'] = 0x3073;\n  t['bikatakana'] = 0x30D3;\n  t['bilabialclick'] = 0x0298;\n  t['bindigurmukhi'] = 0x0A02;\n  t['birusquare'] = 0x3331;\n  t['blackcircle'] = 0x25CF;\n  t['blackdiamond'] = 0x25C6;\n  t['blackdownpointingtriangle'] = 0x25BC;\n  t['blackleftpointingpointer'] = 0x25C4;\n  t['blackleftpointingtriangle'] = 0x25C0;\n  t['blacklenticularbracketleft'] = 0x3010;\n  t['blacklenticularbracketleftvertical'] = 0xFE3B;\n  t['blacklenticularbracketright'] = 0x3011;\n  t['blacklenticularbracketrightvertical'] = 0xFE3C;\n  t['blacklowerlefttriangle'] = 0x25E3;\n  t['blacklowerrighttriangle'] = 0x25E2;\n  t['blackrectangle'] = 0x25AC;\n  t['blackrightpointingpointer'] = 0x25BA;\n  t['blackrightpointingtriangle'] = 0x25B6;\n  t['blacksmallsquare'] = 0x25AA;\n  t['blacksmilingface'] = 0x263B;\n  t['blacksquare'] = 0x25A0;\n  t['blackstar'] = 0x2605;\n  t['blackupperlefttriangle'] = 0x25E4;\n  t['blackupperrighttriangle'] = 0x25E5;\n  t['blackuppointingsmalltriangle'] = 0x25B4;\n  t['blackuppointingtriangle'] = 0x25B2;\n  t['blank'] = 0x2423;\n  t['blinebelow'] = 0x1E07;\n  t['block'] = 0x2588;\n  t['bmonospace'] = 0xFF42;\n  t['bobaimaithai'] = 0x0E1A;\n  t['bohiragana'] = 0x307C;\n  t['bokatakana'] = 0x30DC;\n  t['bparen'] = 0x249D;\n  t['bqsquare'] = 0x33C3;\n  t['braceex'] = 0xF8F4;\n  t['braceleft'] = 0x007B;\n  t['braceleftbt'] = 0xF8F3;\n  t['braceleftmid'] = 0xF8F2;\n  t['braceleftmonospace'] = 0xFF5B;\n  t['braceleftsmall'] = 0xFE5B;\n  t['bracelefttp'] = 0xF8F1;\n  t['braceleftvertical'] = 0xFE37;\n  t['braceright'] = 0x007D;\n  t['bracerightbt'] = 0xF8FE;\n  t['bracerightmid'] = 0xF8FD;\n  t['bracerightmonospace'] = 0xFF5D;\n  t['bracerightsmall'] = 0xFE5C;\n  t['bracerighttp'] = 0xF8FC;\n  t['bracerightvertical'] = 0xFE38;\n  t['bracketleft'] = 0x005B;\n  t['bracketleftbt'] = 0xF8F0;\n  t['bracketleftex'] = 0xF8EF;\n  t['bracketleftmonospace'] = 0xFF3B;\n  t['bracketlefttp'] = 0xF8EE;\n  t['bracketright'] = 0x005D;\n  t['bracketrightbt'] = 0xF8FB;\n  t['bracketrightex'] = 0xF8FA;\n  t['bracketrightmonospace'] = 0xFF3D;\n  t['bracketrighttp'] = 0xF8F9;\n  t['breve'] = 0x02D8;\n  t['brevebelowcmb'] = 0x032E;\n  t['brevecmb'] = 0x0306;\n  t['breveinvertedbelowcmb'] = 0x032F;\n  t['breveinvertedcmb'] = 0x0311;\n  t['breveinverteddoublecmb'] = 0x0361;\n  t['bridgebelowcmb'] = 0x032A;\n  t['bridgeinvertedbelowcmb'] = 0x033A;\n  t['brokenbar'] = 0x00A6;\n  t['bstroke'] = 0x0180;\n  t['bsuperior'] = 0xF6EA;\n  t['btopbar'] = 0x0183;\n  t['buhiragana'] = 0x3076;\n  t['bukatakana'] = 0x30D6;\n  t['bullet'] = 0x2022;\n  t['bulletinverse'] = 0x25D8;\n  t['bulletoperator'] = 0x2219;\n  t['bullseye'] = 0x25CE;\n  t['c'] = 0x0063;\n  t['caarmenian'] = 0x056E;\n  t['cabengali'] = 0x099A;\n  t['cacute'] = 0x0107;\n  t['cadeva'] = 0x091A;\n  t['cagujarati'] = 0x0A9A;\n  t['cagurmukhi'] = 0x0A1A;\n  t['calsquare'] = 0x3388;\n  t['candrabindubengali'] = 0x0981;\n  t['candrabinducmb'] = 0x0310;\n  t['candrabindudeva'] = 0x0901;\n  t['candrabindugujarati'] = 0x0A81;\n  t['capslock'] = 0x21EA;\n  t['careof'] = 0x2105;\n  t['caron'] = 0x02C7;\n  t['caronbelowcmb'] = 0x032C;\n  t['caroncmb'] = 0x030C;\n  t['carriagereturn'] = 0x21B5;\n  t['cbopomofo'] = 0x3118;\n  t['ccaron'] = 0x010D;\n  t['ccedilla'] = 0x00E7;\n  t['ccedillaacute'] = 0x1E09;\n  t['ccircle'] = 0x24D2;\n  t['ccircumflex'] = 0x0109;\n  t['ccurl'] = 0x0255;\n  t['cdot'] = 0x010B;\n  t['cdotaccent'] = 0x010B;\n  t['cdsquare'] = 0x33C5;\n  t['cedilla'] = 0x00B8;\n  t['cedillacmb'] = 0x0327;\n  t['cent'] = 0x00A2;\n  t['centigrade'] = 0x2103;\n  t['centinferior'] = 0xF6DF;\n  t['centmonospace'] = 0xFFE0;\n  t['centoldstyle'] = 0xF7A2;\n  t['centsuperior'] = 0xF6E0;\n  t['chaarmenian'] = 0x0579;\n  t['chabengali'] = 0x099B;\n  t['chadeva'] = 0x091B;\n  t['chagujarati'] = 0x0A9B;\n  t['chagurmukhi'] = 0x0A1B;\n  t['chbopomofo'] = 0x3114;\n  t['cheabkhasiancyrillic'] = 0x04BD;\n  t['checkmark'] = 0x2713;\n  t['checyrillic'] = 0x0447;\n  t['chedescenderabkhasiancyrillic'] = 0x04BF;\n  t['chedescendercyrillic'] = 0x04B7;\n  t['chedieresiscyrillic'] = 0x04F5;\n  t['cheharmenian'] = 0x0573;\n  t['chekhakassiancyrillic'] = 0x04CC;\n  t['cheverticalstrokecyrillic'] = 0x04B9;\n  t['chi'] = 0x03C7;\n  t['chieuchacirclekorean'] = 0x3277;\n  t['chieuchaparenkorean'] = 0x3217;\n  t['chieuchcirclekorean'] = 0x3269;\n  t['chieuchkorean'] = 0x314A;\n  t['chieuchparenkorean'] = 0x3209;\n  t['chochangthai'] = 0x0E0A;\n  t['chochanthai'] = 0x0E08;\n  t['chochingthai'] = 0x0E09;\n  t['chochoethai'] = 0x0E0C;\n  t['chook'] = 0x0188;\n  t['cieucacirclekorean'] = 0x3276;\n  t['cieucaparenkorean'] = 0x3216;\n  t['cieuccirclekorean'] = 0x3268;\n  t['cieuckorean'] = 0x3148;\n  t['cieucparenkorean'] = 0x3208;\n  t['cieucuparenkorean'] = 0x321C;\n  t['circle'] = 0x25CB;\n  t['circlecopyrt'] = 0x00A9;\n  t['circlemultiply'] = 0x2297;\n  t['circleot'] = 0x2299;\n  t['circleplus'] = 0x2295;\n  t['circlepostalmark'] = 0x3036;\n  t['circlewithlefthalfblack'] = 0x25D0;\n  t['circlewithrighthalfblack'] = 0x25D1;\n  t['circumflex'] = 0x02C6;\n  t['circumflexbelowcmb'] = 0x032D;\n  t['circumflexcmb'] = 0x0302;\n  t['clear'] = 0x2327;\n  t['clickalveolar'] = 0x01C2;\n  t['clickdental'] = 0x01C0;\n  t['clicklateral'] = 0x01C1;\n  t['clickretroflex'] = 0x01C3;\n  t['club'] = 0x2663;\n  t['clubsuitblack'] = 0x2663;\n  t['clubsuitwhite'] = 0x2667;\n  t['cmcubedsquare'] = 0x33A4;\n  t['cmonospace'] = 0xFF43;\n  t['cmsquaredsquare'] = 0x33A0;\n  t['coarmenian'] = 0x0581;\n  t['colon'] = 0x003A;\n  t['colonmonetary'] = 0x20A1;\n  t['colonmonospace'] = 0xFF1A;\n  t['colonsign'] = 0x20A1;\n  t['colonsmall'] = 0xFE55;\n  t['colontriangularhalfmod'] = 0x02D1;\n  t['colontriangularmod'] = 0x02D0;\n  t['comma'] = 0x002C;\n  t['commaabovecmb'] = 0x0313;\n  t['commaaboverightcmb'] = 0x0315;\n  t['commaaccent'] = 0xF6C3;\n  t['commaarabic'] = 0x060C;\n  t['commaarmenian'] = 0x055D;\n  t['commainferior'] = 0xF6E1;\n  t['commamonospace'] = 0xFF0C;\n  t['commareversedabovecmb'] = 0x0314;\n  t['commareversedmod'] = 0x02BD;\n  t['commasmall'] = 0xFE50;\n  t['commasuperior'] = 0xF6E2;\n  t['commaturnedabovecmb'] = 0x0312;\n  t['commaturnedmod'] = 0x02BB;\n  t['compass'] = 0x263C;\n  t['congruent'] = 0x2245;\n  t['contourintegral'] = 0x222E;\n  t['control'] = 0x2303;\n  t['controlACK'] = 0x0006;\n  t['controlBEL'] = 0x0007;\n  t['controlBS'] = 0x0008;\n  t['controlCAN'] = 0x0018;\n  t['controlCR'] = 0x000D;\n  t['controlDC1'] = 0x0011;\n  t['controlDC2'] = 0x0012;\n  t['controlDC3'] = 0x0013;\n  t['controlDC4'] = 0x0014;\n  t['controlDEL'] = 0x007F;\n  t['controlDLE'] = 0x0010;\n  t['controlEM'] = 0x0019;\n  t['controlENQ'] = 0x0005;\n  t['controlEOT'] = 0x0004;\n  t['controlESC'] = 0x001B;\n  t['controlETB'] = 0x0017;\n  t['controlETX'] = 0x0003;\n  t['controlFF'] = 0x000C;\n  t['controlFS'] = 0x001C;\n  t['controlGS'] = 0x001D;\n  t['controlHT'] = 0x0009;\n  t['controlLF'] = 0x000A;\n  t['controlNAK'] = 0x0015;\n  t['controlNULL'] = 0x0000;\n  t['controlRS'] = 0x001E;\n  t['controlSI'] = 0x000F;\n  t['controlSO'] = 0x000E;\n  t['controlSOT'] = 0x0002;\n  t['controlSTX'] = 0x0001;\n  t['controlSUB'] = 0x001A;\n  t['controlSYN'] = 0x0016;\n  t['controlUS'] = 0x001F;\n  t['controlVT'] = 0x000B;\n  t['copyright'] = 0x00A9;\n  t['copyrightsans'] = 0xF8E9;\n  t['copyrightserif'] = 0xF6D9;\n  t['cornerbracketleft'] = 0x300C;\n  t['cornerbracketlefthalfwidth'] = 0xFF62;\n  t['cornerbracketleftvertical'] = 0xFE41;\n  t['cornerbracketright'] = 0x300D;\n  t['cornerbracketrighthalfwidth'] = 0xFF63;\n  t['cornerbracketrightvertical'] = 0xFE42;\n  t['corporationsquare'] = 0x337F;\n  t['cosquare'] = 0x33C7;\n  t['coverkgsquare'] = 0x33C6;\n  t['cparen'] = 0x249E;\n  t['cruzeiro'] = 0x20A2;\n  t['cstretched'] = 0x0297;\n  t['curlyand'] = 0x22CF;\n  t['curlyor'] = 0x22CE;\n  t['currency'] = 0x00A4;\n  t['cyrBreve'] = 0xF6D1;\n  t['cyrFlex'] = 0xF6D2;\n  t['cyrbreve'] = 0xF6D4;\n  t['cyrflex'] = 0xF6D5;\n  t['d'] = 0x0064;\n  t['daarmenian'] = 0x0564;\n  t['dabengali'] = 0x09A6;\n  t['dadarabic'] = 0x0636;\n  t['dadeva'] = 0x0926;\n  t['dadfinalarabic'] = 0xFEBE;\n  t['dadinitialarabic'] = 0xFEBF;\n  t['dadmedialarabic'] = 0xFEC0;\n  t['dagesh'] = 0x05BC;\n  t['dageshhebrew'] = 0x05BC;\n  t['dagger'] = 0x2020;\n  t['daggerdbl'] = 0x2021;\n  t['dagujarati'] = 0x0AA6;\n  t['dagurmukhi'] = 0x0A26;\n  t['dahiragana'] = 0x3060;\n  t['dakatakana'] = 0x30C0;\n  t['dalarabic'] = 0x062F;\n  t['dalet'] = 0x05D3;\n  t['daletdagesh'] = 0xFB33;\n  t['daletdageshhebrew'] = 0xFB33;\n  t['dalethebrew'] = 0x05D3;\n  t['dalfinalarabic'] = 0xFEAA;\n  t['dammaarabic'] = 0x064F;\n  t['dammalowarabic'] = 0x064F;\n  t['dammatanaltonearabic'] = 0x064C;\n  t['dammatanarabic'] = 0x064C;\n  t['danda'] = 0x0964;\n  t['dargahebrew'] = 0x05A7;\n  t['dargalefthebrew'] = 0x05A7;\n  t['dasiapneumatacyrilliccmb'] = 0x0485;\n  t['dblGrave'] = 0xF6D3;\n  t['dblanglebracketleft'] = 0x300A;\n  t['dblanglebracketleftvertical'] = 0xFE3D;\n  t['dblanglebracketright'] = 0x300B;\n  t['dblanglebracketrightvertical'] = 0xFE3E;\n  t['dblarchinvertedbelowcmb'] = 0x032B;\n  t['dblarrowleft'] = 0x21D4;\n  t['dblarrowright'] = 0x21D2;\n  t['dbldanda'] = 0x0965;\n  t['dblgrave'] = 0xF6D6;\n  t['dblgravecmb'] = 0x030F;\n  t['dblintegral'] = 0x222C;\n  t['dbllowline'] = 0x2017;\n  t['dbllowlinecmb'] = 0x0333;\n  t['dbloverlinecmb'] = 0x033F;\n  t['dblprimemod'] = 0x02BA;\n  t['dblverticalbar'] = 0x2016;\n  t['dblverticallineabovecmb'] = 0x030E;\n  t['dbopomofo'] = 0x3109;\n  t['dbsquare'] = 0x33C8;\n  t['dcaron'] = 0x010F;\n  t['dcedilla'] = 0x1E11;\n  t['dcircle'] = 0x24D3;\n  t['dcircumflexbelow'] = 0x1E13;\n  t['dcroat'] = 0x0111;\n  t['ddabengali'] = 0x09A1;\n  t['ddadeva'] = 0x0921;\n  t['ddagujarati'] = 0x0AA1;\n  t['ddagurmukhi'] = 0x0A21;\n  t['ddalarabic'] = 0x0688;\n  t['ddalfinalarabic'] = 0xFB89;\n  t['dddhadeva'] = 0x095C;\n  t['ddhabengali'] = 0x09A2;\n  t['ddhadeva'] = 0x0922;\n  t['ddhagujarati'] = 0x0AA2;\n  t['ddhagurmukhi'] = 0x0A22;\n  t['ddotaccent'] = 0x1E0B;\n  t['ddotbelow'] = 0x1E0D;\n  t['decimalseparatorarabic'] = 0x066B;\n  t['decimalseparatorpersian'] = 0x066B;\n  t['decyrillic'] = 0x0434;\n  t['degree'] = 0x00B0;\n  t['dehihebrew'] = 0x05AD;\n  t['dehiragana'] = 0x3067;\n  t['deicoptic'] = 0x03EF;\n  t['dekatakana'] = 0x30C7;\n  t['deleteleft'] = 0x232B;\n  t['deleteright'] = 0x2326;\n  t['delta'] = 0x03B4;\n  t['deltaturned'] = 0x018D;\n  t['denominatorminusonenumeratorbengali'] = 0x09F8;\n  t['dezh'] = 0x02A4;\n  t['dhabengali'] = 0x09A7;\n  t['dhadeva'] = 0x0927;\n  t['dhagujarati'] = 0x0AA7;\n  t['dhagurmukhi'] = 0x0A27;\n  t['dhook'] = 0x0257;\n  t['dialytikatonos'] = 0x0385;\n  t['dialytikatonoscmb'] = 0x0344;\n  t['diamond'] = 0x2666;\n  t['diamondsuitwhite'] = 0x2662;\n  t['dieresis'] = 0x00A8;\n  t['dieresisacute'] = 0xF6D7;\n  t['dieresisbelowcmb'] = 0x0324;\n  t['dieresiscmb'] = 0x0308;\n  t['dieresisgrave'] = 0xF6D8;\n  t['dieresistonos'] = 0x0385;\n  t['dihiragana'] = 0x3062;\n  t['dikatakana'] = 0x30C2;\n  t['dittomark'] = 0x3003;\n  t['divide'] = 0x00F7;\n  t['divides'] = 0x2223;\n  t['divisionslash'] = 0x2215;\n  t['djecyrillic'] = 0x0452;\n  t['dkshade'] = 0x2593;\n  t['dlinebelow'] = 0x1E0F;\n  t['dlsquare'] = 0x3397;\n  t['dmacron'] = 0x0111;\n  t['dmonospace'] = 0xFF44;\n  t['dnblock'] = 0x2584;\n  t['dochadathai'] = 0x0E0E;\n  t['dodekthai'] = 0x0E14;\n  t['dohiragana'] = 0x3069;\n  t['dokatakana'] = 0x30C9;\n  t['dollar'] = 0x0024;\n  t['dollarinferior'] = 0xF6E3;\n  t['dollarmonospace'] = 0xFF04;\n  t['dollaroldstyle'] = 0xF724;\n  t['dollarsmall'] = 0xFE69;\n  t['dollarsuperior'] = 0xF6E4;\n  t['dong'] = 0x20AB;\n  t['dorusquare'] = 0x3326;\n  t['dotaccent'] = 0x02D9;\n  t['dotaccentcmb'] = 0x0307;\n  t['dotbelowcmb'] = 0x0323;\n  t['dotbelowcomb'] = 0x0323;\n  t['dotkatakana'] = 0x30FB;\n  t['dotlessi'] = 0x0131;\n  t['dotlessj'] = 0xF6BE;\n  t['dotlessjstrokehook'] = 0x0284;\n  t['dotmath'] = 0x22C5;\n  t['dottedcircle'] = 0x25CC;\n  t['doubleyodpatah'] = 0xFB1F;\n  t['doubleyodpatahhebrew'] = 0xFB1F;\n  t['downtackbelowcmb'] = 0x031E;\n  t['downtackmod'] = 0x02D5;\n  t['dparen'] = 0x249F;\n  t['dsuperior'] = 0xF6EB;\n  t['dtail'] = 0x0256;\n  t['dtopbar'] = 0x018C;\n  t['duhiragana'] = 0x3065;\n  t['dukatakana'] = 0x30C5;\n  t['dz'] = 0x01F3;\n  t['dzaltone'] = 0x02A3;\n  t['dzcaron'] = 0x01C6;\n  t['dzcurl'] = 0x02A5;\n  t['dzeabkhasiancyrillic'] = 0x04E1;\n  t['dzecyrillic'] = 0x0455;\n  t['dzhecyrillic'] = 0x045F;\n  t['e'] = 0x0065;\n  t['eacute'] = 0x00E9;\n  t['earth'] = 0x2641;\n  t['ebengali'] = 0x098F;\n  t['ebopomofo'] = 0x311C;\n  t['ebreve'] = 0x0115;\n  t['ecandradeva'] = 0x090D;\n  t['ecandragujarati'] = 0x0A8D;\n  t['ecandravowelsigndeva'] = 0x0945;\n  t['ecandravowelsigngujarati'] = 0x0AC5;\n  t['ecaron'] = 0x011B;\n  t['ecedillabreve'] = 0x1E1D;\n  t['echarmenian'] = 0x0565;\n  t['echyiwnarmenian'] = 0x0587;\n  t['ecircle'] = 0x24D4;\n  t['ecircumflex'] = 0x00EA;\n  t['ecircumflexacute'] = 0x1EBF;\n  t['ecircumflexbelow'] = 0x1E19;\n  t['ecircumflexdotbelow'] = 0x1EC7;\n  t['ecircumflexgrave'] = 0x1EC1;\n  t['ecircumflexhookabove'] = 0x1EC3;\n  t['ecircumflextilde'] = 0x1EC5;\n  t['ecyrillic'] = 0x0454;\n  t['edblgrave'] = 0x0205;\n  t['edeva'] = 0x090F;\n  t['edieresis'] = 0x00EB;\n  t['edot'] = 0x0117;\n  t['edotaccent'] = 0x0117;\n  t['edotbelow'] = 0x1EB9;\n  t['eegurmukhi'] = 0x0A0F;\n  t['eematragurmukhi'] = 0x0A47;\n  t['efcyrillic'] = 0x0444;\n  t['egrave'] = 0x00E8;\n  t['egujarati'] = 0x0A8F;\n  t['eharmenian'] = 0x0567;\n  t['ehbopomofo'] = 0x311D;\n  t['ehiragana'] = 0x3048;\n  t['ehookabove'] = 0x1EBB;\n  t['eibopomofo'] = 0x311F;\n  t['eight'] = 0x0038;\n  t['eightarabic'] = 0x0668;\n  t['eightbengali'] = 0x09EE;\n  t['eightcircle'] = 0x2467;\n  t['eightcircleinversesansserif'] = 0x2791;\n  t['eightdeva'] = 0x096E;\n  t['eighteencircle'] = 0x2471;\n  t['eighteenparen'] = 0x2485;\n  t['eighteenperiod'] = 0x2499;\n  t['eightgujarati'] = 0x0AEE;\n  t['eightgurmukhi'] = 0x0A6E;\n  t['eighthackarabic'] = 0x0668;\n  t['eighthangzhou'] = 0x3028;\n  t['eighthnotebeamed'] = 0x266B;\n  t['eightideographicparen'] = 0x3227;\n  t['eightinferior'] = 0x2088;\n  t['eightmonospace'] = 0xFF18;\n  t['eightoldstyle'] = 0xF738;\n  t['eightparen'] = 0x247B;\n  t['eightperiod'] = 0x248F;\n  t['eightpersian'] = 0x06F8;\n  t['eightroman'] = 0x2177;\n  t['eightsuperior'] = 0x2078;\n  t['eightthai'] = 0x0E58;\n  t['einvertedbreve'] = 0x0207;\n  t['eiotifiedcyrillic'] = 0x0465;\n  t['ekatakana'] = 0x30A8;\n  t['ekatakanahalfwidth'] = 0xFF74;\n  t['ekonkargurmukhi'] = 0x0A74;\n  t['ekorean'] = 0x3154;\n  t['elcyrillic'] = 0x043B;\n  t['element'] = 0x2208;\n  t['elevencircle'] = 0x246A;\n  t['elevenparen'] = 0x247E;\n  t['elevenperiod'] = 0x2492;\n  t['elevenroman'] = 0x217A;\n  t['ellipsis'] = 0x2026;\n  t['ellipsisvertical'] = 0x22EE;\n  t['emacron'] = 0x0113;\n  t['emacronacute'] = 0x1E17;\n  t['emacrongrave'] = 0x1E15;\n  t['emcyrillic'] = 0x043C;\n  t['emdash'] = 0x2014;\n  t['emdashvertical'] = 0xFE31;\n  t['emonospace'] = 0xFF45;\n  t['emphasismarkarmenian'] = 0x055B;\n  t['emptyset'] = 0x2205;\n  t['enbopomofo'] = 0x3123;\n  t['encyrillic'] = 0x043D;\n  t['endash'] = 0x2013;\n  t['endashvertical'] = 0xFE32;\n  t['endescendercyrillic'] = 0x04A3;\n  t['eng'] = 0x014B;\n  t['engbopomofo'] = 0x3125;\n  t['enghecyrillic'] = 0x04A5;\n  t['enhookcyrillic'] = 0x04C8;\n  t['enspace'] = 0x2002;\n  t['eogonek'] = 0x0119;\n  t['eokorean'] = 0x3153;\n  t['eopen'] = 0x025B;\n  t['eopenclosed'] = 0x029A;\n  t['eopenreversed'] = 0x025C;\n  t['eopenreversedclosed'] = 0x025E;\n  t['eopenreversedhook'] = 0x025D;\n  t['eparen'] = 0x24A0;\n  t['epsilon'] = 0x03B5;\n  t['epsilontonos'] = 0x03AD;\n  t['equal'] = 0x003D;\n  t['equalmonospace'] = 0xFF1D;\n  t['equalsmall'] = 0xFE66;\n  t['equalsuperior'] = 0x207C;\n  t['equivalence'] = 0x2261;\n  t['erbopomofo'] = 0x3126;\n  t['ercyrillic'] = 0x0440;\n  t['ereversed'] = 0x0258;\n  t['ereversedcyrillic'] = 0x044D;\n  t['escyrillic'] = 0x0441;\n  t['esdescendercyrillic'] = 0x04AB;\n  t['esh'] = 0x0283;\n  t['eshcurl'] = 0x0286;\n  t['eshortdeva'] = 0x090E;\n  t['eshortvowelsigndeva'] = 0x0946;\n  t['eshreversedloop'] = 0x01AA;\n  t['eshsquatreversed'] = 0x0285;\n  t['esmallhiragana'] = 0x3047;\n  t['esmallkatakana'] = 0x30A7;\n  t['esmallkatakanahalfwidth'] = 0xFF6A;\n  t['estimated'] = 0x212E;\n  t['esuperior'] = 0xF6EC;\n  t['eta'] = 0x03B7;\n  t['etarmenian'] = 0x0568;\n  t['etatonos'] = 0x03AE;\n  t['eth'] = 0x00F0;\n  t['etilde'] = 0x1EBD;\n  t['etildebelow'] = 0x1E1B;\n  t['etnahtafoukhhebrew'] = 0x0591;\n  t['etnahtafoukhlefthebrew'] = 0x0591;\n  t['etnahtahebrew'] = 0x0591;\n  t['etnahtalefthebrew'] = 0x0591;\n  t['eturned'] = 0x01DD;\n  t['eukorean'] = 0x3161;\n  t['euro'] = 0x20AC;\n  t['evowelsignbengali'] = 0x09C7;\n  t['evowelsigndeva'] = 0x0947;\n  t['evowelsigngujarati'] = 0x0AC7;\n  t['exclam'] = 0x0021;\n  t['exclamarmenian'] = 0x055C;\n  t['exclamdbl'] = 0x203C;\n  t['exclamdown'] = 0x00A1;\n  t['exclamdownsmall'] = 0xF7A1;\n  t['exclammonospace'] = 0xFF01;\n  t['exclamsmall'] = 0xF721;\n  t['existential'] = 0x2203;\n  t['ezh'] = 0x0292;\n  t['ezhcaron'] = 0x01EF;\n  t['ezhcurl'] = 0x0293;\n  t['ezhreversed'] = 0x01B9;\n  t['ezhtail'] = 0x01BA;\n  t['f'] = 0x0066;\n  t['fadeva'] = 0x095E;\n  t['fagurmukhi'] = 0x0A5E;\n  t['fahrenheit'] = 0x2109;\n  t['fathaarabic'] = 0x064E;\n  t['fathalowarabic'] = 0x064E;\n  t['fathatanarabic'] = 0x064B;\n  t['fbopomofo'] = 0x3108;\n  t['fcircle'] = 0x24D5;\n  t['fdotaccent'] = 0x1E1F;\n  t['feharabic'] = 0x0641;\n  t['feharmenian'] = 0x0586;\n  t['fehfinalarabic'] = 0xFED2;\n  t['fehinitialarabic'] = 0xFED3;\n  t['fehmedialarabic'] = 0xFED4;\n  t['feicoptic'] = 0x03E5;\n  t['female'] = 0x2640;\n  t['ff'] = 0xFB00;\n  t['ffi'] = 0xFB03;\n  t['ffl'] = 0xFB04;\n  t['fi'] = 0xFB01;\n  t['fifteencircle'] = 0x246E;\n  t['fifteenparen'] = 0x2482;\n  t['fifteenperiod'] = 0x2496;\n  t['figuredash'] = 0x2012;\n  t['filledbox'] = 0x25A0;\n  t['filledrect'] = 0x25AC;\n  t['finalkaf'] = 0x05DA;\n  t['finalkafdagesh'] = 0xFB3A;\n  t['finalkafdageshhebrew'] = 0xFB3A;\n  t['finalkafhebrew'] = 0x05DA;\n  t['finalmem'] = 0x05DD;\n  t['finalmemhebrew'] = 0x05DD;\n  t['finalnun'] = 0x05DF;\n  t['finalnunhebrew'] = 0x05DF;\n  t['finalpe'] = 0x05E3;\n  t['finalpehebrew'] = 0x05E3;\n  t['finaltsadi'] = 0x05E5;\n  t['finaltsadihebrew'] = 0x05E5;\n  t['firsttonechinese'] = 0x02C9;\n  t['fisheye'] = 0x25C9;\n  t['fitacyrillic'] = 0x0473;\n  t['five'] = 0x0035;\n  t['fivearabic'] = 0x0665;\n  t['fivebengali'] = 0x09EB;\n  t['fivecircle'] = 0x2464;\n  t['fivecircleinversesansserif'] = 0x278E;\n  t['fivedeva'] = 0x096B;\n  t['fiveeighths'] = 0x215D;\n  t['fivegujarati'] = 0x0AEB;\n  t['fivegurmukhi'] = 0x0A6B;\n  t['fivehackarabic'] = 0x0665;\n  t['fivehangzhou'] = 0x3025;\n  t['fiveideographicparen'] = 0x3224;\n  t['fiveinferior'] = 0x2085;\n  t['fivemonospace'] = 0xFF15;\n  t['fiveoldstyle'] = 0xF735;\n  t['fiveparen'] = 0x2478;\n  t['fiveperiod'] = 0x248C;\n  t['fivepersian'] = 0x06F5;\n  t['fiveroman'] = 0x2174;\n  t['fivesuperior'] = 0x2075;\n  t['fivethai'] = 0x0E55;\n  t['fl'] = 0xFB02;\n  t['florin'] = 0x0192;\n  t['fmonospace'] = 0xFF46;\n  t['fmsquare'] = 0x3399;\n  t['fofanthai'] = 0x0E1F;\n  t['fofathai'] = 0x0E1D;\n  t['fongmanthai'] = 0x0E4F;\n  t['forall'] = 0x2200;\n  t['four'] = 0x0034;\n  t['fourarabic'] = 0x0664;\n  t['fourbengali'] = 0x09EA;\n  t['fourcircle'] = 0x2463;\n  t['fourcircleinversesansserif'] = 0x278D;\n  t['fourdeva'] = 0x096A;\n  t['fourgujarati'] = 0x0AEA;\n  t['fourgurmukhi'] = 0x0A6A;\n  t['fourhackarabic'] = 0x0664;\n  t['fourhangzhou'] = 0x3024;\n  t['fourideographicparen'] = 0x3223;\n  t['fourinferior'] = 0x2084;\n  t['fourmonospace'] = 0xFF14;\n  t['fournumeratorbengali'] = 0x09F7;\n  t['fouroldstyle'] = 0xF734;\n  t['fourparen'] = 0x2477;\n  t['fourperiod'] = 0x248B;\n  t['fourpersian'] = 0x06F4;\n  t['fourroman'] = 0x2173;\n  t['foursuperior'] = 0x2074;\n  t['fourteencircle'] = 0x246D;\n  t['fourteenparen'] = 0x2481;\n  t['fourteenperiod'] = 0x2495;\n  t['fourthai'] = 0x0E54;\n  t['fourthtonechinese'] = 0x02CB;\n  t['fparen'] = 0x24A1;\n  t['fraction'] = 0x2044;\n  t['franc'] = 0x20A3;\n  t['g'] = 0x0067;\n  t['gabengali'] = 0x0997;\n  t['gacute'] = 0x01F5;\n  t['gadeva'] = 0x0917;\n  t['gafarabic'] = 0x06AF;\n  t['gaffinalarabic'] = 0xFB93;\n  t['gafinitialarabic'] = 0xFB94;\n  t['gafmedialarabic'] = 0xFB95;\n  t['gagujarati'] = 0x0A97;\n  t['gagurmukhi'] = 0x0A17;\n  t['gahiragana'] = 0x304C;\n  t['gakatakana'] = 0x30AC;\n  t['gamma'] = 0x03B3;\n  t['gammalatinsmall'] = 0x0263;\n  t['gammasuperior'] = 0x02E0;\n  t['gangiacoptic'] = 0x03EB;\n  t['gbopomofo'] = 0x310D;\n  t['gbreve'] = 0x011F;\n  t['gcaron'] = 0x01E7;\n  t['gcedilla'] = 0x0123;\n  t['gcircle'] = 0x24D6;\n  t['gcircumflex'] = 0x011D;\n  t['gcommaaccent'] = 0x0123;\n  t['gdot'] = 0x0121;\n  t['gdotaccent'] = 0x0121;\n  t['gecyrillic'] = 0x0433;\n  t['gehiragana'] = 0x3052;\n  t['gekatakana'] = 0x30B2;\n  t['geometricallyequal'] = 0x2251;\n  t['gereshaccenthebrew'] = 0x059C;\n  t['gereshhebrew'] = 0x05F3;\n  t['gereshmuqdamhebrew'] = 0x059D;\n  t['germandbls'] = 0x00DF;\n  t['gershayimaccenthebrew'] = 0x059E;\n  t['gershayimhebrew'] = 0x05F4;\n  t['getamark'] = 0x3013;\n  t['ghabengali'] = 0x0998;\n  t['ghadarmenian'] = 0x0572;\n  t['ghadeva'] = 0x0918;\n  t['ghagujarati'] = 0x0A98;\n  t['ghagurmukhi'] = 0x0A18;\n  t['ghainarabic'] = 0x063A;\n  t['ghainfinalarabic'] = 0xFECE;\n  t['ghaininitialarabic'] = 0xFECF;\n  t['ghainmedialarabic'] = 0xFED0;\n  t['ghemiddlehookcyrillic'] = 0x0495;\n  t['ghestrokecyrillic'] = 0x0493;\n  t['gheupturncyrillic'] = 0x0491;\n  t['ghhadeva'] = 0x095A;\n  t['ghhagurmukhi'] = 0x0A5A;\n  t['ghook'] = 0x0260;\n  t['ghzsquare'] = 0x3393;\n  t['gihiragana'] = 0x304E;\n  t['gikatakana'] = 0x30AE;\n  t['gimarmenian'] = 0x0563;\n  t['gimel'] = 0x05D2;\n  t['gimeldagesh'] = 0xFB32;\n  t['gimeldageshhebrew'] = 0xFB32;\n  t['gimelhebrew'] = 0x05D2;\n  t['gjecyrillic'] = 0x0453;\n  t['glottalinvertedstroke'] = 0x01BE;\n  t['glottalstop'] = 0x0294;\n  t['glottalstopinverted'] = 0x0296;\n  t['glottalstopmod'] = 0x02C0;\n  t['glottalstopreversed'] = 0x0295;\n  t['glottalstopreversedmod'] = 0x02C1;\n  t['glottalstopreversedsuperior'] = 0x02E4;\n  t['glottalstopstroke'] = 0x02A1;\n  t['glottalstopstrokereversed'] = 0x02A2;\n  t['gmacron'] = 0x1E21;\n  t['gmonospace'] = 0xFF47;\n  t['gohiragana'] = 0x3054;\n  t['gokatakana'] = 0x30B4;\n  t['gparen'] = 0x24A2;\n  t['gpasquare'] = 0x33AC;\n  t['gradient'] = 0x2207;\n  t['grave'] = 0x0060;\n  t['gravebelowcmb'] = 0x0316;\n  t['gravecmb'] = 0x0300;\n  t['gravecomb'] = 0x0300;\n  t['gravedeva'] = 0x0953;\n  t['gravelowmod'] = 0x02CE;\n  t['gravemonospace'] = 0xFF40;\n  t['gravetonecmb'] = 0x0340;\n  t['greater'] = 0x003E;\n  t['greaterequal'] = 0x2265;\n  t['greaterequalorless'] = 0x22DB;\n  t['greatermonospace'] = 0xFF1E;\n  t['greaterorequivalent'] = 0x2273;\n  t['greaterorless'] = 0x2277;\n  t['greateroverequal'] = 0x2267;\n  t['greatersmall'] = 0xFE65;\n  t['gscript'] = 0x0261;\n  t['gstroke'] = 0x01E5;\n  t['guhiragana'] = 0x3050;\n  t['guillemotleft'] = 0x00AB;\n  t['guillemotright'] = 0x00BB;\n  t['guilsinglleft'] = 0x2039;\n  t['guilsinglright'] = 0x203A;\n  t['gukatakana'] = 0x30B0;\n  t['guramusquare'] = 0x3318;\n  t['gysquare'] = 0x33C9;\n  t['h'] = 0x0068;\n  t['haabkhasiancyrillic'] = 0x04A9;\n  t['haaltonearabic'] = 0x06C1;\n  t['habengali'] = 0x09B9;\n  t['hadescendercyrillic'] = 0x04B3;\n  t['hadeva'] = 0x0939;\n  t['hagujarati'] = 0x0AB9;\n  t['hagurmukhi'] = 0x0A39;\n  t['haharabic'] = 0x062D;\n  t['hahfinalarabic'] = 0xFEA2;\n  t['hahinitialarabic'] = 0xFEA3;\n  t['hahiragana'] = 0x306F;\n  t['hahmedialarabic'] = 0xFEA4;\n  t['haitusquare'] = 0x332A;\n  t['hakatakana'] = 0x30CF;\n  t['hakatakanahalfwidth'] = 0xFF8A;\n  t['halantgurmukhi'] = 0x0A4D;\n  t['hamzaarabic'] = 0x0621;\n  t['hamzalowarabic'] = 0x0621;\n  t['hangulfiller'] = 0x3164;\n  t['hardsigncyrillic'] = 0x044A;\n  t['harpoonleftbarbup'] = 0x21BC;\n  t['harpoonrightbarbup'] = 0x21C0;\n  t['hasquare'] = 0x33CA;\n  t['hatafpatah'] = 0x05B2;\n  t['hatafpatah16'] = 0x05B2;\n  t['hatafpatah23'] = 0x05B2;\n  t['hatafpatah2f'] = 0x05B2;\n  t['hatafpatahhebrew'] = 0x05B2;\n  t['hatafpatahnarrowhebrew'] = 0x05B2;\n  t['hatafpatahquarterhebrew'] = 0x05B2;\n  t['hatafpatahwidehebrew'] = 0x05B2;\n  t['hatafqamats'] = 0x05B3;\n  t['hatafqamats1b'] = 0x05B3;\n  t['hatafqamats28'] = 0x05B3;\n  t['hatafqamats34'] = 0x05B3;\n  t['hatafqamatshebrew'] = 0x05B3;\n  t['hatafqamatsnarrowhebrew'] = 0x05B3;\n  t['hatafqamatsquarterhebrew'] = 0x05B3;\n  t['hatafqamatswidehebrew'] = 0x05B3;\n  t['hatafsegol'] = 0x05B1;\n  t['hatafsegol17'] = 0x05B1;\n  t['hatafsegol24'] = 0x05B1;\n  t['hatafsegol30'] = 0x05B1;\n  t['hatafsegolhebrew'] = 0x05B1;\n  t['hatafsegolnarrowhebrew'] = 0x05B1;\n  t['hatafsegolquarterhebrew'] = 0x05B1;\n  t['hatafsegolwidehebrew'] = 0x05B1;\n  t['hbar'] = 0x0127;\n  t['hbopomofo'] = 0x310F;\n  t['hbrevebelow'] = 0x1E2B;\n  t['hcedilla'] = 0x1E29;\n  t['hcircle'] = 0x24D7;\n  t['hcircumflex'] = 0x0125;\n  t['hdieresis'] = 0x1E27;\n  t['hdotaccent'] = 0x1E23;\n  t['hdotbelow'] = 0x1E25;\n  t['he'] = 0x05D4;\n  t['heart'] = 0x2665;\n  t['heartsuitblack'] = 0x2665;\n  t['heartsuitwhite'] = 0x2661;\n  t['hedagesh'] = 0xFB34;\n  t['hedageshhebrew'] = 0xFB34;\n  t['hehaltonearabic'] = 0x06C1;\n  t['heharabic'] = 0x0647;\n  t['hehebrew'] = 0x05D4;\n  t['hehfinalaltonearabic'] = 0xFBA7;\n  t['hehfinalalttwoarabic'] = 0xFEEA;\n  t['hehfinalarabic'] = 0xFEEA;\n  t['hehhamzaabovefinalarabic'] = 0xFBA5;\n  t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n  t['hehinitialaltonearabic'] = 0xFBA8;\n  t['hehinitialarabic'] = 0xFEEB;\n  t['hehiragana'] = 0x3078;\n  t['hehmedialaltonearabic'] = 0xFBA9;\n  t['hehmedialarabic'] = 0xFEEC;\n  t['heiseierasquare'] = 0x337B;\n  t['hekatakana'] = 0x30D8;\n  t['hekatakanahalfwidth'] = 0xFF8D;\n  t['hekutaarusquare'] = 0x3336;\n  t['henghook'] = 0x0267;\n  t['herutusquare'] = 0x3339;\n  t['het'] = 0x05D7;\n  t['hethebrew'] = 0x05D7;\n  t['hhook'] = 0x0266;\n  t['hhooksuperior'] = 0x02B1;\n  t['hieuhacirclekorean'] = 0x327B;\n  t['hieuhaparenkorean'] = 0x321B;\n  t['hieuhcirclekorean'] = 0x326D;\n  t['hieuhkorean'] = 0x314E;\n  t['hieuhparenkorean'] = 0x320D;\n  t['hihiragana'] = 0x3072;\n  t['hikatakana'] = 0x30D2;\n  t['hikatakanahalfwidth'] = 0xFF8B;\n  t['hiriq'] = 0x05B4;\n  t['hiriq14'] = 0x05B4;\n  t['hiriq21'] = 0x05B4;\n  t['hiriq2d'] = 0x05B4;\n  t['hiriqhebrew'] = 0x05B4;\n  t['hiriqnarrowhebrew'] = 0x05B4;\n  t['hiriqquarterhebrew'] = 0x05B4;\n  t['hiriqwidehebrew'] = 0x05B4;\n  t['hlinebelow'] = 0x1E96;\n  t['hmonospace'] = 0xFF48;\n  t['hoarmenian'] = 0x0570;\n  t['hohipthai'] = 0x0E2B;\n  t['hohiragana'] = 0x307B;\n  t['hokatakana'] = 0x30DB;\n  t['hokatakanahalfwidth'] = 0xFF8E;\n  t['holam'] = 0x05B9;\n  t['holam19'] = 0x05B9;\n  t['holam26'] = 0x05B9;\n  t['holam32'] = 0x05B9;\n  t['holamhebrew'] = 0x05B9;\n  t['holamnarrowhebrew'] = 0x05B9;\n  t['holamquarterhebrew'] = 0x05B9;\n  t['holamwidehebrew'] = 0x05B9;\n  t['honokhukthai'] = 0x0E2E;\n  t['hookabovecomb'] = 0x0309;\n  t['hookcmb'] = 0x0309;\n  t['hookpalatalizedbelowcmb'] = 0x0321;\n  t['hookretroflexbelowcmb'] = 0x0322;\n  t['hoonsquare'] = 0x3342;\n  t['horicoptic'] = 0x03E9;\n  t['horizontalbar'] = 0x2015;\n  t['horncmb'] = 0x031B;\n  t['hotsprings'] = 0x2668;\n  t['house'] = 0x2302;\n  t['hparen'] = 0x24A3;\n  t['hsuperior'] = 0x02B0;\n  t['hturned'] = 0x0265;\n  t['huhiragana'] = 0x3075;\n  t['huiitosquare'] = 0x3333;\n  t['hukatakana'] = 0x30D5;\n  t['hukatakanahalfwidth'] = 0xFF8C;\n  t['hungarumlaut'] = 0x02DD;\n  t['hungarumlautcmb'] = 0x030B;\n  t['hv'] = 0x0195;\n  t['hyphen'] = 0x002D;\n  t['hypheninferior'] = 0xF6E5;\n  t['hyphenmonospace'] = 0xFF0D;\n  t['hyphensmall'] = 0xFE63;\n  t['hyphensuperior'] = 0xF6E6;\n  t['hyphentwo'] = 0x2010;\n  t['i'] = 0x0069;\n  t['iacute'] = 0x00ED;\n  t['iacyrillic'] = 0x044F;\n  t['ibengali'] = 0x0987;\n  t['ibopomofo'] = 0x3127;\n  t['ibreve'] = 0x012D;\n  t['icaron'] = 0x01D0;\n  t['icircle'] = 0x24D8;\n  t['icircumflex'] = 0x00EE;\n  t['icyrillic'] = 0x0456;\n  t['idblgrave'] = 0x0209;\n  t['ideographearthcircle'] = 0x328F;\n  t['ideographfirecircle'] = 0x328B;\n  t['ideographicallianceparen'] = 0x323F;\n  t['ideographiccallparen'] = 0x323A;\n  t['ideographiccentrecircle'] = 0x32A5;\n  t['ideographicclose'] = 0x3006;\n  t['ideographiccomma'] = 0x3001;\n  t['ideographiccommaleft'] = 0xFF64;\n  t['ideographiccongratulationparen'] = 0x3237;\n  t['ideographiccorrectcircle'] = 0x32A3;\n  t['ideographicearthparen'] = 0x322F;\n  t['ideographicenterpriseparen'] = 0x323D;\n  t['ideographicexcellentcircle'] = 0x329D;\n  t['ideographicfestivalparen'] = 0x3240;\n  t['ideographicfinancialcircle'] = 0x3296;\n  t['ideographicfinancialparen'] = 0x3236;\n  t['ideographicfireparen'] = 0x322B;\n  t['ideographichaveparen'] = 0x3232;\n  t['ideographichighcircle'] = 0x32A4;\n  t['ideographiciterationmark'] = 0x3005;\n  t['ideographiclaborcircle'] = 0x3298;\n  t['ideographiclaborparen'] = 0x3238;\n  t['ideographicleftcircle'] = 0x32A7;\n  t['ideographiclowcircle'] = 0x32A6;\n  t['ideographicmedicinecircle'] = 0x32A9;\n  t['ideographicmetalparen'] = 0x322E;\n  t['ideographicmoonparen'] = 0x322A;\n  t['ideographicnameparen'] = 0x3234;\n  t['ideographicperiod'] = 0x3002;\n  t['ideographicprintcircle'] = 0x329E;\n  t['ideographicreachparen'] = 0x3243;\n  t['ideographicrepresentparen'] = 0x3239;\n  t['ideographicresourceparen'] = 0x323E;\n  t['ideographicrightcircle'] = 0x32A8;\n  t['ideographicsecretcircle'] = 0x3299;\n  t['ideographicselfparen'] = 0x3242;\n  t['ideographicsocietyparen'] = 0x3233;\n  t['ideographicspace'] = 0x3000;\n  t['ideographicspecialparen'] = 0x3235;\n  t['ideographicstockparen'] = 0x3231;\n  t['ideographicstudyparen'] = 0x323B;\n  t['ideographicsunparen'] = 0x3230;\n  t['ideographicsuperviseparen'] = 0x323C;\n  t['ideographicwaterparen'] = 0x322C;\n  t['ideographicwoodparen'] = 0x322D;\n  t['ideographiczero'] = 0x3007;\n  t['ideographmetalcircle'] = 0x328E;\n  t['ideographmooncircle'] = 0x328A;\n  t['ideographnamecircle'] = 0x3294;\n  t['ideographsuncircle'] = 0x3290;\n  t['ideographwatercircle'] = 0x328C;\n  t['ideographwoodcircle'] = 0x328D;\n  t['ideva'] = 0x0907;\n  t['idieresis'] = 0x00EF;\n  t['idieresisacute'] = 0x1E2F;\n  t['idieresiscyrillic'] = 0x04E5;\n  t['idotbelow'] = 0x1ECB;\n  t['iebrevecyrillic'] = 0x04D7;\n  t['iecyrillic'] = 0x0435;\n  t['ieungacirclekorean'] = 0x3275;\n  t['ieungaparenkorean'] = 0x3215;\n  t['ieungcirclekorean'] = 0x3267;\n  t['ieungkorean'] = 0x3147;\n  t['ieungparenkorean'] = 0x3207;\n  t['igrave'] = 0x00EC;\n  t['igujarati'] = 0x0A87;\n  t['igurmukhi'] = 0x0A07;\n  t['ihiragana'] = 0x3044;\n  t['ihookabove'] = 0x1EC9;\n  t['iibengali'] = 0x0988;\n  t['iicyrillic'] = 0x0438;\n  t['iideva'] = 0x0908;\n  t['iigujarati'] = 0x0A88;\n  t['iigurmukhi'] = 0x0A08;\n  t['iimatragurmukhi'] = 0x0A40;\n  t['iinvertedbreve'] = 0x020B;\n  t['iishortcyrillic'] = 0x0439;\n  t['iivowelsignbengali'] = 0x09C0;\n  t['iivowelsigndeva'] = 0x0940;\n  t['iivowelsigngujarati'] = 0x0AC0;\n  t['ij'] = 0x0133;\n  t['ikatakana'] = 0x30A4;\n  t['ikatakanahalfwidth'] = 0xFF72;\n  t['ikorean'] = 0x3163;\n  t['ilde'] = 0x02DC;\n  t['iluyhebrew'] = 0x05AC;\n  t['imacron'] = 0x012B;\n  t['imacroncyrillic'] = 0x04E3;\n  t['imageorapproximatelyequal'] = 0x2253;\n  t['imatragurmukhi'] = 0x0A3F;\n  t['imonospace'] = 0xFF49;\n  t['increment'] = 0x2206;\n  t['infinity'] = 0x221E;\n  t['iniarmenian'] = 0x056B;\n  t['integral'] = 0x222B;\n  t['integralbottom'] = 0x2321;\n  t['integralbt'] = 0x2321;\n  t['integralex'] = 0xF8F5;\n  t['integraltop'] = 0x2320;\n  t['integraltp'] = 0x2320;\n  t['intersection'] = 0x2229;\n  t['intisquare'] = 0x3305;\n  t['invbullet'] = 0x25D8;\n  t['invcircle'] = 0x25D9;\n  t['invsmileface'] = 0x263B;\n  t['iocyrillic'] = 0x0451;\n  t['iogonek'] = 0x012F;\n  t['iota'] = 0x03B9;\n  t['iotadieresis'] = 0x03CA;\n  t['iotadieresistonos'] = 0x0390;\n  t['iotalatin'] = 0x0269;\n  t['iotatonos'] = 0x03AF;\n  t['iparen'] = 0x24A4;\n  t['irigurmukhi'] = 0x0A72;\n  t['ismallhiragana'] = 0x3043;\n  t['ismallkatakana'] = 0x30A3;\n  t['ismallkatakanahalfwidth'] = 0xFF68;\n  t['issharbengali'] = 0x09FA;\n  t['istroke'] = 0x0268;\n  t['isuperior'] = 0xF6ED;\n  t['iterationhiragana'] = 0x309D;\n  t['iterationkatakana'] = 0x30FD;\n  t['itilde'] = 0x0129;\n  t['itildebelow'] = 0x1E2D;\n  t['iubopomofo'] = 0x3129;\n  t['iucyrillic'] = 0x044E;\n  t['ivowelsignbengali'] = 0x09BF;\n  t['ivowelsigndeva'] = 0x093F;\n  t['ivowelsigngujarati'] = 0x0ABF;\n  t['izhitsacyrillic'] = 0x0475;\n  t['izhitsadblgravecyrillic'] = 0x0477;\n  t['j'] = 0x006A;\n  t['jaarmenian'] = 0x0571;\n  t['jabengali'] = 0x099C;\n  t['jadeva'] = 0x091C;\n  t['jagujarati'] = 0x0A9C;\n  t['jagurmukhi'] = 0x0A1C;\n  t['jbopomofo'] = 0x3110;\n  t['jcaron'] = 0x01F0;\n  t['jcircle'] = 0x24D9;\n  t['jcircumflex'] = 0x0135;\n  t['jcrossedtail'] = 0x029D;\n  t['jdotlessstroke'] = 0x025F;\n  t['jecyrillic'] = 0x0458;\n  t['jeemarabic'] = 0x062C;\n  t['jeemfinalarabic'] = 0xFE9E;\n  t['jeeminitialarabic'] = 0xFE9F;\n  t['jeemmedialarabic'] = 0xFEA0;\n  t['jeharabic'] = 0x0698;\n  t['jehfinalarabic'] = 0xFB8B;\n  t['jhabengali'] = 0x099D;\n  t['jhadeva'] = 0x091D;\n  t['jhagujarati'] = 0x0A9D;\n  t['jhagurmukhi'] = 0x0A1D;\n  t['jheharmenian'] = 0x057B;\n  t['jis'] = 0x3004;\n  t['jmonospace'] = 0xFF4A;\n  t['jparen'] = 0x24A5;\n  t['jsuperior'] = 0x02B2;\n  t['k'] = 0x006B;\n  t['kabashkircyrillic'] = 0x04A1;\n  t['kabengali'] = 0x0995;\n  t['kacute'] = 0x1E31;\n  t['kacyrillic'] = 0x043A;\n  t['kadescendercyrillic'] = 0x049B;\n  t['kadeva'] = 0x0915;\n  t['kaf'] = 0x05DB;\n  t['kafarabic'] = 0x0643;\n  t['kafdagesh'] = 0xFB3B;\n  t['kafdageshhebrew'] = 0xFB3B;\n  t['kaffinalarabic'] = 0xFEDA;\n  t['kafhebrew'] = 0x05DB;\n  t['kafinitialarabic'] = 0xFEDB;\n  t['kafmedialarabic'] = 0xFEDC;\n  t['kafrafehebrew'] = 0xFB4D;\n  t['kagujarati'] = 0x0A95;\n  t['kagurmukhi'] = 0x0A15;\n  t['kahiragana'] = 0x304B;\n  t['kahookcyrillic'] = 0x04C4;\n  t['kakatakana'] = 0x30AB;\n  t['kakatakanahalfwidth'] = 0xFF76;\n  t['kappa'] = 0x03BA;\n  t['kappasymbolgreek'] = 0x03F0;\n  t['kapyeounmieumkorean'] = 0x3171;\n  t['kapyeounphieuphkorean'] = 0x3184;\n  t['kapyeounpieupkorean'] = 0x3178;\n  t['kapyeounssangpieupkorean'] = 0x3179;\n  t['karoriisquare'] = 0x330D;\n  t['kashidaautoarabic'] = 0x0640;\n  t['kashidaautonosidebearingarabic'] = 0x0640;\n  t['kasmallkatakana'] = 0x30F5;\n  t['kasquare'] = 0x3384;\n  t['kasraarabic'] = 0x0650;\n  t['kasratanarabic'] = 0x064D;\n  t['kastrokecyrillic'] = 0x049F;\n  t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n  t['kaverticalstrokecyrillic'] = 0x049D;\n  t['kbopomofo'] = 0x310E;\n  t['kcalsquare'] = 0x3389;\n  t['kcaron'] = 0x01E9;\n  t['kcedilla'] = 0x0137;\n  t['kcircle'] = 0x24DA;\n  t['kcommaaccent'] = 0x0137;\n  t['kdotbelow'] = 0x1E33;\n  t['keharmenian'] = 0x0584;\n  t['kehiragana'] = 0x3051;\n  t['kekatakana'] = 0x30B1;\n  t['kekatakanahalfwidth'] = 0xFF79;\n  t['kenarmenian'] = 0x056F;\n  t['kesmallkatakana'] = 0x30F6;\n  t['kgreenlandic'] = 0x0138;\n  t['khabengali'] = 0x0996;\n  t['khacyrillic'] = 0x0445;\n  t['khadeva'] = 0x0916;\n  t['khagujarati'] = 0x0A96;\n  t['khagurmukhi'] = 0x0A16;\n  t['khaharabic'] = 0x062E;\n  t['khahfinalarabic'] = 0xFEA6;\n  t['khahinitialarabic'] = 0xFEA7;\n  t['khahmedialarabic'] = 0xFEA8;\n  t['kheicoptic'] = 0x03E7;\n  t['khhadeva'] = 0x0959;\n  t['khhagurmukhi'] = 0x0A59;\n  t['khieukhacirclekorean'] = 0x3278;\n  t['khieukhaparenkorean'] = 0x3218;\n  t['khieukhcirclekorean'] = 0x326A;\n  t['khieukhkorean'] = 0x314B;\n  t['khieukhparenkorean'] = 0x320A;\n  t['khokhaithai'] = 0x0E02;\n  t['khokhonthai'] = 0x0E05;\n  t['khokhuatthai'] = 0x0E03;\n  t['khokhwaithai'] = 0x0E04;\n  t['khomutthai'] = 0x0E5B;\n  t['khook'] = 0x0199;\n  t['khorakhangthai'] = 0x0E06;\n  t['khzsquare'] = 0x3391;\n  t['kihiragana'] = 0x304D;\n  t['kikatakana'] = 0x30AD;\n  t['kikatakanahalfwidth'] = 0xFF77;\n  t['kiroguramusquare'] = 0x3315;\n  t['kiromeetorusquare'] = 0x3316;\n  t['kirosquare'] = 0x3314;\n  t['kiyeokacirclekorean'] = 0x326E;\n  t['kiyeokaparenkorean'] = 0x320E;\n  t['kiyeokcirclekorean'] = 0x3260;\n  t['kiyeokkorean'] = 0x3131;\n  t['kiyeokparenkorean'] = 0x3200;\n  t['kiyeoksioskorean'] = 0x3133;\n  t['kjecyrillic'] = 0x045C;\n  t['klinebelow'] = 0x1E35;\n  t['klsquare'] = 0x3398;\n  t['kmcubedsquare'] = 0x33A6;\n  t['kmonospace'] = 0xFF4B;\n  t['kmsquaredsquare'] = 0x33A2;\n  t['kohiragana'] = 0x3053;\n  t['kohmsquare'] = 0x33C0;\n  t['kokaithai'] = 0x0E01;\n  t['kokatakana'] = 0x30B3;\n  t['kokatakanahalfwidth'] = 0xFF7A;\n  t['kooposquare'] = 0x331E;\n  t['koppacyrillic'] = 0x0481;\n  t['koreanstandardsymbol'] = 0x327F;\n  t['koroniscmb'] = 0x0343;\n  t['kparen'] = 0x24A6;\n  t['kpasquare'] = 0x33AA;\n  t['ksicyrillic'] = 0x046F;\n  t['ktsquare'] = 0x33CF;\n  t['kturned'] = 0x029E;\n  t['kuhiragana'] = 0x304F;\n  t['kukatakana'] = 0x30AF;\n  t['kukatakanahalfwidth'] = 0xFF78;\n  t['kvsquare'] = 0x33B8;\n  t['kwsquare'] = 0x33BE;\n  t['l'] = 0x006C;\n  t['labengali'] = 0x09B2;\n  t['lacute'] = 0x013A;\n  t['ladeva'] = 0x0932;\n  t['lagujarati'] = 0x0AB2;\n  t['lagurmukhi'] = 0x0A32;\n  t['lakkhangyaothai'] = 0x0E45;\n  t['lamaleffinalarabic'] = 0xFEFC;\n  t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n  t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n  t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n  t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n  t['lamalefisolatedarabic'] = 0xFEFB;\n  t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n  t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n  t['lamarabic'] = 0x0644;\n  t['lambda'] = 0x03BB;\n  t['lambdastroke'] = 0x019B;\n  t['lamed'] = 0x05DC;\n  t['lameddagesh'] = 0xFB3C;\n  t['lameddageshhebrew'] = 0xFB3C;\n  t['lamedhebrew'] = 0x05DC;\n  t['lamfinalarabic'] = 0xFEDE;\n  t['lamhahinitialarabic'] = 0xFCCA;\n  t['laminitialarabic'] = 0xFEDF;\n  t['lamjeeminitialarabic'] = 0xFCC9;\n  t['lamkhahinitialarabic'] = 0xFCCB;\n  t['lamlamhehisolatedarabic'] = 0xFDF2;\n  t['lammedialarabic'] = 0xFEE0;\n  t['lammeemhahinitialarabic'] = 0xFD88;\n  t['lammeeminitialarabic'] = 0xFCCC;\n  t['largecircle'] = 0x25EF;\n  t['lbar'] = 0x019A;\n  t['lbelt'] = 0x026C;\n  t['lbopomofo'] = 0x310C;\n  t['lcaron'] = 0x013E;\n  t['lcedilla'] = 0x013C;\n  t['lcircle'] = 0x24DB;\n  t['lcircumflexbelow'] = 0x1E3D;\n  t['lcommaaccent'] = 0x013C;\n  t['ldot'] = 0x0140;\n  t['ldotaccent'] = 0x0140;\n  t['ldotbelow'] = 0x1E37;\n  t['ldotbelowmacron'] = 0x1E39;\n  t['leftangleabovecmb'] = 0x031A;\n  t['lefttackbelowcmb'] = 0x0318;\n  t['less'] = 0x003C;\n  t['lessequal'] = 0x2264;\n  t['lessequalorgreater'] = 0x22DA;\n  t['lessmonospace'] = 0xFF1C;\n  t['lessorequivalent'] = 0x2272;\n  t['lessorgreater'] = 0x2276;\n  t['lessoverequal'] = 0x2266;\n  t['lesssmall'] = 0xFE64;\n  t['lezh'] = 0x026E;\n  t['lfblock'] = 0x258C;\n  t['lhookretroflex'] = 0x026D;\n  t['lira'] = 0x20A4;\n  t['liwnarmenian'] = 0x056C;\n  t['lj'] = 0x01C9;\n  t['ljecyrillic'] = 0x0459;\n  t['ll'] = 0xF6C0;\n  t['lladeva'] = 0x0933;\n  t['llagujarati'] = 0x0AB3;\n  t['llinebelow'] = 0x1E3B;\n  t['llladeva'] = 0x0934;\n  t['llvocalicbengali'] = 0x09E1;\n  t['llvocalicdeva'] = 0x0961;\n  t['llvocalicvowelsignbengali'] = 0x09E3;\n  t['llvocalicvowelsigndeva'] = 0x0963;\n  t['lmiddletilde'] = 0x026B;\n  t['lmonospace'] = 0xFF4C;\n  t['lmsquare'] = 0x33D0;\n  t['lochulathai'] = 0x0E2C;\n  t['logicaland'] = 0x2227;\n  t['logicalnot'] = 0x00AC;\n  t['logicalnotreversed'] = 0x2310;\n  t['logicalor'] = 0x2228;\n  t['lolingthai'] = 0x0E25;\n  t['longs'] = 0x017F;\n  t['lowlinecenterline'] = 0xFE4E;\n  t['lowlinecmb'] = 0x0332;\n  t['lowlinedashed'] = 0xFE4D;\n  t['lozenge'] = 0x25CA;\n  t['lparen'] = 0x24A7;\n  t['lslash'] = 0x0142;\n  t['lsquare'] = 0x2113;\n  t['lsuperior'] = 0xF6EE;\n  t['ltshade'] = 0x2591;\n  t['luthai'] = 0x0E26;\n  t['lvocalicbengali'] = 0x098C;\n  t['lvocalicdeva'] = 0x090C;\n  t['lvocalicvowelsignbengali'] = 0x09E2;\n  t['lvocalicvowelsigndeva'] = 0x0962;\n  t['lxsquare'] = 0x33D3;\n  t['m'] = 0x006D;\n  t['mabengali'] = 0x09AE;\n  t['macron'] = 0x00AF;\n  t['macronbelowcmb'] = 0x0331;\n  t['macroncmb'] = 0x0304;\n  t['macronlowmod'] = 0x02CD;\n  t['macronmonospace'] = 0xFFE3;\n  t['macute'] = 0x1E3F;\n  t['madeva'] = 0x092E;\n  t['magujarati'] = 0x0AAE;\n  t['magurmukhi'] = 0x0A2E;\n  t['mahapakhhebrew'] = 0x05A4;\n  t['mahapakhlefthebrew'] = 0x05A4;\n  t['mahiragana'] = 0x307E;\n  t['maichattawalowleftthai'] = 0xF895;\n  t['maichattawalowrightthai'] = 0xF894;\n  t['maichattawathai'] = 0x0E4B;\n  t['maichattawaupperleftthai'] = 0xF893;\n  t['maieklowleftthai'] = 0xF88C;\n  t['maieklowrightthai'] = 0xF88B;\n  t['maiekthai'] = 0x0E48;\n  t['maiekupperleftthai'] = 0xF88A;\n  t['maihanakatleftthai'] = 0xF884;\n  t['maihanakatthai'] = 0x0E31;\n  t['maitaikhuleftthai'] = 0xF889;\n  t['maitaikhuthai'] = 0x0E47;\n  t['maitholowleftthai'] = 0xF88F;\n  t['maitholowrightthai'] = 0xF88E;\n  t['maithothai'] = 0x0E49;\n  t['maithoupperleftthai'] = 0xF88D;\n  t['maitrilowleftthai'] = 0xF892;\n  t['maitrilowrightthai'] = 0xF891;\n  t['maitrithai'] = 0x0E4A;\n  t['maitriupperleftthai'] = 0xF890;\n  t['maiyamokthai'] = 0x0E46;\n  t['makatakana'] = 0x30DE;\n  t['makatakanahalfwidth'] = 0xFF8F;\n  t['male'] = 0x2642;\n  t['mansyonsquare'] = 0x3347;\n  t['maqafhebrew'] = 0x05BE;\n  t['mars'] = 0x2642;\n  t['masoracirclehebrew'] = 0x05AF;\n  t['masquare'] = 0x3383;\n  t['mbopomofo'] = 0x3107;\n  t['mbsquare'] = 0x33D4;\n  t['mcircle'] = 0x24DC;\n  t['mcubedsquare'] = 0x33A5;\n  t['mdotaccent'] = 0x1E41;\n  t['mdotbelow'] = 0x1E43;\n  t['meemarabic'] = 0x0645;\n  t['meemfinalarabic'] = 0xFEE2;\n  t['meeminitialarabic'] = 0xFEE3;\n  t['meemmedialarabic'] = 0xFEE4;\n  t['meemmeeminitialarabic'] = 0xFCD1;\n  t['meemmeemisolatedarabic'] = 0xFC48;\n  t['meetorusquare'] = 0x334D;\n  t['mehiragana'] = 0x3081;\n  t['meizierasquare'] = 0x337E;\n  t['mekatakana'] = 0x30E1;\n  t['mekatakanahalfwidth'] = 0xFF92;\n  t['mem'] = 0x05DE;\n  t['memdagesh'] = 0xFB3E;\n  t['memdageshhebrew'] = 0xFB3E;\n  t['memhebrew'] = 0x05DE;\n  t['menarmenian'] = 0x0574;\n  t['merkhahebrew'] = 0x05A5;\n  t['merkhakefulahebrew'] = 0x05A6;\n  t['merkhakefulalefthebrew'] = 0x05A6;\n  t['merkhalefthebrew'] = 0x05A5;\n  t['mhook'] = 0x0271;\n  t['mhzsquare'] = 0x3392;\n  t['middledotkatakanahalfwidth'] = 0xFF65;\n  t['middot'] = 0x00B7;\n  t['mieumacirclekorean'] = 0x3272;\n  t['mieumaparenkorean'] = 0x3212;\n  t['mieumcirclekorean'] = 0x3264;\n  t['mieumkorean'] = 0x3141;\n  t['mieumpansioskorean'] = 0x3170;\n  t['mieumparenkorean'] = 0x3204;\n  t['mieumpieupkorean'] = 0x316E;\n  t['mieumsioskorean'] = 0x316F;\n  t['mihiragana'] = 0x307F;\n  t['mikatakana'] = 0x30DF;\n  t['mikatakanahalfwidth'] = 0xFF90;\n  t['minus'] = 0x2212;\n  t['minusbelowcmb'] = 0x0320;\n  t['minuscircle'] = 0x2296;\n  t['minusmod'] = 0x02D7;\n  t['minusplus'] = 0x2213;\n  t['minute'] = 0x2032;\n  t['miribaarusquare'] = 0x334A;\n  t['mirisquare'] = 0x3349;\n  t['mlonglegturned'] = 0x0270;\n  t['mlsquare'] = 0x3396;\n  t['mmcubedsquare'] = 0x33A3;\n  t['mmonospace'] = 0xFF4D;\n  t['mmsquaredsquare'] = 0x339F;\n  t['mohiragana'] = 0x3082;\n  t['mohmsquare'] = 0x33C1;\n  t['mokatakana'] = 0x30E2;\n  t['mokatakanahalfwidth'] = 0xFF93;\n  t['molsquare'] = 0x33D6;\n  t['momathai'] = 0x0E21;\n  t['moverssquare'] = 0x33A7;\n  t['moverssquaredsquare'] = 0x33A8;\n  t['mparen'] = 0x24A8;\n  t['mpasquare'] = 0x33AB;\n  t['mssquare'] = 0x33B3;\n  t['msuperior'] = 0xF6EF;\n  t['mturned'] = 0x026F;\n  t['mu'] = 0x00B5;\n  t['mu1'] = 0x00B5;\n  t['muasquare'] = 0x3382;\n  t['muchgreater'] = 0x226B;\n  t['muchless'] = 0x226A;\n  t['mufsquare'] = 0x338C;\n  t['mugreek'] = 0x03BC;\n  t['mugsquare'] = 0x338D;\n  t['muhiragana'] = 0x3080;\n  t['mukatakana'] = 0x30E0;\n  t['mukatakanahalfwidth'] = 0xFF91;\n  t['mulsquare'] = 0x3395;\n  t['multiply'] = 0x00D7;\n  t['mumsquare'] = 0x339B;\n  t['munahhebrew'] = 0x05A3;\n  t['munahlefthebrew'] = 0x05A3;\n  t['musicalnote'] = 0x266A;\n  t['musicalnotedbl'] = 0x266B;\n  t['musicflatsign'] = 0x266D;\n  t['musicsharpsign'] = 0x266F;\n  t['mussquare'] = 0x33B2;\n  t['muvsquare'] = 0x33B6;\n  t['muwsquare'] = 0x33BC;\n  t['mvmegasquare'] = 0x33B9;\n  t['mvsquare'] = 0x33B7;\n  t['mwmegasquare'] = 0x33BF;\n  t['mwsquare'] = 0x33BD;\n  t['n'] = 0x006E;\n  t['nabengali'] = 0x09A8;\n  t['nabla'] = 0x2207;\n  t['nacute'] = 0x0144;\n  t['nadeva'] = 0x0928;\n  t['nagujarati'] = 0x0AA8;\n  t['nagurmukhi'] = 0x0A28;\n  t['nahiragana'] = 0x306A;\n  t['nakatakana'] = 0x30CA;\n  t['nakatakanahalfwidth'] = 0xFF85;\n  t['napostrophe'] = 0x0149;\n  t['nasquare'] = 0x3381;\n  t['nbopomofo'] = 0x310B;\n  t['nbspace'] = 0x00A0;\n  t['ncaron'] = 0x0148;\n  t['ncedilla'] = 0x0146;\n  t['ncircle'] = 0x24DD;\n  t['ncircumflexbelow'] = 0x1E4B;\n  t['ncommaaccent'] = 0x0146;\n  t['ndotaccent'] = 0x1E45;\n  t['ndotbelow'] = 0x1E47;\n  t['nehiragana'] = 0x306D;\n  t['nekatakana'] = 0x30CD;\n  t['nekatakanahalfwidth'] = 0xFF88;\n  t['newsheqelsign'] = 0x20AA;\n  t['nfsquare'] = 0x338B;\n  t['ngabengali'] = 0x0999;\n  t['ngadeva'] = 0x0919;\n  t['ngagujarati'] = 0x0A99;\n  t['ngagurmukhi'] = 0x0A19;\n  t['ngonguthai'] = 0x0E07;\n  t['nhiragana'] = 0x3093;\n  t['nhookleft'] = 0x0272;\n  t['nhookretroflex'] = 0x0273;\n  t['nieunacirclekorean'] = 0x326F;\n  t['nieunaparenkorean'] = 0x320F;\n  t['nieuncieuckorean'] = 0x3135;\n  t['nieuncirclekorean'] = 0x3261;\n  t['nieunhieuhkorean'] = 0x3136;\n  t['nieunkorean'] = 0x3134;\n  t['nieunpansioskorean'] = 0x3168;\n  t['nieunparenkorean'] = 0x3201;\n  t['nieunsioskorean'] = 0x3167;\n  t['nieuntikeutkorean'] = 0x3166;\n  t['nihiragana'] = 0x306B;\n  t['nikatakana'] = 0x30CB;\n  t['nikatakanahalfwidth'] = 0xFF86;\n  t['nikhahitleftthai'] = 0xF899;\n  t['nikhahitthai'] = 0x0E4D;\n  t['nine'] = 0x0039;\n  t['ninearabic'] = 0x0669;\n  t['ninebengali'] = 0x09EF;\n  t['ninecircle'] = 0x2468;\n  t['ninecircleinversesansserif'] = 0x2792;\n  t['ninedeva'] = 0x096F;\n  t['ninegujarati'] = 0x0AEF;\n  t['ninegurmukhi'] = 0x0A6F;\n  t['ninehackarabic'] = 0x0669;\n  t['ninehangzhou'] = 0x3029;\n  t['nineideographicparen'] = 0x3228;\n  t['nineinferior'] = 0x2089;\n  t['ninemonospace'] = 0xFF19;\n  t['nineoldstyle'] = 0xF739;\n  t['nineparen'] = 0x247C;\n  t['nineperiod'] = 0x2490;\n  t['ninepersian'] = 0x06F9;\n  t['nineroman'] = 0x2178;\n  t['ninesuperior'] = 0x2079;\n  t['nineteencircle'] = 0x2472;\n  t['nineteenparen'] = 0x2486;\n  t['nineteenperiod'] = 0x249A;\n  t['ninethai'] = 0x0E59;\n  t['nj'] = 0x01CC;\n  t['njecyrillic'] = 0x045A;\n  t['nkatakana'] = 0x30F3;\n  t['nkatakanahalfwidth'] = 0xFF9D;\n  t['nlegrightlong'] = 0x019E;\n  t['nlinebelow'] = 0x1E49;\n  t['nmonospace'] = 0xFF4E;\n  t['nmsquare'] = 0x339A;\n  t['nnabengali'] = 0x09A3;\n  t['nnadeva'] = 0x0923;\n  t['nnagujarati'] = 0x0AA3;\n  t['nnagurmukhi'] = 0x0A23;\n  t['nnnadeva'] = 0x0929;\n  t['nohiragana'] = 0x306E;\n  t['nokatakana'] = 0x30CE;\n  t['nokatakanahalfwidth'] = 0xFF89;\n  t['nonbreakingspace'] = 0x00A0;\n  t['nonenthai'] = 0x0E13;\n  t['nonuthai'] = 0x0E19;\n  t['noonarabic'] = 0x0646;\n  t['noonfinalarabic'] = 0xFEE6;\n  t['noonghunnaarabic'] = 0x06BA;\n  t['noonghunnafinalarabic'] = 0xFB9F;\n  t['nooninitialarabic'] = 0xFEE7;\n  t['noonjeeminitialarabic'] = 0xFCD2;\n  t['noonjeemisolatedarabic'] = 0xFC4B;\n  t['noonmedialarabic'] = 0xFEE8;\n  t['noonmeeminitialarabic'] = 0xFCD5;\n  t['noonmeemisolatedarabic'] = 0xFC4E;\n  t['noonnoonfinalarabic'] = 0xFC8D;\n  t['notcontains'] = 0x220C;\n  t['notelement'] = 0x2209;\n  t['notelementof'] = 0x2209;\n  t['notequal'] = 0x2260;\n  t['notgreater'] = 0x226F;\n  t['notgreaternorequal'] = 0x2271;\n  t['notgreaternorless'] = 0x2279;\n  t['notidentical'] = 0x2262;\n  t['notless'] = 0x226E;\n  t['notlessnorequal'] = 0x2270;\n  t['notparallel'] = 0x2226;\n  t['notprecedes'] = 0x2280;\n  t['notsubset'] = 0x2284;\n  t['notsucceeds'] = 0x2281;\n  t['notsuperset'] = 0x2285;\n  t['nowarmenian'] = 0x0576;\n  t['nparen'] = 0x24A9;\n  t['nssquare'] = 0x33B1;\n  t['nsuperior'] = 0x207F;\n  t['ntilde'] = 0x00F1;\n  t['nu'] = 0x03BD;\n  t['nuhiragana'] = 0x306C;\n  t['nukatakana'] = 0x30CC;\n  t['nukatakanahalfwidth'] = 0xFF87;\n  t['nuktabengali'] = 0x09BC;\n  t['nuktadeva'] = 0x093C;\n  t['nuktagujarati'] = 0x0ABC;\n  t['nuktagurmukhi'] = 0x0A3C;\n  t['numbersign'] = 0x0023;\n  t['numbersignmonospace'] = 0xFF03;\n  t['numbersignsmall'] = 0xFE5F;\n  t['numeralsigngreek'] = 0x0374;\n  t['numeralsignlowergreek'] = 0x0375;\n  t['numero'] = 0x2116;\n  t['nun'] = 0x05E0;\n  t['nundagesh'] = 0xFB40;\n  t['nundageshhebrew'] = 0xFB40;\n  t['nunhebrew'] = 0x05E0;\n  t['nvsquare'] = 0x33B5;\n  t['nwsquare'] = 0x33BB;\n  t['nyabengali'] = 0x099E;\n  t['nyadeva'] = 0x091E;\n  t['nyagujarati'] = 0x0A9E;\n  t['nyagurmukhi'] = 0x0A1E;\n  t['o'] = 0x006F;\n  t['oacute'] = 0x00F3;\n  t['oangthai'] = 0x0E2D;\n  t['obarred'] = 0x0275;\n  t['obarredcyrillic'] = 0x04E9;\n  t['obarreddieresiscyrillic'] = 0x04EB;\n  t['obengali'] = 0x0993;\n  t['obopomofo'] = 0x311B;\n  t['obreve'] = 0x014F;\n  t['ocandradeva'] = 0x0911;\n  t['ocandragujarati'] = 0x0A91;\n  t['ocandravowelsigndeva'] = 0x0949;\n  t['ocandravowelsigngujarati'] = 0x0AC9;\n  t['ocaron'] = 0x01D2;\n  t['ocircle'] = 0x24DE;\n  t['ocircumflex'] = 0x00F4;\n  t['ocircumflexacute'] = 0x1ED1;\n  t['ocircumflexdotbelow'] = 0x1ED9;\n  t['ocircumflexgrave'] = 0x1ED3;\n  t['ocircumflexhookabove'] = 0x1ED5;\n  t['ocircumflextilde'] = 0x1ED7;\n  t['ocyrillic'] = 0x043E;\n  t['odblacute'] = 0x0151;\n  t['odblgrave'] = 0x020D;\n  t['odeva'] = 0x0913;\n  t['odieresis'] = 0x00F6;\n  t['odieresiscyrillic'] = 0x04E7;\n  t['odotbelow'] = 0x1ECD;\n  t['oe'] = 0x0153;\n  t['oekorean'] = 0x315A;\n  t['ogonek'] = 0x02DB;\n  t['ogonekcmb'] = 0x0328;\n  t['ograve'] = 0x00F2;\n  t['ogujarati'] = 0x0A93;\n  t['oharmenian'] = 0x0585;\n  t['ohiragana'] = 0x304A;\n  t['ohookabove'] = 0x1ECF;\n  t['ohorn'] = 0x01A1;\n  t['ohornacute'] = 0x1EDB;\n  t['ohorndotbelow'] = 0x1EE3;\n  t['ohorngrave'] = 0x1EDD;\n  t['ohornhookabove'] = 0x1EDF;\n  t['ohorntilde'] = 0x1EE1;\n  t['ohungarumlaut'] = 0x0151;\n  t['oi'] = 0x01A3;\n  t['oinvertedbreve'] = 0x020F;\n  t['okatakana'] = 0x30AA;\n  t['okatakanahalfwidth'] = 0xFF75;\n  t['okorean'] = 0x3157;\n  t['olehebrew'] = 0x05AB;\n  t['omacron'] = 0x014D;\n  t['omacronacute'] = 0x1E53;\n  t['omacrongrave'] = 0x1E51;\n  t['omdeva'] = 0x0950;\n  t['omega'] = 0x03C9;\n  t['omega1'] = 0x03D6;\n  t['omegacyrillic'] = 0x0461;\n  t['omegalatinclosed'] = 0x0277;\n  t['omegaroundcyrillic'] = 0x047B;\n  t['omegatitlocyrillic'] = 0x047D;\n  t['omegatonos'] = 0x03CE;\n  t['omgujarati'] = 0x0AD0;\n  t['omicron'] = 0x03BF;\n  t['omicrontonos'] = 0x03CC;\n  t['omonospace'] = 0xFF4F;\n  t['one'] = 0x0031;\n  t['onearabic'] = 0x0661;\n  t['onebengali'] = 0x09E7;\n  t['onecircle'] = 0x2460;\n  t['onecircleinversesansserif'] = 0x278A;\n  t['onedeva'] = 0x0967;\n  t['onedotenleader'] = 0x2024;\n  t['oneeighth'] = 0x215B;\n  t['onefitted'] = 0xF6DC;\n  t['onegujarati'] = 0x0AE7;\n  t['onegurmukhi'] = 0x0A67;\n  t['onehackarabic'] = 0x0661;\n  t['onehalf'] = 0x00BD;\n  t['onehangzhou'] = 0x3021;\n  t['oneideographicparen'] = 0x3220;\n  t['oneinferior'] = 0x2081;\n  t['onemonospace'] = 0xFF11;\n  t['onenumeratorbengali'] = 0x09F4;\n  t['oneoldstyle'] = 0xF731;\n  t['oneparen'] = 0x2474;\n  t['oneperiod'] = 0x2488;\n  t['onepersian'] = 0x06F1;\n  t['onequarter'] = 0x00BC;\n  t['oneroman'] = 0x2170;\n  t['onesuperior'] = 0x00B9;\n  t['onethai'] = 0x0E51;\n  t['onethird'] = 0x2153;\n  t['oogonek'] = 0x01EB;\n  t['oogonekmacron'] = 0x01ED;\n  t['oogurmukhi'] = 0x0A13;\n  t['oomatragurmukhi'] = 0x0A4B;\n  t['oopen'] = 0x0254;\n  t['oparen'] = 0x24AA;\n  t['openbullet'] = 0x25E6;\n  t['option'] = 0x2325;\n  t['ordfeminine'] = 0x00AA;\n  t['ordmasculine'] = 0x00BA;\n  t['orthogonal'] = 0x221F;\n  t['oshortdeva'] = 0x0912;\n  t['oshortvowelsigndeva'] = 0x094A;\n  t['oslash'] = 0x00F8;\n  t['oslashacute'] = 0x01FF;\n  t['osmallhiragana'] = 0x3049;\n  t['osmallkatakana'] = 0x30A9;\n  t['osmallkatakanahalfwidth'] = 0xFF6B;\n  t['ostrokeacute'] = 0x01FF;\n  t['osuperior'] = 0xF6F0;\n  t['otcyrillic'] = 0x047F;\n  t['otilde'] = 0x00F5;\n  t['otildeacute'] = 0x1E4D;\n  t['otildedieresis'] = 0x1E4F;\n  t['oubopomofo'] = 0x3121;\n  t['overline'] = 0x203E;\n  t['overlinecenterline'] = 0xFE4A;\n  t['overlinecmb'] = 0x0305;\n  t['overlinedashed'] = 0xFE49;\n  t['overlinedblwavy'] = 0xFE4C;\n  t['overlinewavy'] = 0xFE4B;\n  t['overscore'] = 0x00AF;\n  t['ovowelsignbengali'] = 0x09CB;\n  t['ovowelsigndeva'] = 0x094B;\n  t['ovowelsigngujarati'] = 0x0ACB;\n  t['p'] = 0x0070;\n  t['paampssquare'] = 0x3380;\n  t['paasentosquare'] = 0x332B;\n  t['pabengali'] = 0x09AA;\n  t['pacute'] = 0x1E55;\n  t['padeva'] = 0x092A;\n  t['pagedown'] = 0x21DF;\n  t['pageup'] = 0x21DE;\n  t['pagujarati'] = 0x0AAA;\n  t['pagurmukhi'] = 0x0A2A;\n  t['pahiragana'] = 0x3071;\n  t['paiyannoithai'] = 0x0E2F;\n  t['pakatakana'] = 0x30D1;\n  t['palatalizationcyrilliccmb'] = 0x0484;\n  t['palochkacyrillic'] = 0x04C0;\n  t['pansioskorean'] = 0x317F;\n  t['paragraph'] = 0x00B6;\n  t['parallel'] = 0x2225;\n  t['parenleft'] = 0x0028;\n  t['parenleftaltonearabic'] = 0xFD3E;\n  t['parenleftbt'] = 0xF8ED;\n  t['parenleftex'] = 0xF8EC;\n  t['parenleftinferior'] = 0x208D;\n  t['parenleftmonospace'] = 0xFF08;\n  t['parenleftsmall'] = 0xFE59;\n  t['parenleftsuperior'] = 0x207D;\n  t['parenlefttp'] = 0xF8EB;\n  t['parenleftvertical'] = 0xFE35;\n  t['parenright'] = 0x0029;\n  t['parenrightaltonearabic'] = 0xFD3F;\n  t['parenrightbt'] = 0xF8F8;\n  t['parenrightex'] = 0xF8F7;\n  t['parenrightinferior'] = 0x208E;\n  t['parenrightmonospace'] = 0xFF09;\n  t['parenrightsmall'] = 0xFE5A;\n  t['parenrightsuperior'] = 0x207E;\n  t['parenrighttp'] = 0xF8F6;\n  t['parenrightvertical'] = 0xFE36;\n  t['partialdiff'] = 0x2202;\n  t['paseqhebrew'] = 0x05C0;\n  t['pashtahebrew'] = 0x0599;\n  t['pasquare'] = 0x33A9;\n  t['patah'] = 0x05B7;\n  t['patah11'] = 0x05B7;\n  t['patah1d'] = 0x05B7;\n  t['patah2a'] = 0x05B7;\n  t['patahhebrew'] = 0x05B7;\n  t['patahnarrowhebrew'] = 0x05B7;\n  t['patahquarterhebrew'] = 0x05B7;\n  t['patahwidehebrew'] = 0x05B7;\n  t['pazerhebrew'] = 0x05A1;\n  t['pbopomofo'] = 0x3106;\n  t['pcircle'] = 0x24DF;\n  t['pdotaccent'] = 0x1E57;\n  t['pe'] = 0x05E4;\n  t['pecyrillic'] = 0x043F;\n  t['pedagesh'] = 0xFB44;\n  t['pedageshhebrew'] = 0xFB44;\n  t['peezisquare'] = 0x333B;\n  t['pefinaldageshhebrew'] = 0xFB43;\n  t['peharabic'] = 0x067E;\n  t['peharmenian'] = 0x057A;\n  t['pehebrew'] = 0x05E4;\n  t['pehfinalarabic'] = 0xFB57;\n  t['pehinitialarabic'] = 0xFB58;\n  t['pehiragana'] = 0x307A;\n  t['pehmedialarabic'] = 0xFB59;\n  t['pekatakana'] = 0x30DA;\n  t['pemiddlehookcyrillic'] = 0x04A7;\n  t['perafehebrew'] = 0xFB4E;\n  t['percent'] = 0x0025;\n  t['percentarabic'] = 0x066A;\n  t['percentmonospace'] = 0xFF05;\n  t['percentsmall'] = 0xFE6A;\n  t['period'] = 0x002E;\n  t['periodarmenian'] = 0x0589;\n  t['periodcentered'] = 0x00B7;\n  t['periodhalfwidth'] = 0xFF61;\n  t['periodinferior'] = 0xF6E7;\n  t['periodmonospace'] = 0xFF0E;\n  t['periodsmall'] = 0xFE52;\n  t['periodsuperior'] = 0xF6E8;\n  t['perispomenigreekcmb'] = 0x0342;\n  t['perpendicular'] = 0x22A5;\n  t['perthousand'] = 0x2030;\n  t['peseta'] = 0x20A7;\n  t['pfsquare'] = 0x338A;\n  t['phabengali'] = 0x09AB;\n  t['phadeva'] = 0x092B;\n  t['phagujarati'] = 0x0AAB;\n  t['phagurmukhi'] = 0x0A2B;\n  t['phi'] = 0x03C6;\n  t['phi1'] = 0x03D5;\n  t['phieuphacirclekorean'] = 0x327A;\n  t['phieuphaparenkorean'] = 0x321A;\n  t['phieuphcirclekorean'] = 0x326C;\n  t['phieuphkorean'] = 0x314D;\n  t['phieuphparenkorean'] = 0x320C;\n  t['philatin'] = 0x0278;\n  t['phinthuthai'] = 0x0E3A;\n  t['phisymbolgreek'] = 0x03D5;\n  t['phook'] = 0x01A5;\n  t['phophanthai'] = 0x0E1E;\n  t['phophungthai'] = 0x0E1C;\n  t['phosamphaothai'] = 0x0E20;\n  t['pi'] = 0x03C0;\n  t['pieupacirclekorean'] = 0x3273;\n  t['pieupaparenkorean'] = 0x3213;\n  t['pieupcieuckorean'] = 0x3176;\n  t['pieupcirclekorean'] = 0x3265;\n  t['pieupkiyeokkorean'] = 0x3172;\n  t['pieupkorean'] = 0x3142;\n  t['pieupparenkorean'] = 0x3205;\n  t['pieupsioskiyeokkorean'] = 0x3174;\n  t['pieupsioskorean'] = 0x3144;\n  t['pieupsiostikeutkorean'] = 0x3175;\n  t['pieupthieuthkorean'] = 0x3177;\n  t['pieuptikeutkorean'] = 0x3173;\n  t['pihiragana'] = 0x3074;\n  t['pikatakana'] = 0x30D4;\n  t['pisymbolgreek'] = 0x03D6;\n  t['piwrarmenian'] = 0x0583;\n  t['plus'] = 0x002B;\n  t['plusbelowcmb'] = 0x031F;\n  t['pluscircle'] = 0x2295;\n  t['plusminus'] = 0x00B1;\n  t['plusmod'] = 0x02D6;\n  t['plusmonospace'] = 0xFF0B;\n  t['plussmall'] = 0xFE62;\n  t['plussuperior'] = 0x207A;\n  t['pmonospace'] = 0xFF50;\n  t['pmsquare'] = 0x33D8;\n  t['pohiragana'] = 0x307D;\n  t['pointingindexdownwhite'] = 0x261F;\n  t['pointingindexleftwhite'] = 0x261C;\n  t['pointingindexrightwhite'] = 0x261E;\n  t['pointingindexupwhite'] = 0x261D;\n  t['pokatakana'] = 0x30DD;\n  t['poplathai'] = 0x0E1B;\n  t['postalmark'] = 0x3012;\n  t['postalmarkface'] = 0x3020;\n  t['pparen'] = 0x24AB;\n  t['precedes'] = 0x227A;\n  t['prescription'] = 0x211E;\n  t['primemod'] = 0x02B9;\n  t['primereversed'] = 0x2035;\n  t['product'] = 0x220F;\n  t['projective'] = 0x2305;\n  t['prolongedkana'] = 0x30FC;\n  t['propellor'] = 0x2318;\n  t['propersubset'] = 0x2282;\n  t['propersuperset'] = 0x2283;\n  t['proportion'] = 0x2237;\n  t['proportional'] = 0x221D;\n  t['psi'] = 0x03C8;\n  t['psicyrillic'] = 0x0471;\n  t['psilipneumatacyrilliccmb'] = 0x0486;\n  t['pssquare'] = 0x33B0;\n  t['puhiragana'] = 0x3077;\n  t['pukatakana'] = 0x30D7;\n  t['pvsquare'] = 0x33B4;\n  t['pwsquare'] = 0x33BA;\n  t['q'] = 0x0071;\n  t['qadeva'] = 0x0958;\n  t['qadmahebrew'] = 0x05A8;\n  t['qafarabic'] = 0x0642;\n  t['qaffinalarabic'] = 0xFED6;\n  t['qafinitialarabic'] = 0xFED7;\n  t['qafmedialarabic'] = 0xFED8;\n  t['qamats'] = 0x05B8;\n  t['qamats10'] = 0x05B8;\n  t['qamats1a'] = 0x05B8;\n  t['qamats1c'] = 0x05B8;\n  t['qamats27'] = 0x05B8;\n  t['qamats29'] = 0x05B8;\n  t['qamats33'] = 0x05B8;\n  t['qamatsde'] = 0x05B8;\n  t['qamatshebrew'] = 0x05B8;\n  t['qamatsnarrowhebrew'] = 0x05B8;\n  t['qamatsqatanhebrew'] = 0x05B8;\n  t['qamatsqatannarrowhebrew'] = 0x05B8;\n  t['qamatsqatanquarterhebrew'] = 0x05B8;\n  t['qamatsqatanwidehebrew'] = 0x05B8;\n  t['qamatsquarterhebrew'] = 0x05B8;\n  t['qamatswidehebrew'] = 0x05B8;\n  t['qarneyparahebrew'] = 0x059F;\n  t['qbopomofo'] = 0x3111;\n  t['qcircle'] = 0x24E0;\n  t['qhook'] = 0x02A0;\n  t['qmonospace'] = 0xFF51;\n  t['qof'] = 0x05E7;\n  t['qofdagesh'] = 0xFB47;\n  t['qofdageshhebrew'] = 0xFB47;\n  t['qofhebrew'] = 0x05E7;\n  t['qparen'] = 0x24AC;\n  t['quarternote'] = 0x2669;\n  t['qubuts'] = 0x05BB;\n  t['qubuts18'] = 0x05BB;\n  t['qubuts25'] = 0x05BB;\n  t['qubuts31'] = 0x05BB;\n  t['qubutshebrew'] = 0x05BB;\n  t['qubutsnarrowhebrew'] = 0x05BB;\n  t['qubutsquarterhebrew'] = 0x05BB;\n  t['qubutswidehebrew'] = 0x05BB;\n  t['question'] = 0x003F;\n  t['questionarabic'] = 0x061F;\n  t['questionarmenian'] = 0x055E;\n  t['questiondown'] = 0x00BF;\n  t['questiondownsmall'] = 0xF7BF;\n  t['questiongreek'] = 0x037E;\n  t['questionmonospace'] = 0xFF1F;\n  t['questionsmall'] = 0xF73F;\n  t['quotedbl'] = 0x0022;\n  t['quotedblbase'] = 0x201E;\n  t['quotedblleft'] = 0x201C;\n  t['quotedblmonospace'] = 0xFF02;\n  t['quotedblprime'] = 0x301E;\n  t['quotedblprimereversed'] = 0x301D;\n  t['quotedblright'] = 0x201D;\n  t['quoteleft'] = 0x2018;\n  t['quoteleftreversed'] = 0x201B;\n  t['quotereversed'] = 0x201B;\n  t['quoteright'] = 0x2019;\n  t['quoterightn'] = 0x0149;\n  t['quotesinglbase'] = 0x201A;\n  t['quotesingle'] = 0x0027;\n  t['quotesinglemonospace'] = 0xFF07;\n  t['r'] = 0x0072;\n  t['raarmenian'] = 0x057C;\n  t['rabengali'] = 0x09B0;\n  t['racute'] = 0x0155;\n  t['radeva'] = 0x0930;\n  t['radical'] = 0x221A;\n  t['radicalex'] = 0xF8E5;\n  t['radoverssquare'] = 0x33AE;\n  t['radoverssquaredsquare'] = 0x33AF;\n  t['radsquare'] = 0x33AD;\n  t['rafe'] = 0x05BF;\n  t['rafehebrew'] = 0x05BF;\n  t['ragujarati'] = 0x0AB0;\n  t['ragurmukhi'] = 0x0A30;\n  t['rahiragana'] = 0x3089;\n  t['rakatakana'] = 0x30E9;\n  t['rakatakanahalfwidth'] = 0xFF97;\n  t['ralowerdiagonalbengali'] = 0x09F1;\n  t['ramiddlediagonalbengali'] = 0x09F0;\n  t['ramshorn'] = 0x0264;\n  t['ratio'] = 0x2236;\n  t['rbopomofo'] = 0x3116;\n  t['rcaron'] = 0x0159;\n  t['rcedilla'] = 0x0157;\n  t['rcircle'] = 0x24E1;\n  t['rcommaaccent'] = 0x0157;\n  t['rdblgrave'] = 0x0211;\n  t['rdotaccent'] = 0x1E59;\n  t['rdotbelow'] = 0x1E5B;\n  t['rdotbelowmacron'] = 0x1E5D;\n  t['referencemark'] = 0x203B;\n  t['reflexsubset'] = 0x2286;\n  t['reflexsuperset'] = 0x2287;\n  t['registered'] = 0x00AE;\n  t['registersans'] = 0xF8E8;\n  t['registerserif'] = 0xF6DA;\n  t['reharabic'] = 0x0631;\n  t['reharmenian'] = 0x0580;\n  t['rehfinalarabic'] = 0xFEAE;\n  t['rehiragana'] = 0x308C;\n  t['rekatakana'] = 0x30EC;\n  t['rekatakanahalfwidth'] = 0xFF9A;\n  t['resh'] = 0x05E8;\n  t['reshdageshhebrew'] = 0xFB48;\n  t['reshhebrew'] = 0x05E8;\n  t['reversedtilde'] = 0x223D;\n  t['reviahebrew'] = 0x0597;\n  t['reviamugrashhebrew'] = 0x0597;\n  t['revlogicalnot'] = 0x2310;\n  t['rfishhook'] = 0x027E;\n  t['rfishhookreversed'] = 0x027F;\n  t['rhabengali'] = 0x09DD;\n  t['rhadeva'] = 0x095D;\n  t['rho'] = 0x03C1;\n  t['rhook'] = 0x027D;\n  t['rhookturned'] = 0x027B;\n  t['rhookturnedsuperior'] = 0x02B5;\n  t['rhosymbolgreek'] = 0x03F1;\n  t['rhotichookmod'] = 0x02DE;\n  t['rieulacirclekorean'] = 0x3271;\n  t['rieulaparenkorean'] = 0x3211;\n  t['rieulcirclekorean'] = 0x3263;\n  t['rieulhieuhkorean'] = 0x3140;\n  t['rieulkiyeokkorean'] = 0x313A;\n  t['rieulkiyeoksioskorean'] = 0x3169;\n  t['rieulkorean'] = 0x3139;\n  t['rieulmieumkorean'] = 0x313B;\n  t['rieulpansioskorean'] = 0x316C;\n  t['rieulparenkorean'] = 0x3203;\n  t['rieulphieuphkorean'] = 0x313F;\n  t['rieulpieupkorean'] = 0x313C;\n  t['rieulpieupsioskorean'] = 0x316B;\n  t['rieulsioskorean'] = 0x313D;\n  t['rieulthieuthkorean'] = 0x313E;\n  t['rieultikeutkorean'] = 0x316A;\n  t['rieulyeorinhieuhkorean'] = 0x316D;\n  t['rightangle'] = 0x221F;\n  t['righttackbelowcmb'] = 0x0319;\n  t['righttriangle'] = 0x22BF;\n  t['rihiragana'] = 0x308A;\n  t['rikatakana'] = 0x30EA;\n  t['rikatakanahalfwidth'] = 0xFF98;\n  t['ring'] = 0x02DA;\n  t['ringbelowcmb'] = 0x0325;\n  t['ringcmb'] = 0x030A;\n  t['ringhalfleft'] = 0x02BF;\n  t['ringhalfleftarmenian'] = 0x0559;\n  t['ringhalfleftbelowcmb'] = 0x031C;\n  t['ringhalfleftcentered'] = 0x02D3;\n  t['ringhalfright'] = 0x02BE;\n  t['ringhalfrightbelowcmb'] = 0x0339;\n  t['ringhalfrightcentered'] = 0x02D2;\n  t['rinvertedbreve'] = 0x0213;\n  t['rittorusquare'] = 0x3351;\n  t['rlinebelow'] = 0x1E5F;\n  t['rlongleg'] = 0x027C;\n  t['rlonglegturned'] = 0x027A;\n  t['rmonospace'] = 0xFF52;\n  t['rohiragana'] = 0x308D;\n  t['rokatakana'] = 0x30ED;\n  t['rokatakanahalfwidth'] = 0xFF9B;\n  t['roruathai'] = 0x0E23;\n  t['rparen'] = 0x24AD;\n  t['rrabengali'] = 0x09DC;\n  t['rradeva'] = 0x0931;\n  t['rragurmukhi'] = 0x0A5C;\n  t['rreharabic'] = 0x0691;\n  t['rrehfinalarabic'] = 0xFB8D;\n  t['rrvocalicbengali'] = 0x09E0;\n  t['rrvocalicdeva'] = 0x0960;\n  t['rrvocalicgujarati'] = 0x0AE0;\n  t['rrvocalicvowelsignbengali'] = 0x09C4;\n  t['rrvocalicvowelsigndeva'] = 0x0944;\n  t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n  t['rsuperior'] = 0xF6F1;\n  t['rtblock'] = 0x2590;\n  t['rturned'] = 0x0279;\n  t['rturnedsuperior'] = 0x02B4;\n  t['ruhiragana'] = 0x308B;\n  t['rukatakana'] = 0x30EB;\n  t['rukatakanahalfwidth'] = 0xFF99;\n  t['rupeemarkbengali'] = 0x09F2;\n  t['rupeesignbengali'] = 0x09F3;\n  t['rupiah'] = 0xF6DD;\n  t['ruthai'] = 0x0E24;\n  t['rvocalicbengali'] = 0x098B;\n  t['rvocalicdeva'] = 0x090B;\n  t['rvocalicgujarati'] = 0x0A8B;\n  t['rvocalicvowelsignbengali'] = 0x09C3;\n  t['rvocalicvowelsigndeva'] = 0x0943;\n  t['rvocalicvowelsigngujarati'] = 0x0AC3;\n  t['s'] = 0x0073;\n  t['sabengali'] = 0x09B8;\n  t['sacute'] = 0x015B;\n  t['sacutedotaccent'] = 0x1E65;\n  t['sadarabic'] = 0x0635;\n  t['sadeva'] = 0x0938;\n  t['sadfinalarabic'] = 0xFEBA;\n  t['sadinitialarabic'] = 0xFEBB;\n  t['sadmedialarabic'] = 0xFEBC;\n  t['sagujarati'] = 0x0AB8;\n  t['sagurmukhi'] = 0x0A38;\n  t['sahiragana'] = 0x3055;\n  t['sakatakana'] = 0x30B5;\n  t['sakatakanahalfwidth'] = 0xFF7B;\n  t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n  t['samekh'] = 0x05E1;\n  t['samekhdagesh'] = 0xFB41;\n  t['samekhdageshhebrew'] = 0xFB41;\n  t['samekhhebrew'] = 0x05E1;\n  t['saraaathai'] = 0x0E32;\n  t['saraaethai'] = 0x0E41;\n  t['saraaimaimalaithai'] = 0x0E44;\n  t['saraaimaimuanthai'] = 0x0E43;\n  t['saraamthai'] = 0x0E33;\n  t['saraathai'] = 0x0E30;\n  t['saraethai'] = 0x0E40;\n  t['saraiileftthai'] = 0xF886;\n  t['saraiithai'] = 0x0E35;\n  t['saraileftthai'] = 0xF885;\n  t['saraithai'] = 0x0E34;\n  t['saraothai'] = 0x0E42;\n  t['saraueeleftthai'] = 0xF888;\n  t['saraueethai'] = 0x0E37;\n  t['saraueleftthai'] = 0xF887;\n  t['sarauethai'] = 0x0E36;\n  t['sarauthai'] = 0x0E38;\n  t['sarauuthai'] = 0x0E39;\n  t['sbopomofo'] = 0x3119;\n  t['scaron'] = 0x0161;\n  t['scarondotaccent'] = 0x1E67;\n  t['scedilla'] = 0x015F;\n  t['schwa'] = 0x0259;\n  t['schwacyrillic'] = 0x04D9;\n  t['schwadieresiscyrillic'] = 0x04DB;\n  t['schwahook'] = 0x025A;\n  t['scircle'] = 0x24E2;\n  t['scircumflex'] = 0x015D;\n  t['scommaaccent'] = 0x0219;\n  t['sdotaccent'] = 0x1E61;\n  t['sdotbelow'] = 0x1E63;\n  t['sdotbelowdotaccent'] = 0x1E69;\n  t['seagullbelowcmb'] = 0x033C;\n  t['second'] = 0x2033;\n  t['secondtonechinese'] = 0x02CA;\n  t['section'] = 0x00A7;\n  t['seenarabic'] = 0x0633;\n  t['seenfinalarabic'] = 0xFEB2;\n  t['seeninitialarabic'] = 0xFEB3;\n  t['seenmedialarabic'] = 0xFEB4;\n  t['segol'] = 0x05B6;\n  t['segol13'] = 0x05B6;\n  t['segol1f'] = 0x05B6;\n  t['segol2c'] = 0x05B6;\n  t['segolhebrew'] = 0x05B6;\n  t['segolnarrowhebrew'] = 0x05B6;\n  t['segolquarterhebrew'] = 0x05B6;\n  t['segoltahebrew'] = 0x0592;\n  t['segolwidehebrew'] = 0x05B6;\n  t['seharmenian'] = 0x057D;\n  t['sehiragana'] = 0x305B;\n  t['sekatakana'] = 0x30BB;\n  t['sekatakanahalfwidth'] = 0xFF7E;\n  t['semicolon'] = 0x003B;\n  t['semicolonarabic'] = 0x061B;\n  t['semicolonmonospace'] = 0xFF1B;\n  t['semicolonsmall'] = 0xFE54;\n  t['semivoicedmarkkana'] = 0x309C;\n  t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n  t['sentisquare'] = 0x3322;\n  t['sentosquare'] = 0x3323;\n  t['seven'] = 0x0037;\n  t['sevenarabic'] = 0x0667;\n  t['sevenbengali'] = 0x09ED;\n  t['sevencircle'] = 0x2466;\n  t['sevencircleinversesansserif'] = 0x2790;\n  t['sevendeva'] = 0x096D;\n  t['seveneighths'] = 0x215E;\n  t['sevengujarati'] = 0x0AED;\n  t['sevengurmukhi'] = 0x0A6D;\n  t['sevenhackarabic'] = 0x0667;\n  t['sevenhangzhou'] = 0x3027;\n  t['sevenideographicparen'] = 0x3226;\n  t['seveninferior'] = 0x2087;\n  t['sevenmonospace'] = 0xFF17;\n  t['sevenoldstyle'] = 0xF737;\n  t['sevenparen'] = 0x247A;\n  t['sevenperiod'] = 0x248E;\n  t['sevenpersian'] = 0x06F7;\n  t['sevenroman'] = 0x2176;\n  t['sevensuperior'] = 0x2077;\n  t['seventeencircle'] = 0x2470;\n  t['seventeenparen'] = 0x2484;\n  t['seventeenperiod'] = 0x2498;\n  t['seventhai'] = 0x0E57;\n  t['sfthyphen'] = 0x00AD;\n  t['shaarmenian'] = 0x0577;\n  t['shabengali'] = 0x09B6;\n  t['shacyrillic'] = 0x0448;\n  t['shaddaarabic'] = 0x0651;\n  t['shaddadammaarabic'] = 0xFC61;\n  t['shaddadammatanarabic'] = 0xFC5E;\n  t['shaddafathaarabic'] = 0xFC60;\n  t['shaddakasraarabic'] = 0xFC62;\n  t['shaddakasratanarabic'] = 0xFC5F;\n  t['shade'] = 0x2592;\n  t['shadedark'] = 0x2593;\n  t['shadelight'] = 0x2591;\n  t['shademedium'] = 0x2592;\n  t['shadeva'] = 0x0936;\n  t['shagujarati'] = 0x0AB6;\n  t['shagurmukhi'] = 0x0A36;\n  t['shalshelethebrew'] = 0x0593;\n  t['shbopomofo'] = 0x3115;\n  t['shchacyrillic'] = 0x0449;\n  t['sheenarabic'] = 0x0634;\n  t['sheenfinalarabic'] = 0xFEB6;\n  t['sheeninitialarabic'] = 0xFEB7;\n  t['sheenmedialarabic'] = 0xFEB8;\n  t['sheicoptic'] = 0x03E3;\n  t['sheqel'] = 0x20AA;\n  t['sheqelhebrew'] = 0x20AA;\n  t['sheva'] = 0x05B0;\n  t['sheva115'] = 0x05B0;\n  t['sheva15'] = 0x05B0;\n  t['sheva22'] = 0x05B0;\n  t['sheva2e'] = 0x05B0;\n  t['shevahebrew'] = 0x05B0;\n  t['shevanarrowhebrew'] = 0x05B0;\n  t['shevaquarterhebrew'] = 0x05B0;\n  t['shevawidehebrew'] = 0x05B0;\n  t['shhacyrillic'] = 0x04BB;\n  t['shimacoptic'] = 0x03ED;\n  t['shin'] = 0x05E9;\n  t['shindagesh'] = 0xFB49;\n  t['shindageshhebrew'] = 0xFB49;\n  t['shindageshshindot'] = 0xFB2C;\n  t['shindageshshindothebrew'] = 0xFB2C;\n  t['shindageshsindot'] = 0xFB2D;\n  t['shindageshsindothebrew'] = 0xFB2D;\n  t['shindothebrew'] = 0x05C1;\n  t['shinhebrew'] = 0x05E9;\n  t['shinshindot'] = 0xFB2A;\n  t['shinshindothebrew'] = 0xFB2A;\n  t['shinsindot'] = 0xFB2B;\n  t['shinsindothebrew'] = 0xFB2B;\n  t['shook'] = 0x0282;\n  t['sigma'] = 0x03C3;\n  t['sigma1'] = 0x03C2;\n  t['sigmafinal'] = 0x03C2;\n  t['sigmalunatesymbolgreek'] = 0x03F2;\n  t['sihiragana'] = 0x3057;\n  t['sikatakana'] = 0x30B7;\n  t['sikatakanahalfwidth'] = 0xFF7C;\n  t['siluqhebrew'] = 0x05BD;\n  t['siluqlefthebrew'] = 0x05BD;\n  t['similar'] = 0x223C;\n  t['sindothebrew'] = 0x05C2;\n  t['siosacirclekorean'] = 0x3274;\n  t['siosaparenkorean'] = 0x3214;\n  t['sioscieuckorean'] = 0x317E;\n  t['sioscirclekorean'] = 0x3266;\n  t['sioskiyeokkorean'] = 0x317A;\n  t['sioskorean'] = 0x3145;\n  t['siosnieunkorean'] = 0x317B;\n  t['siosparenkorean'] = 0x3206;\n  t['siospieupkorean'] = 0x317D;\n  t['siostikeutkorean'] = 0x317C;\n  t['six'] = 0x0036;\n  t['sixarabic'] = 0x0666;\n  t['sixbengali'] = 0x09EC;\n  t['sixcircle'] = 0x2465;\n  t['sixcircleinversesansserif'] = 0x278F;\n  t['sixdeva'] = 0x096C;\n  t['sixgujarati'] = 0x0AEC;\n  t['sixgurmukhi'] = 0x0A6C;\n  t['sixhackarabic'] = 0x0666;\n  t['sixhangzhou'] = 0x3026;\n  t['sixideographicparen'] = 0x3225;\n  t['sixinferior'] = 0x2086;\n  t['sixmonospace'] = 0xFF16;\n  t['sixoldstyle'] = 0xF736;\n  t['sixparen'] = 0x2479;\n  t['sixperiod'] = 0x248D;\n  t['sixpersian'] = 0x06F6;\n  t['sixroman'] = 0x2175;\n  t['sixsuperior'] = 0x2076;\n  t['sixteencircle'] = 0x246F;\n  t['sixteencurrencydenominatorbengali'] = 0x09F9;\n  t['sixteenparen'] = 0x2483;\n  t['sixteenperiod'] = 0x2497;\n  t['sixthai'] = 0x0E56;\n  t['slash'] = 0x002F;\n  t['slashmonospace'] = 0xFF0F;\n  t['slong'] = 0x017F;\n  t['slongdotaccent'] = 0x1E9B;\n  t['smileface'] = 0x263A;\n  t['smonospace'] = 0xFF53;\n  t['sofpasuqhebrew'] = 0x05C3;\n  t['softhyphen'] = 0x00AD;\n  t['softsigncyrillic'] = 0x044C;\n  t['sohiragana'] = 0x305D;\n  t['sokatakana'] = 0x30BD;\n  t['sokatakanahalfwidth'] = 0xFF7F;\n  t['soliduslongoverlaycmb'] = 0x0338;\n  t['solidusshortoverlaycmb'] = 0x0337;\n  t['sorusithai'] = 0x0E29;\n  t['sosalathai'] = 0x0E28;\n  t['sosothai'] = 0x0E0B;\n  t['sosuathai'] = 0x0E2A;\n  t['space'] = 0x0020;\n  t['spacehackarabic'] = 0x0020;\n  t['spade'] = 0x2660;\n  t['spadesuitblack'] = 0x2660;\n  t['spadesuitwhite'] = 0x2664;\n  t['sparen'] = 0x24AE;\n  t['squarebelowcmb'] = 0x033B;\n  t['squarecc'] = 0x33C4;\n  t['squarecm'] = 0x339D;\n  t['squarediagonalcrosshatchfill'] = 0x25A9;\n  t['squarehorizontalfill'] = 0x25A4;\n  t['squarekg'] = 0x338F;\n  t['squarekm'] = 0x339E;\n  t['squarekmcapital'] = 0x33CE;\n  t['squareln'] = 0x33D1;\n  t['squarelog'] = 0x33D2;\n  t['squaremg'] = 0x338E;\n  t['squaremil'] = 0x33D5;\n  t['squaremm'] = 0x339C;\n  t['squaremsquared'] = 0x33A1;\n  t['squareorthogonalcrosshatchfill'] = 0x25A6;\n  t['squareupperlefttolowerrightfill'] = 0x25A7;\n  t['squareupperrighttolowerleftfill'] = 0x25A8;\n  t['squareverticalfill'] = 0x25A5;\n  t['squarewhitewithsmallblack'] = 0x25A3;\n  t['srsquare'] = 0x33DB;\n  t['ssabengali'] = 0x09B7;\n  t['ssadeva'] = 0x0937;\n  t['ssagujarati'] = 0x0AB7;\n  t['ssangcieuckorean'] = 0x3149;\n  t['ssanghieuhkorean'] = 0x3185;\n  t['ssangieungkorean'] = 0x3180;\n  t['ssangkiyeokkorean'] = 0x3132;\n  t['ssangnieunkorean'] = 0x3165;\n  t['ssangpieupkorean'] = 0x3143;\n  t['ssangsioskorean'] = 0x3146;\n  t['ssangtikeutkorean'] = 0x3138;\n  t['ssuperior'] = 0xF6F2;\n  t['sterling'] = 0x00A3;\n  t['sterlingmonospace'] = 0xFFE1;\n  t['strokelongoverlaycmb'] = 0x0336;\n  t['strokeshortoverlaycmb'] = 0x0335;\n  t['subset'] = 0x2282;\n  t['subsetnotequal'] = 0x228A;\n  t['subsetorequal'] = 0x2286;\n  t['succeeds'] = 0x227B;\n  t['suchthat'] = 0x220B;\n  t['suhiragana'] = 0x3059;\n  t['sukatakana'] = 0x30B9;\n  t['sukatakanahalfwidth'] = 0xFF7D;\n  t['sukunarabic'] = 0x0652;\n  t['summation'] = 0x2211;\n  t['sun'] = 0x263C;\n  t['superset'] = 0x2283;\n  t['supersetnotequal'] = 0x228B;\n  t['supersetorequal'] = 0x2287;\n  t['svsquare'] = 0x33DC;\n  t['syouwaerasquare'] = 0x337C;\n  t['t'] = 0x0074;\n  t['tabengali'] = 0x09A4;\n  t['tackdown'] = 0x22A4;\n  t['tackleft'] = 0x22A3;\n  t['tadeva'] = 0x0924;\n  t['tagujarati'] = 0x0AA4;\n  t['tagurmukhi'] = 0x0A24;\n  t['taharabic'] = 0x0637;\n  t['tahfinalarabic'] = 0xFEC2;\n  t['tahinitialarabic'] = 0xFEC3;\n  t['tahiragana'] = 0x305F;\n  t['tahmedialarabic'] = 0xFEC4;\n  t['taisyouerasquare'] = 0x337D;\n  t['takatakana'] = 0x30BF;\n  t['takatakanahalfwidth'] = 0xFF80;\n  t['tatweelarabic'] = 0x0640;\n  t['tau'] = 0x03C4;\n  t['tav'] = 0x05EA;\n  t['tavdages'] = 0xFB4A;\n  t['tavdagesh'] = 0xFB4A;\n  t['tavdageshhebrew'] = 0xFB4A;\n  t['tavhebrew'] = 0x05EA;\n  t['tbar'] = 0x0167;\n  t['tbopomofo'] = 0x310A;\n  t['tcaron'] = 0x0165;\n  t['tccurl'] = 0x02A8;\n  t['tcedilla'] = 0x0163;\n  t['tcheharabic'] = 0x0686;\n  t['tchehfinalarabic'] = 0xFB7B;\n  t['tchehinitialarabic'] = 0xFB7C;\n  t['tchehmedialarabic'] = 0xFB7D;\n  t['tcircle'] = 0x24E3;\n  t['tcircumflexbelow'] = 0x1E71;\n  t['tcommaaccent'] = 0x0163;\n  t['tdieresis'] = 0x1E97;\n  t['tdotaccent'] = 0x1E6B;\n  t['tdotbelow'] = 0x1E6D;\n  t['tecyrillic'] = 0x0442;\n  t['tedescendercyrillic'] = 0x04AD;\n  t['teharabic'] = 0x062A;\n  t['tehfinalarabic'] = 0xFE96;\n  t['tehhahinitialarabic'] = 0xFCA2;\n  t['tehhahisolatedarabic'] = 0xFC0C;\n  t['tehinitialarabic'] = 0xFE97;\n  t['tehiragana'] = 0x3066;\n  t['tehjeeminitialarabic'] = 0xFCA1;\n  t['tehjeemisolatedarabic'] = 0xFC0B;\n  t['tehmarbutaarabic'] = 0x0629;\n  t['tehmarbutafinalarabic'] = 0xFE94;\n  t['tehmedialarabic'] = 0xFE98;\n  t['tehmeeminitialarabic'] = 0xFCA4;\n  t['tehmeemisolatedarabic'] = 0xFC0E;\n  t['tehnoonfinalarabic'] = 0xFC73;\n  t['tekatakana'] = 0x30C6;\n  t['tekatakanahalfwidth'] = 0xFF83;\n  t['telephone'] = 0x2121;\n  t['telephoneblack'] = 0x260E;\n  t['telishagedolahebrew'] = 0x05A0;\n  t['telishaqetanahebrew'] = 0x05A9;\n  t['tencircle'] = 0x2469;\n  t['tenideographicparen'] = 0x3229;\n  t['tenparen'] = 0x247D;\n  t['tenperiod'] = 0x2491;\n  t['tenroman'] = 0x2179;\n  t['tesh'] = 0x02A7;\n  t['tet'] = 0x05D8;\n  t['tetdagesh'] = 0xFB38;\n  t['tetdageshhebrew'] = 0xFB38;\n  t['tethebrew'] = 0x05D8;\n  t['tetsecyrillic'] = 0x04B5;\n  t['tevirhebrew'] = 0x059B;\n  t['tevirlefthebrew'] = 0x059B;\n  t['thabengali'] = 0x09A5;\n  t['thadeva'] = 0x0925;\n  t['thagujarati'] = 0x0AA5;\n  t['thagurmukhi'] = 0x0A25;\n  t['thalarabic'] = 0x0630;\n  t['thalfinalarabic'] = 0xFEAC;\n  t['thanthakhatlowleftthai'] = 0xF898;\n  t['thanthakhatlowrightthai'] = 0xF897;\n  t['thanthakhatthai'] = 0x0E4C;\n  t['thanthakhatupperleftthai'] = 0xF896;\n  t['theharabic'] = 0x062B;\n  t['thehfinalarabic'] = 0xFE9A;\n  t['thehinitialarabic'] = 0xFE9B;\n  t['thehmedialarabic'] = 0xFE9C;\n  t['thereexists'] = 0x2203;\n  t['therefore'] = 0x2234;\n  t['theta'] = 0x03B8;\n  t['theta1'] = 0x03D1;\n  t['thetasymbolgreek'] = 0x03D1;\n  t['thieuthacirclekorean'] = 0x3279;\n  t['thieuthaparenkorean'] = 0x3219;\n  t['thieuthcirclekorean'] = 0x326B;\n  t['thieuthkorean'] = 0x314C;\n  t['thieuthparenkorean'] = 0x320B;\n  t['thirteencircle'] = 0x246C;\n  t['thirteenparen'] = 0x2480;\n  t['thirteenperiod'] = 0x2494;\n  t['thonangmonthothai'] = 0x0E11;\n  t['thook'] = 0x01AD;\n  t['thophuthaothai'] = 0x0E12;\n  t['thorn'] = 0x00FE;\n  t['thothahanthai'] = 0x0E17;\n  t['thothanthai'] = 0x0E10;\n  t['thothongthai'] = 0x0E18;\n  t['thothungthai'] = 0x0E16;\n  t['thousandcyrillic'] = 0x0482;\n  t['thousandsseparatorarabic'] = 0x066C;\n  t['thousandsseparatorpersian'] = 0x066C;\n  t['three'] = 0x0033;\n  t['threearabic'] = 0x0663;\n  t['threebengali'] = 0x09E9;\n  t['threecircle'] = 0x2462;\n  t['threecircleinversesansserif'] = 0x278C;\n  t['threedeva'] = 0x0969;\n  t['threeeighths'] = 0x215C;\n  t['threegujarati'] = 0x0AE9;\n  t['threegurmukhi'] = 0x0A69;\n  t['threehackarabic'] = 0x0663;\n  t['threehangzhou'] = 0x3023;\n  t['threeideographicparen'] = 0x3222;\n  t['threeinferior'] = 0x2083;\n  t['threemonospace'] = 0xFF13;\n  t['threenumeratorbengali'] = 0x09F6;\n  t['threeoldstyle'] = 0xF733;\n  t['threeparen'] = 0x2476;\n  t['threeperiod'] = 0x248A;\n  t['threepersian'] = 0x06F3;\n  t['threequarters'] = 0x00BE;\n  t['threequartersemdash'] = 0xF6DE;\n  t['threeroman'] = 0x2172;\n  t['threesuperior'] = 0x00B3;\n  t['threethai'] = 0x0E53;\n  t['thzsquare'] = 0x3394;\n  t['tihiragana'] = 0x3061;\n  t['tikatakana'] = 0x30C1;\n  t['tikatakanahalfwidth'] = 0xFF81;\n  t['tikeutacirclekorean'] = 0x3270;\n  t['tikeutaparenkorean'] = 0x3210;\n  t['tikeutcirclekorean'] = 0x3262;\n  t['tikeutkorean'] = 0x3137;\n  t['tikeutparenkorean'] = 0x3202;\n  t['tilde'] = 0x02DC;\n  t['tildebelowcmb'] = 0x0330;\n  t['tildecmb'] = 0x0303;\n  t['tildecomb'] = 0x0303;\n  t['tildedoublecmb'] = 0x0360;\n  t['tildeoperator'] = 0x223C;\n  t['tildeoverlaycmb'] = 0x0334;\n  t['tildeverticalcmb'] = 0x033E;\n  t['timescircle'] = 0x2297;\n  t['tipehahebrew'] = 0x0596;\n  t['tipehalefthebrew'] = 0x0596;\n  t['tippigurmukhi'] = 0x0A70;\n  t['titlocyrilliccmb'] = 0x0483;\n  t['tiwnarmenian'] = 0x057F;\n  t['tlinebelow'] = 0x1E6F;\n  t['tmonospace'] = 0xFF54;\n  t['toarmenian'] = 0x0569;\n  t['tohiragana'] = 0x3068;\n  t['tokatakana'] = 0x30C8;\n  t['tokatakanahalfwidth'] = 0xFF84;\n  t['tonebarextrahighmod'] = 0x02E5;\n  t['tonebarextralowmod'] = 0x02E9;\n  t['tonebarhighmod'] = 0x02E6;\n  t['tonebarlowmod'] = 0x02E8;\n  t['tonebarmidmod'] = 0x02E7;\n  t['tonefive'] = 0x01BD;\n  t['tonesix'] = 0x0185;\n  t['tonetwo'] = 0x01A8;\n  t['tonos'] = 0x0384;\n  t['tonsquare'] = 0x3327;\n  t['topatakthai'] = 0x0E0F;\n  t['tortoiseshellbracketleft'] = 0x3014;\n  t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n  t['tortoiseshellbracketleftvertical'] = 0xFE39;\n  t['tortoiseshellbracketright'] = 0x3015;\n  t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n  t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n  t['totaothai'] = 0x0E15;\n  t['tpalatalhook'] = 0x01AB;\n  t['tparen'] = 0x24AF;\n  t['trademark'] = 0x2122;\n  t['trademarksans'] = 0xF8EA;\n  t['trademarkserif'] = 0xF6DB;\n  t['tretroflexhook'] = 0x0288;\n  t['triagdn'] = 0x25BC;\n  t['triaglf'] = 0x25C4;\n  t['triagrt'] = 0x25BA;\n  t['triagup'] = 0x25B2;\n  t['ts'] = 0x02A6;\n  t['tsadi'] = 0x05E6;\n  t['tsadidagesh'] = 0xFB46;\n  t['tsadidageshhebrew'] = 0xFB46;\n  t['tsadihebrew'] = 0x05E6;\n  t['tsecyrillic'] = 0x0446;\n  t['tsere'] = 0x05B5;\n  t['tsere12'] = 0x05B5;\n  t['tsere1e'] = 0x05B5;\n  t['tsere2b'] = 0x05B5;\n  t['tserehebrew'] = 0x05B5;\n  t['tserenarrowhebrew'] = 0x05B5;\n  t['tserequarterhebrew'] = 0x05B5;\n  t['tserewidehebrew'] = 0x05B5;\n  t['tshecyrillic'] = 0x045B;\n  t['tsuperior'] = 0xF6F3;\n  t['ttabengali'] = 0x099F;\n  t['ttadeva'] = 0x091F;\n  t['ttagujarati'] = 0x0A9F;\n  t['ttagurmukhi'] = 0x0A1F;\n  t['tteharabic'] = 0x0679;\n  t['ttehfinalarabic'] = 0xFB67;\n  t['ttehinitialarabic'] = 0xFB68;\n  t['ttehmedialarabic'] = 0xFB69;\n  t['tthabengali'] = 0x09A0;\n  t['tthadeva'] = 0x0920;\n  t['tthagujarati'] = 0x0AA0;\n  t['tthagurmukhi'] = 0x0A20;\n  t['tturned'] = 0x0287;\n  t['tuhiragana'] = 0x3064;\n  t['tukatakana'] = 0x30C4;\n  t['tukatakanahalfwidth'] = 0xFF82;\n  t['tusmallhiragana'] = 0x3063;\n  t['tusmallkatakana'] = 0x30C3;\n  t['tusmallkatakanahalfwidth'] = 0xFF6F;\n  t['twelvecircle'] = 0x246B;\n  t['twelveparen'] = 0x247F;\n  t['twelveperiod'] = 0x2493;\n  t['twelveroman'] = 0x217B;\n  t['twentycircle'] = 0x2473;\n  t['twentyhangzhou'] = 0x5344;\n  t['twentyparen'] = 0x2487;\n  t['twentyperiod'] = 0x249B;\n  t['two'] = 0x0032;\n  t['twoarabic'] = 0x0662;\n  t['twobengali'] = 0x09E8;\n  t['twocircle'] = 0x2461;\n  t['twocircleinversesansserif'] = 0x278B;\n  t['twodeva'] = 0x0968;\n  t['twodotenleader'] = 0x2025;\n  t['twodotleader'] = 0x2025;\n  t['twodotleadervertical'] = 0xFE30;\n  t['twogujarati'] = 0x0AE8;\n  t['twogurmukhi'] = 0x0A68;\n  t['twohackarabic'] = 0x0662;\n  t['twohangzhou'] = 0x3022;\n  t['twoideographicparen'] = 0x3221;\n  t['twoinferior'] = 0x2082;\n  t['twomonospace'] = 0xFF12;\n  t['twonumeratorbengali'] = 0x09F5;\n  t['twooldstyle'] = 0xF732;\n  t['twoparen'] = 0x2475;\n  t['twoperiod'] = 0x2489;\n  t['twopersian'] = 0x06F2;\n  t['tworoman'] = 0x2171;\n  t['twostroke'] = 0x01BB;\n  t['twosuperior'] = 0x00B2;\n  t['twothai'] = 0x0E52;\n  t['twothirds'] = 0x2154;\n  t['u'] = 0x0075;\n  t['uacute'] = 0x00FA;\n  t['ubar'] = 0x0289;\n  t['ubengali'] = 0x0989;\n  t['ubopomofo'] = 0x3128;\n  t['ubreve'] = 0x016D;\n  t['ucaron'] = 0x01D4;\n  t['ucircle'] = 0x24E4;\n  t['ucircumflex'] = 0x00FB;\n  t['ucircumflexbelow'] = 0x1E77;\n  t['ucyrillic'] = 0x0443;\n  t['udattadeva'] = 0x0951;\n  t['udblacute'] = 0x0171;\n  t['udblgrave'] = 0x0215;\n  t['udeva'] = 0x0909;\n  t['udieresis'] = 0x00FC;\n  t['udieresisacute'] = 0x01D8;\n  t['udieresisbelow'] = 0x1E73;\n  t['udieresiscaron'] = 0x01DA;\n  t['udieresiscyrillic'] = 0x04F1;\n  t['udieresisgrave'] = 0x01DC;\n  t['udieresismacron'] = 0x01D6;\n  t['udotbelow'] = 0x1EE5;\n  t['ugrave'] = 0x00F9;\n  t['ugujarati'] = 0x0A89;\n  t['ugurmukhi'] = 0x0A09;\n  t['uhiragana'] = 0x3046;\n  t['uhookabove'] = 0x1EE7;\n  t['uhorn'] = 0x01B0;\n  t['uhornacute'] = 0x1EE9;\n  t['uhorndotbelow'] = 0x1EF1;\n  t['uhorngrave'] = 0x1EEB;\n  t['uhornhookabove'] = 0x1EED;\n  t['uhorntilde'] = 0x1EEF;\n  t['uhungarumlaut'] = 0x0171;\n  t['uhungarumlautcyrillic'] = 0x04F3;\n  t['uinvertedbreve'] = 0x0217;\n  t['ukatakana'] = 0x30A6;\n  t['ukatakanahalfwidth'] = 0xFF73;\n  t['ukcyrillic'] = 0x0479;\n  t['ukorean'] = 0x315C;\n  t['umacron'] = 0x016B;\n  t['umacroncyrillic'] = 0x04EF;\n  t['umacrondieresis'] = 0x1E7B;\n  t['umatragurmukhi'] = 0x0A41;\n  t['umonospace'] = 0xFF55;\n  t['underscore'] = 0x005F;\n  t['underscoredbl'] = 0x2017;\n  t['underscoremonospace'] = 0xFF3F;\n  t['underscorevertical'] = 0xFE33;\n  t['underscorewavy'] = 0xFE4F;\n  t['union'] = 0x222A;\n  t['universal'] = 0x2200;\n  t['uogonek'] = 0x0173;\n  t['uparen'] = 0x24B0;\n  t['upblock'] = 0x2580;\n  t['upperdothebrew'] = 0x05C4;\n  t['upsilon'] = 0x03C5;\n  t['upsilondieresis'] = 0x03CB;\n  t['upsilondieresistonos'] = 0x03B0;\n  t['upsilonlatin'] = 0x028A;\n  t['upsilontonos'] = 0x03CD;\n  t['uptackbelowcmb'] = 0x031D;\n  t['uptackmod'] = 0x02D4;\n  t['uragurmukhi'] = 0x0A73;\n  t['uring'] = 0x016F;\n  t['ushortcyrillic'] = 0x045E;\n  t['usmallhiragana'] = 0x3045;\n  t['usmallkatakana'] = 0x30A5;\n  t['usmallkatakanahalfwidth'] = 0xFF69;\n  t['ustraightcyrillic'] = 0x04AF;\n  t['ustraightstrokecyrillic'] = 0x04B1;\n  t['utilde'] = 0x0169;\n  t['utildeacute'] = 0x1E79;\n  t['utildebelow'] = 0x1E75;\n  t['uubengali'] = 0x098A;\n  t['uudeva'] = 0x090A;\n  t['uugujarati'] = 0x0A8A;\n  t['uugurmukhi'] = 0x0A0A;\n  t['uumatragurmukhi'] = 0x0A42;\n  t['uuvowelsignbengali'] = 0x09C2;\n  t['uuvowelsigndeva'] = 0x0942;\n  t['uuvowelsigngujarati'] = 0x0AC2;\n  t['uvowelsignbengali'] = 0x09C1;\n  t['uvowelsigndeva'] = 0x0941;\n  t['uvowelsigngujarati'] = 0x0AC1;\n  t['v'] = 0x0076;\n  t['vadeva'] = 0x0935;\n  t['vagujarati'] = 0x0AB5;\n  t['vagurmukhi'] = 0x0A35;\n  t['vakatakana'] = 0x30F7;\n  t['vav'] = 0x05D5;\n  t['vavdagesh'] = 0xFB35;\n  t['vavdagesh65'] = 0xFB35;\n  t['vavdageshhebrew'] = 0xFB35;\n  t['vavhebrew'] = 0x05D5;\n  t['vavholam'] = 0xFB4B;\n  t['vavholamhebrew'] = 0xFB4B;\n  t['vavvavhebrew'] = 0x05F0;\n  t['vavyodhebrew'] = 0x05F1;\n  t['vcircle'] = 0x24E5;\n  t['vdotbelow'] = 0x1E7F;\n  t['vecyrillic'] = 0x0432;\n  t['veharabic'] = 0x06A4;\n  t['vehfinalarabic'] = 0xFB6B;\n  t['vehinitialarabic'] = 0xFB6C;\n  t['vehmedialarabic'] = 0xFB6D;\n  t['vekatakana'] = 0x30F9;\n  t['venus'] = 0x2640;\n  t['verticalbar'] = 0x007C;\n  t['verticallineabovecmb'] = 0x030D;\n  t['verticallinebelowcmb'] = 0x0329;\n  t['verticallinelowmod'] = 0x02CC;\n  t['verticallinemod'] = 0x02C8;\n  t['vewarmenian'] = 0x057E;\n  t['vhook'] = 0x028B;\n  t['vikatakana'] = 0x30F8;\n  t['viramabengali'] = 0x09CD;\n  t['viramadeva'] = 0x094D;\n  t['viramagujarati'] = 0x0ACD;\n  t['visargabengali'] = 0x0983;\n  t['visargadeva'] = 0x0903;\n  t['visargagujarati'] = 0x0A83;\n  t['vmonospace'] = 0xFF56;\n  t['voarmenian'] = 0x0578;\n  t['voicediterationhiragana'] = 0x309E;\n  t['voicediterationkatakana'] = 0x30FE;\n  t['voicedmarkkana'] = 0x309B;\n  t['voicedmarkkanahalfwidth'] = 0xFF9E;\n  t['vokatakana'] = 0x30FA;\n  t['vparen'] = 0x24B1;\n  t['vtilde'] = 0x1E7D;\n  t['vturned'] = 0x028C;\n  t['vuhiragana'] = 0x3094;\n  t['vukatakana'] = 0x30F4;\n  t['w'] = 0x0077;\n  t['wacute'] = 0x1E83;\n  t['waekorean'] = 0x3159;\n  t['wahiragana'] = 0x308F;\n  t['wakatakana'] = 0x30EF;\n  t['wakatakanahalfwidth'] = 0xFF9C;\n  t['wakorean'] = 0x3158;\n  t['wasmallhiragana'] = 0x308E;\n  t['wasmallkatakana'] = 0x30EE;\n  t['wattosquare'] = 0x3357;\n  t['wavedash'] = 0x301C;\n  t['wavyunderscorevertical'] = 0xFE34;\n  t['wawarabic'] = 0x0648;\n  t['wawfinalarabic'] = 0xFEEE;\n  t['wawhamzaabovearabic'] = 0x0624;\n  t['wawhamzaabovefinalarabic'] = 0xFE86;\n  t['wbsquare'] = 0x33DD;\n  t['wcircle'] = 0x24E6;\n  t['wcircumflex'] = 0x0175;\n  t['wdieresis'] = 0x1E85;\n  t['wdotaccent'] = 0x1E87;\n  t['wdotbelow'] = 0x1E89;\n  t['wehiragana'] = 0x3091;\n  t['weierstrass'] = 0x2118;\n  t['wekatakana'] = 0x30F1;\n  t['wekorean'] = 0x315E;\n  t['weokorean'] = 0x315D;\n  t['wgrave'] = 0x1E81;\n  t['whitebullet'] = 0x25E6;\n  t['whitecircle'] = 0x25CB;\n  t['whitecircleinverse'] = 0x25D9;\n  t['whitecornerbracketleft'] = 0x300E;\n  t['whitecornerbracketleftvertical'] = 0xFE43;\n  t['whitecornerbracketright'] = 0x300F;\n  t['whitecornerbracketrightvertical'] = 0xFE44;\n  t['whitediamond'] = 0x25C7;\n  t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n  t['whitedownpointingsmalltriangle'] = 0x25BF;\n  t['whitedownpointingtriangle'] = 0x25BD;\n  t['whiteleftpointingsmalltriangle'] = 0x25C3;\n  t['whiteleftpointingtriangle'] = 0x25C1;\n  t['whitelenticularbracketleft'] = 0x3016;\n  t['whitelenticularbracketright'] = 0x3017;\n  t['whiterightpointingsmalltriangle'] = 0x25B9;\n  t['whiterightpointingtriangle'] = 0x25B7;\n  t['whitesmallsquare'] = 0x25AB;\n  t['whitesmilingface'] = 0x263A;\n  t['whitesquare'] = 0x25A1;\n  t['whitestar'] = 0x2606;\n  t['whitetelephone'] = 0x260F;\n  t['whitetortoiseshellbracketleft'] = 0x3018;\n  t['whitetortoiseshellbracketright'] = 0x3019;\n  t['whiteuppointingsmalltriangle'] = 0x25B5;\n  t['whiteuppointingtriangle'] = 0x25B3;\n  t['wihiragana'] = 0x3090;\n  t['wikatakana'] = 0x30F0;\n  t['wikorean'] = 0x315F;\n  t['wmonospace'] = 0xFF57;\n  t['wohiragana'] = 0x3092;\n  t['wokatakana'] = 0x30F2;\n  t['wokatakanahalfwidth'] = 0xFF66;\n  t['won'] = 0x20A9;\n  t['wonmonospace'] = 0xFFE6;\n  t['wowaenthai'] = 0x0E27;\n  t['wparen'] = 0x24B2;\n  t['wring'] = 0x1E98;\n  t['wsuperior'] = 0x02B7;\n  t['wturned'] = 0x028D;\n  t['wynn'] = 0x01BF;\n  t['x'] = 0x0078;\n  t['xabovecmb'] = 0x033D;\n  t['xbopomofo'] = 0x3112;\n  t['xcircle'] = 0x24E7;\n  t['xdieresis'] = 0x1E8D;\n  t['xdotaccent'] = 0x1E8B;\n  t['xeharmenian'] = 0x056D;\n  t['xi'] = 0x03BE;\n  t['xmonospace'] = 0xFF58;\n  t['xparen'] = 0x24B3;\n  t['xsuperior'] = 0x02E3;\n  t['y'] = 0x0079;\n  t['yaadosquare'] = 0x334E;\n  t['yabengali'] = 0x09AF;\n  t['yacute'] = 0x00FD;\n  t['yadeva'] = 0x092F;\n  t['yaekorean'] = 0x3152;\n  t['yagujarati'] = 0x0AAF;\n  t['yagurmukhi'] = 0x0A2F;\n  t['yahiragana'] = 0x3084;\n  t['yakatakana'] = 0x30E4;\n  t['yakatakanahalfwidth'] = 0xFF94;\n  t['yakorean'] = 0x3151;\n  t['yamakkanthai'] = 0x0E4E;\n  t['yasmallhiragana'] = 0x3083;\n  t['yasmallkatakana'] = 0x30E3;\n  t['yasmallkatakanahalfwidth'] = 0xFF6C;\n  t['yatcyrillic'] = 0x0463;\n  t['ycircle'] = 0x24E8;\n  t['ycircumflex'] = 0x0177;\n  t['ydieresis'] = 0x00FF;\n  t['ydotaccent'] = 0x1E8F;\n  t['ydotbelow'] = 0x1EF5;\n  t['yeharabic'] = 0x064A;\n  t['yehbarreearabic'] = 0x06D2;\n  t['yehbarreefinalarabic'] = 0xFBAF;\n  t['yehfinalarabic'] = 0xFEF2;\n  t['yehhamzaabovearabic'] = 0x0626;\n  t['yehhamzaabovefinalarabic'] = 0xFE8A;\n  t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n  t['yehhamzaabovemedialarabic'] = 0xFE8C;\n  t['yehinitialarabic'] = 0xFEF3;\n  t['yehmedialarabic'] = 0xFEF4;\n  t['yehmeeminitialarabic'] = 0xFCDD;\n  t['yehmeemisolatedarabic'] = 0xFC58;\n  t['yehnoonfinalarabic'] = 0xFC94;\n  t['yehthreedotsbelowarabic'] = 0x06D1;\n  t['yekorean'] = 0x3156;\n  t['yen'] = 0x00A5;\n  t['yenmonospace'] = 0xFFE5;\n  t['yeokorean'] = 0x3155;\n  t['yeorinhieuhkorean'] = 0x3186;\n  t['yerahbenyomohebrew'] = 0x05AA;\n  t['yerahbenyomolefthebrew'] = 0x05AA;\n  t['yericyrillic'] = 0x044B;\n  t['yerudieresiscyrillic'] = 0x04F9;\n  t['yesieungkorean'] = 0x3181;\n  t['yesieungpansioskorean'] = 0x3183;\n  t['yesieungsioskorean'] = 0x3182;\n  t['yetivhebrew'] = 0x059A;\n  t['ygrave'] = 0x1EF3;\n  t['yhook'] = 0x01B4;\n  t['yhookabove'] = 0x1EF7;\n  t['yiarmenian'] = 0x0575;\n  t['yicyrillic'] = 0x0457;\n  t['yikorean'] = 0x3162;\n  t['yinyang'] = 0x262F;\n  t['yiwnarmenian'] = 0x0582;\n  t['ymonospace'] = 0xFF59;\n  t['yod'] = 0x05D9;\n  t['yoddagesh'] = 0xFB39;\n  t['yoddageshhebrew'] = 0xFB39;\n  t['yodhebrew'] = 0x05D9;\n  t['yodyodhebrew'] = 0x05F2;\n  t['yodyodpatahhebrew'] = 0xFB1F;\n  t['yohiragana'] = 0x3088;\n  t['yoikorean'] = 0x3189;\n  t['yokatakana'] = 0x30E8;\n  t['yokatakanahalfwidth'] = 0xFF96;\n  t['yokorean'] = 0x315B;\n  t['yosmallhiragana'] = 0x3087;\n  t['yosmallkatakana'] = 0x30E7;\n  t['yosmallkatakanahalfwidth'] = 0xFF6E;\n  t['yotgreek'] = 0x03F3;\n  t['yoyaekorean'] = 0x3188;\n  t['yoyakorean'] = 0x3187;\n  t['yoyakthai'] = 0x0E22;\n  t['yoyingthai'] = 0x0E0D;\n  t['yparen'] = 0x24B4;\n  t['ypogegrammeni'] = 0x037A;\n  t['ypogegrammenigreekcmb'] = 0x0345;\n  t['yr'] = 0x01A6;\n  t['yring'] = 0x1E99;\n  t['ysuperior'] = 0x02B8;\n  t['ytilde'] = 0x1EF9;\n  t['yturned'] = 0x028E;\n  t['yuhiragana'] = 0x3086;\n  t['yuikorean'] = 0x318C;\n  t['yukatakana'] = 0x30E6;\n  t['yukatakanahalfwidth'] = 0xFF95;\n  t['yukorean'] = 0x3160;\n  t['yusbigcyrillic'] = 0x046B;\n  t['yusbigiotifiedcyrillic'] = 0x046D;\n  t['yuslittlecyrillic'] = 0x0467;\n  t['yuslittleiotifiedcyrillic'] = 0x0469;\n  t['yusmallhiragana'] = 0x3085;\n  t['yusmallkatakana'] = 0x30E5;\n  t['yusmallkatakanahalfwidth'] = 0xFF6D;\n  t['yuyekorean'] = 0x318B;\n  t['yuyeokorean'] = 0x318A;\n  t['yyabengali'] = 0x09DF;\n  t['yyadeva'] = 0x095F;\n  t['z'] = 0x007A;\n  t['zaarmenian'] = 0x0566;\n  t['zacute'] = 0x017A;\n  t['zadeva'] = 0x095B;\n  t['zagurmukhi'] = 0x0A5B;\n  t['zaharabic'] = 0x0638;\n  t['zahfinalarabic'] = 0xFEC6;\n  t['zahinitialarabic'] = 0xFEC7;\n  t['zahiragana'] = 0x3056;\n  t['zahmedialarabic'] = 0xFEC8;\n  t['zainarabic'] = 0x0632;\n  t['zainfinalarabic'] = 0xFEB0;\n  t['zakatakana'] = 0x30B6;\n  t['zaqefgadolhebrew'] = 0x0595;\n  t['zaqefqatanhebrew'] = 0x0594;\n  t['zarqahebrew'] = 0x0598;\n  t['zayin'] = 0x05D6;\n  t['zayindagesh'] = 0xFB36;\n  t['zayindageshhebrew'] = 0xFB36;\n  t['zayinhebrew'] = 0x05D6;\n  t['zbopomofo'] = 0x3117;\n  t['zcaron'] = 0x017E;\n  t['zcircle'] = 0x24E9;\n  t['zcircumflex'] = 0x1E91;\n  t['zcurl'] = 0x0291;\n  t['zdot'] = 0x017C;\n  t['zdotaccent'] = 0x017C;\n  t['zdotbelow'] = 0x1E93;\n  t['zecyrillic'] = 0x0437;\n  t['zedescendercyrillic'] = 0x0499;\n  t['zedieresiscyrillic'] = 0x04DF;\n  t['zehiragana'] = 0x305C;\n  t['zekatakana'] = 0x30BC;\n  t['zero'] = 0x0030;\n  t['zeroarabic'] = 0x0660;\n  t['zerobengali'] = 0x09E6;\n  t['zerodeva'] = 0x0966;\n  t['zerogujarati'] = 0x0AE6;\n  t['zerogurmukhi'] = 0x0A66;\n  t['zerohackarabic'] = 0x0660;\n  t['zeroinferior'] = 0x2080;\n  t['zeromonospace'] = 0xFF10;\n  t['zerooldstyle'] = 0xF730;\n  t['zeropersian'] = 0x06F0;\n  t['zerosuperior'] = 0x2070;\n  t['zerothai'] = 0x0E50;\n  t['zerowidthjoiner'] = 0xFEFF;\n  t['zerowidthnonjoiner'] = 0x200C;\n  t['zerowidthspace'] = 0x200B;\n  t['zeta'] = 0x03B6;\n  t['zhbopomofo'] = 0x3113;\n  t['zhearmenian'] = 0x056A;\n  t['zhebrevecyrillic'] = 0x04C2;\n  t['zhecyrillic'] = 0x0436;\n  t['zhedescendercyrillic'] = 0x0497;\n  t['zhedieresiscyrillic'] = 0x04DD;\n  t['zihiragana'] = 0x3058;\n  t['zikatakana'] = 0x30B8;\n  t['zinorhebrew'] = 0x05AE;\n  t['zlinebelow'] = 0x1E95;\n  t['zmonospace'] = 0xFF5A;\n  t['zohiragana'] = 0x305E;\n  t['zokatakana'] = 0x30BE;\n  t['zparen'] = 0x24B5;\n  t['zretroflexhook'] = 0x0290;\n  t['zstroke'] = 0x01B6;\n  t['zuhiragana'] = 0x305A;\n  t['zukatakana'] = 0x30BA;\n  t['.notdef'] = 0x0000;\n  t['angbracketleftbig'] = 0x2329;\n  t['angbracketleftBig'] = 0x2329;\n  t['angbracketleftbigg'] = 0x2329;\n  t['angbracketleftBigg'] = 0x2329;\n  t['angbracketrightBig'] = 0x232A;\n  t['angbracketrightbig'] = 0x232A;\n  t['angbracketrightBigg'] = 0x232A;\n  t['angbracketrightbigg'] = 0x232A;\n  t['arrowhookleft'] = 0x21AA;\n  t['arrowhookright'] = 0x21A9;\n  t['arrowlefttophalf'] = 0x21BC;\n  t['arrowleftbothalf'] = 0x21BD;\n  t['arrownortheast'] = 0x2197;\n  t['arrownorthwest'] = 0x2196;\n  t['arrowrighttophalf'] = 0x21C0;\n  t['arrowrightbothalf'] = 0x21C1;\n  t['arrowsoutheast'] = 0x2198;\n  t['arrowsouthwest'] = 0x2199;\n  t['backslashbig'] = 0x2216;\n  t['backslashBig'] = 0x2216;\n  t['backslashBigg'] = 0x2216;\n  t['backslashbigg'] = 0x2216;\n  t['bardbl'] = 0x2016;\n  t['bracehtipdownleft'] = 0xFE37;\n  t['bracehtipdownright'] = 0xFE37;\n  t['bracehtipupleft'] = 0xFE38;\n  t['bracehtipupright'] = 0xFE38;\n  t['braceleftBig'] = 0x007B;\n  t['braceleftbig'] = 0x007B;\n  t['braceleftbigg'] = 0x007B;\n  t['braceleftBigg'] = 0x007B;\n  t['bracerightBig'] = 0x007D;\n  t['bracerightbig'] = 0x007D;\n  t['bracerightbigg'] = 0x007D;\n  t['bracerightBigg'] = 0x007D;\n  t['bracketleftbig'] = 0x005B;\n  t['bracketleftBig'] = 0x005B;\n  t['bracketleftbigg'] = 0x005B;\n  t['bracketleftBigg'] = 0x005B;\n  t['bracketrightBig'] = 0x005D;\n  t['bracketrightbig'] = 0x005D;\n  t['bracketrightbigg'] = 0x005D;\n  t['bracketrightBigg'] = 0x005D;\n  t['ceilingleftbig'] = 0x2308;\n  t['ceilingleftBig'] = 0x2308;\n  t['ceilingleftBigg'] = 0x2308;\n  t['ceilingleftbigg'] = 0x2308;\n  t['ceilingrightbig'] = 0x2309;\n  t['ceilingrightBig'] = 0x2309;\n  t['ceilingrightbigg'] = 0x2309;\n  t['ceilingrightBigg'] = 0x2309;\n  t['circledotdisplay'] = 0x2299;\n  t['circledottext'] = 0x2299;\n  t['circlemultiplydisplay'] = 0x2297;\n  t['circlemultiplytext'] = 0x2297;\n  t['circleplusdisplay'] = 0x2295;\n  t['circleplustext'] = 0x2295;\n  t['contintegraldisplay'] = 0x222E;\n  t['contintegraltext'] = 0x222E;\n  t['coproductdisplay'] = 0x2210;\n  t['coproducttext'] = 0x2210;\n  t['floorleftBig'] = 0x230A;\n  t['floorleftbig'] = 0x230A;\n  t['floorleftbigg'] = 0x230A;\n  t['floorleftBigg'] = 0x230A;\n  t['floorrightbig'] = 0x230B;\n  t['floorrightBig'] = 0x230B;\n  t['floorrightBigg'] = 0x230B;\n  t['floorrightbigg'] = 0x230B;\n  t['hatwide'] = 0x0302;\n  t['hatwider'] = 0x0302;\n  t['hatwidest'] = 0x0302;\n  t['intercal'] = 0x1D40;\n  t['integraldisplay'] = 0x222B;\n  t['integraltext'] = 0x222B;\n  t['intersectiondisplay'] = 0x22C2;\n  t['intersectiontext'] = 0x22C2;\n  t['logicalanddisplay'] = 0x2227;\n  t['logicalandtext'] = 0x2227;\n  t['logicalordisplay'] = 0x2228;\n  t['logicalortext'] = 0x2228;\n  t['parenleftBig'] = 0x0028;\n  t['parenleftbig'] = 0x0028;\n  t['parenleftBigg'] = 0x0028;\n  t['parenleftbigg'] = 0x0028;\n  t['parenrightBig'] = 0x0029;\n  t['parenrightbig'] = 0x0029;\n  t['parenrightBigg'] = 0x0029;\n  t['parenrightbigg'] = 0x0029;\n  t['prime'] = 0x2032;\n  t['productdisplay'] = 0x220F;\n  t['producttext'] = 0x220F;\n  t['radicalbig'] = 0x221A;\n  t['radicalBig'] = 0x221A;\n  t['radicalBigg'] = 0x221A;\n  t['radicalbigg'] = 0x221A;\n  t['radicalbt'] = 0x221A;\n  t['radicaltp'] = 0x221A;\n  t['radicalvertex'] = 0x221A;\n  t['slashbig'] = 0x002F;\n  t['slashBig'] = 0x002F;\n  t['slashBigg'] = 0x002F;\n  t['slashbigg'] = 0x002F;\n  t['summationdisplay'] = 0x2211;\n  t['summationtext'] = 0x2211;\n  t['tildewide'] = 0x02DC;\n  t['tildewider'] = 0x02DC;\n  t['tildewidest'] = 0x02DC;\n  t['uniondisplay'] = 0x22C3;\n  t['unionmultidisplay'] = 0x228E;\n  t['unionmultitext'] = 0x228E;\n  t['unionsqdisplay'] = 0x2294;\n  t['unionsqtext'] = 0x2294;\n  t['uniontext'] = 0x22C3;\n  t['vextenddouble'] = 0x2225;\n  t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n  t['space'] = 0x0020;\n  t['a1'] = 0x2701;\n  t['a2'] = 0x2702;\n  t['a202'] = 0x2703;\n  t['a3'] = 0x2704;\n  t['a4'] = 0x260E;\n  t['a5'] = 0x2706;\n  t['a119'] = 0x2707;\n  t['a118'] = 0x2708;\n  t['a117'] = 0x2709;\n  t['a11'] = 0x261B;\n  t['a12'] = 0x261E;\n  t['a13'] = 0x270C;\n  t['a14'] = 0x270D;\n  t['a15'] = 0x270E;\n  t['a16'] = 0x270F;\n  t['a105'] = 0x2710;\n  t['a17'] = 0x2711;\n  t['a18'] = 0x2712;\n  t['a19'] = 0x2713;\n  t['a20'] = 0x2714;\n  t['a21'] = 0x2715;\n  t['a22'] = 0x2716;\n  t['a23'] = 0x2717;\n  t['a24'] = 0x2718;\n  t['a25'] = 0x2719;\n  t['a26'] = 0x271A;\n  t['a27'] = 0x271B;\n  t['a28'] = 0x271C;\n  t['a6'] = 0x271D;\n  t['a7'] = 0x271E;\n  t['a8'] = 0x271F;\n  t['a9'] = 0x2720;\n  t['a10'] = 0x2721;\n  t['a29'] = 0x2722;\n  t['a30'] = 0x2723;\n  t['a31'] = 0x2724;\n  t['a32'] = 0x2725;\n  t['a33'] = 0x2726;\n  t['a34'] = 0x2727;\n  t['a35'] = 0x2605;\n  t['a36'] = 0x2729;\n  t['a37'] = 0x272A;\n  t['a38'] = 0x272B;\n  t['a39'] = 0x272C;\n  t['a40'] = 0x272D;\n  t['a41'] = 0x272E;\n  t['a42'] = 0x272F;\n  t['a43'] = 0x2730;\n  t['a44'] = 0x2731;\n  t['a45'] = 0x2732;\n  t['a46'] = 0x2733;\n  t['a47'] = 0x2734;\n  t['a48'] = 0x2735;\n  t['a49'] = 0x2736;\n  t['a50'] = 0x2737;\n  t['a51'] = 0x2738;\n  t['a52'] = 0x2739;\n  t['a53'] = 0x273A;\n  t['a54'] = 0x273B;\n  t['a55'] = 0x273C;\n  t['a56'] = 0x273D;\n  t['a57'] = 0x273E;\n  t['a58'] = 0x273F;\n  t['a59'] = 0x2740;\n  t['a60'] = 0x2741;\n  t['a61'] = 0x2742;\n  t['a62'] = 0x2743;\n  t['a63'] = 0x2744;\n  t['a64'] = 0x2745;\n  t['a65'] = 0x2746;\n  t['a66'] = 0x2747;\n  t['a67'] = 0x2748;\n  t['a68'] = 0x2749;\n  t['a69'] = 0x274A;\n  t['a70'] = 0x274B;\n  t['a71'] = 0x25CF;\n  t['a72'] = 0x274D;\n  t['a73'] = 0x25A0;\n  t['a74'] = 0x274F;\n  t['a203'] = 0x2750;\n  t['a75'] = 0x2751;\n  t['a204'] = 0x2752;\n  t['a76'] = 0x25B2;\n  t['a77'] = 0x25BC;\n  t['a78'] = 0x25C6;\n  t['a79'] = 0x2756;\n  t['a81'] = 0x25D7;\n  t['a82'] = 0x2758;\n  t['a83'] = 0x2759;\n  t['a84'] = 0x275A;\n  t['a97'] = 0x275B;\n  t['a98'] = 0x275C;\n  t['a99'] = 0x275D;\n  t['a100'] = 0x275E;\n  t['a101'] = 0x2761;\n  t['a102'] = 0x2762;\n  t['a103'] = 0x2763;\n  t['a104'] = 0x2764;\n  t['a106'] = 0x2765;\n  t['a107'] = 0x2766;\n  t['a108'] = 0x2767;\n  t['a112'] = 0x2663;\n  t['a111'] = 0x2666;\n  t['a110'] = 0x2665;\n  t['a109'] = 0x2660;\n  t['a120'] = 0x2460;\n  t['a121'] = 0x2461;\n  t['a122'] = 0x2462;\n  t['a123'] = 0x2463;\n  t['a124'] = 0x2464;\n  t['a125'] = 0x2465;\n  t['a126'] = 0x2466;\n  t['a127'] = 0x2467;\n  t['a128'] = 0x2468;\n  t['a129'] = 0x2469;\n  t['a130'] = 0x2776;\n  t['a131'] = 0x2777;\n  t['a132'] = 0x2778;\n  t['a133'] = 0x2779;\n  t['a134'] = 0x277A;\n  t['a135'] = 0x277B;\n  t['a136'] = 0x277C;\n  t['a137'] = 0x277D;\n  t['a138'] = 0x277E;\n  t['a139'] = 0x277F;\n  t['a140'] = 0x2780;\n  t['a141'] = 0x2781;\n  t['a142'] = 0x2782;\n  t['a143'] = 0x2783;\n  t['a144'] = 0x2784;\n  t['a145'] = 0x2785;\n  t['a146'] = 0x2786;\n  t['a147'] = 0x2787;\n  t['a148'] = 0x2788;\n  t['a149'] = 0x2789;\n  t['a150'] = 0x278A;\n  t['a151'] = 0x278B;\n  t['a152'] = 0x278C;\n  t['a153'] = 0x278D;\n  t['a154'] = 0x278E;\n  t['a155'] = 0x278F;\n  t['a156'] = 0x2790;\n  t['a157'] = 0x2791;\n  t['a158'] = 0x2792;\n  t['a159'] = 0x2793;\n  t['a160'] = 0x2794;\n  t['a161'] = 0x2192;\n  t['a163'] = 0x2194;\n  t['a164'] = 0x2195;\n  t['a196'] = 0x2798;\n  t['a165'] = 0x2799;\n  t['a192'] = 0x279A;\n  t['a166'] = 0x279B;\n  t['a167'] = 0x279C;\n  t['a168'] = 0x279D;\n  t['a169'] = 0x279E;\n  t['a170'] = 0x279F;\n  t['a171'] = 0x27A0;\n  t['a172'] = 0x27A1;\n  t['a173'] = 0x27A2;\n  t['a162'] = 0x27A3;\n  t['a174'] = 0x27A4;\n  t['a175'] = 0x27A5;\n  t['a176'] = 0x27A6;\n  t['a177'] = 0x27A7;\n  t['a178'] = 0x27A8;\n  t['a179'] = 0x27A9;\n  t['a193'] = 0x27AA;\n  t['a180'] = 0x27AB;\n  t['a199'] = 0x27AC;\n  t['a181'] = 0x27AD;\n  t['a200'] = 0x27AE;\n  t['a182'] = 0x27AF;\n  t['a201'] = 0x27B1;\n  t['a183'] = 0x27B2;\n  t['a184'] = 0x27B3;\n  t['a197'] = 0x27B4;\n  t['a185'] = 0x27B5;\n  t['a194'] = 0x27B6;\n  t['a198'] = 0x27B7;\n  t['a186'] = 0x27B8;\n  t['a195'] = 0x27B9;\n  t['a187'] = 0x27BA;\n  t['a188'] = 0x27BB;\n  t['a189'] = 0x27BC;\n  t['a190'] = 0x27BD;\n  t['a191'] = 0x27BE;\n  t['a89'] = 0x2768;\n  t['a90'] = 0x2769;\n  t['a93'] = 0x276A;\n  t['a94'] = 0x276B;\n  t['a91'] = 0x276C;\n  t['a92'] = 0x276D;\n  t['a205'] = 0x276E;\n  t['a85'] = 0x276F;\n  t['a206'] = 0x2770;\n  t['a86'] = 0x2771;\n  t['a87'] = 0x2772;\n  t['a88'] = 0x2773;\n  t['a95'] = 0x2774;\n  t['a96'] = 0x2775;\n  t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.OperatorList = undefined;\n\nvar _util = require('../shared/util');\n\nvar QueueOptimizer = function QueueOptimizerClosure() {\n  function addState(parentState, pattern, checkFn, iterateFn, processFn) {\n    var state = parentState;\n    for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n      var item = pattern[i];\n      state = state[item] || (state[item] = []);\n    }\n    state[pattern[pattern.length - 1]] = {\n      checkFn: checkFn,\n      iterateFn: iterateFn,\n      processFn: processFn\n    };\n  }\n  function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n    var iFirstPIMXO = iFirstSave + 2;\n    for (var i = 0; i < count; i++) {\n      var arg = argsArray[iFirstPIMXO + 4 * i];\n      var imageMask = arg.length === 1 && arg[0];\n      if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n        fnArray[iFirstPIMXO + 4 * i] = _util.OPS.paintSolidColorImageMask;\n        continue;\n      }\n      break;\n    }\n    return count - i;\n  }\n  var InitialState = [];\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintInlineImageXObject, _util.OPS.restore], null, function iterateInlineImageGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintInlineImageXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundInlineImageGroup(context, i) {\n    var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n    var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n    var MAX_WIDTH = 1000;\n    var IMAGE_PADDING = 1;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIIXO = curr - 1;\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n    if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var maxX = 0;\n    var map = [],\n        maxLineHeight = 0;\n    var currentX = IMAGE_PADDING,\n        currentY = IMAGE_PADDING;\n    var q;\n    for (q = 0; q < count; q++) {\n      var transform = argsArray[iFirstTransform + (q << 2)];\n      var img = argsArray[iFirstPIIXO + (q << 2)][0];\n      if (currentX + img.width > MAX_WIDTH) {\n        maxX = Math.max(maxX, currentX);\n        currentY += maxLineHeight + 2 * IMAGE_PADDING;\n        currentX = 0;\n        maxLineHeight = 0;\n      }\n      map.push({\n        transform: transform,\n        x: currentX,\n        y: currentY,\n        w: img.width,\n        h: img.height\n      });\n      currentX += img.width + 2 * IMAGE_PADDING;\n      maxLineHeight = Math.max(maxLineHeight, img.height);\n    }\n    var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n    var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n    var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n    var imgRowSize = imgWidth << 2;\n    for (q = 0; q < count; q++) {\n      var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n      var rowSize = map[q].w << 2;\n      var dataOffset = 0;\n      var offset = map[q].x + map[q].y * imgWidth << 2;\n      imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n      for (var k = 0, kk = map[q].h; k < kk; k++) {\n        imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n        dataOffset += rowSize;\n        offset += imgRowSize;\n      }\n      imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n      while (offset >= 0) {\n        data[offset - 4] = data[offset];\n        data[offset - 3] = data[offset + 1];\n        data[offset - 2] = data[offset + 2];\n        data[offset - 1] = data[offset + 3];\n        data[offset + rowSize] = data[offset + rowSize - 4];\n        data[offset + rowSize + 1] = data[offset + rowSize - 3];\n        data[offset + rowSize + 2] = data[offset + rowSize - 2];\n        data[offset + rowSize + 3] = data[offset + rowSize - 1];\n        offset -= imgRowSize;\n      }\n    }\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintInlineImageXObjectGroup);\n    argsArray.splice(iFirstSave, count * 4, [{\n      width: imgWidth,\n      height: imgHeight,\n      kind: _util.ImageKind.RGBA_32BPP,\n      data: imgData\n    }, map]);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageMaskXObject, _util.OPS.restore], null, function iterateImageMaskGroup(context, i) {\n    var fnArray = context.fnArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        return fnArray[i] === _util.OPS.transform;\n      case 2:\n        return fnArray[i] === _util.OPS.paintImageMaskXObject;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function foundImageMaskGroup(context, i) {\n    var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n    var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n    var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIMXO = curr - 1;\n    var count = Math.floor((i - iFirstSave) / 4);\n    count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n    if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var q;\n    var isSameImage = false;\n    var iTransform, transformArgs;\n    var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n    if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n      isSameImage = true;\n      var firstTransformArg0 = argsArray[iFirstTransform][0];\n      var firstTransformArg3 = argsArray[iFirstTransform][3];\n      iTransform = iFirstTransform + 4;\n      var iPIMXO = iFirstPIMXO + 4;\n      for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n        transformArgs = argsArray[iTransform];\n        if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n          if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n            isSameImage = false;\n          } else {\n            count = q;\n          }\n          break;\n        }\n      }\n    }\n    if (isSameImage) {\n      count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n      var positions = new Float32Array(count * 2);\n      iTransform = iFirstTransform;\n      for (q = 0; q < count; q++, iTransform += 4) {\n        transformArgs = argsArray[iTransform];\n        positions[q << 1] = transformArgs[4];\n        positions[(q << 1) + 1] = transformArgs[5];\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectRepeat);\n      argsArray.splice(iFirstSave, count * 4, [firstPIMXOArg0, firstTransformArg0, firstTransformArg3, positions]);\n    } else {\n      count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n      var images = [];\n      for (q = 0; q < count; q++) {\n        transformArgs = argsArray[iFirstTransform + (q << 2)];\n        var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n        images.push({\n          data: maskParams.data,\n          width: maskParams.width,\n          height: maskParams.height,\n          transform: transformArgs\n        });\n      }\n      fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageMaskXObjectGroup);\n      argsArray.splice(iFirstSave, count * 4, [images]);\n    }\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.save, _util.OPS.transform, _util.OPS.paintImageXObject, _util.OPS.restore], function (context) {\n    var argsArray = context.argsArray;\n    var iFirstTransform = context.iCurr - 2;\n    return argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0;\n  }, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 3;\n    var pos = (i - iFirstSave) % 4;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.save;\n      case 1:\n        if (fnArray[i] !== _util.OPS.transform) {\n          return false;\n        }\n        var iFirstTransform = context.iCurr - 2;\n        var firstTransformArg0 = argsArray[iFirstTransform][0];\n        var firstTransformArg3 = argsArray[iFirstTransform][3];\n        if (argsArray[i][0] !== firstTransformArg0 || argsArray[i][1] !== 0 || argsArray[i][2] !== 0 || argsArray[i][3] !== firstTransformArg3) {\n          return false;\n        }\n        return true;\n      case 2:\n        if (fnArray[i] !== _util.OPS.paintImageXObject) {\n          return false;\n        }\n        var iFirstPIXO = context.iCurr - 1;\n        var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n        if (argsArray[i][0] !== firstPIXOArg0) {\n          return false;\n        }\n        return true;\n      case 3:\n        return fnArray[i] === _util.OPS.restore;\n    }\n  }, function (context, i) {\n    var MIN_IMAGES_IN_BLOCK = 3;\n    var MAX_IMAGES_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstSave = curr - 3;\n    var iFirstTransform = curr - 2;\n    var iFirstPIXO = curr - 1;\n    var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n    var firstTransformArg0 = argsArray[iFirstTransform][0];\n    var firstTransformArg3 = argsArray[iFirstTransform][3];\n    var count = Math.min(Math.floor((i - iFirstSave) / 4), MAX_IMAGES_IN_BLOCK);\n    if (count < MIN_IMAGES_IN_BLOCK) {\n      return i - (i - iFirstSave) % 4;\n    }\n    var positions = new Float32Array(count * 2);\n    var iTransform = iFirstTransform;\n    for (var q = 0; q < count; q++, iTransform += 4) {\n      var transformArgs = argsArray[iTransform];\n      positions[q << 1] = transformArgs[4];\n      positions[(q << 1) + 1] = transformArgs[5];\n    }\n    var args = [firstPIXOArg0, firstTransformArg0, firstTransformArg3, positions];\n    fnArray.splice(iFirstSave, count * 4, _util.OPS.paintImageXObjectRepeat);\n    argsArray.splice(iFirstSave, count * 4, args);\n    return iFirstSave + 1;\n  });\n  addState(InitialState, [_util.OPS.beginText, _util.OPS.setFont, _util.OPS.setTextMatrix, _util.OPS.showText, _util.OPS.endText], null, function (context, i) {\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var iFirstSave = context.iCurr - 4;\n    var pos = (i - iFirstSave) % 5;\n    switch (pos) {\n      case 0:\n        return fnArray[i] === _util.OPS.beginText;\n      case 1:\n        return fnArray[i] === _util.OPS.setFont;\n      case 2:\n        return fnArray[i] === _util.OPS.setTextMatrix;\n      case 3:\n        if (fnArray[i] !== _util.OPS.showText) {\n          return false;\n        }\n        var iFirstSetFont = context.iCurr - 3;\n        var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n        var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n        if (argsArray[i][0] !== firstSetFontArg0 || argsArray[i][1] !== firstSetFontArg1) {\n          return false;\n        }\n        return true;\n      case 4:\n        return fnArray[i] === _util.OPS.endText;\n    }\n  }, function (context, i) {\n    var MIN_CHARS_IN_BLOCK = 3;\n    var MAX_CHARS_IN_BLOCK = 1000;\n    var fnArray = context.fnArray,\n        argsArray = context.argsArray;\n    var curr = context.iCurr;\n    var iFirstBeginText = curr - 4;\n    var iFirstSetFont = curr - 3;\n    var iFirstSetTextMatrix = curr - 2;\n    var iFirstShowText = curr - 1;\n    var iFirstEndText = curr;\n    var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n    var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n    var count = Math.min(Math.floor((i - iFirstBeginText) / 5), MAX_CHARS_IN_BLOCK);\n    if (count < MIN_CHARS_IN_BLOCK) {\n      return i - (i - iFirstBeginText) % 5;\n    }\n    var iFirst = iFirstBeginText;\n    if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n      count++;\n      iFirst -= 5;\n    }\n    var iEndText = iFirst + 4;\n    for (var q = 1; q < count; q++) {\n      fnArray.splice(iEndText, 3);\n      argsArray.splice(iEndText, 3);\n      iEndText += 2;\n    }\n    return iEndText + 1;\n  });\n  function QueueOptimizer(queue) {\n    this.queue = queue;\n    this.state = null;\n    this.context = {\n      iCurr: 0,\n      fnArray: queue.fnArray,\n      argsArray: queue.argsArray\n    };\n    this.match = null;\n    this.lastProcessed = 0;\n  }\n  QueueOptimizer.prototype = {\n    _optimize: function _optimize() {\n      var fnArray = this.queue.fnArray;\n      var i = this.lastProcessed,\n          ii = fnArray.length;\n      var state = this.state;\n      var match = this.match;\n      if (!state && !match && i + 1 === ii && !InitialState[fnArray[i]]) {\n        this.lastProcessed = ii;\n        return;\n      }\n      var context = this.context;\n      while (i < ii) {\n        if (match) {\n          var iterate = (0, match.iterateFn)(context, i);\n          if (iterate) {\n            i++;\n            continue;\n          }\n          i = (0, match.processFn)(context, i + 1);\n          ii = fnArray.length;\n          match = null;\n          state = null;\n          if (i >= ii) {\n            break;\n          }\n        }\n        state = (state || InitialState)[fnArray[i]];\n        if (!state || Array.isArray(state)) {\n          i++;\n          continue;\n        }\n        context.iCurr = i;\n        i++;\n        if (state.checkFn && !(0, state.checkFn)(context)) {\n          state = null;\n          continue;\n        }\n        match = state;\n        state = null;\n      }\n      this.state = state;\n      this.match = match;\n      this.lastProcessed = i;\n    },\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n      this._optimize();\n    },\n    flush: function flush() {\n      while (this.match) {\n        var length = this.queue.fnArray.length;\n        this.lastProcessed = (0, this.match.processFn)(this.context, length);\n        this.match = null;\n        this.state = null;\n        this._optimize();\n      }\n    },\n    reset: function reset() {\n      this.state = null;\n      this.match = null;\n      this.lastProcessed = 0;\n    }\n  };\n  return QueueOptimizer;\n}();\nvar NullOptimizer = function NullOptimizerClosure() {\n  function NullOptimizer(queue) {\n    this.queue = queue;\n  }\n  NullOptimizer.prototype = {\n    push: function push(fn, args) {\n      this.queue.fnArray.push(fn);\n      this.queue.argsArray.push(args);\n    },\n    flush: function flush() {}\n  };\n  return NullOptimizer;\n}();\nvar OperatorList = function OperatorListClosure() {\n  var CHUNK_SIZE = 1000;\n  var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n  function getTransfers(queue) {\n    var transfers = [];\n    var fnArray = queue.fnArray,\n        argsArray = queue.argsArray;\n    for (var i = 0, ii = queue.length; i < ii; i++) {\n      switch (fnArray[i]) {\n        case _util.OPS.paintInlineImageXObject:\n        case _util.OPS.paintInlineImageXObjectGroup:\n        case _util.OPS.paintImageMaskXObject:\n          var arg = argsArray[i][0];\n          if (!arg.cached) {\n            transfers.push(arg.data.buffer);\n          }\n          break;\n      }\n    }\n    return transfers;\n  }\n  function OperatorList(intent, messageHandler, pageIndex) {\n    this.messageHandler = messageHandler;\n    this.fnArray = [];\n    this.argsArray = [];\n    if (messageHandler && this.intent !== 'oplist') {\n      this.optimizer = new QueueOptimizer(this);\n    } else {\n      this.optimizer = new NullOptimizer(this);\n    }\n    this.dependencies = Object.create(null);\n    this._totalLength = 0;\n    this.pageIndex = pageIndex;\n    this.intent = intent;\n    this.weight = 0;\n  }\n  OperatorList.prototype = {\n    get length() {\n      return this.argsArray.length;\n    },\n    get totalLength() {\n      return this._totalLength + this.length;\n    },\n    addOp: function addOp(fn, args) {\n      this.optimizer.push(fn, args);\n      this.weight++;\n      if (this.messageHandler) {\n        if (this.weight >= CHUNK_SIZE) {\n          this.flush();\n        } else if (this.weight >= CHUNK_SIZE_ABOUT && (fn === _util.OPS.restore || fn === _util.OPS.endText)) {\n          this.flush();\n        }\n      }\n    },\n    addDependency: function addDependency(dependency) {\n      if (dependency in this.dependencies) {\n        return;\n      }\n      this.dependencies[dependency] = true;\n      this.addOp(_util.OPS.dependency, [dependency]);\n    },\n    addDependencies: function addDependencies(dependencies) {\n      for (var key in dependencies) {\n        this.addDependency(key);\n      }\n    },\n    addOpList: function addOpList(opList) {\n      _util.Util.extendObj(this.dependencies, opList.dependencies);\n      for (var i = 0, ii = opList.length; i < ii; i++) {\n        this.addOp(opList.fnArray[i], opList.argsArray[i]);\n      }\n    },\n    getIR: function getIR() {\n      return {\n        fnArray: this.fnArray,\n        argsArray: this.argsArray,\n        length: this.length\n      };\n    },\n    flush: function flush(lastChunk) {\n      this.optimizer.flush();\n      var transfers = getTransfers(this);\n      var length = this.length;\n      this._totalLength += length;\n      this.messageHandler.send('RenderPageChunk', {\n        operatorList: {\n          fnArray: this.fnArray,\n          argsArray: this.argsArray,\n          lastChunk: lastChunk,\n          length: length\n        },\n        pageIndex: this.pageIndex,\n        intent: this.intent\n      }, transfers);\n      this.dependencies = Object.create(null);\n      this.fnArray.length = 0;\n      this.argsArray.length = 0;\n      this.weight = 0;\n      this.optimizer.reset();\n    }\n  };\n  return OperatorList;\n}();\nexports.OperatorList = OperatorList;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _jpg = require('./jpg');\n\nvar JpegStream = function JpegStreamClosure() {\n  function JpegStream(stream, maybeLength, dict, params) {\n    var ch = void 0;\n    while ((ch = stream.getByte()) !== -1) {\n      if (ch === 0xFF) {\n        stream.skip(-1);\n        break;\n      }\n    }\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpegStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpegStream.prototype, 'bytes', {\n    get: function JpegStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpegStream.prototype.ensureBuffer = function (requested) {};\n  JpegStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpegImage = new _jpg.JpegImage();\n    var decodeArr = this.dict.getArray('Decode', 'D');\n    if (this.forceRGB && Array.isArray(decodeArr)) {\n      var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n      var decodeArrLength = decodeArr.length;\n      var transform = new Int32Array(decodeArrLength);\n      var transformNeeded = false;\n      var maxValue = (1 << bitsPerComponent) - 1;\n      for (var i = 0; i < decodeArrLength; i += 2) {\n        transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n        transform[i + 1] = decodeArr[i] * maxValue | 0;\n        if (transform[i] !== 256 || transform[i + 1] !== 0) {\n          transformNeeded = true;\n        }\n      }\n      if (transformNeeded) {\n        jpegImage.decodeTransform = transform;\n      }\n    }\n    if ((0, _primitives.isDict)(this.params)) {\n      var colorTransform = this.params.get('ColorTransform');\n      if (Number.isInteger(colorTransform)) {\n        jpegImage.colorTransform = colorTransform;\n      }\n    }\n    jpegImage.parse(this.bytes);\n    var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n    this.buffer = data;\n    this.bufferLength = data.length;\n    this.eof = true;\n  };\n  JpegStream.prototype.getIR = function () {\n    var forceDataSchema = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n    return (0, _util.createObjectURL)(this.bytes, 'image/jpeg', forceDataSchema);\n  };\n  return JpegStream;\n}();\nexports.JpegStream = JpegStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptCompiler = exports.PostScriptEvaluator = exports.PDFFunctionFactory = exports.isPDFFunction = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _ps_parser = require('./ps_parser');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar IsEvalSupportedCached = {\n  get value() {\n    return (0, _util.shadow)(this, 'value', (0, _util.isEvalSupported)());\n  }\n};\n\nvar PDFFunctionFactory = function () {\n  function PDFFunctionFactory(_ref) {\n    var xref = _ref.xref,\n        _ref$isEvalSupported = _ref.isEvalSupported,\n        isEvalSupported = _ref$isEvalSupported === undefined ? true : _ref$isEvalSupported;\n\n    _classCallCheck(this, PDFFunctionFactory);\n\n    this.xref = xref;\n    this.isEvalSupported = isEvalSupported !== false;\n  }\n\n  _createClass(PDFFunctionFactory, [{\n    key: 'create',\n    value: function create(fn) {\n      return PDFFunction.parse({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }, {\n    key: 'createFromArray',\n    value: function createFromArray(fnObj) {\n      return PDFFunction.parseArray({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fnObj: fnObj\n      });\n    }\n  }, {\n    key: 'createFromIR',\n    value: function createFromIR(IR) {\n      return PDFFunction.fromIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        IR: IR\n      });\n    }\n  }, {\n    key: 'createIR',\n    value: function createIR(fn) {\n      return PDFFunction.getIR({\n        xref: this.xref,\n        isEvalSupported: this.isEvalSupported,\n        fn: fn\n      });\n    }\n  }]);\n\n  return PDFFunctionFactory;\n}();\n\nvar PDFFunction = function PDFFunctionClosure() {\n  var CONSTRUCT_SAMPLED = 0;\n  var CONSTRUCT_INTERPOLATED = 2;\n  var CONSTRUCT_STICHED = 3;\n  var CONSTRUCT_POSTSCRIPT = 4;\n  return {\n    getSampleArray: function getSampleArray(size, outputSize, bps, stream) {\n      var i, ii;\n      var length = 1;\n      for (i = 0, ii = size.length; i < ii; i++) {\n        length *= size[i];\n      }\n      length *= outputSize;\n      var array = new Array(length);\n      var codeSize = 0;\n      var codeBuf = 0;\n      var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n      var strBytes = stream.getBytes((length * bps + 7) / 8);\n      var strIdx = 0;\n      for (i = 0; i < length; i++) {\n        while (codeSize < bps) {\n          codeBuf <<= 8;\n          codeBuf |= strBytes[strIdx++];\n          codeSize += 8;\n        }\n        codeSize -= bps;\n        array[i] = (codeBuf >> codeSize) * sampleMul;\n        codeBuf &= (1 << codeSize) - 1;\n      }\n      return array;\n    },\n    getIR: function getIR(_ref2) {\n      var xref = _ref2.xref,\n          isEvalSupported = _ref2.isEvalSupported,\n          fn = _ref2.fn;\n\n      var dict = fn.dict;\n      if (!dict) {\n        dict = fn;\n      }\n      var types = [this.constructSampled, null, this.constructInterpolated, this.constructStiched, this.constructPostScript];\n      var typeNum = dict.get('FunctionType');\n      var typeFn = types[typeNum];\n      if (!typeFn) {\n        throw new _util.FormatError('Unknown type of function');\n      }\n      return typeFn.call(this, {\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn,\n        dict: dict\n      });\n    },\n    fromIR: function fromIR(_ref3) {\n      var xref = _ref3.xref,\n          isEvalSupported = _ref3.isEvalSupported,\n          IR = _ref3.IR;\n\n      var type = IR[0];\n      switch (type) {\n        case CONSTRUCT_SAMPLED:\n          return this.constructSampledFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_INTERPOLATED:\n          return this.constructInterpolatedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        case CONSTRUCT_STICHED:\n          return this.constructStichedFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n        default:\n          return this.constructPostScriptFromIR({\n            xref: xref,\n            isEvalSupported: isEvalSupported,\n            IR: IR\n          });\n      }\n    },\n    parse: function parse(_ref4) {\n      var xref = _ref4.xref,\n          isEvalSupported = _ref4.isEvalSupported,\n          fn = _ref4.fn;\n\n      var IR = this.getIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        fn: fn\n      });\n      return this.fromIR({\n        xref: xref,\n        isEvalSupported: isEvalSupported,\n        IR: IR\n      });\n    },\n    parseArray: function parseArray(_ref5) {\n      var xref = _ref5.xref,\n          isEvalSupported = _ref5.isEvalSupported,\n          fnObj = _ref5.fnObj;\n\n      if (!Array.isArray(fnObj)) {\n        return this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: fnObj\n        });\n      }\n      var fnArray = [];\n      for (var j = 0, jj = fnObj.length; j < jj; j++) {\n        fnArray.push(this.parse({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnObj[j])\n        }));\n      }\n      return function (src, srcOffset, dest, destOffset) {\n        for (var i = 0, ii = fnArray.length; i < ii; i++) {\n          fnArray[i](src, srcOffset, dest, destOffset + i);\n        }\n      };\n    },\n    constructSampled: function constructSampled(_ref6) {\n      var xref = _ref6.xref,\n          isEvalSupported = _ref6.isEvalSupported,\n          fn = _ref6.fn,\n          dict = _ref6.dict;\n\n      function toMultiArray(arr) {\n        var inputLength = arr.length;\n        var out = [];\n        var index = 0;\n        for (var i = 0; i < inputLength; i += 2) {\n          out[index] = [arr[i], arr[i + 1]];\n          ++index;\n        }\n        return out;\n      }\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain || !range) {\n        throw new _util.FormatError('No domain or range');\n      }\n      var inputSize = domain.length / 2;\n      var outputSize = range.length / 2;\n      domain = toMultiArray(domain);\n      range = toMultiArray(range);\n      var size = dict.get('Size');\n      var bps = dict.get('BitsPerSample');\n      var order = dict.get('Order') || 1;\n      if (order !== 1) {\n        (0, _util.info)('No support for cubic spline interpolation: ' + order);\n      }\n      var encode = dict.getArray('Encode');\n      if (!encode) {\n        encode = [];\n        for (var i = 0; i < inputSize; ++i) {\n          encode.push(0);\n          encode.push(size[i] - 1);\n        }\n      }\n      encode = toMultiArray(encode);\n      var decode = dict.getArray('Decode');\n      if (!decode) {\n        decode = range;\n      } else {\n        decode = toMultiArray(decode);\n      }\n      var samples = this.getSampleArray(size, outputSize, bps, fn);\n      return [CONSTRUCT_SAMPLED, inputSize, domain, encode, decode, samples, size, outputSize, Math.pow(2, bps) - 1, range];\n    },\n    constructSampledFromIR: function constructSampledFromIR(_ref7) {\n      var xref = _ref7.xref,\n          isEvalSupported = _ref7.isEvalSupported,\n          IR = _ref7.IR;\n\n      function interpolate(x, xmin, xmax, ymin, ymax) {\n        return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n      }\n      return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n        var m = IR[1];\n        var domain = IR[2];\n        var encode = IR[3];\n        var decode = IR[4];\n        var samples = IR[5];\n        var size = IR[6];\n        var n = IR[7];\n        var range = IR[9];\n        var cubeVertices = 1 << m;\n        var cubeN = new Float64Array(cubeVertices);\n        var cubeVertex = new Uint32Array(cubeVertices);\n        var i, j;\n        for (j = 0; j < cubeVertices; j++) {\n          cubeN[j] = 1;\n        }\n        var k = n,\n            pos = 1;\n        for (i = 0; i < m; ++i) {\n          var domain_2i = domain[i][0];\n          var domain_2i_1 = domain[i][1];\n          var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n          var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n          var size_i = size[i];\n          e = Math.min(Math.max(e, 0), size_i - 1);\n          var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n          var n0 = e0 + 1 - e;\n          var n1 = e - e0;\n          var offset0 = e0 * k;\n          var offset1 = offset0 + k;\n          for (j = 0; j < cubeVertices; j++) {\n            if (j & pos) {\n              cubeN[j] *= n1;\n              cubeVertex[j] += offset1;\n            } else {\n              cubeN[j] *= n0;\n              cubeVertex[j] += offset0;\n            }\n          }\n          k *= size_i;\n          pos <<= 1;\n        }\n        for (j = 0; j < n; ++j) {\n          var rj = 0;\n          for (i = 0; i < cubeVertices; i++) {\n            rj += samples[cubeVertex[i] + j] * cubeN[i];\n          }\n          rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n          dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n        }\n      };\n    },\n    constructInterpolated: function constructInterpolated(_ref8) {\n      var xref = _ref8.xref,\n          isEvalSupported = _ref8.isEvalSupported,\n          fn = _ref8.fn,\n          dict = _ref8.dict;\n\n      var c0 = dict.getArray('C0') || [0];\n      var c1 = dict.getArray('C1') || [1];\n      var n = dict.get('N');\n      if (!Array.isArray(c0) || !Array.isArray(c1)) {\n        throw new _util.FormatError('Illegal dictionary for interpolated function');\n      }\n      var length = c0.length;\n      var diff = [];\n      for (var i = 0; i < length; ++i) {\n        diff.push(c1[i] - c0[i]);\n      }\n      return [CONSTRUCT_INTERPOLATED, c0, diff, n];\n    },\n    constructInterpolatedFromIR: function constructInterpolatedFromIR(_ref9) {\n      var xref = _ref9.xref,\n          isEvalSupported = _ref9.isEvalSupported,\n          IR = _ref9.IR;\n\n      var c0 = IR[1];\n      var diff = IR[2];\n      var n = IR[3];\n      var length = diff.length;\n      return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n        var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n        for (var j = 0; j < length; ++j) {\n          dest[destOffset + j] = c0[j] + x * diff[j];\n        }\n      };\n    },\n    constructStiched: function constructStiched(_ref10) {\n      var xref = _ref10.xref,\n          isEvalSupported = _ref10.isEvalSupported,\n          fn = _ref10.fn,\n          dict = _ref10.dict;\n\n      var domain = dict.getArray('Domain');\n      if (!domain) {\n        throw new _util.FormatError('No domain');\n      }\n      var inputSize = domain.length / 2;\n      if (inputSize !== 1) {\n        throw new _util.FormatError('Bad domain for stiched function');\n      }\n      var fnRefs = dict.get('Functions');\n      var fns = [];\n      for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n        fns.push(this.getIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          fn: xref.fetchIfRef(fnRefs[i])\n        }));\n      }\n      var bounds = dict.getArray('Bounds');\n      var encode = dict.getArray('Encode');\n      return [CONSTRUCT_STICHED, domain, bounds, encode, fns];\n    },\n    constructStichedFromIR: function constructStichedFromIR(_ref11) {\n      var xref = _ref11.xref,\n          isEvalSupported = _ref11.isEvalSupported,\n          IR = _ref11.IR;\n\n      var domain = IR[1];\n      var bounds = IR[2];\n      var encode = IR[3];\n      var fnsIR = IR[4];\n      var fns = [];\n      var tmpBuf = new Float32Array(1);\n      for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n        fns.push(this.fromIR({\n          xref: xref,\n          isEvalSupported: isEvalSupported,\n          IR: fnsIR[i]\n        }));\n      }\n      return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n        var clip = function constructStichedFromIRClip(v, min, max) {\n          if (v > max) {\n            v = max;\n          } else if (v < min) {\n            v = min;\n          }\n          return v;\n        };\n        var v = clip(src[srcOffset], domain[0], domain[1]);\n        for (var i = 0, ii = bounds.length; i < ii; ++i) {\n          if (v < bounds[i]) {\n            break;\n          }\n        }\n        var dmin = domain[0];\n        if (i > 0) {\n          dmin = bounds[i - 1];\n        }\n        var dmax = domain[1];\n        if (i < bounds.length) {\n          dmax = bounds[i];\n        }\n        var rmin = encode[2 * i];\n        var rmax = encode[2 * i + 1];\n        tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n        fns[i](tmpBuf, 0, dest, destOffset);\n      };\n    },\n    constructPostScript: function constructPostScript(_ref12) {\n      var xref = _ref12.xref,\n          isEvalSupported = _ref12.isEvalSupported,\n          fn = _ref12.fn,\n          dict = _ref12.dict;\n\n      var domain = dict.getArray('Domain');\n      var range = dict.getArray('Range');\n      if (!domain) {\n        throw new _util.FormatError('No domain.');\n      }\n      if (!range) {\n        throw new _util.FormatError('No range.');\n      }\n      var lexer = new _ps_parser.PostScriptLexer(fn);\n      var parser = new _ps_parser.PostScriptParser(lexer);\n      var code = parser.parse();\n      return [CONSTRUCT_POSTSCRIPT, domain, range, code];\n    },\n    constructPostScriptFromIR: function constructPostScriptFromIR(_ref13) {\n      var xref = _ref13.xref,\n          isEvalSupported = _ref13.isEvalSupported,\n          IR = _ref13.IR;\n\n      var domain = IR[1];\n      var range = IR[2];\n      var code = IR[3];\n      if (isEvalSupported && IsEvalSupportedCached.value) {\n        var compiled = new PostScriptCompiler().compile(code, domain, range);\n        if (compiled) {\n          return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n        }\n      }\n      (0, _util.info)('Unable to compile PS function');\n      var numOutputs = range.length >> 1;\n      var numInputs = domain.length >> 1;\n      var evaluator = new PostScriptEvaluator(code);\n      var cache = Object.create(null);\n      var MAX_CACHE_SIZE = 2048 * 4;\n      var cache_available = MAX_CACHE_SIZE;\n      var tmpBuf = new Float32Array(numInputs);\n      return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n        var i, value;\n        var key = '';\n        var input = tmpBuf;\n        for (i = 0; i < numInputs; i++) {\n          value = src[srcOffset + i];\n          input[i] = value;\n          key += value + '_';\n        }\n        var cachedValue = cache[key];\n        if (cachedValue !== undefined) {\n          dest.set(cachedValue, destOffset);\n          return;\n        }\n        var output = new Float32Array(numOutputs);\n        var stack = evaluator.execute(input);\n        var stackIndex = stack.length - numOutputs;\n        for (i = 0; i < numOutputs; i++) {\n          value = stack[stackIndex + i];\n          var bound = range[i * 2];\n          if (value < bound) {\n            value = bound;\n          } else {\n            bound = range[i * 2 + 1];\n            if (value > bound) {\n              value = bound;\n            }\n          }\n          output[i] = value;\n        }\n        if (cache_available > 0) {\n          cache_available--;\n          cache[key] = output;\n        }\n        dest.set(output, destOffset);\n      };\n    }\n  };\n}();\nfunction isPDFFunction(v) {\n  var fnDict;\n  if ((typeof v === 'undefined' ? 'undefined' : _typeof(v)) !== 'object') {\n    return false;\n  } else if ((0, _primitives.isDict)(v)) {\n    fnDict = v;\n  } else if ((0, _primitives.isStream)(v)) {\n    fnDict = v.dict;\n  } else {\n    return false;\n  }\n  return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n  var MAX_STACK_SIZE = 100;\n  function PostScriptStack(initialStack) {\n    this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n  }\n  PostScriptStack.prototype = {\n    push: function PostScriptStack_push(value) {\n      if (this.stack.length >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      this.stack.push(value);\n    },\n    pop: function PostScriptStack_pop() {\n      if (this.stack.length <= 0) {\n        throw new Error('PostScript function stack underflow.');\n      }\n      return this.stack.pop();\n    },\n    copy: function PostScriptStack_copy(n) {\n      if (this.stack.length + n >= MAX_STACK_SIZE) {\n        throw new Error('PostScript function stack overflow.');\n      }\n      var stack = this.stack;\n      for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n        stack.push(stack[i]);\n      }\n    },\n    index: function PostScriptStack_index(n) {\n      this.push(this.stack[this.stack.length - n - 1]);\n    },\n    roll: function PostScriptStack_roll(n, p) {\n      var stack = this.stack;\n      var l = stack.length - n;\n      var r = stack.length - 1,\n          c = l + (p - Math.floor(p / n) * n),\n          i,\n          j,\n          t;\n      for (i = l, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = l, j = c - 1; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n      for (i = c, j = r; i < j; i++, j--) {\n        t = stack[i];\n        stack[i] = stack[j];\n        stack[j] = t;\n      }\n    }\n  };\n  return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n  function PostScriptEvaluator(operators) {\n    this.operators = operators;\n  }\n  PostScriptEvaluator.prototype = {\n    execute: function PostScriptEvaluator_execute(initialStack) {\n      var stack = new PostScriptStack(initialStack);\n      var counter = 0;\n      var operators = this.operators;\n      var length = operators.length;\n      var operator, a, b;\n      while (counter < length) {\n        operator = operators[counter++];\n        if (typeof operator === 'number') {\n          stack.push(operator);\n          continue;\n        }\n        switch (operator) {\n          case 'jz':\n            b = stack.pop();\n            a = stack.pop();\n            if (!a) {\n              counter = b;\n            }\n            break;\n          case 'j':\n            a = stack.pop();\n            counter = a;\n            break;\n          case 'abs':\n            a = stack.pop();\n            stack.push(Math.abs(a));\n            break;\n          case 'add':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a + b);\n            break;\n          case 'and':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a && b);\n            } else {\n              stack.push(a & b);\n            }\n            break;\n          case 'atan':\n            a = stack.pop();\n            stack.push(Math.atan(a));\n            break;\n          case 'bitshift':\n            b = stack.pop();\n            a = stack.pop();\n            if (a > 0) {\n              stack.push(a << b);\n            } else {\n              stack.push(a >> b);\n            }\n            break;\n          case 'ceiling':\n            a = stack.pop();\n            stack.push(Math.ceil(a));\n            break;\n          case 'copy':\n            a = stack.pop();\n            stack.copy(a);\n            break;\n          case 'cos':\n            a = stack.pop();\n            stack.push(Math.cos(a));\n            break;\n          case 'cvi':\n            a = stack.pop() | 0;\n            stack.push(a);\n            break;\n          case 'cvr':\n            break;\n          case 'div':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b);\n            break;\n          case 'dup':\n            stack.copy(1);\n            break;\n          case 'eq':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a === b);\n            break;\n          case 'exch':\n            stack.roll(2, 1);\n            break;\n          case 'exp':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(Math.pow(a, b));\n            break;\n          case 'false':\n            stack.push(false);\n            break;\n          case 'floor':\n            a = stack.pop();\n            stack.push(Math.floor(a));\n            break;\n          case 'ge':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a >= b);\n            break;\n          case 'gt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a > b);\n            break;\n          case 'idiv':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a / b | 0);\n            break;\n          case 'index':\n            a = stack.pop();\n            stack.index(a);\n            break;\n          case 'le':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a <= b);\n            break;\n          case 'ln':\n            a = stack.pop();\n            stack.push(Math.log(a));\n            break;\n          case 'log':\n            a = stack.pop();\n            stack.push(Math.log(a) / Math.LN10);\n            break;\n          case 'lt':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a < b);\n            break;\n          case 'mod':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a % b);\n            break;\n          case 'mul':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a * b);\n            break;\n          case 'ne':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a !== b);\n            break;\n          case 'neg':\n            a = stack.pop();\n            stack.push(-a);\n            break;\n          case 'not':\n            a = stack.pop();\n            if ((0, _util.isBool)(a)) {\n              stack.push(!a);\n            } else {\n              stack.push(~a);\n            }\n            break;\n          case 'or':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a || b);\n            } else {\n              stack.push(a | b);\n            }\n            break;\n          case 'pop':\n            stack.pop();\n            break;\n          case 'roll':\n            b = stack.pop();\n            a = stack.pop();\n            stack.roll(a, b);\n            break;\n          case 'round':\n            a = stack.pop();\n            stack.push(Math.round(a));\n            break;\n          case 'sin':\n            a = stack.pop();\n            stack.push(Math.sin(a));\n            break;\n          case 'sqrt':\n            a = stack.pop();\n            stack.push(Math.sqrt(a));\n            break;\n          case 'sub':\n            b = stack.pop();\n            a = stack.pop();\n            stack.push(a - b);\n            break;\n          case 'true':\n            stack.push(true);\n            break;\n          case 'truncate':\n            a = stack.pop();\n            a = a < 0 ? Math.ceil(a) : Math.floor(a);\n            stack.push(a);\n            break;\n          case 'xor':\n            b = stack.pop();\n            a = stack.pop();\n            if ((0, _util.isBool)(a) && (0, _util.isBool)(b)) {\n              stack.push(a !== b);\n            } else {\n              stack.push(a ^ b);\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown operator ' + operator);\n        }\n      }\n      return stack.stack;\n    }\n  };\n  return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n  function AstNode(type) {\n    this.type = type;\n  }\n  AstNode.prototype.visit = function (visitor) {\n    (0, _util.unreachable)('abstract method');\n  };\n  function AstArgument(index, min, max) {\n    AstNode.call(this, 'args');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstArgument.prototype = Object.create(AstNode.prototype);\n  AstArgument.prototype.visit = function (visitor) {\n    visitor.visitArgument(this);\n  };\n  function AstLiteral(number) {\n    AstNode.call(this, 'literal');\n    this.number = number;\n    this.min = number;\n    this.max = number;\n  }\n  AstLiteral.prototype = Object.create(AstNode.prototype);\n  AstLiteral.prototype.visit = function (visitor) {\n    visitor.visitLiteral(this);\n  };\n  function AstBinaryOperation(op, arg1, arg2, min, max) {\n    AstNode.call(this, 'binary');\n    this.op = op;\n    this.arg1 = arg1;\n    this.arg2 = arg2;\n    this.min = min;\n    this.max = max;\n  }\n  AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n  AstBinaryOperation.prototype.visit = function (visitor) {\n    visitor.visitBinaryOperation(this);\n  };\n  function AstMin(arg, max) {\n    AstNode.call(this, 'max');\n    this.arg = arg;\n    this.min = arg.min;\n    this.max = max;\n  }\n  AstMin.prototype = Object.create(AstNode.prototype);\n  AstMin.prototype.visit = function (visitor) {\n    visitor.visitMin(this);\n  };\n  function AstVariable(index, min, max) {\n    AstNode.call(this, 'var');\n    this.index = index;\n    this.min = min;\n    this.max = max;\n  }\n  AstVariable.prototype = Object.create(AstNode.prototype);\n  AstVariable.prototype.visit = function (visitor) {\n    visitor.visitVariable(this);\n  };\n  function AstVariableDefinition(variable, arg) {\n    AstNode.call(this, 'definition');\n    this.variable = variable;\n    this.arg = arg;\n  }\n  AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n  AstVariableDefinition.prototype.visit = function (visitor) {\n    visitor.visitVariableDefinition(this);\n  };\n  function ExpressionBuilderVisitor() {\n    this.parts = [];\n  }\n  ExpressionBuilderVisitor.prototype = {\n    visitArgument: function visitArgument(arg) {\n      this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n    },\n    visitVariable: function visitVariable(variable) {\n      this.parts.push('v', variable.index);\n    },\n    visitLiteral: function visitLiteral(literal) {\n      this.parts.push(literal.number);\n    },\n    visitBinaryOperation: function visitBinaryOperation(operation) {\n      this.parts.push('(');\n      operation.arg1.visit(this);\n      this.parts.push(' ', operation.op, ' ');\n      operation.arg2.visit(this);\n      this.parts.push(')');\n    },\n    visitVariableDefinition: function visitVariableDefinition(definition) {\n      this.parts.push('var ');\n      definition.variable.visit(this);\n      this.parts.push(' = ');\n      definition.arg.visit(this);\n      this.parts.push(';');\n    },\n    visitMin: function visitMin(max) {\n      this.parts.push('Math.min(');\n      max.arg.visit(this);\n      this.parts.push(', ', max.max, ')');\n    },\n    toString: function toString() {\n      return this.parts.join('');\n    }\n  };\n  function buildAddOperation(num1, num2) {\n    if (num2.type === 'literal' && num2.number === 0) {\n      return num1;\n    }\n    if (num1.type === 'literal' && num1.number === 0) {\n      return num2;\n    }\n    if (num2.type === 'literal' && num1.type === 'literal') {\n      return new AstLiteral(num1.number + num2.number);\n    }\n    return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n  }\n  function buildMulOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return new AstLiteral(0);\n      } else if (num2.number === 1) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number * num2.number);\n      }\n    }\n    if (num1.type === 'literal') {\n      if (num1.number === 0) {\n        return new AstLiteral(0);\n      } else if (num1.number === 1) {\n        return num2;\n      }\n    }\n    var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n    return new AstBinaryOperation('*', num1, num2, min, max);\n  }\n  function buildSubOperation(num1, num2) {\n    if (num2.type === 'literal') {\n      if (num2.number === 0) {\n        return num1;\n      } else if (num1.type === 'literal') {\n        return new AstLiteral(num1.number - num2.number);\n      }\n    }\n    if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n      return num2.arg2;\n    }\n    return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n  }\n  function buildMinOperation(num1, max) {\n    if (num1.min >= max) {\n      return new AstLiteral(max);\n    } else if (num1.max <= max) {\n      return num1;\n    }\n    return new AstMin(num1, max);\n  }\n  function PostScriptCompiler() {}\n  PostScriptCompiler.prototype = {\n    compile: function PostScriptCompiler_compile(code, domain, range) {\n      var stack = [];\n      var i, ii;\n      var instructions = [];\n      var inputSize = domain.length >> 1,\n          outputSize = range.length >> 1;\n      var lastRegister = 0;\n      var n, j;\n      var num1, num2, ast1, ast2, tmpVar, item;\n      for (i = 0; i < inputSize; i++) {\n        stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n      }\n      for (i = 0, ii = code.length; i < ii; i++) {\n        item = code[i];\n        if (typeof item === 'number') {\n          stack.push(new AstLiteral(item));\n          continue;\n        }\n        switch (item) {\n          case 'add':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildAddOperation(num1, num2));\n            break;\n          case 'cvr':\n            if (stack.length < 1) {\n              return null;\n            }\n            break;\n          case 'mul':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildMulOperation(num1, num2));\n            break;\n          case 'sub':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            stack.push(buildSubOperation(num1, num2));\n            break;\n          case 'exch':\n            if (stack.length < 2) {\n              return null;\n            }\n            ast1 = stack.pop();\n            ast2 = stack.pop();\n            stack.push(ast1, ast2);\n            break;\n          case 'pop':\n            if (stack.length < 1) {\n              return null;\n            }\n            stack.pop();\n            break;\n          case 'index':\n            if (stack.length < 1) {\n              return null;\n            }\n            num1 = stack.pop();\n            if (num1.type !== 'literal') {\n              return null;\n            }\n            n = num1.number;\n            if (n < 0 || !Number.isInteger(n) || stack.length < n) {\n              return null;\n            }\n            ast1 = stack[stack.length - n - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - n - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'dup':\n            if (stack.length < 1) {\n              return null;\n            }\n            if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n              num1 = stack.pop();\n              stack.push(buildMinOperation(num1, code[i + 1]));\n              i += 6;\n              break;\n            }\n            ast1 = stack[stack.length - 1];\n            if (ast1.type === 'literal' || ast1.type === 'var') {\n              stack.push(ast1);\n              break;\n            }\n            tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n            stack[stack.length - 1] = tmpVar;\n            stack.push(tmpVar);\n            instructions.push(new AstVariableDefinition(tmpVar, ast1));\n            break;\n          case 'roll':\n            if (stack.length < 2) {\n              return null;\n            }\n            num2 = stack.pop();\n            num1 = stack.pop();\n            if (num2.type !== 'literal' || num1.type !== 'literal') {\n              return null;\n            }\n            j = num2.number;\n            n = num1.number;\n            if (n <= 0 || !Number.isInteger(n) || !Number.isInteger(j) || stack.length < n) {\n              return null;\n            }\n            j = (j % n + n) % n;\n            if (j === 0) {\n              break;\n            }\n            Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n            break;\n          default:\n            return null;\n        }\n      }\n      if (stack.length !== outputSize) {\n        return null;\n      }\n      var result = [];\n      instructions.forEach(function (instruction) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        instruction.visit(statementBuilder);\n        result.push(statementBuilder.toString());\n      });\n      stack.forEach(function (expr, i) {\n        var statementBuilder = new ExpressionBuilderVisitor();\n        expr.visit(statementBuilder);\n        var min = range[i * 2],\n            max = range[i * 2 + 1];\n        var out = [statementBuilder.toString()];\n        if (min > expr.min) {\n          out.unshift('Math.max(', min, ', ');\n          out.push(')');\n        }\n        if (max < expr.max) {\n          out.unshift('Math.min(', max, ', ');\n          out.push(')');\n        }\n        out.unshift('dest[destOffset + ', i, '] = ');\n        out.push(';');\n        result.push(out.join(''));\n      });\n      return result.join('\\n');\n    }\n  };\n  return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunctionFactory = PDFFunctionFactory;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nvar getLookupTableFactory = require('../shared/util').getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n  t[63721] = 0x00A9;\n  t[63193] = 0x00A9;\n  t[63720] = 0x00AE;\n  t[63194] = 0x00AE;\n  t[63722] = 0x2122;\n  t[63195] = 0x2122;\n  t[63729] = 0x23A7;\n  t[63730] = 0x23A8;\n  t[63731] = 0x23A9;\n  t[63740] = 0x23AB;\n  t[63741] = 0x23AC;\n  t[63742] = 0x23AD;\n  t[63726] = 0x23A1;\n  t[63727] = 0x23A2;\n  t[63728] = 0x23A3;\n  t[63737] = 0x23A4;\n  t[63738] = 0x23A5;\n  t[63739] = 0x23A6;\n  t[63723] = 0x239B;\n  t[63724] = 0x239C;\n  t[63725] = 0x239D;\n  t[63734] = 0x239E;\n  t[63735] = 0x239F;\n  t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n  if (code >= 0xFFF0 && code <= 0xFFFF) {\n    return 0;\n  } else if (code >= 0xF600 && code <= 0xF8FF) {\n    return getSpecialPUASymbols()[code] || code;\n  } else if (code === 0x00AD) {\n    return 0x002D;\n  }\n  return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n  var unicode = glyphsUnicodeMap[name];\n  if (unicode !== undefined) {\n    return unicode;\n  }\n  if (!name) {\n    return -1;\n  }\n  if (name[0] === 'u') {\n    var nameLen = name.length,\n        hexStr;\n    if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n      hexStr = name.substr(3);\n    } else if (nameLen >= 5 && nameLen <= 7) {\n      hexStr = name.substr(1);\n    } else {\n      return -1;\n    }\n    if (hexStr === hexStr.toUpperCase()) {\n      unicode = parseInt(hexStr, 16);\n      if (unicode >= 0) {\n        return unicode;\n      }\n    }\n  }\n  return -1;\n}\nvar UnicodeRanges = [{\n  'begin': 0x0000,\n  'end': 0x007F\n}, {\n  'begin': 0x0080,\n  'end': 0x00FF\n}, {\n  'begin': 0x0100,\n  'end': 0x017F\n}, {\n  'begin': 0x0180,\n  'end': 0x024F\n}, {\n  'begin': 0x0250,\n  'end': 0x02AF\n}, {\n  'begin': 0x02B0,\n  'end': 0x02FF\n}, {\n  'begin': 0x0300,\n  'end': 0x036F\n}, {\n  'begin': 0x0370,\n  'end': 0x03FF\n}, {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n}, {\n  'begin': 0x0400,\n  'end': 0x04FF\n}, {\n  'begin': 0x0530,\n  'end': 0x058F\n}, {\n  'begin': 0x0590,\n  'end': 0x05FF\n}, {\n  'begin': 0xA500,\n  'end': 0xA63F\n}, {\n  'begin': 0x0600,\n  'end': 0x06FF\n}, {\n  'begin': 0x07C0,\n  'end': 0x07FF\n}, {\n  'begin': 0x0900,\n  'end': 0x097F\n}, {\n  'begin': 0x0980,\n  'end': 0x09FF\n}, {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n}, {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n}, {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n}, {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n}, {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n}, {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n}, {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n}, {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n}, {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n}, {\n  'begin': 0x10A0,\n  'end': 0x10FF\n}, {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n}, {\n  'begin': 0x1100,\n  'end': 0x11FF\n}, {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n}, {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n}, {\n  'begin': 0x2000,\n  'end': 0x206F\n}, {\n  'begin': 0x2070,\n  'end': 0x209F\n}, {\n  'begin': 0x20A0,\n  'end': 0x20CF\n}, {\n  'begin': 0x20D0,\n  'end': 0x20FF\n}, {\n  'begin': 0x2100,\n  'end': 0x214F\n}, {\n  'begin': 0x2150,\n  'end': 0x218F\n}, {\n  'begin': 0x2190,\n  'end': 0x21FF\n}, {\n  'begin': 0x2200,\n  'end': 0x22FF\n}, {\n  'begin': 0x2300,\n  'end': 0x23FF\n}, {\n  'begin': 0x2400,\n  'end': 0x243F\n}, {\n  'begin': 0x2440,\n  'end': 0x245F\n}, {\n  'begin': 0x2460,\n  'end': 0x24FF\n}, {\n  'begin': 0x2500,\n  'end': 0x257F\n}, {\n  'begin': 0x2580,\n  'end': 0x259F\n}, {\n  'begin': 0x25A0,\n  'end': 0x25FF\n}, {\n  'begin': 0x2600,\n  'end': 0x26FF\n}, {\n  'begin': 0x2700,\n  'end': 0x27BF\n}, {\n  'begin': 0x3000,\n  'end': 0x303F\n}, {\n  'begin': 0x3040,\n  'end': 0x309F\n}, {\n  'begin': 0x30A0,\n  'end': 0x30FF\n}, {\n  'begin': 0x3100,\n  'end': 0x312F\n}, {\n  'begin': 0x3130,\n  'end': 0x318F\n}, {\n  'begin': 0xA840,\n  'end': 0xA87F\n}, {\n  'begin': 0x3200,\n  'end': 0x32FF\n}, {\n  'begin': 0x3300,\n  'end': 0x33FF\n}, {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n}, {\n  'begin': 0xD800,\n  'end': 0xDFFF\n}, {\n  'begin': 0x10900,\n  'end': 0x1091F\n}, {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n}, {\n  'begin': 0xE000,\n  'end': 0xF8FF\n}, {\n  'begin': 0x31C0,\n  'end': 0x31EF\n}, {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n}, {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n}, {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n}, {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n}, {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n}, {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n}, {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n}, {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n}, {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n}, {\n  'begin': 0x0700,\n  'end': 0x074F\n}, {\n  'begin': 0x0780,\n  'end': 0x07BF\n}, {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n}, {\n  'begin': 0x1000,\n  'end': 0x109F\n}, {\n  'begin': 0x1200,\n  'end': 0x137F\n}, {\n  'begin': 0x13A0,\n  'end': 0x13FF\n}, {\n  'begin': 0x1400,\n  'end': 0x167F\n}, {\n  'begin': 0x1680,\n  'end': 0x169F\n}, {\n  'begin': 0x16A0,\n  'end': 0x16FF\n}, {\n  'begin': 0x1780,\n  'end': 0x17FF\n}, {\n  'begin': 0x1800,\n  'end': 0x18AF\n}, {\n  'begin': 0x2800,\n  'end': 0x28FF\n}, {\n  'begin': 0xA000,\n  'end': 0xA48F\n}, {\n  'begin': 0x1700,\n  'end': 0x171F\n}, {\n  'begin': 0x10300,\n  'end': 0x1032F\n}, {\n  'begin': 0x10330,\n  'end': 0x1034F\n}, {\n  'begin': 0x10400,\n  'end': 0x1044F\n}, {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n}, {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n}, {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n}, {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n}, {\n  'begin': 0xE0000,\n  'end': 0xE007F\n}, {\n  'begin': 0x1900,\n  'end': 0x194F\n}, {\n  'begin': 0x1950,\n  'end': 0x197F\n}, {\n  'begin': 0x1980,\n  'end': 0x19DF\n}, {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n}, {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n}, {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n}, {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n}, {\n  'begin': 0xA800,\n  'end': 0xA82F\n}, {\n  'begin': 0x10000,\n  'end': 0x1007F\n}, {\n  'begin': 0x10140,\n  'end': 0x1018F\n}, {\n  'begin': 0x10380,\n  'end': 0x1039F\n}, {\n  'begin': 0x103A0,\n  'end': 0x103DF\n}, {\n  'begin': 0x10450,\n  'end': 0x1047F\n}, {\n  'begin': 0x10480,\n  'end': 0x104AF\n}, {\n  'begin': 0x10800,\n  'end': 0x1083F\n}, {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n}, {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n}, {\n  'begin': 0x12000,\n  'end': 0x123FF\n}, {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n}, {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n}, {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n}, {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n}, {\n  'begin': 0xA880,\n  'end': 0xA8DF\n}, {\n  'begin': 0xA900,\n  'end': 0xA92F\n}, {\n  'begin': 0xA930,\n  'end': 0xA95F\n}, {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n}, {\n  'begin': 0x10190,\n  'end': 0x101CF\n}, {\n  'begin': 0x101D0,\n  'end': 0x101FF\n}, {\n  'begin': 0x102A0,\n  'end': 0x102DF\n}, {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n}];\nfunction getUnicodeRangeFor(value) {\n  for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n    var range = UnicodeRanges[i];\n    if (value >= range.begin && value < range.end) {\n      return i;\n    }\n  }\n  return -1;\n}\nfunction isRTLRangeFor(value) {\n  var range = UnicodeRanges[13];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  range = UnicodeRanges[11];\n  if (value >= range.begin && value < range.end) {\n    return true;\n  }\n  return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n  t['\\u00A8'] = '\\u0020\\u0308';\n  t['\\u00AF'] = '\\u0020\\u0304';\n  t['\\u00B4'] = '\\u0020\\u0301';\n  t['\\u00B5'] = '\\u03BC';\n  t['\\u00B8'] = '\\u0020\\u0327';\n  t['\\u0132'] = '\\u0049\\u004A';\n  t['\\u0133'] = '\\u0069\\u006A';\n  t['\\u013F'] = '\\u004C\\u00B7';\n  t['\\u0140'] = '\\u006C\\u00B7';\n  t['\\u0149'] = '\\u02BC\\u006E';\n  t['\\u017F'] = '\\u0073';\n  t['\\u01C4'] = '\\u0044\\u017D';\n  t['\\u01C5'] = '\\u0044\\u017E';\n  t['\\u01C6'] = '\\u0064\\u017E';\n  t['\\u01C7'] = '\\u004C\\u004A';\n  t['\\u01C8'] = '\\u004C\\u006A';\n  t['\\u01C9'] = '\\u006C\\u006A';\n  t['\\u01CA'] = '\\u004E\\u004A';\n  t['\\u01CB'] = '\\u004E\\u006A';\n  t['\\u01CC'] = '\\u006E\\u006A';\n  t['\\u01F1'] = '\\u0044\\u005A';\n  t['\\u01F2'] = '\\u0044\\u007A';\n  t['\\u01F3'] = '\\u0064\\u007A';\n  t['\\u02D8'] = '\\u0020\\u0306';\n  t['\\u02D9'] = '\\u0020\\u0307';\n  t['\\u02DA'] = '\\u0020\\u030A';\n  t['\\u02DB'] = '\\u0020\\u0328';\n  t['\\u02DC'] = '\\u0020\\u0303';\n  t['\\u02DD'] = '\\u0020\\u030B';\n  t['\\u037A'] = '\\u0020\\u0345';\n  t['\\u0384'] = '\\u0020\\u0301';\n  t['\\u03D0'] = '\\u03B2';\n  t['\\u03D1'] = '\\u03B8';\n  t['\\u03D2'] = '\\u03A5';\n  t['\\u03D5'] = '\\u03C6';\n  t['\\u03D6'] = '\\u03C0';\n  t['\\u03F0'] = '\\u03BA';\n  t['\\u03F1'] = '\\u03C1';\n  t['\\u03F2'] = '\\u03C2';\n  t['\\u03F4'] = '\\u0398';\n  t['\\u03F5'] = '\\u03B5';\n  t['\\u03F9'] = '\\u03A3';\n  t['\\u0587'] = '\\u0565\\u0582';\n  t['\\u0675'] = '\\u0627\\u0674';\n  t['\\u0676'] = '\\u0648\\u0674';\n  t['\\u0677'] = '\\u06C7\\u0674';\n  t['\\u0678'] = '\\u064A\\u0674';\n  t['\\u0E33'] = '\\u0E4D\\u0E32';\n  t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n  t['\\u0EDC'] = '\\u0EAB\\u0E99';\n  t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n  t['\\u0F77'] = '\\u0FB2\\u0F81';\n  t['\\u0F79'] = '\\u0FB3\\u0F81';\n  t['\\u1E9A'] = '\\u0061\\u02BE';\n  t['\\u1FBD'] = '\\u0020\\u0313';\n  t['\\u1FBF'] = '\\u0020\\u0313';\n  t['\\u1FC0'] = '\\u0020\\u0342';\n  t['\\u1FFE'] = '\\u0020\\u0314';\n  t['\\u2002'] = '\\u0020';\n  t['\\u2003'] = '\\u0020';\n  t['\\u2004'] = '\\u0020';\n  t['\\u2005'] = '\\u0020';\n  t['\\u2006'] = '\\u0020';\n  t['\\u2008'] = '\\u0020';\n  t['\\u2009'] = '\\u0020';\n  t['\\u200A'] = '\\u0020';\n  t['\\u2017'] = '\\u0020\\u0333';\n  t['\\u2024'] = '\\u002E';\n  t['\\u2025'] = '\\u002E\\u002E';\n  t['\\u2026'] = '\\u002E\\u002E\\u002E';\n  t['\\u2033'] = '\\u2032\\u2032';\n  t['\\u2034'] = '\\u2032\\u2032\\u2032';\n  t['\\u2036'] = '\\u2035\\u2035';\n  t['\\u2037'] = '\\u2035\\u2035\\u2035';\n  t['\\u203C'] = '\\u0021\\u0021';\n  t['\\u203E'] = '\\u0020\\u0305';\n  t['\\u2047'] = '\\u003F\\u003F';\n  t['\\u2048'] = '\\u003F\\u0021';\n  t['\\u2049'] = '\\u0021\\u003F';\n  t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n  t['\\u205F'] = '\\u0020';\n  t['\\u20A8'] = '\\u0052\\u0073';\n  t['\\u2100'] = '\\u0061\\u002F\\u0063';\n  t['\\u2101'] = '\\u0061\\u002F\\u0073';\n  t['\\u2103'] = '\\u00B0\\u0043';\n  t['\\u2105'] = '\\u0063\\u002F\\u006F';\n  t['\\u2106'] = '\\u0063\\u002F\\u0075';\n  t['\\u2107'] = '\\u0190';\n  t['\\u2109'] = '\\u00B0\\u0046';\n  t['\\u2116'] = '\\u004E\\u006F';\n  t['\\u2121'] = '\\u0054\\u0045\\u004C';\n  t['\\u2135'] = '\\u05D0';\n  t['\\u2136'] = '\\u05D1';\n  t['\\u2137'] = '\\u05D2';\n  t['\\u2138'] = '\\u05D3';\n  t['\\u213B'] = '\\u0046\\u0041\\u0058';\n  t['\\u2160'] = '\\u0049';\n  t['\\u2161'] = '\\u0049\\u0049';\n  t['\\u2162'] = '\\u0049\\u0049\\u0049';\n  t['\\u2163'] = '\\u0049\\u0056';\n  t['\\u2164'] = '\\u0056';\n  t['\\u2165'] = '\\u0056\\u0049';\n  t['\\u2166'] = '\\u0056\\u0049\\u0049';\n  t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n  t['\\u2168'] = '\\u0049\\u0058';\n  t['\\u2169'] = '\\u0058';\n  t['\\u216A'] = '\\u0058\\u0049';\n  t['\\u216B'] = '\\u0058\\u0049\\u0049';\n  t['\\u216C'] = '\\u004C';\n  t['\\u216D'] = '\\u0043';\n  t['\\u216E'] = '\\u0044';\n  t['\\u216F'] = '\\u004D';\n  t['\\u2170'] = '\\u0069';\n  t['\\u2171'] = '\\u0069\\u0069';\n  t['\\u2172'] = '\\u0069\\u0069\\u0069';\n  t['\\u2173'] = '\\u0069\\u0076';\n  t['\\u2174'] = '\\u0076';\n  t['\\u2175'] = '\\u0076\\u0069';\n  t['\\u2176'] = '\\u0076\\u0069\\u0069';\n  t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n  t['\\u2178'] = '\\u0069\\u0078';\n  t['\\u2179'] = '\\u0078';\n  t['\\u217A'] = '\\u0078\\u0069';\n  t['\\u217B'] = '\\u0078\\u0069\\u0069';\n  t['\\u217C'] = '\\u006C';\n  t['\\u217D'] = '\\u0063';\n  t['\\u217E'] = '\\u0064';\n  t['\\u217F'] = '\\u006D';\n  t['\\u222C'] = '\\u222B\\u222B';\n  t['\\u222D'] = '\\u222B\\u222B\\u222B';\n  t['\\u222F'] = '\\u222E\\u222E';\n  t['\\u2230'] = '\\u222E\\u222E\\u222E';\n  t['\\u2474'] = '\\u0028\\u0031\\u0029';\n  t['\\u2475'] = '\\u0028\\u0032\\u0029';\n  t['\\u2476'] = '\\u0028\\u0033\\u0029';\n  t['\\u2477'] = '\\u0028\\u0034\\u0029';\n  t['\\u2478'] = '\\u0028\\u0035\\u0029';\n  t['\\u2479'] = '\\u0028\\u0036\\u0029';\n  t['\\u247A'] = '\\u0028\\u0037\\u0029';\n  t['\\u247B'] = '\\u0028\\u0038\\u0029';\n  t['\\u247C'] = '\\u0028\\u0039\\u0029';\n  t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n  t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n  t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n  t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n  t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n  t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n  t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n  t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n  t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n  t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n  t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n  t['\\u2488'] = '\\u0031\\u002E';\n  t['\\u2489'] = '\\u0032\\u002E';\n  t['\\u248A'] = '\\u0033\\u002E';\n  t['\\u248B'] = '\\u0034\\u002E';\n  t['\\u248C'] = '\\u0035\\u002E';\n  t['\\u248D'] = '\\u0036\\u002E';\n  t['\\u248E'] = '\\u0037\\u002E';\n  t['\\u248F'] = '\\u0038\\u002E';\n  t['\\u2490'] = '\\u0039\\u002E';\n  t['\\u2491'] = '\\u0031\\u0030\\u002E';\n  t['\\u2492'] = '\\u0031\\u0031\\u002E';\n  t['\\u2493'] = '\\u0031\\u0032\\u002E';\n  t['\\u2494'] = '\\u0031\\u0033\\u002E';\n  t['\\u2495'] = '\\u0031\\u0034\\u002E';\n  t['\\u2496'] = '\\u0031\\u0035\\u002E';\n  t['\\u2497'] = '\\u0031\\u0036\\u002E';\n  t['\\u2498'] = '\\u0031\\u0037\\u002E';\n  t['\\u2499'] = '\\u0031\\u0038\\u002E';\n  t['\\u249A'] = '\\u0031\\u0039\\u002E';\n  t['\\u249B'] = '\\u0032\\u0030\\u002E';\n  t['\\u249C'] = '\\u0028\\u0061\\u0029';\n  t['\\u249D'] = '\\u0028\\u0062\\u0029';\n  t['\\u249E'] = '\\u0028\\u0063\\u0029';\n  t['\\u249F'] = '\\u0028\\u0064\\u0029';\n  t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n  t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n  t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n  t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n  t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n  t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n  t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n  t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n  t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n  t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n  t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n  t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n  t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n  t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n  t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n  t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n  t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n  t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n  t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n  t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n  t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n  t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n  t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n  t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n  t['\\u2A75'] = '\\u003D\\u003D';\n  t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n  t['\\u2E9F'] = '\\u6BCD';\n  t['\\u2EF3'] = '\\u9F9F';\n  t['\\u2F00'] = '\\u4E00';\n  t['\\u2F01'] = '\\u4E28';\n  t['\\u2F02'] = '\\u4E36';\n  t['\\u2F03'] = '\\u4E3F';\n  t['\\u2F04'] = '\\u4E59';\n  t['\\u2F05'] = '\\u4E85';\n  t['\\u2F06'] = '\\u4E8C';\n  t['\\u2F07'] = '\\u4EA0';\n  t['\\u2F08'] = '\\u4EBA';\n  t['\\u2F09'] = '\\u513F';\n  t['\\u2F0A'] = '\\u5165';\n  t['\\u2F0B'] = '\\u516B';\n  t['\\u2F0C'] = '\\u5182';\n  t['\\u2F0D'] = '\\u5196';\n  t['\\u2F0E'] = '\\u51AB';\n  t['\\u2F0F'] = '\\u51E0';\n  t['\\u2F10'] = '\\u51F5';\n  t['\\u2F11'] = '\\u5200';\n  t['\\u2F12'] = '\\u529B';\n  t['\\u2F13'] = '\\u52F9';\n  t['\\u2F14'] = '\\u5315';\n  t['\\u2F15'] = '\\u531A';\n  t['\\u2F16'] = '\\u5338';\n  t['\\u2F17'] = '\\u5341';\n  t['\\u2F18'] = '\\u535C';\n  t['\\u2F19'] = '\\u5369';\n  t['\\u2F1A'] = '\\u5382';\n  t['\\u2F1B'] = '\\u53B6';\n  t['\\u2F1C'] = '\\u53C8';\n  t['\\u2F1D'] = '\\u53E3';\n  t['\\u2F1E'] = '\\u56D7';\n  t['\\u2F1F'] = '\\u571F';\n  t['\\u2F20'] = '\\u58EB';\n  t['\\u2F21'] = '\\u5902';\n  t['\\u2F22'] = '\\u590A';\n  t['\\u2F23'] = '\\u5915';\n  t['\\u2F24'] = '\\u5927';\n  t['\\u2F25'] = '\\u5973';\n  t['\\u2F26'] = '\\u5B50';\n  t['\\u2F27'] = '\\u5B80';\n  t['\\u2F28'] = '\\u5BF8';\n  t['\\u2F29'] = '\\u5C0F';\n  t['\\u2F2A'] = '\\u5C22';\n  t['\\u2F2B'] = '\\u5C38';\n  t['\\u2F2C'] = '\\u5C6E';\n  t['\\u2F2D'] = '\\u5C71';\n  t['\\u2F2E'] = '\\u5DDB';\n  t['\\u2F2F'] = '\\u5DE5';\n  t['\\u2F30'] = '\\u5DF1';\n  t['\\u2F31'] = '\\u5DFE';\n  t['\\u2F32'] = '\\u5E72';\n  t['\\u2F33'] = '\\u5E7A';\n  t['\\u2F34'] = '\\u5E7F';\n  t['\\u2F35'] = '\\u5EF4';\n  t['\\u2F36'] = '\\u5EFE';\n  t['\\u2F37'] = '\\u5F0B';\n  t['\\u2F38'] = '\\u5F13';\n  t['\\u2F39'] = '\\u5F50';\n  t['\\u2F3A'] = '\\u5F61';\n  t['\\u2F3B'] = '\\u5F73';\n  t['\\u2F3C'] = '\\u5FC3';\n  t['\\u2F3D'] = '\\u6208';\n  t['\\u2F3E'] = '\\u6236';\n  t['\\u2F3F'] = '\\u624B';\n  t['\\u2F40'] = '\\u652F';\n  t['\\u2F41'] = '\\u6534';\n  t['\\u2F42'] = '\\u6587';\n  t['\\u2F43'] = '\\u6597';\n  t['\\u2F44'] = '\\u65A4';\n  t['\\u2F45'] = '\\u65B9';\n  t['\\u2F46'] = '\\u65E0';\n  t['\\u2F47'] = '\\u65E5';\n  t['\\u2F48'] = '\\u66F0';\n  t['\\u2F49'] = '\\u6708';\n  t['\\u2F4A'] = '\\u6728';\n  t['\\u2F4B'] = '\\u6B20';\n  t['\\u2F4C'] = '\\u6B62';\n  t['\\u2F4D'] = '\\u6B79';\n  t['\\u2F4E'] = '\\u6BB3';\n  t['\\u2F4F'] = '\\u6BCB';\n  t['\\u2F50'] = '\\u6BD4';\n  t['\\u2F51'] = '\\u6BDB';\n  t['\\u2F52'] = '\\u6C0F';\n  t['\\u2F53'] = '\\u6C14';\n  t['\\u2F54'] = '\\u6C34';\n  t['\\u2F55'] = '\\u706B';\n  t['\\u2F56'] = '\\u722A';\n  t['\\u2F57'] = '\\u7236';\n  t['\\u2F58'] = '\\u723B';\n  t['\\u2F59'] = '\\u723F';\n  t['\\u2F5A'] = '\\u7247';\n  t['\\u2F5B'] = '\\u7259';\n  t['\\u2F5C'] = '\\u725B';\n  t['\\u2F5D'] = '\\u72AC';\n  t['\\u2F5E'] = '\\u7384';\n  t['\\u2F5F'] = '\\u7389';\n  t['\\u2F60'] = '\\u74DC';\n  t['\\u2F61'] = '\\u74E6';\n  t['\\u2F62'] = '\\u7518';\n  t['\\u2F63'] = '\\u751F';\n  t['\\u2F64'] = '\\u7528';\n  t['\\u2F65'] = '\\u7530';\n  t['\\u2F66'] = '\\u758B';\n  t['\\u2F67'] = '\\u7592';\n  t['\\u2F68'] = '\\u7676';\n  t['\\u2F69'] = '\\u767D';\n  t['\\u2F6A'] = '\\u76AE';\n  t['\\u2F6B'] = '\\u76BF';\n  t['\\u2F6C'] = '\\u76EE';\n  t['\\u2F6D'] = '\\u77DB';\n  t['\\u2F6E'] = '\\u77E2';\n  t['\\u2F6F'] = '\\u77F3';\n  t['\\u2F70'] = '\\u793A';\n  t['\\u2F71'] = '\\u79B8';\n  t['\\u2F72'] = '\\u79BE';\n  t['\\u2F73'] = '\\u7A74';\n  t['\\u2F74'] = '\\u7ACB';\n  t['\\u2F75'] = '\\u7AF9';\n  t['\\u2F76'] = '\\u7C73';\n  t['\\u2F77'] = '\\u7CF8';\n  t['\\u2F78'] = '\\u7F36';\n  t['\\u2F79'] = '\\u7F51';\n  t['\\u2F7A'] = '\\u7F8A';\n  t['\\u2F7B'] = '\\u7FBD';\n  t['\\u2F7C'] = '\\u8001';\n  t['\\u2F7D'] = '\\u800C';\n  t['\\u2F7E'] = '\\u8012';\n  t['\\u2F7F'] = '\\u8033';\n  t['\\u2F80'] = '\\u807F';\n  t['\\u2F81'] = '\\u8089';\n  t['\\u2F82'] = '\\u81E3';\n  t['\\u2F83'] = '\\u81EA';\n  t['\\u2F84'] = '\\u81F3';\n  t['\\u2F85'] = '\\u81FC';\n  t['\\u2F86'] = '\\u820C';\n  t['\\u2F87'] = '\\u821B';\n  t['\\u2F88'] = '\\u821F';\n  t['\\u2F89'] = '\\u826E';\n  t['\\u2F8A'] = '\\u8272';\n  t['\\u2F8B'] = '\\u8278';\n  t['\\u2F8C'] = '\\u864D';\n  t['\\u2F8D'] = '\\u866B';\n  t['\\u2F8E'] = '\\u8840';\n  t['\\u2F8F'] = '\\u884C';\n  t['\\u2F90'] = '\\u8863';\n  t['\\u2F91'] = '\\u897E';\n  t['\\u2F92'] = '\\u898B';\n  t['\\u2F93'] = '\\u89D2';\n  t['\\u2F94'] = '\\u8A00';\n  t['\\u2F95'] = '\\u8C37';\n  t['\\u2F96'] = '\\u8C46';\n  t['\\u2F97'] = '\\u8C55';\n  t['\\u2F98'] = '\\u8C78';\n  t['\\u2F99'] = '\\u8C9D';\n  t['\\u2F9A'] = '\\u8D64';\n  t['\\u2F9B'] = '\\u8D70';\n  t['\\u2F9C'] = '\\u8DB3';\n  t['\\u2F9D'] = '\\u8EAB';\n  t['\\u2F9E'] = '\\u8ECA';\n  t['\\u2F9F'] = '\\u8F9B';\n  t['\\u2FA0'] = '\\u8FB0';\n  t['\\u2FA1'] = '\\u8FB5';\n  t['\\u2FA2'] = '\\u9091';\n  t['\\u2FA3'] = '\\u9149';\n  t['\\u2FA4'] = '\\u91C6';\n  t['\\u2FA5'] = '\\u91CC';\n  t['\\u2FA6'] = '\\u91D1';\n  t['\\u2FA7'] = '\\u9577';\n  t['\\u2FA8'] = '\\u9580';\n  t['\\u2FA9'] = '\\u961C';\n  t['\\u2FAA'] = '\\u96B6';\n  t['\\u2FAB'] = '\\u96B9';\n  t['\\u2FAC'] = '\\u96E8';\n  t['\\u2FAD'] = '\\u9751';\n  t['\\u2FAE'] = '\\u975E';\n  t['\\u2FAF'] = '\\u9762';\n  t['\\u2FB0'] = '\\u9769';\n  t['\\u2FB1'] = '\\u97CB';\n  t['\\u2FB2'] = '\\u97ED';\n  t['\\u2FB3'] = '\\u97F3';\n  t['\\u2FB4'] = '\\u9801';\n  t['\\u2FB5'] = '\\u98A8';\n  t['\\u2FB6'] = '\\u98DB';\n  t['\\u2FB7'] = '\\u98DF';\n  t['\\u2FB8'] = '\\u9996';\n  t['\\u2FB9'] = '\\u9999';\n  t['\\u2FBA'] = '\\u99AC';\n  t['\\u2FBB'] = '\\u9AA8';\n  t['\\u2FBC'] = '\\u9AD8';\n  t['\\u2FBD'] = '\\u9ADF';\n  t['\\u2FBE'] = '\\u9B25';\n  t['\\u2FBF'] = '\\u9B2F';\n  t['\\u2FC0'] = '\\u9B32';\n  t['\\u2FC1'] = '\\u9B3C';\n  t['\\u2FC2'] = '\\u9B5A';\n  t['\\u2FC3'] = '\\u9CE5';\n  t['\\u2FC4'] = '\\u9E75';\n  t['\\u2FC5'] = '\\u9E7F';\n  t['\\u2FC6'] = '\\u9EA5';\n  t['\\u2FC7'] = '\\u9EBB';\n  t['\\u2FC8'] = '\\u9EC3';\n  t['\\u2FC9'] = '\\u9ECD';\n  t['\\u2FCA'] = '\\u9ED1';\n  t['\\u2FCB'] = '\\u9EF9';\n  t['\\u2FCC'] = '\\u9EFD';\n  t['\\u2FCD'] = '\\u9F0E';\n  t['\\u2FCE'] = '\\u9F13';\n  t['\\u2FCF'] = '\\u9F20';\n  t['\\u2FD0'] = '\\u9F3B';\n  t['\\u2FD1'] = '\\u9F4A';\n  t['\\u2FD2'] = '\\u9F52';\n  t['\\u2FD3'] = '\\u9F8D';\n  t['\\u2FD4'] = '\\u9F9C';\n  t['\\u2FD5'] = '\\u9FA0';\n  t['\\u3036'] = '\\u3012';\n  t['\\u3038'] = '\\u5341';\n  t['\\u3039'] = '\\u5344';\n  t['\\u303A'] = '\\u5345';\n  t['\\u309B'] = '\\u0020\\u3099';\n  t['\\u309C'] = '\\u0020\\u309A';\n  t['\\u3131'] = '\\u1100';\n  t['\\u3132'] = '\\u1101';\n  t['\\u3133'] = '\\u11AA';\n  t['\\u3134'] = '\\u1102';\n  t['\\u3135'] = '\\u11AC';\n  t['\\u3136'] = '\\u11AD';\n  t['\\u3137'] = '\\u1103';\n  t['\\u3138'] = '\\u1104';\n  t['\\u3139'] = '\\u1105';\n  t['\\u313A'] = '\\u11B0';\n  t['\\u313B'] = '\\u11B1';\n  t['\\u313C'] = '\\u11B2';\n  t['\\u313D'] = '\\u11B3';\n  t['\\u313E'] = '\\u11B4';\n  t['\\u313F'] = '\\u11B5';\n  t['\\u3140'] = '\\u111A';\n  t['\\u3141'] = '\\u1106';\n  t['\\u3142'] = '\\u1107';\n  t['\\u3143'] = '\\u1108';\n  t['\\u3144'] = '\\u1121';\n  t['\\u3145'] = '\\u1109';\n  t['\\u3146'] = '\\u110A';\n  t['\\u3147'] = '\\u110B';\n  t['\\u3148'] = '\\u110C';\n  t['\\u3149'] = '\\u110D';\n  t['\\u314A'] = '\\u110E';\n  t['\\u314B'] = '\\u110F';\n  t['\\u314C'] = '\\u1110';\n  t['\\u314D'] = '\\u1111';\n  t['\\u314E'] = '\\u1112';\n  t['\\u314F'] = '\\u1161';\n  t['\\u3150'] = '\\u1162';\n  t['\\u3151'] = '\\u1163';\n  t['\\u3152'] = '\\u1164';\n  t['\\u3153'] = '\\u1165';\n  t['\\u3154'] = '\\u1166';\n  t['\\u3155'] = '\\u1167';\n  t['\\u3156'] = '\\u1168';\n  t['\\u3157'] = '\\u1169';\n  t['\\u3158'] = '\\u116A';\n  t['\\u3159'] = '\\u116B';\n  t['\\u315A'] = '\\u116C';\n  t['\\u315B'] = '\\u116D';\n  t['\\u315C'] = '\\u116E';\n  t['\\u315D'] = '\\u116F';\n  t['\\u315E'] = '\\u1170';\n  t['\\u315F'] = '\\u1171';\n  t['\\u3160'] = '\\u1172';\n  t['\\u3161'] = '\\u1173';\n  t['\\u3162'] = '\\u1174';\n  t['\\u3163'] = '\\u1175';\n  t['\\u3164'] = '\\u1160';\n  t['\\u3165'] = '\\u1114';\n  t['\\u3166'] = '\\u1115';\n  t['\\u3167'] = '\\u11C7';\n  t['\\u3168'] = '\\u11C8';\n  t['\\u3169'] = '\\u11CC';\n  t['\\u316A'] = '\\u11CE';\n  t['\\u316B'] = '\\u11D3';\n  t['\\u316C'] = '\\u11D7';\n  t['\\u316D'] = '\\u11D9';\n  t['\\u316E'] = '\\u111C';\n  t['\\u316F'] = '\\u11DD';\n  t['\\u3170'] = '\\u11DF';\n  t['\\u3171'] = '\\u111D';\n  t['\\u3172'] = '\\u111E';\n  t['\\u3173'] = '\\u1120';\n  t['\\u3174'] = '\\u1122';\n  t['\\u3175'] = '\\u1123';\n  t['\\u3176'] = '\\u1127';\n  t['\\u3177'] = '\\u1129';\n  t['\\u3178'] = '\\u112B';\n  t['\\u3179'] = '\\u112C';\n  t['\\u317A'] = '\\u112D';\n  t['\\u317B'] = '\\u112E';\n  t['\\u317C'] = '\\u112F';\n  t['\\u317D'] = '\\u1132';\n  t['\\u317E'] = '\\u1136';\n  t['\\u317F'] = '\\u1140';\n  t['\\u3180'] = '\\u1147';\n  t['\\u3181'] = '\\u114C';\n  t['\\u3182'] = '\\u11F1';\n  t['\\u3183'] = '\\u11F2';\n  t['\\u3184'] = '\\u1157';\n  t['\\u3185'] = '\\u1158';\n  t['\\u3186'] = '\\u1159';\n  t['\\u3187'] = '\\u1184';\n  t['\\u3188'] = '\\u1185';\n  t['\\u3189'] = '\\u1188';\n  t['\\u318A'] = '\\u1191';\n  t['\\u318B'] = '\\u1192';\n  t['\\u318C'] = '\\u1194';\n  t['\\u318D'] = '\\u119E';\n  t['\\u318E'] = '\\u11A1';\n  t['\\u3200'] = '\\u0028\\u1100\\u0029';\n  t['\\u3201'] = '\\u0028\\u1102\\u0029';\n  t['\\u3202'] = '\\u0028\\u1103\\u0029';\n  t['\\u3203'] = '\\u0028\\u1105\\u0029';\n  t['\\u3204'] = '\\u0028\\u1106\\u0029';\n  t['\\u3205'] = '\\u0028\\u1107\\u0029';\n  t['\\u3206'] = '\\u0028\\u1109\\u0029';\n  t['\\u3207'] = '\\u0028\\u110B\\u0029';\n  t['\\u3208'] = '\\u0028\\u110C\\u0029';\n  t['\\u3209'] = '\\u0028\\u110E\\u0029';\n  t['\\u320A'] = '\\u0028\\u110F\\u0029';\n  t['\\u320B'] = '\\u0028\\u1110\\u0029';\n  t['\\u320C'] = '\\u0028\\u1111\\u0029';\n  t['\\u320D'] = '\\u0028\\u1112\\u0029';\n  t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n  t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n  t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n  t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n  t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n  t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n  t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n  t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n  t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n  t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n  t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n  t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n  t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n  t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n  t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n  t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n  t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n  t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n  t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n  t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n  t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n  t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n  t['\\u3225'] = '\\u0028\\u516D\\u0029';\n  t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n  t['\\u3227'] = '\\u0028\\u516B\\u0029';\n  t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n  t['\\u3229'] = '\\u0028\\u5341\\u0029';\n  t['\\u322A'] = '\\u0028\\u6708\\u0029';\n  t['\\u322B'] = '\\u0028\\u706B\\u0029';\n  t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n  t['\\u322D'] = '\\u0028\\u6728\\u0029';\n  t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n  t['\\u322F'] = '\\u0028\\u571F\\u0029';\n  t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n  t['\\u3231'] = '\\u0028\\u682A\\u0029';\n  t['\\u3232'] = '\\u0028\\u6709\\u0029';\n  t['\\u3233'] = '\\u0028\\u793E\\u0029';\n  t['\\u3234'] = '\\u0028\\u540D\\u0029';\n  t['\\u3235'] = '\\u0028\\u7279\\u0029';\n  t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n  t['\\u3237'] = '\\u0028\\u795D\\u0029';\n  t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n  t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n  t['\\u323A'] = '\\u0028\\u547C\\u0029';\n  t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n  t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n  t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n  t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n  t['\\u323F'] = '\\u0028\\u5354\\u0029';\n  t['\\u3240'] = '\\u0028\\u796D\\u0029';\n  t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n  t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n  t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n  t['\\u32C0'] = '\\u0031\\u6708';\n  t['\\u32C1'] = '\\u0032\\u6708';\n  t['\\u32C2'] = '\\u0033\\u6708';\n  t['\\u32C3'] = '\\u0034\\u6708';\n  t['\\u32C4'] = '\\u0035\\u6708';\n  t['\\u32C5'] = '\\u0036\\u6708';\n  t['\\u32C6'] = '\\u0037\\u6708';\n  t['\\u32C7'] = '\\u0038\\u6708';\n  t['\\u32C8'] = '\\u0039\\u6708';\n  t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n  t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n  t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n  t['\\u3358'] = '\\u0030\\u70B9';\n  t['\\u3359'] = '\\u0031\\u70B9';\n  t['\\u335A'] = '\\u0032\\u70B9';\n  t['\\u335B'] = '\\u0033\\u70B9';\n  t['\\u335C'] = '\\u0034\\u70B9';\n  t['\\u335D'] = '\\u0035\\u70B9';\n  t['\\u335E'] = '\\u0036\\u70B9';\n  t['\\u335F'] = '\\u0037\\u70B9';\n  t['\\u3360'] = '\\u0038\\u70B9';\n  t['\\u3361'] = '\\u0039\\u70B9';\n  t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n  t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n  t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n  t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n  t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n  t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n  t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n  t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n  t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n  t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n  t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n  t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n  t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n  t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n  t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n  t['\\u33E0'] = '\\u0031\\u65E5';\n  t['\\u33E1'] = '\\u0032\\u65E5';\n  t['\\u33E2'] = '\\u0033\\u65E5';\n  t['\\u33E3'] = '\\u0034\\u65E5';\n  t['\\u33E4'] = '\\u0035\\u65E5';\n  t['\\u33E5'] = '\\u0036\\u65E5';\n  t['\\u33E6'] = '\\u0037\\u65E5';\n  t['\\u33E7'] = '\\u0038\\u65E5';\n  t['\\u33E8'] = '\\u0039\\u65E5';\n  t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n  t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n  t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n  t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n  t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n  t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n  t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n  t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n  t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n  t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n  t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n  t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n  t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n  t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n  t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n  t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n  t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n  t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n  t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n  t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n  t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n  t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n  t['\\uFB00'] = '\\u0066\\u0066';\n  t['\\uFB01'] = '\\u0066\\u0069';\n  t['\\uFB02'] = '\\u0066\\u006C';\n  t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n  t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n  t['\\uFB05'] = '\\u017F\\u0074';\n  t['\\uFB06'] = '\\u0073\\u0074';\n  t['\\uFB13'] = '\\u0574\\u0576';\n  t['\\uFB14'] = '\\u0574\\u0565';\n  t['\\uFB15'] = '\\u0574\\u056B';\n  t['\\uFB16'] = '\\u057E\\u0576';\n  t['\\uFB17'] = '\\u0574\\u056D';\n  t['\\uFB4F'] = '\\u05D0\\u05DC';\n  t['\\uFB50'] = '\\u0671';\n  t['\\uFB51'] = '\\u0671';\n  t['\\uFB52'] = '\\u067B';\n  t['\\uFB53'] = '\\u067B';\n  t['\\uFB54'] = '\\u067B';\n  t['\\uFB55'] = '\\u067B';\n  t['\\uFB56'] = '\\u067E';\n  t['\\uFB57'] = '\\u067E';\n  t['\\uFB58'] = '\\u067E';\n  t['\\uFB59'] = '\\u067E';\n  t['\\uFB5A'] = '\\u0680';\n  t['\\uFB5B'] = '\\u0680';\n  t['\\uFB5C'] = '\\u0680';\n  t['\\uFB5D'] = '\\u0680';\n  t['\\uFB5E'] = '\\u067A';\n  t['\\uFB5F'] = '\\u067A';\n  t['\\uFB60'] = '\\u067A';\n  t['\\uFB61'] = '\\u067A';\n  t['\\uFB62'] = '\\u067F';\n  t['\\uFB63'] = '\\u067F';\n  t['\\uFB64'] = '\\u067F';\n  t['\\uFB65'] = '\\u067F';\n  t['\\uFB66'] = '\\u0679';\n  t['\\uFB67'] = '\\u0679';\n  t['\\uFB68'] = '\\u0679';\n  t['\\uFB69'] = '\\u0679';\n  t['\\uFB6A'] = '\\u06A4';\n  t['\\uFB6B'] = '\\u06A4';\n  t['\\uFB6C'] = '\\u06A4';\n  t['\\uFB6D'] = '\\u06A4';\n  t['\\uFB6E'] = '\\u06A6';\n  t['\\uFB6F'] = '\\u06A6';\n  t['\\uFB70'] = '\\u06A6';\n  t['\\uFB71'] = '\\u06A6';\n  t['\\uFB72'] = '\\u0684';\n  t['\\uFB73'] = '\\u0684';\n  t['\\uFB74'] = '\\u0684';\n  t['\\uFB75'] = '\\u0684';\n  t['\\uFB76'] = '\\u0683';\n  t['\\uFB77'] = '\\u0683';\n  t['\\uFB78'] = '\\u0683';\n  t['\\uFB79'] = '\\u0683';\n  t['\\uFB7A'] = '\\u0686';\n  t['\\uFB7B'] = '\\u0686';\n  t['\\uFB7C'] = '\\u0686';\n  t['\\uFB7D'] = '\\u0686';\n  t['\\uFB7E'] = '\\u0687';\n  t['\\uFB7F'] = '\\u0687';\n  t['\\uFB80'] = '\\u0687';\n  t['\\uFB81'] = '\\u0687';\n  t['\\uFB82'] = '\\u068D';\n  t['\\uFB83'] = '\\u068D';\n  t['\\uFB84'] = '\\u068C';\n  t['\\uFB85'] = '\\u068C';\n  t['\\uFB86'] = '\\u068E';\n  t['\\uFB87'] = '\\u068E';\n  t['\\uFB88'] = '\\u0688';\n  t['\\uFB89'] = '\\u0688';\n  t['\\uFB8A'] = '\\u0698';\n  t['\\uFB8B'] = '\\u0698';\n  t['\\uFB8C'] = '\\u0691';\n  t['\\uFB8D'] = '\\u0691';\n  t['\\uFB8E'] = '\\u06A9';\n  t['\\uFB8F'] = '\\u06A9';\n  t['\\uFB90'] = '\\u06A9';\n  t['\\uFB91'] = '\\u06A9';\n  t['\\uFB92'] = '\\u06AF';\n  t['\\uFB93'] = '\\u06AF';\n  t['\\uFB94'] = '\\u06AF';\n  t['\\uFB95'] = '\\u06AF';\n  t['\\uFB96'] = '\\u06B3';\n  t['\\uFB97'] = '\\u06B3';\n  t['\\uFB98'] = '\\u06B3';\n  t['\\uFB99'] = '\\u06B3';\n  t['\\uFB9A'] = '\\u06B1';\n  t['\\uFB9B'] = '\\u06B1';\n  t['\\uFB9C'] = '\\u06B1';\n  t['\\uFB9D'] = '\\u06B1';\n  t['\\uFB9E'] = '\\u06BA';\n  t['\\uFB9F'] = '\\u06BA';\n  t['\\uFBA0'] = '\\u06BB';\n  t['\\uFBA1'] = '\\u06BB';\n  t['\\uFBA2'] = '\\u06BB';\n  t['\\uFBA3'] = '\\u06BB';\n  t['\\uFBA4'] = '\\u06C0';\n  t['\\uFBA5'] = '\\u06C0';\n  t['\\uFBA6'] = '\\u06C1';\n  t['\\uFBA7'] = '\\u06C1';\n  t['\\uFBA8'] = '\\u06C1';\n  t['\\uFBA9'] = '\\u06C1';\n  t['\\uFBAA'] = '\\u06BE';\n  t['\\uFBAB'] = '\\u06BE';\n  t['\\uFBAC'] = '\\u06BE';\n  t['\\uFBAD'] = '\\u06BE';\n  t['\\uFBAE'] = '\\u06D2';\n  t['\\uFBAF'] = '\\u06D2';\n  t['\\uFBB0'] = '\\u06D3';\n  t['\\uFBB1'] = '\\u06D3';\n  t['\\uFBD3'] = '\\u06AD';\n  t['\\uFBD4'] = '\\u06AD';\n  t['\\uFBD5'] = '\\u06AD';\n  t['\\uFBD6'] = '\\u06AD';\n  t['\\uFBD7'] = '\\u06C7';\n  t['\\uFBD8'] = '\\u06C7';\n  t['\\uFBD9'] = '\\u06C6';\n  t['\\uFBDA'] = '\\u06C6';\n  t['\\uFBDB'] = '\\u06C8';\n  t['\\uFBDC'] = '\\u06C8';\n  t['\\uFBDD'] = '\\u0677';\n  t['\\uFBDE'] = '\\u06CB';\n  t['\\uFBDF'] = '\\u06CB';\n  t['\\uFBE0'] = '\\u06C5';\n  t['\\uFBE1'] = '\\u06C5';\n  t['\\uFBE2'] = '\\u06C9';\n  t['\\uFBE3'] = '\\u06C9';\n  t['\\uFBE4'] = '\\u06D0';\n  t['\\uFBE5'] = '\\u06D0';\n  t['\\uFBE6'] = '\\u06D0';\n  t['\\uFBE7'] = '\\u06D0';\n  t['\\uFBE8'] = '\\u0649';\n  t['\\uFBE9'] = '\\u0649';\n  t['\\uFBEA'] = '\\u0626\\u0627';\n  t['\\uFBEB'] = '\\u0626\\u0627';\n  t['\\uFBEC'] = '\\u0626\\u06D5';\n  t['\\uFBED'] = '\\u0626\\u06D5';\n  t['\\uFBEE'] = '\\u0626\\u0648';\n  t['\\uFBEF'] = '\\u0626\\u0648';\n  t['\\uFBF0'] = '\\u0626\\u06C7';\n  t['\\uFBF1'] = '\\u0626\\u06C7';\n  t['\\uFBF2'] = '\\u0626\\u06C6';\n  t['\\uFBF3'] = '\\u0626\\u06C6';\n  t['\\uFBF4'] = '\\u0626\\u06C8';\n  t['\\uFBF5'] = '\\u0626\\u06C8';\n  t['\\uFBF6'] = '\\u0626\\u06D0';\n  t['\\uFBF7'] = '\\u0626\\u06D0';\n  t['\\uFBF8'] = '\\u0626\\u06D0';\n  t['\\uFBF9'] = '\\u0626\\u0649';\n  t['\\uFBFA'] = '\\u0626\\u0649';\n  t['\\uFBFB'] = '\\u0626\\u0649';\n  t['\\uFBFC'] = '\\u06CC';\n  t['\\uFBFD'] = '\\u06CC';\n  t['\\uFBFE'] = '\\u06CC';\n  t['\\uFBFF'] = '\\u06CC';\n  t['\\uFC00'] = '\\u0626\\u062C';\n  t['\\uFC01'] = '\\u0626\\u062D';\n  t['\\uFC02'] = '\\u0626\\u0645';\n  t['\\uFC03'] = '\\u0626\\u0649';\n  t['\\uFC04'] = '\\u0626\\u064A';\n  t['\\uFC05'] = '\\u0628\\u062C';\n  t['\\uFC06'] = '\\u0628\\u062D';\n  t['\\uFC07'] = '\\u0628\\u062E';\n  t['\\uFC08'] = '\\u0628\\u0645';\n  t['\\uFC09'] = '\\u0628\\u0649';\n  t['\\uFC0A'] = '\\u0628\\u064A';\n  t['\\uFC0B'] = '\\u062A\\u062C';\n  t['\\uFC0C'] = '\\u062A\\u062D';\n  t['\\uFC0D'] = '\\u062A\\u062E';\n  t['\\uFC0E'] = '\\u062A\\u0645';\n  t['\\uFC0F'] = '\\u062A\\u0649';\n  t['\\uFC10'] = '\\u062A\\u064A';\n  t['\\uFC11'] = '\\u062B\\u062C';\n  t['\\uFC12'] = '\\u062B\\u0645';\n  t['\\uFC13'] = '\\u062B\\u0649';\n  t['\\uFC14'] = '\\u062B\\u064A';\n  t['\\uFC15'] = '\\u062C\\u062D';\n  t['\\uFC16'] = '\\u062C\\u0645';\n  t['\\uFC17'] = '\\u062D\\u062C';\n  t['\\uFC18'] = '\\u062D\\u0645';\n  t['\\uFC19'] = '\\u062E\\u062C';\n  t['\\uFC1A'] = '\\u062E\\u062D';\n  t['\\uFC1B'] = '\\u062E\\u0645';\n  t['\\uFC1C'] = '\\u0633\\u062C';\n  t['\\uFC1D'] = '\\u0633\\u062D';\n  t['\\uFC1E'] = '\\u0633\\u062E';\n  t['\\uFC1F'] = '\\u0633\\u0645';\n  t['\\uFC20'] = '\\u0635\\u062D';\n  t['\\uFC21'] = '\\u0635\\u0645';\n  t['\\uFC22'] = '\\u0636\\u062C';\n  t['\\uFC23'] = '\\u0636\\u062D';\n  t['\\uFC24'] = '\\u0636\\u062E';\n  t['\\uFC25'] = '\\u0636\\u0645';\n  t['\\uFC26'] = '\\u0637\\u062D';\n  t['\\uFC27'] = '\\u0637\\u0645';\n  t['\\uFC28'] = '\\u0638\\u0645';\n  t['\\uFC29'] = '\\u0639\\u062C';\n  t['\\uFC2A'] = '\\u0639\\u0645';\n  t['\\uFC2B'] = '\\u063A\\u062C';\n  t['\\uFC2C'] = '\\u063A\\u0645';\n  t['\\uFC2D'] = '\\u0641\\u062C';\n  t['\\uFC2E'] = '\\u0641\\u062D';\n  t['\\uFC2F'] = '\\u0641\\u062E';\n  t['\\uFC30'] = '\\u0641\\u0645';\n  t['\\uFC31'] = '\\u0641\\u0649';\n  t['\\uFC32'] = '\\u0641\\u064A';\n  t['\\uFC33'] = '\\u0642\\u062D';\n  t['\\uFC34'] = '\\u0642\\u0645';\n  t['\\uFC35'] = '\\u0642\\u0649';\n  t['\\uFC36'] = '\\u0642\\u064A';\n  t['\\uFC37'] = '\\u0643\\u0627';\n  t['\\uFC38'] = '\\u0643\\u062C';\n  t['\\uFC39'] = '\\u0643\\u062D';\n  t['\\uFC3A'] = '\\u0643\\u062E';\n  t['\\uFC3B'] = '\\u0643\\u0644';\n  t['\\uFC3C'] = '\\u0643\\u0645';\n  t['\\uFC3D'] = '\\u0643\\u0649';\n  t['\\uFC3E'] = '\\u0643\\u064A';\n  t['\\uFC3F'] = '\\u0644\\u062C';\n  t['\\uFC40'] = '\\u0644\\u062D';\n  t['\\uFC41'] = '\\u0644\\u062E';\n  t['\\uFC42'] = '\\u0644\\u0645';\n  t['\\uFC43'] = '\\u0644\\u0649';\n  t['\\uFC44'] = '\\u0644\\u064A';\n  t['\\uFC45'] = '\\u0645\\u062C';\n  t['\\uFC46'] = '\\u0645\\u062D';\n  t['\\uFC47'] = '\\u0645\\u062E';\n  t['\\uFC48'] = '\\u0645\\u0645';\n  t['\\uFC49'] = '\\u0645\\u0649';\n  t['\\uFC4A'] = '\\u0645\\u064A';\n  t['\\uFC4B'] = '\\u0646\\u062C';\n  t['\\uFC4C'] = '\\u0646\\u062D';\n  t['\\uFC4D'] = '\\u0646\\u062E';\n  t['\\uFC4E'] = '\\u0646\\u0645';\n  t['\\uFC4F'] = '\\u0646\\u0649';\n  t['\\uFC50'] = '\\u0646\\u064A';\n  t['\\uFC51'] = '\\u0647\\u062C';\n  t['\\uFC52'] = '\\u0647\\u0645';\n  t['\\uFC53'] = '\\u0647\\u0649';\n  t['\\uFC54'] = '\\u0647\\u064A';\n  t['\\uFC55'] = '\\u064A\\u062C';\n  t['\\uFC56'] = '\\u064A\\u062D';\n  t['\\uFC57'] = '\\u064A\\u062E';\n  t['\\uFC58'] = '\\u064A\\u0645';\n  t['\\uFC59'] = '\\u064A\\u0649';\n  t['\\uFC5A'] = '\\u064A\\u064A';\n  t['\\uFC5B'] = '\\u0630\\u0670';\n  t['\\uFC5C'] = '\\u0631\\u0670';\n  t['\\uFC5D'] = '\\u0649\\u0670';\n  t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n  t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n  t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n  t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n  t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n  t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n  t['\\uFC64'] = '\\u0626\\u0631';\n  t['\\uFC65'] = '\\u0626\\u0632';\n  t['\\uFC66'] = '\\u0626\\u0645';\n  t['\\uFC67'] = '\\u0626\\u0646';\n  t['\\uFC68'] = '\\u0626\\u0649';\n  t['\\uFC69'] = '\\u0626\\u064A';\n  t['\\uFC6A'] = '\\u0628\\u0631';\n  t['\\uFC6B'] = '\\u0628\\u0632';\n  t['\\uFC6C'] = '\\u0628\\u0645';\n  t['\\uFC6D'] = '\\u0628\\u0646';\n  t['\\uFC6E'] = '\\u0628\\u0649';\n  t['\\uFC6F'] = '\\u0628\\u064A';\n  t['\\uFC70'] = '\\u062A\\u0631';\n  t['\\uFC71'] = '\\u062A\\u0632';\n  t['\\uFC72'] = '\\u062A\\u0645';\n  t['\\uFC73'] = '\\u062A\\u0646';\n  t['\\uFC74'] = '\\u062A\\u0649';\n  t['\\uFC75'] = '\\u062A\\u064A';\n  t['\\uFC76'] = '\\u062B\\u0631';\n  t['\\uFC77'] = '\\u062B\\u0632';\n  t['\\uFC78'] = '\\u062B\\u0645';\n  t['\\uFC79'] = '\\u062B\\u0646';\n  t['\\uFC7A'] = '\\u062B\\u0649';\n  t['\\uFC7B'] = '\\u062B\\u064A';\n  t['\\uFC7C'] = '\\u0641\\u0649';\n  t['\\uFC7D'] = '\\u0641\\u064A';\n  t['\\uFC7E'] = '\\u0642\\u0649';\n  t['\\uFC7F'] = '\\u0642\\u064A';\n  t['\\uFC80'] = '\\u0643\\u0627';\n  t['\\uFC81'] = '\\u0643\\u0644';\n  t['\\uFC82'] = '\\u0643\\u0645';\n  t['\\uFC83'] = '\\u0643\\u0649';\n  t['\\uFC84'] = '\\u0643\\u064A';\n  t['\\uFC85'] = '\\u0644\\u0645';\n  t['\\uFC86'] = '\\u0644\\u0649';\n  t['\\uFC87'] = '\\u0644\\u064A';\n  t['\\uFC88'] = '\\u0645\\u0627';\n  t['\\uFC89'] = '\\u0645\\u0645';\n  t['\\uFC8A'] = '\\u0646\\u0631';\n  t['\\uFC8B'] = '\\u0646\\u0632';\n  t['\\uFC8C'] = '\\u0646\\u0645';\n  t['\\uFC8D'] = '\\u0646\\u0646';\n  t['\\uFC8E'] = '\\u0646\\u0649';\n  t['\\uFC8F'] = '\\u0646\\u064A';\n  t['\\uFC90'] = '\\u0649\\u0670';\n  t['\\uFC91'] = '\\u064A\\u0631';\n  t['\\uFC92'] = '\\u064A\\u0632';\n  t['\\uFC93'] = '\\u064A\\u0645';\n  t['\\uFC94'] = '\\u064A\\u0646';\n  t['\\uFC95'] = '\\u064A\\u0649';\n  t['\\uFC96'] = '\\u064A\\u064A';\n  t['\\uFC97'] = '\\u0626\\u062C';\n  t['\\uFC98'] = '\\u0626\\u062D';\n  t['\\uFC99'] = '\\u0626\\u062E';\n  t['\\uFC9A'] = '\\u0626\\u0645';\n  t['\\uFC9B'] = '\\u0626\\u0647';\n  t['\\uFC9C'] = '\\u0628\\u062C';\n  t['\\uFC9D'] = '\\u0628\\u062D';\n  t['\\uFC9E'] = '\\u0628\\u062E';\n  t['\\uFC9F'] = '\\u0628\\u0645';\n  t['\\uFCA0'] = '\\u0628\\u0647';\n  t['\\uFCA1'] = '\\u062A\\u062C';\n  t['\\uFCA2'] = '\\u062A\\u062D';\n  t['\\uFCA3'] = '\\u062A\\u062E';\n  t['\\uFCA4'] = '\\u062A\\u0645';\n  t['\\uFCA5'] = '\\u062A\\u0647';\n  t['\\uFCA6'] = '\\u062B\\u0645';\n  t['\\uFCA7'] = '\\u062C\\u062D';\n  t['\\uFCA8'] = '\\u062C\\u0645';\n  t['\\uFCA9'] = '\\u062D\\u062C';\n  t['\\uFCAA'] = '\\u062D\\u0645';\n  t['\\uFCAB'] = '\\u062E\\u062C';\n  t['\\uFCAC'] = '\\u062E\\u0645';\n  t['\\uFCAD'] = '\\u0633\\u062C';\n  t['\\uFCAE'] = '\\u0633\\u062D';\n  t['\\uFCAF'] = '\\u0633\\u062E';\n  t['\\uFCB0'] = '\\u0633\\u0645';\n  t['\\uFCB1'] = '\\u0635\\u062D';\n  t['\\uFCB2'] = '\\u0635\\u062E';\n  t['\\uFCB3'] = '\\u0635\\u0645';\n  t['\\uFCB4'] = '\\u0636\\u062C';\n  t['\\uFCB5'] = '\\u0636\\u062D';\n  t['\\uFCB6'] = '\\u0636\\u062E';\n  t['\\uFCB7'] = '\\u0636\\u0645';\n  t['\\uFCB8'] = '\\u0637\\u062D';\n  t['\\uFCB9'] = '\\u0638\\u0645';\n  t['\\uFCBA'] = '\\u0639\\u062C';\n  t['\\uFCBB'] = '\\u0639\\u0645';\n  t['\\uFCBC'] = '\\u063A\\u062C';\n  t['\\uFCBD'] = '\\u063A\\u0645';\n  t['\\uFCBE'] = '\\u0641\\u062C';\n  t['\\uFCBF'] = '\\u0641\\u062D';\n  t['\\uFCC0'] = '\\u0641\\u062E';\n  t['\\uFCC1'] = '\\u0641\\u0645';\n  t['\\uFCC2'] = '\\u0642\\u062D';\n  t['\\uFCC3'] = '\\u0642\\u0645';\n  t['\\uFCC4'] = '\\u0643\\u062C';\n  t['\\uFCC5'] = '\\u0643\\u062D';\n  t['\\uFCC6'] = '\\u0643\\u062E';\n  t['\\uFCC7'] = '\\u0643\\u0644';\n  t['\\uFCC8'] = '\\u0643\\u0645';\n  t['\\uFCC9'] = '\\u0644\\u062C';\n  t['\\uFCCA'] = '\\u0644\\u062D';\n  t['\\uFCCB'] = '\\u0644\\u062E';\n  t['\\uFCCC'] = '\\u0644\\u0645';\n  t['\\uFCCD'] = '\\u0644\\u0647';\n  t['\\uFCCE'] = '\\u0645\\u062C';\n  t['\\uFCCF'] = '\\u0645\\u062D';\n  t['\\uFCD0'] = '\\u0645\\u062E';\n  t['\\uFCD1'] = '\\u0645\\u0645';\n  t['\\uFCD2'] = '\\u0646\\u062C';\n  t['\\uFCD3'] = '\\u0646\\u062D';\n  t['\\uFCD4'] = '\\u0646\\u062E';\n  t['\\uFCD5'] = '\\u0646\\u0645';\n  t['\\uFCD6'] = '\\u0646\\u0647';\n  t['\\uFCD7'] = '\\u0647\\u062C';\n  t['\\uFCD8'] = '\\u0647\\u0645';\n  t['\\uFCD9'] = '\\u0647\\u0670';\n  t['\\uFCDA'] = '\\u064A\\u062C';\n  t['\\uFCDB'] = '\\u064A\\u062D';\n  t['\\uFCDC'] = '\\u064A\\u062E';\n  t['\\uFCDD'] = '\\u064A\\u0645';\n  t['\\uFCDE'] = '\\u064A\\u0647';\n  t['\\uFCDF'] = '\\u0626\\u0645';\n  t['\\uFCE0'] = '\\u0626\\u0647';\n  t['\\uFCE1'] = '\\u0628\\u0645';\n  t['\\uFCE2'] = '\\u0628\\u0647';\n  t['\\uFCE3'] = '\\u062A\\u0645';\n  t['\\uFCE4'] = '\\u062A\\u0647';\n  t['\\uFCE5'] = '\\u062B\\u0645';\n  t['\\uFCE6'] = '\\u062B\\u0647';\n  t['\\uFCE7'] = '\\u0633\\u0645';\n  t['\\uFCE8'] = '\\u0633\\u0647';\n  t['\\uFCE9'] = '\\u0634\\u0645';\n  t['\\uFCEA'] = '\\u0634\\u0647';\n  t['\\uFCEB'] = '\\u0643\\u0644';\n  t['\\uFCEC'] = '\\u0643\\u0645';\n  t['\\uFCED'] = '\\u0644\\u0645';\n  t['\\uFCEE'] = '\\u0646\\u0645';\n  t['\\uFCEF'] = '\\u0646\\u0647';\n  t['\\uFCF0'] = '\\u064A\\u0645';\n  t['\\uFCF1'] = '\\u064A\\u0647';\n  t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n  t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n  t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n  t['\\uFCF5'] = '\\u0637\\u0649';\n  t['\\uFCF6'] = '\\u0637\\u064A';\n  t['\\uFCF7'] = '\\u0639\\u0649';\n  t['\\uFCF8'] = '\\u0639\\u064A';\n  t['\\uFCF9'] = '\\u063A\\u0649';\n  t['\\uFCFA'] = '\\u063A\\u064A';\n  t['\\uFCFB'] = '\\u0633\\u0649';\n  t['\\uFCFC'] = '\\u0633\\u064A';\n  t['\\uFCFD'] = '\\u0634\\u0649';\n  t['\\uFCFE'] = '\\u0634\\u064A';\n  t['\\uFCFF'] = '\\u062D\\u0649';\n  t['\\uFD00'] = '\\u062D\\u064A';\n  t['\\uFD01'] = '\\u062C\\u0649';\n  t['\\uFD02'] = '\\u062C\\u064A';\n  t['\\uFD03'] = '\\u062E\\u0649';\n  t['\\uFD04'] = '\\u062E\\u064A';\n  t['\\uFD05'] = '\\u0635\\u0649';\n  t['\\uFD06'] = '\\u0635\\u064A';\n  t['\\uFD07'] = '\\u0636\\u0649';\n  t['\\uFD08'] = '\\u0636\\u064A';\n  t['\\uFD09'] = '\\u0634\\u062C';\n  t['\\uFD0A'] = '\\u0634\\u062D';\n  t['\\uFD0B'] = '\\u0634\\u062E';\n  t['\\uFD0C'] = '\\u0634\\u0645';\n  t['\\uFD0D'] = '\\u0634\\u0631';\n  t['\\uFD0E'] = '\\u0633\\u0631';\n  t['\\uFD0F'] = '\\u0635\\u0631';\n  t['\\uFD10'] = '\\u0636\\u0631';\n  t['\\uFD11'] = '\\u0637\\u0649';\n  t['\\uFD12'] = '\\u0637\\u064A';\n  t['\\uFD13'] = '\\u0639\\u0649';\n  t['\\uFD14'] = '\\u0639\\u064A';\n  t['\\uFD15'] = '\\u063A\\u0649';\n  t['\\uFD16'] = '\\u063A\\u064A';\n  t['\\uFD17'] = '\\u0633\\u0649';\n  t['\\uFD18'] = '\\u0633\\u064A';\n  t['\\uFD19'] = '\\u0634\\u0649';\n  t['\\uFD1A'] = '\\u0634\\u064A';\n  t['\\uFD1B'] = '\\u062D\\u0649';\n  t['\\uFD1C'] = '\\u062D\\u064A';\n  t['\\uFD1D'] = '\\u062C\\u0649';\n  t['\\uFD1E'] = '\\u062C\\u064A';\n  t['\\uFD1F'] = '\\u062E\\u0649';\n  t['\\uFD20'] = '\\u062E\\u064A';\n  t['\\uFD21'] = '\\u0635\\u0649';\n  t['\\uFD22'] = '\\u0635\\u064A';\n  t['\\uFD23'] = '\\u0636\\u0649';\n  t['\\uFD24'] = '\\u0636\\u064A';\n  t['\\uFD25'] = '\\u0634\\u062C';\n  t['\\uFD26'] = '\\u0634\\u062D';\n  t['\\uFD27'] = '\\u0634\\u062E';\n  t['\\uFD28'] = '\\u0634\\u0645';\n  t['\\uFD29'] = '\\u0634\\u0631';\n  t['\\uFD2A'] = '\\u0633\\u0631';\n  t['\\uFD2B'] = '\\u0635\\u0631';\n  t['\\uFD2C'] = '\\u0636\\u0631';\n  t['\\uFD2D'] = '\\u0634\\u062C';\n  t['\\uFD2E'] = '\\u0634\\u062D';\n  t['\\uFD2F'] = '\\u0634\\u062E';\n  t['\\uFD30'] = '\\u0634\\u0645';\n  t['\\uFD31'] = '\\u0633\\u0647';\n  t['\\uFD32'] = '\\u0634\\u0647';\n  t['\\uFD33'] = '\\u0637\\u0645';\n  t['\\uFD34'] = '\\u0633\\u062C';\n  t['\\uFD35'] = '\\u0633\\u062D';\n  t['\\uFD36'] = '\\u0633\\u062E';\n  t['\\uFD37'] = '\\u0634\\u062C';\n  t['\\uFD38'] = '\\u0634\\u062D';\n  t['\\uFD39'] = '\\u0634\\u062E';\n  t['\\uFD3A'] = '\\u0637\\u0645';\n  t['\\uFD3B'] = '\\u0638\\u0645';\n  t['\\uFD3C'] = '\\u0627\\u064B';\n  t['\\uFD3D'] = '\\u0627\\u064B';\n  t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n  t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n  t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n  t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n  t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n  t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n  t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n  t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n  t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n  t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n  t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n  t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n  t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n  t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n  t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n  t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n  t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n  t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n  t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n  t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n  t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n  t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n  t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n  t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n  t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n  t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n  t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n  t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n  t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n  t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n  t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n  t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n  t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n  t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n  t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n  t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n  t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n  t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n  t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n  t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n  t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n  t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n  t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n  t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n  t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n  t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n  t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n  t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n  t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n  t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n  t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n  t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n  t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n  t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n  t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n  t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n  t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n  t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n  t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n  t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n  t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n  t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n  t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n  t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n  t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n  t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n  t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n  t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n  t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n  t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n  t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n  t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n  t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n  t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n  t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n  t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n  t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n  t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n  t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n  t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n  t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n  t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n  t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n  t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n  t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n  t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n  t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n  t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n  t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n  t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n  t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n  t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n  t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n  t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n  t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n  t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n  t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n  t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n  t['\\uFE49'] = '\\u203E';\n  t['\\uFE4A'] = '\\u203E';\n  t['\\uFE4B'] = '\\u203E';\n  t['\\uFE4C'] = '\\u203E';\n  t['\\uFE4D'] = '\\u005F';\n  t['\\uFE4E'] = '\\u005F';\n  t['\\uFE4F'] = '\\u005F';\n  t['\\uFE80'] = '\\u0621';\n  t['\\uFE81'] = '\\u0622';\n  t['\\uFE82'] = '\\u0622';\n  t['\\uFE83'] = '\\u0623';\n  t['\\uFE84'] = '\\u0623';\n  t['\\uFE85'] = '\\u0624';\n  t['\\uFE86'] = '\\u0624';\n  t['\\uFE87'] = '\\u0625';\n  t['\\uFE88'] = '\\u0625';\n  t['\\uFE89'] = '\\u0626';\n  t['\\uFE8A'] = '\\u0626';\n  t['\\uFE8B'] = '\\u0626';\n  t['\\uFE8C'] = '\\u0626';\n  t['\\uFE8D'] = '\\u0627';\n  t['\\uFE8E'] = '\\u0627';\n  t['\\uFE8F'] = '\\u0628';\n  t['\\uFE90'] = '\\u0628';\n  t['\\uFE91'] = '\\u0628';\n  t['\\uFE92'] = '\\u0628';\n  t['\\uFE93'] = '\\u0629';\n  t['\\uFE94'] = '\\u0629';\n  t['\\uFE95'] = '\\u062A';\n  t['\\uFE96'] = '\\u062A';\n  t['\\uFE97'] = '\\u062A';\n  t['\\uFE98'] = '\\u062A';\n  t['\\uFE99'] = '\\u062B';\n  t['\\uFE9A'] = '\\u062B';\n  t['\\uFE9B'] = '\\u062B';\n  t['\\uFE9C'] = '\\u062B';\n  t['\\uFE9D'] = '\\u062C';\n  t['\\uFE9E'] = '\\u062C';\n  t['\\uFE9F'] = '\\u062C';\n  t['\\uFEA0'] = '\\u062C';\n  t['\\uFEA1'] = '\\u062D';\n  t['\\uFEA2'] = '\\u062D';\n  t['\\uFEA3'] = '\\u062D';\n  t['\\uFEA4'] = '\\u062D';\n  t['\\uFEA5'] = '\\u062E';\n  t['\\uFEA6'] = '\\u062E';\n  t['\\uFEA7'] = '\\u062E';\n  t['\\uFEA8'] = '\\u062E';\n  t['\\uFEA9'] = '\\u062F';\n  t['\\uFEAA'] = '\\u062F';\n  t['\\uFEAB'] = '\\u0630';\n  t['\\uFEAC'] = '\\u0630';\n  t['\\uFEAD'] = '\\u0631';\n  t['\\uFEAE'] = '\\u0631';\n  t['\\uFEAF'] = '\\u0632';\n  t['\\uFEB0'] = '\\u0632';\n  t['\\uFEB1'] = '\\u0633';\n  t['\\uFEB2'] = '\\u0633';\n  t['\\uFEB3'] = '\\u0633';\n  t['\\uFEB4'] = '\\u0633';\n  t['\\uFEB5'] = '\\u0634';\n  t['\\uFEB6'] = '\\u0634';\n  t['\\uFEB7'] = '\\u0634';\n  t['\\uFEB8'] = '\\u0634';\n  t['\\uFEB9'] = '\\u0635';\n  t['\\uFEBA'] = '\\u0635';\n  t['\\uFEBB'] = '\\u0635';\n  t['\\uFEBC'] = '\\u0635';\n  t['\\uFEBD'] = '\\u0636';\n  t['\\uFEBE'] = '\\u0636';\n  t['\\uFEBF'] = '\\u0636';\n  t['\\uFEC0'] = '\\u0636';\n  t['\\uFEC1'] = '\\u0637';\n  t['\\uFEC2'] = '\\u0637';\n  t['\\uFEC3'] = '\\u0637';\n  t['\\uFEC4'] = '\\u0637';\n  t['\\uFEC5'] = '\\u0638';\n  t['\\uFEC6'] = '\\u0638';\n  t['\\uFEC7'] = '\\u0638';\n  t['\\uFEC8'] = '\\u0638';\n  t['\\uFEC9'] = '\\u0639';\n  t['\\uFECA'] = '\\u0639';\n  t['\\uFECB'] = '\\u0639';\n  t['\\uFECC'] = '\\u0639';\n  t['\\uFECD'] = '\\u063A';\n  t['\\uFECE'] = '\\u063A';\n  t['\\uFECF'] = '\\u063A';\n  t['\\uFED0'] = '\\u063A';\n  t['\\uFED1'] = '\\u0641';\n  t['\\uFED2'] = '\\u0641';\n  t['\\uFED3'] = '\\u0641';\n  t['\\uFED4'] = '\\u0641';\n  t['\\uFED5'] = '\\u0642';\n  t['\\uFED6'] = '\\u0642';\n  t['\\uFED7'] = '\\u0642';\n  t['\\uFED8'] = '\\u0642';\n  t['\\uFED9'] = '\\u0643';\n  t['\\uFEDA'] = '\\u0643';\n  t['\\uFEDB'] = '\\u0643';\n  t['\\uFEDC'] = '\\u0643';\n  t['\\uFEDD'] = '\\u0644';\n  t['\\uFEDE'] = '\\u0644';\n  t['\\uFEDF'] = '\\u0644';\n  t['\\uFEE0'] = '\\u0644';\n  t['\\uFEE1'] = '\\u0645';\n  t['\\uFEE2'] = '\\u0645';\n  t['\\uFEE3'] = '\\u0645';\n  t['\\uFEE4'] = '\\u0645';\n  t['\\uFEE5'] = '\\u0646';\n  t['\\uFEE6'] = '\\u0646';\n  t['\\uFEE7'] = '\\u0646';\n  t['\\uFEE8'] = '\\u0646';\n  t['\\uFEE9'] = '\\u0647';\n  t['\\uFEEA'] = '\\u0647';\n  t['\\uFEEB'] = '\\u0647';\n  t['\\uFEEC'] = '\\u0647';\n  t['\\uFEED'] = '\\u0648';\n  t['\\uFEEE'] = '\\u0648';\n  t['\\uFEEF'] = '\\u0649';\n  t['\\uFEF0'] = '\\u0649';\n  t['\\uFEF1'] = '\\u064A';\n  t['\\uFEF2'] = '\\u064A';\n  t['\\uFEF3'] = '\\u064A';\n  t['\\uFEF4'] = '\\u064A';\n  t['\\uFEF5'] = '\\u0644\\u0622';\n  t['\\uFEF6'] = '\\u0644\\u0622';\n  t['\\uFEF7'] = '\\u0644\\u0623';\n  t['\\uFEF8'] = '\\u0644\\u0623';\n  t['\\uFEF9'] = '\\u0644\\u0625';\n  t['\\uFEFA'] = '\\u0644\\u0625';\n  t['\\uFEFB'] = '\\u0644\\u0627';\n  t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n  var charsLength = chars.length;\n  if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n    return chars;\n  }\n  var s = '';\n  for (var ii = charsLength - 1; ii >= 0; ii--) {\n    s += chars[ii];\n  }\n  return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getSupplementalGlyphMapForCalibri = exports.getSupplementalGlyphMapForArialBlack = exports.getGlyphMapForStandardFonts = exports.getSymbolsFonts = exports.getSerifFonts = exports.getNonStdFontMap = exports.getStdFontMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar getStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['ArialNarrow'] = 'Helvetica';\n  t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n  t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n  t['ArialBlack'] = 'Helvetica';\n  t['ArialBlack-Bold'] = 'Helvetica-Bold';\n  t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n  t['Arial-Black'] = 'Helvetica';\n  t['Arial-Black-Bold'] = 'Helvetica-Bold';\n  t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n  t['Arial'] = 'Helvetica';\n  t['Arial-Bold'] = 'Helvetica-Bold';\n  t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Arial-Italic'] = 'Helvetica-Oblique';\n  t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n  t['Arial-BoldMT'] = 'Helvetica-Bold';\n  t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n  t['ArialMT'] = 'Helvetica';\n  t['Courier-Bold'] = 'Courier-Bold';\n  t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n  t['Courier-Italic'] = 'Courier-Oblique';\n  t['CourierNew'] = 'Courier';\n  t['CourierNew-Bold'] = 'Courier-Bold';\n  t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n  t['CourierNew-Italic'] = 'Courier-Oblique';\n  t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n  t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n  t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n  t['CourierNewPSMT'] = 'Courier';\n  t['Helvetica'] = 'Helvetica';\n  t['Helvetica-Bold'] = 'Helvetica-Bold';\n  t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n  t['Helvetica-Italic'] = 'Helvetica-Oblique';\n  t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n  t['SegoeUISymbol'] = 'Helvetica';\n  t['Symbol-Bold'] = 'Symbol';\n  t['Symbol-BoldItalic'] = 'Symbol';\n  t['Symbol-Italic'] = 'Symbol';\n  t['TimesNewRoman'] = 'Times-Roman';\n  t['TimesNewRoman-Bold'] = 'Times-Bold';\n  t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRoman-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS'] = 'Times-Roman';\n  t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n  t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n  t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n  t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n  t['TimesNewRomanPSMT'] = 'Times-Roman';\n  t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n  t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n  t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = (0, _util.getLookupTableFactory)(function (t) {\n  t['Calibri'] = 'Helvetica';\n  t['Calibri-Bold'] = 'Helvetica-Bold';\n  t['Calibri-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['Calibri-Italic'] = 'Helvetica-Oblique';\n  t['CenturyGothic'] = 'Helvetica';\n  t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n  t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n  t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n  t['ComicSansMS'] = 'Comic Sans MS';\n  t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n  t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n  t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n  t['LucidaConsole'] = 'Courier';\n  t['LucidaConsole-Bold'] = 'Courier-Bold';\n  t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n  t['LucidaConsole-Italic'] = 'Courier-Oblique';\n  t['LucidaSans-Demi'] = 'Helvetica-Bold';\n  t['MS-Gothic'] = 'MS Gothic';\n  t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n  t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n  t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n  t['MS-Mincho'] = 'MS Mincho';\n  t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n  t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n  t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n  t['MS-PGothic'] = 'MS PGothic';\n  t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n  t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n  t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n  t['MS-PMincho'] = 'MS PMincho';\n  t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n  t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n  t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n  t['NuptialScript'] = 'Times-Italic';\n  t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Adobe Jenson'] = true;\n  t['Adobe Text'] = true;\n  t['Albertus'] = true;\n  t['Aldus'] = true;\n  t['Alexandria'] = true;\n  t['Algerian'] = true;\n  t['American Typewriter'] = true;\n  t['Antiqua'] = true;\n  t['Apex'] = true;\n  t['Arno'] = true;\n  t['Aster'] = true;\n  t['Aurora'] = true;\n  t['Baskerville'] = true;\n  t['Bell'] = true;\n  t['Bembo'] = true;\n  t['Bembo Schoolbook'] = true;\n  t['Benguiat'] = true;\n  t['Berkeley Old Style'] = true;\n  t['Bernhard Modern'] = true;\n  t['Berthold City'] = true;\n  t['Bodoni'] = true;\n  t['Bauer Bodoni'] = true;\n  t['Book Antiqua'] = true;\n  t['Bookman'] = true;\n  t['Bordeaux Roman'] = true;\n  t['Californian FB'] = true;\n  t['Calisto'] = true;\n  t['Calvert'] = true;\n  t['Capitals'] = true;\n  t['Cambria'] = true;\n  t['Cartier'] = true;\n  t['Caslon'] = true;\n  t['Catull'] = true;\n  t['Centaur'] = true;\n  t['Century Old Style'] = true;\n  t['Century Schoolbook'] = true;\n  t['Chaparral'] = true;\n  t['Charis SIL'] = true;\n  t['Cheltenham'] = true;\n  t['Cholla Slab'] = true;\n  t['Clarendon'] = true;\n  t['Clearface'] = true;\n  t['Cochin'] = true;\n  t['Colonna'] = true;\n  t['Computer Modern'] = true;\n  t['Concrete Roman'] = true;\n  t['Constantia'] = true;\n  t['Cooper Black'] = true;\n  t['Corona'] = true;\n  t['Ecotype'] = true;\n  t['Egyptienne'] = true;\n  t['Elephant'] = true;\n  t['Excelsior'] = true;\n  t['Fairfield'] = true;\n  t['FF Scala'] = true;\n  t['Folkard'] = true;\n  t['Footlight'] = true;\n  t['FreeSerif'] = true;\n  t['Friz Quadrata'] = true;\n  t['Garamond'] = true;\n  t['Gentium'] = true;\n  t['Georgia'] = true;\n  t['Gloucester'] = true;\n  t['Goudy Old Style'] = true;\n  t['Goudy Schoolbook'] = true;\n  t['Goudy Pro Font'] = true;\n  t['Granjon'] = true;\n  t['Guardian Egyptian'] = true;\n  t['Heather'] = true;\n  t['Hercules'] = true;\n  t['High Tower Text'] = true;\n  t['Hiroshige'] = true;\n  t['Hoefler Text'] = true;\n  t['Humana Serif'] = true;\n  t['Imprint'] = true;\n  t['Ionic No. 5'] = true;\n  t['Janson'] = true;\n  t['Joanna'] = true;\n  t['Korinna'] = true;\n  t['Lexicon'] = true;\n  t['Liberation Serif'] = true;\n  t['Linux Libertine'] = true;\n  t['Literaturnaya'] = true;\n  t['Lucida'] = true;\n  t['Lucida Bright'] = true;\n  t['Melior'] = true;\n  t['Memphis'] = true;\n  t['Miller'] = true;\n  t['Minion'] = true;\n  t['Modern'] = true;\n  t['Mona Lisa'] = true;\n  t['Mrs Eaves'] = true;\n  t['MS Serif'] = true;\n  t['Museo Slab'] = true;\n  t['New York'] = true;\n  t['Nimbus Roman'] = true;\n  t['NPS Rawlinson Roadway'] = true;\n  t['NuptialScript'] = true;\n  t['Palatino'] = true;\n  t['Perpetua'] = true;\n  t['Plantin'] = true;\n  t['Plantin Schoolbook'] = true;\n  t['Playbill'] = true;\n  t['Poor Richard'] = true;\n  t['Rawlinson Roadway'] = true;\n  t['Renault'] = true;\n  t['Requiem'] = true;\n  t['Rockwell'] = true;\n  t['Roman'] = true;\n  t['Rotis Serif'] = true;\n  t['Sabon'] = true;\n  t['Scala'] = true;\n  t['Seagull'] = true;\n  t['Sistina'] = true;\n  t['Souvenir'] = true;\n  t['STIX'] = true;\n  t['Stone Informal'] = true;\n  t['Stone Serif'] = true;\n  t['Sylfaen'] = true;\n  t['Times'] = true;\n  t['Trajan'] = true;\n  t['Trinité'] = true;\n  t['Trump Mediaeval'] = true;\n  t['Utopia'] = true;\n  t['Vale Type'] = true;\n  t['Bitstream Vera'] = true;\n  t['Vera Serif'] = true;\n  t['Versailles'] = true;\n  t['Wanted'] = true;\n  t['Weiss'] = true;\n  t['Wide Latin'] = true;\n  t['Windsor'] = true;\n  t['XITS'] = true;\n});\nvar getSymbolsFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t['Dingbats'] = true;\n  t['Symbol'] = true;\n  t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = (0, _util.getLookupTableFactory)(function (t) {\n  t[2] = 10;\n  t[3] = 32;\n  t[4] = 33;\n  t[5] = 34;\n  t[6] = 35;\n  t[7] = 36;\n  t[8] = 37;\n  t[9] = 38;\n  t[10] = 39;\n  t[11] = 40;\n  t[12] = 41;\n  t[13] = 42;\n  t[14] = 43;\n  t[15] = 44;\n  t[16] = 45;\n  t[17] = 46;\n  t[18] = 47;\n  t[19] = 48;\n  t[20] = 49;\n  t[21] = 50;\n  t[22] = 51;\n  t[23] = 52;\n  t[24] = 53;\n  t[25] = 54;\n  t[26] = 55;\n  t[27] = 56;\n  t[28] = 57;\n  t[29] = 58;\n  t[30] = 894;\n  t[31] = 60;\n  t[32] = 61;\n  t[33] = 62;\n  t[34] = 63;\n  t[35] = 64;\n  t[36] = 65;\n  t[37] = 66;\n  t[38] = 67;\n  t[39] = 68;\n  t[40] = 69;\n  t[41] = 70;\n  t[42] = 71;\n  t[43] = 72;\n  t[44] = 73;\n  t[45] = 74;\n  t[46] = 75;\n  t[47] = 76;\n  t[48] = 77;\n  t[49] = 78;\n  t[50] = 79;\n  t[51] = 80;\n  t[52] = 81;\n  t[53] = 82;\n  t[54] = 83;\n  t[55] = 84;\n  t[56] = 85;\n  t[57] = 86;\n  t[58] = 87;\n  t[59] = 88;\n  t[60] = 89;\n  t[61] = 90;\n  t[62] = 91;\n  t[63] = 92;\n  t[64] = 93;\n  t[65] = 94;\n  t[66] = 95;\n  t[67] = 96;\n  t[68] = 97;\n  t[69] = 98;\n  t[70] = 99;\n  t[71] = 100;\n  t[72] = 101;\n  t[73] = 102;\n  t[74] = 103;\n  t[75] = 104;\n  t[76] = 105;\n  t[77] = 106;\n  t[78] = 107;\n  t[79] = 108;\n  t[80] = 109;\n  t[81] = 110;\n  t[82] = 111;\n  t[83] = 112;\n  t[84] = 113;\n  t[85] = 114;\n  t[86] = 115;\n  t[87] = 116;\n  t[88] = 117;\n  t[89] = 118;\n  t[90] = 119;\n  t[91] = 120;\n  t[92] = 121;\n  t[93] = 122;\n  t[94] = 123;\n  t[95] = 124;\n  t[96] = 125;\n  t[97] = 126;\n  t[98] = 196;\n  t[99] = 197;\n  t[100] = 199;\n  t[101] = 201;\n  t[102] = 209;\n  t[103] = 214;\n  t[104] = 220;\n  t[105] = 225;\n  t[106] = 224;\n  t[107] = 226;\n  t[108] = 228;\n  t[109] = 227;\n  t[110] = 229;\n  t[111] = 231;\n  t[112] = 233;\n  t[113] = 232;\n  t[114] = 234;\n  t[115] = 235;\n  t[116] = 237;\n  t[117] = 236;\n  t[118] = 238;\n  t[119] = 239;\n  t[120] = 241;\n  t[121] = 243;\n  t[122] = 242;\n  t[123] = 244;\n  t[124] = 246;\n  t[125] = 245;\n  t[126] = 250;\n  t[127] = 249;\n  t[128] = 251;\n  t[129] = 252;\n  t[130] = 8224;\n  t[131] = 176;\n  t[132] = 162;\n  t[133] = 163;\n  t[134] = 167;\n  t[135] = 8226;\n  t[136] = 182;\n  t[137] = 223;\n  t[138] = 174;\n  t[139] = 169;\n  t[140] = 8482;\n  t[141] = 180;\n  t[142] = 168;\n  t[143] = 8800;\n  t[144] = 198;\n  t[145] = 216;\n  t[146] = 8734;\n  t[147] = 177;\n  t[148] = 8804;\n  t[149] = 8805;\n  t[150] = 165;\n  t[151] = 181;\n  t[152] = 8706;\n  t[153] = 8721;\n  t[154] = 8719;\n  t[156] = 8747;\n  t[157] = 170;\n  t[158] = 186;\n  t[159] = 8486;\n  t[160] = 230;\n  t[161] = 248;\n  t[162] = 191;\n  t[163] = 161;\n  t[164] = 172;\n  t[165] = 8730;\n  t[166] = 402;\n  t[167] = 8776;\n  t[168] = 8710;\n  t[169] = 171;\n  t[170] = 187;\n  t[171] = 8230;\n  t[210] = 218;\n  t[223] = 711;\n  t[224] = 321;\n  t[225] = 322;\n  t[227] = 353;\n  t[229] = 382;\n  t[234] = 253;\n  t[252] = 263;\n  t[253] = 268;\n  t[254] = 269;\n  t[258] = 258;\n  t[260] = 260;\n  t[261] = 261;\n  t[265] = 280;\n  t[266] = 281;\n  t[268] = 283;\n  t[269] = 313;\n  t[275] = 323;\n  t[276] = 324;\n  t[278] = 328;\n  t[284] = 345;\n  t[285] = 346;\n  t[286] = 347;\n  t[292] = 367;\n  t[295] = 377;\n  t[296] = 378;\n  t[298] = 380;\n  t[305] = 963;\n  t[306] = 964;\n  t[307] = 966;\n  t[308] = 8215;\n  t[309] = 8252;\n  t[310] = 8319;\n  t[311] = 8359;\n  t[312] = 8592;\n  t[313] = 8593;\n  t[337] = 9552;\n  t[493] = 1039;\n  t[494] = 1040;\n  t[705] = 1524;\n  t[706] = 8362;\n  t[710] = 64288;\n  t[711] = 64298;\n  t[759] = 1617;\n  t[761] = 1776;\n  t[763] = 1778;\n  t[775] = 1652;\n  t[777] = 1764;\n  t[778] = 1780;\n  t[779] = 1781;\n  t[780] = 1782;\n  t[782] = 771;\n  t[783] = 64726;\n  t[786] = 8363;\n  t[788] = 8532;\n  t[790] = 768;\n  t[791] = 769;\n  t[792] = 768;\n  t[795] = 803;\n  t[797] = 64336;\n  t[798] = 64337;\n  t[799] = 64342;\n  t[800] = 64343;\n  t[801] = 64344;\n  t[802] = 64345;\n  t[803] = 64362;\n  t[804] = 64363;\n  t[805] = 64364;\n  t[2424] = 7821;\n  t[2425] = 7822;\n  t[2426] = 7823;\n  t[2427] = 7824;\n  t[2428] = 7825;\n  t[2429] = 7826;\n  t[2430] = 7827;\n  t[2433] = 7682;\n  t[2678] = 8045;\n  t[2679] = 8046;\n  t[2830] = 1552;\n  t[2838] = 686;\n  t[2840] = 751;\n  t[2842] = 753;\n  t[2843] = 754;\n  t[2844] = 755;\n  t[2846] = 757;\n  t[2856] = 767;\n  t[2857] = 848;\n  t[2858] = 849;\n  t[2862] = 853;\n  t[2863] = 854;\n  t[2864] = 855;\n  t[2865] = 861;\n  t[2866] = 862;\n  t[2906] = 7460;\n  t[2908] = 7462;\n  t[2909] = 7463;\n  t[2910] = 7464;\n  t[2912] = 7466;\n  t[2913] = 7467;\n  t[2914] = 7468;\n  t[2916] = 7470;\n  t[2917] = 7471;\n  t[2918] = 7472;\n  t[2920] = 7474;\n  t[2921] = 7475;\n  t[2922] = 7476;\n  t[2924] = 7478;\n  t[2925] = 7479;\n  t[2926] = 7480;\n  t[2928] = 7482;\n  t[2929] = 7483;\n  t[2930] = 7484;\n  t[2932] = 7486;\n  t[2933] = 7487;\n  t[2934] = 7488;\n  t[2936] = 7490;\n  t[2937] = 7491;\n  t[2938] = 7492;\n  t[2940] = 7494;\n  t[2941] = 7495;\n  t[2942] = 7496;\n  t[2944] = 7498;\n  t[2946] = 7500;\n  t[2948] = 7502;\n  t[2950] = 7504;\n  t[2951] = 7505;\n  t[2952] = 7506;\n  t[2954] = 7508;\n  t[2955] = 7509;\n  t[2956] = 7510;\n  t[2958] = 7512;\n  t[2959] = 7513;\n  t[2960] = 7514;\n  t[2962] = 7516;\n  t[2963] = 7517;\n  t[2964] = 7518;\n  t[2966] = 7520;\n  t[2967] = 7521;\n  t[2968] = 7522;\n  t[2970] = 7524;\n  t[2971] = 7525;\n  t[2972] = 7526;\n  t[2974] = 7528;\n  t[2975] = 7529;\n  t[2976] = 7530;\n  t[2978] = 1537;\n  t[2979] = 1538;\n  t[2980] = 1539;\n  t[2982] = 1549;\n  t[2983] = 1551;\n  t[2984] = 1552;\n  t[2986] = 1554;\n  t[2987] = 1555;\n  t[2988] = 1556;\n  t[2990] = 1623;\n  t[2991] = 1624;\n  t[2995] = 1775;\n  t[2999] = 1791;\n  t[3002] = 64290;\n  t[3003] = 64291;\n  t[3004] = 64292;\n  t[3006] = 64294;\n  t[3007] = 64295;\n  t[3008] = 64296;\n  t[3011] = 1900;\n  t[3014] = 8223;\n  t[3015] = 8244;\n  t[3017] = 7532;\n  t[3018] = 7533;\n  t[3019] = 7534;\n  t[3075] = 7590;\n  t[3076] = 7591;\n  t[3079] = 7594;\n  t[3080] = 7595;\n  t[3083] = 7598;\n  t[3084] = 7599;\n  t[3087] = 7602;\n  t[3088] = 7603;\n  t[3091] = 7606;\n  t[3092] = 7607;\n  t[3095] = 7610;\n  t[3096] = 7611;\n  t[3099] = 7614;\n  t[3100] = 7615;\n  t[3103] = 7618;\n  t[3104] = 7619;\n  t[3107] = 8337;\n  t[3108] = 8338;\n  t[3116] = 1884;\n  t[3119] = 1885;\n  t[3120] = 1885;\n  t[3123] = 1886;\n  t[3124] = 1886;\n  t[3127] = 1887;\n  t[3128] = 1887;\n  t[3131] = 1888;\n  t[3132] = 1888;\n  t[3135] = 1889;\n  t[3136] = 1889;\n  t[3139] = 1890;\n  t[3140] = 1890;\n  t[3143] = 1891;\n  t[3144] = 1891;\n  t[3147] = 1892;\n  t[3148] = 1892;\n  t[3153] = 580;\n  t[3154] = 581;\n  t[3157] = 584;\n  t[3158] = 585;\n  t[3161] = 588;\n  t[3162] = 589;\n  t[3165] = 891;\n  t[3166] = 892;\n  t[3169] = 1274;\n  t[3170] = 1275;\n  t[3173] = 1278;\n  t[3174] = 1279;\n  t[3181] = 7622;\n  t[3182] = 7623;\n  t[3282] = 11799;\n  t[3316] = 578;\n  t[3379] = 42785;\n  t[3393] = 1159;\n  t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = (0, _util.getLookupTableFactory)(function (t) {\n  t[227] = 322;\n  t[264] = 261;\n  t[291] = 346;\n});\nvar getSupplementalGlyphMapForCalibri = (0, _util.getLookupTableFactory)(function (t) {\n  t[1] = 32;\n  t[4] = 65;\n  t[17] = 66;\n  t[18] = 67;\n  t[24] = 68;\n  t[28] = 69;\n  t[38] = 70;\n  t[39] = 71;\n  t[44] = 72;\n  t[47] = 73;\n  t[58] = 74;\n  t[60] = 75;\n  t[62] = 76;\n  t[68] = 77;\n  t[69] = 78;\n  t[75] = 79;\n  t[87] = 80;\n  t[89] = 81;\n  t[90] = 82;\n  t[94] = 83;\n  t[100] = 84;\n  t[104] = 85;\n  t[115] = 86;\n  t[116] = 87;\n  t[121] = 88;\n  t[122] = 89;\n  t[127] = 90;\n  t[258] = 97;\n  t[268] = 261;\n  t[271] = 98;\n  t[272] = 99;\n  t[273] = 263;\n  t[282] = 100;\n  t[286] = 101;\n  t[295] = 281;\n  t[296] = 102;\n  t[336] = 103;\n  t[346] = 104;\n  t[349] = 105;\n  t[361] = 106;\n  t[364] = 107;\n  t[367] = 108;\n  t[371] = 322;\n  t[373] = 109;\n  t[374] = 110;\n  t[381] = 111;\n  t[383] = 243;\n  t[393] = 112;\n  t[395] = 113;\n  t[396] = 114;\n  t[400] = 115;\n  t[401] = 347;\n  t[410] = 116;\n  t[437] = 117;\n  t[448] = 118;\n  t[449] = 119;\n  t[454] = 120;\n  t[455] = 121;\n  t[460] = 122;\n  t[463] = 380;\n  t[853] = 44;\n  t[855] = 58;\n  t[856] = 46;\n  t[876] = 47;\n  t[878] = 45;\n  t[882] = 45;\n  t[894] = 40;\n  t[895] = 41;\n  t[896] = 91;\n  t[897] = 93;\n  t[923] = 64;\n  t[1004] = 48;\n  t[1005] = 49;\n  t[1006] = 50;\n  t[1007] = 51;\n  t[1008] = 52;\n  t[1009] = 53;\n  t[1010] = 54;\n  t[1011] = 55;\n  t[1012] = 56;\n  t[1013] = 57;\n  t[1081] = 37;\n  t[1085] = 43;\n  t[1086] = 45;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\nexports.getSupplementalGlyphMapForCalibri = getSupplementalGlyphMapForCalibri;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CFFCompiler = exports.CFFPrivateDict = exports.CFFTopDict = exports.CFFCharset = exports.CFFIndex = exports.CFFStrings = exports.CFFHeader = exports.CFF = exports.CFFParser = exports.CFFStandardStrings = undefined;\n\nvar _util = require('../shared/util');\n\nvar _charsets = require('./charsets');\n\nvar _encodings = require('./encodings');\n\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall', '001.000', '001.001', '001.002', '001.003', 'Black', 'Bold', 'Book', 'Light', 'Medium', 'Regular', 'Roman', 'Semibold'];\nvar CFFParser = function CFFParserClosure() {\n  var CharstringValidationData = [null, {\n    id: 'hstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, null, {\n    id: 'vstem',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'vmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'rlineto',\n    min: 2,\n    resetStack: true\n  }, {\n    id: 'hlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'vlineto',\n    min: 1,\n    resetStack: true\n  }, {\n    id: 'rrcurveto',\n    min: 6,\n    resetStack: true\n  }, null, {\n    id: 'callsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'return',\n    min: 0,\n    undefStack: true\n  }, null, null, {\n    id: 'endchar',\n    min: 0,\n    stackClearing: true\n  }, null, null, null, {\n    id: 'hstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'hintmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'cntrmask',\n    min: 0,\n    stackClearing: true\n  }, {\n    id: 'rmoveto',\n    min: 2,\n    stackClearing: true\n  }, {\n    id: 'hmoveto',\n    min: 1,\n    stackClearing: true\n  }, {\n    id: 'vstemhm',\n    min: 2,\n    stackClearing: true,\n    stem: true\n  }, {\n    id: 'rcurveline',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'rlinecurve',\n    min: 8,\n    resetStack: true\n  }, {\n    id: 'vvcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hhcurveto',\n    min: 4,\n    resetStack: true\n  }, null, {\n    id: 'callgsubr',\n    min: 1,\n    undefStack: true\n  }, {\n    id: 'vhcurveto',\n    min: 4,\n    resetStack: true\n  }, {\n    id: 'hvcurveto',\n    min: 4,\n    resetStack: true\n  }];\n  var CharstringValidationData12 = [null, null, null, {\n    id: 'and',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'or',\n    min: 2,\n    stackDelta: -1\n  }, {\n    id: 'not',\n    min: 1,\n    stackDelta: 0\n  }, null, null, null, {\n    id: 'abs',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'add',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] + stack[index - 1];\n    }\n  }, {\n    id: 'sub',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] - stack[index - 1];\n    }\n  }, {\n    id: 'div',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] / stack[index - 1];\n    }\n  }, null, {\n    id: 'neg',\n    min: 1,\n    stackDelta: 0,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 1] = -stack[index - 1];\n    }\n  }, {\n    id: 'eq',\n    min: 2,\n    stackDelta: -1\n  }, null, null, {\n    id: 'drop',\n    min: 1,\n    stackDelta: -1\n  }, null, {\n    id: 'put',\n    min: 2,\n    stackDelta: -2\n  }, {\n    id: 'get',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'ifelse',\n    min: 4,\n    stackDelta: -3\n  }, {\n    id: 'random',\n    min: 0,\n    stackDelta: 1\n  }, {\n    id: 'mul',\n    min: 2,\n    stackDelta: -1,\n    stackFn: function stack_div(stack, index) {\n      stack[index - 2] = stack[index - 2] * stack[index - 1];\n    }\n  }, null, {\n    id: 'sqrt',\n    min: 1,\n    stackDelta: 0\n  }, {\n    id: 'dup',\n    min: 1,\n    stackDelta: 1\n  }, {\n    id: 'exch',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'index',\n    min: 2,\n    stackDelta: 0\n  }, {\n    id: 'roll',\n    min: 3,\n    stackDelta: -2\n  }, null, null, null, {\n    id: 'hflex',\n    min: 7,\n    resetStack: true\n  }, {\n    id: 'flex',\n    min: 13,\n    resetStack: true\n  }, {\n    id: 'hflex1',\n    min: 9,\n    resetStack: true\n  }, {\n    id: 'flex1',\n    min: 11,\n    resetStack: true\n  }];\n  function CFFParser(file, properties, seacAnalysisEnabled) {\n    this.bytes = file.getBytes();\n    this.properties = properties;\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  }\n  CFFParser.prototype = {\n    parse: function CFFParser_parse() {\n      var properties = this.properties;\n      var cff = new CFF();\n      this.cff = cff;\n      var header = this.parseHeader();\n      var nameIndex = this.parseIndex(header.endPos);\n      var topDictIndex = this.parseIndex(nameIndex.endPos);\n      var stringIndex = this.parseIndex(topDictIndex.endPos);\n      var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n      var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n      var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n      cff.header = header.obj;\n      cff.names = this.parseNameIndex(nameIndex.obj);\n      cff.strings = this.parseStringIndex(stringIndex.obj);\n      cff.topDict = topDict;\n      cff.globalSubrIndex = globalSubrIndex.obj;\n      this.parsePrivateDict(cff.topDict);\n      cff.isCIDFont = topDict.hasName('ROS');\n      var charStringOffset = topDict.getByName('CharStrings');\n      var charStringIndex = this.parseIndex(charStringOffset).obj;\n      var fontMatrix = topDict.getByName('FontMatrix');\n      if (fontMatrix) {\n        properties.fontMatrix = fontMatrix;\n      }\n      var fontBBox = topDict.getByName('FontBBox');\n      if (fontBBox) {\n        properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n        properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n        properties.ascentScaled = true;\n      }\n      var charset, encoding;\n      if (cff.isCIDFont) {\n        var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n        for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n          var dictRaw = fdArrayIndex.get(i);\n          var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n          this.parsePrivateDict(fontDict);\n          cff.fdArray.push(fontDict);\n        }\n        encoding = null;\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n        cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n      } else {\n        charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n        encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n      }\n      cff.charset = charset;\n      cff.encoding = encoding;\n      var charStringsAndSeacs = this.parseCharStrings({\n        charStrings: charStringIndex,\n        localSubrIndex: topDict.privateDict.subrsIndex,\n        globalSubrIndex: globalSubrIndex.obj,\n        fdSelect: cff.fdSelect,\n        fdArray: cff.fdArray,\n        privateDict: topDict.privateDict\n      });\n      cff.charStrings = charStringsAndSeacs.charStrings;\n      cff.seacs = charStringsAndSeacs.seacs;\n      cff.widths = charStringsAndSeacs.widths;\n      return cff;\n    },\n    parseHeader: function CFFParser_parseHeader() {\n      var bytes = this.bytes;\n      var bytesLength = bytes.length;\n      var offset = 0;\n      while (offset < bytesLength && bytes[offset] !== 1) {\n        ++offset;\n      }\n      if (offset >= bytesLength) {\n        throw new _util.FormatError('Invalid CFF header');\n      }\n      if (offset !== 0) {\n        (0, _util.info)('cff data is shifted');\n        bytes = bytes.subarray(offset);\n        this.bytes = bytes;\n      }\n      var major = bytes[0];\n      var minor = bytes[1];\n      var hdrSize = bytes[2];\n      var offSize = bytes[3];\n      var header = new CFFHeader(major, minor, hdrSize, offSize);\n      return {\n        obj: header,\n        endPos: hdrSize\n      };\n    },\n    parseDict: function CFFParser_parseDict(dict) {\n      var pos = 0;\n      function parseOperand() {\n        var value = dict[pos++];\n        if (value === 30) {\n          return parseFloatOperand();\n        } else if (value === 28) {\n          value = dict[pos++];\n          value = (value << 24 | dict[pos++] << 16) >> 16;\n          return value;\n        } else if (value === 29) {\n          value = dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          value = value << 8 | dict[pos++];\n          return value;\n        } else if (value >= 32 && value <= 246) {\n          return value - 139;\n        } else if (value >= 247 && value <= 250) {\n          return (value - 247) * 256 + dict[pos++] + 108;\n        } else if (value >= 251 && value <= 254) {\n          return -((value - 251) * 256) - dict[pos++] - 108;\n        }\n        (0, _util.warn)('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n        return NaN;\n      }\n      function parseFloatOperand() {\n        var str = '';\n        var eof = 15;\n        var lookup = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.', 'E', 'E-', null, '-'];\n        var length = dict.length;\n        while (pos < length) {\n          var b = dict[pos++];\n          var b1 = b >> 4;\n          var b2 = b & 15;\n          if (b1 === eof) {\n            break;\n          }\n          str += lookup[b1];\n          if (b2 === eof) {\n            break;\n          }\n          str += lookup[b2];\n        }\n        return parseFloat(str);\n      }\n      var operands = [];\n      var entries = [];\n      pos = 0;\n      var end = dict.length;\n      while (pos < end) {\n        var b = dict[pos];\n        if (b <= 21) {\n          if (b === 12) {\n            b = b << 8 | dict[++pos];\n          }\n          entries.push([b, operands]);\n          operands = [];\n          ++pos;\n        } else {\n          operands.push(parseOperand());\n        }\n      }\n      return entries;\n    },\n    parseIndex: function CFFParser_parseIndex(pos) {\n      var cffIndex = new CFFIndex();\n      var bytes = this.bytes;\n      var count = bytes[pos++] << 8 | bytes[pos++];\n      var offsets = [];\n      var end = pos;\n      var i, ii;\n      if (count !== 0) {\n        var offsetSize = bytes[pos++];\n        var startPos = pos + (count + 1) * offsetSize - 1;\n        for (i = 0, ii = count + 1; i < ii; ++i) {\n          var offset = 0;\n          for (var j = 0; j < offsetSize; ++j) {\n            offset <<= 8;\n            offset += bytes[pos++];\n          }\n          offsets.push(startPos + offset);\n        }\n        end = offsets[count];\n      }\n      for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n        var offsetStart = offsets[i];\n        var offsetEnd = offsets[i + 1];\n        cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n      }\n      return {\n        obj: cffIndex,\n        endPos: end\n      };\n    },\n    parseNameIndex: function CFFParser_parseNameIndex(index) {\n      var names = [];\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var name = index.get(i);\n        names.push((0, _util.bytesToString)(name));\n      }\n      return names;\n    },\n    parseStringIndex: function CFFParser_parseStringIndex(index) {\n      var strings = new CFFStrings();\n      for (var i = 0, ii = index.count; i < ii; ++i) {\n        var data = index.get(i);\n        strings.add((0, _util.bytesToString)(data));\n      }\n      return strings;\n    },\n    createDict: function CFFParser_createDict(Type, dict, strings) {\n      var cffDict = new Type(strings);\n      for (var i = 0, ii = dict.length; i < ii; ++i) {\n        var pair = dict[i];\n        var key = pair[0];\n        var value = pair[1];\n        cffDict.setByKey(key, value);\n      }\n      return cffDict;\n    },\n    parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n      if (!data || state.callDepth > MAX_SUBR_NESTING) {\n        return false;\n      }\n      var stackSize = state.stackSize;\n      var stack = state.stack;\n      var length = data.length;\n      for (var j = 0; j < length;) {\n        var value = data[j++];\n        var validationCommand = null;\n        if (value === 12) {\n          var q = data[j++];\n          if (q === 0) {\n            data[j - 2] = 139;\n            data[j - 1] = 22;\n            stackSize = 0;\n          } else {\n            validationCommand = CharstringValidationData12[q];\n          }\n        } else if (value === 28) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n          j += 2;\n          stackSize++;\n        } else if (value === 14) {\n          if (stackSize >= 4) {\n            stackSize -= 4;\n            if (this.seacAnalysisEnabled) {\n              state.seac = stack.slice(stackSize, stackSize + 4);\n              return false;\n            }\n          }\n          validationCommand = CharstringValidationData[value];\n        } else if (value >= 32 && value <= 246) {\n          stack[stackSize] = value - 139;\n          stackSize++;\n        } else if (value >= 247 && value <= 254) {\n          stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n          j++;\n          stackSize++;\n        } else if (value === 255) {\n          stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n          j += 4;\n          stackSize++;\n        } else if (value === 19 || value === 20) {\n          state.hints += stackSize >> 1;\n          j += state.hints + 7 >> 3;\n          stackSize %= 2;\n          validationCommand = CharstringValidationData[value];\n        } else if (value === 10 || value === 29) {\n          var subrsIndex;\n          if (value === 10) {\n            subrsIndex = localSubrIndex;\n          } else {\n            subrsIndex = globalSubrIndex;\n          }\n          if (!subrsIndex) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Missing subrsIndex for ' + validationCommand.id);\n            return false;\n          }\n          var bias = 32768;\n          if (subrsIndex.count < 1240) {\n            bias = 107;\n          } else if (subrsIndex.count < 33900) {\n            bias = 1131;\n          }\n          var subrNumber = stack[--stackSize] + bias;\n          if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n            validationCommand = CharstringValidationData[value];\n            (0, _util.warn)('Out of bounds subrIndex for ' + validationCommand.id);\n            return false;\n          }\n          state.stackSize = stackSize;\n          state.callDepth++;\n          var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n          if (!valid) {\n            return false;\n          }\n          state.callDepth--;\n          stackSize = state.stackSize;\n          continue;\n        } else if (value === 11) {\n          state.stackSize = stackSize;\n          return true;\n        } else {\n          validationCommand = CharstringValidationData[value];\n        }\n        if (validationCommand) {\n          if (validationCommand.stem) {\n            state.hints += stackSize >> 1;\n          }\n          if ('min' in validationCommand) {\n            if (!state.undefStack && stackSize < validationCommand.min) {\n              (0, _util.warn)('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n              return false;\n            }\n          }\n          if (state.firstStackClearing && validationCommand.stackClearing) {\n            state.firstStackClearing = false;\n            stackSize -= validationCommand.min;\n            if (stackSize >= 2 && validationCommand.stem) {\n              stackSize %= 2;\n            } else if (stackSize > 1) {\n              (0, _util.warn)('Found too many parameters for stack-clearing command');\n            }\n            if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n              state.width = stack[stackSize - 1];\n            }\n          }\n          if ('stackDelta' in validationCommand) {\n            if ('stackFn' in validationCommand) {\n              validationCommand.stackFn(stack, stackSize);\n            }\n            stackSize += validationCommand.stackDelta;\n          } else if (validationCommand.stackClearing) {\n            stackSize = 0;\n          } else if (validationCommand.resetStack) {\n            stackSize = 0;\n            state.undefStack = false;\n          } else if (validationCommand.undefStack) {\n            stackSize = 0;\n            state.undefStack = true;\n            state.firstStackClearing = false;\n          }\n        }\n      }\n      state.stackSize = stackSize;\n      return true;\n    },\n    parseCharStrings: function parseCharStrings(_ref) {\n      var charStrings = _ref.charStrings,\n          localSubrIndex = _ref.localSubrIndex,\n          globalSubrIndex = _ref.globalSubrIndex,\n          fdSelect = _ref.fdSelect,\n          fdArray = _ref.fdArray,\n          privateDict = _ref.privateDict;\n\n      var seacs = [];\n      var widths = [];\n      var count = charStrings.count;\n      for (var i = 0; i < count; i++) {\n        var charstring = charStrings.get(i);\n        var state = {\n          callDepth: 0,\n          stackSize: 0,\n          stack: [],\n          undefStack: true,\n          hints: 0,\n          firstStackClearing: true,\n          seac: null,\n          width: null\n        };\n        var valid = true;\n        var localSubrToUse = null;\n        var privateDictToUse = privateDict;\n        if (fdSelect && fdArray.length) {\n          var fdIndex = fdSelect.getFDIndex(i);\n          if (fdIndex === -1) {\n            (0, _util.warn)('Glyph index is not in fd select.');\n            valid = false;\n          }\n          if (fdIndex >= fdArray.length) {\n            (0, _util.warn)('Invalid fd index for glyph index.');\n            valid = false;\n          }\n          if (valid) {\n            privateDictToUse = fdArray[fdIndex].privateDict;\n            localSubrToUse = privateDictToUse.subrsIndex;\n          }\n        } else if (localSubrIndex) {\n          localSubrToUse = localSubrIndex;\n        }\n        if (valid) {\n          valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n        }\n        if (state.width !== null) {\n          var nominalWidth = privateDictToUse.getByName('nominalWidthX');\n          widths[i] = nominalWidth + state.width;\n        } else {\n          var defaultWidth = privateDictToUse.getByName('defaultWidthX');\n          widths[i] = defaultWidth;\n        }\n        if (state.seac !== null) {\n          seacs[i] = state.seac;\n        }\n        if (!valid) {\n          charStrings.set(i, new Uint8Array([14]));\n        }\n      }\n      return {\n        charStrings: charStrings,\n        seacs: seacs,\n        widths: widths\n      };\n    },\n\n    emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n      var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n      parentDict.setByKey(18, [0, 0]);\n      parentDict.privateDict = privateDict;\n    },\n    parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n      if (!parentDict.hasName('Private')) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateOffset = parentDict.getByName('Private');\n      if (!Array.isArray(privateOffset) || privateOffset.length !== 2) {\n        parentDict.removeByName('Private');\n        return;\n      }\n      var size = privateOffset[0];\n      var offset = privateOffset[1];\n      if (size === 0 || offset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var privateDictEnd = offset + size;\n      var dictData = this.bytes.subarray(offset, privateDictEnd);\n      var dict = this.parseDict(dictData);\n      var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n      parentDict.privateDict = privateDict;\n      if (!privateDict.getByName('Subrs')) {\n        return;\n      }\n      var subrsOffset = privateDict.getByName('Subrs');\n      var relativeOffset = offset + subrsOffset;\n      if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n        this.emptyPrivateDictionary(parentDict);\n        return;\n      }\n      var subrsIndex = this.parseIndex(relativeOffset);\n      privateDict.subrsIndex = subrsIndex.obj;\n    },\n    parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n      if (pos === 0) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, _charsets.ISOAdobeCharset);\n      } else if (pos === 1) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, _charsets.ExpertCharset);\n      } else if (pos === 2) {\n        return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, _charsets.ExpertSubsetCharset);\n      }\n      var bytes = this.bytes;\n      var start = pos;\n      var format = bytes[pos++];\n      var charset = ['.notdef'];\n      var id, count, i;\n      length -= 1;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; i++) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            charset.push(cid ? id : strings.get(id));\n          }\n          break;\n        case 1:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        case 2:\n          while (charset.length <= length) {\n            id = bytes[pos++] << 8 | bytes[pos++];\n            count = bytes[pos++] << 8 | bytes[pos++];\n            for (i = 0; i <= count; i++) {\n              charset.push(cid ? id++ : strings.get(id++));\n            }\n          }\n          break;\n        default:\n          throw new _util.FormatError('Unknown charset format');\n      }\n      var end = pos;\n      var raw = bytes.subarray(start, end);\n      return new CFFCharset(false, format, charset, raw);\n    },\n    parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n      var encoding = Object.create(null);\n      var bytes = this.bytes;\n      var predefined = false;\n      var format, i, ii;\n      var raw = null;\n      function readSupplement() {\n        var supplementsCount = bytes[pos++];\n        for (i = 0; i < supplementsCount; i++) {\n          var code = bytes[pos++];\n          var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n          encoding[code] = charset.indexOf(strings.get(sid));\n        }\n      }\n      if (pos === 0 || pos === 1) {\n        predefined = true;\n        format = pos;\n        var baseEncoding = pos ? _encodings.ExpertEncoding : _encodings.StandardEncoding;\n        for (i = 0, ii = charset.length; i < ii; i++) {\n          var index = baseEncoding.indexOf(charset[i]);\n          if (index !== -1) {\n            encoding[index] = i;\n          }\n        }\n      } else {\n        var dataStart = pos;\n        format = bytes[pos++];\n        switch (format & 0x7f) {\n          case 0:\n            var glyphsCount = bytes[pos++];\n            for (i = 1; i <= glyphsCount; i++) {\n              encoding[bytes[pos++]] = i;\n            }\n            break;\n          case 1:\n            var rangesCount = bytes[pos++];\n            var gid = 1;\n            for (i = 0; i < rangesCount; i++) {\n              var start = bytes[pos++];\n              var left = bytes[pos++];\n              for (var j = start; j <= start + left; j++) {\n                encoding[j] = gid++;\n              }\n            }\n            break;\n          default:\n            throw new _util.FormatError('Unknown encoding format: ' + format + ' in CFF');\n        }\n        var dataEnd = pos;\n        if (format & 0x80) {\n          bytes[dataStart] &= 0x7f;\n          readSupplement();\n        }\n        raw = bytes.subarray(dataStart, dataEnd);\n      }\n      format = format & 0x7f;\n      return new CFFEncoding(predefined, format, encoding, raw);\n    },\n    parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n      var start = pos;\n      var bytes = this.bytes;\n      var format = bytes[pos++];\n      var fdSelect = [],\n          rawBytes;\n      var i,\n          invalidFirstGID = false;\n      switch (format) {\n        case 0:\n          for (i = 0; i < length; ++i) {\n            var id = bytes[pos++];\n            fdSelect.push(id);\n          }\n          rawBytes = bytes.subarray(start, pos);\n          break;\n        case 3:\n          var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n          for (i = 0; i < rangesCount; ++i) {\n            var first = bytes[pos++] << 8 | bytes[pos++];\n            if (i === 0 && first !== 0) {\n              (0, _util.warn)('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n              invalidFirstGID = true;\n              first = 0;\n            }\n            var fdIndex = bytes[pos++];\n            var next = bytes[pos] << 8 | bytes[pos + 1];\n            for (var j = first; j < next; ++j) {\n              fdSelect.push(fdIndex);\n            }\n          }\n          pos += 2;\n          rawBytes = bytes.subarray(start, pos);\n          if (invalidFirstGID) {\n            rawBytes[3] = rawBytes[4] = 0;\n          }\n          break;\n        default:\n          throw new _util.FormatError('parseFDSelect: Unknown format \"' + format + '\".');\n      }\n      if (fdSelect.length !== length) {\n        throw new _util.FormatError('parseFDSelect: Invalid font data.');\n      }\n      return new CFFFDSelect(fdSelect, rawBytes);\n    }\n  };\n  return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n  function CFF() {\n    this.header = null;\n    this.names = [];\n    this.topDict = null;\n    this.strings = new CFFStrings();\n    this.globalSubrIndex = null;\n    this.encoding = null;\n    this.charset = null;\n    this.charStrings = null;\n    this.fdArray = [];\n    this.fdSelect = null;\n    this.isCIDFont = false;\n  }\n  return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n  function CFFHeader(major, minor, hdrSize, offSize) {\n    this.major = major;\n    this.minor = minor;\n    this.hdrSize = hdrSize;\n    this.offSize = offSize;\n  }\n  return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n  function CFFStrings() {\n    this.strings = [];\n  }\n  CFFStrings.prototype = {\n    get: function CFFStrings_get(index) {\n      if (index >= 0 && index <= 390) {\n        return CFFStandardStrings[index];\n      }\n      if (index - 391 <= this.strings.length) {\n        return this.strings[index - 391];\n      }\n      return CFFStandardStrings[0];\n    },\n    add: function CFFStrings_add(value) {\n      this.strings.push(value);\n    },\n    get count() {\n      return this.strings.length;\n    }\n  };\n  return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n  function CFFIndex() {\n    this.objects = [];\n    this.length = 0;\n  }\n  CFFIndex.prototype = {\n    add: function CFFIndex_add(data) {\n      this.length += data.length;\n      this.objects.push(data);\n    },\n    set: function CFFIndex_set(index, data) {\n      this.length += data.length - this.objects[index].length;\n      this.objects[index] = data;\n    },\n    get: function CFFIndex_get(index) {\n      return this.objects[index];\n    },\n    get count() {\n      return this.objects.length;\n    }\n  };\n  return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n  function CFFDict(tables, strings) {\n    this.keyToNameMap = tables.keyToNameMap;\n    this.nameToKeyMap = tables.nameToKeyMap;\n    this.defaults = tables.defaults;\n    this.types = tables.types;\n    this.opcodes = tables.opcodes;\n    this.order = tables.order;\n    this.strings = strings;\n    this.values = Object.create(null);\n  }\n  CFFDict.prototype = {\n    setByKey: function CFFDict_setByKey(key, value) {\n      if (!(key in this.keyToNameMap)) {\n        return false;\n      }\n      var valueLength = value.length;\n      if (valueLength === 0) {\n        return true;\n      }\n      for (var i = 0; i < valueLength; i++) {\n        if (isNaN(value[i])) {\n          (0, _util.warn)('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n          return true;\n        }\n      }\n      var type = this.types[key];\n      if (type === 'num' || type === 'sid' || type === 'offset') {\n        value = value[0];\n      }\n      this.values[key] = value;\n      return true;\n    },\n    setByName: function CFFDict_setByName(name, value) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name \"' + name + '\"');\n      }\n      this.values[this.nameToKeyMap[name]] = value;\n    },\n    hasName: function CFFDict_hasName(name) {\n      return this.nameToKeyMap[name] in this.values;\n    },\n    getByName: function CFFDict_getByName(name) {\n      if (!(name in this.nameToKeyMap)) {\n        throw new _util.FormatError('Invalid dictionary name ' + name + '\"');\n      }\n      var key = this.nameToKeyMap[name];\n      if (!(key in this.values)) {\n        return this.defaults[key];\n      }\n      return this.values[key];\n    },\n    removeByName: function CFFDict_removeByName(name) {\n      delete this.values[this.nameToKeyMap[name]];\n    }\n  };\n  CFFDict.createTables = function CFFDict_createTables(layout) {\n    var tables = {\n      keyToNameMap: {},\n      nameToKeyMap: {},\n      defaults: {},\n      types: {},\n      opcodes: {},\n      order: []\n    };\n    for (var i = 0, ii = layout.length; i < ii; ++i) {\n      var entry = layout[i];\n      var key = Array.isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n      tables.keyToNameMap[key] = entry[1];\n      tables.nameToKeyMap[entry[1]] = key;\n      tables.types[key] = entry[2];\n      tables.defaults[key] = entry[3];\n      tables.opcodes[key] = Array.isArray(entry[0]) ? entry[0] : [entry[0]];\n      tables.order.push(key);\n    }\n    return tables;\n  };\n  return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n  var layout = [[[12, 30], 'ROS', ['sid', 'sid', 'num'], null], [[12, 20], 'SyntheticBase', 'num', null], [0, 'version', 'sid', null], [1, 'Notice', 'sid', null], [[12, 0], 'Copyright', 'sid', null], [2, 'FullName', 'sid', null], [3, 'FamilyName', 'sid', null], [4, 'Weight', 'sid', null], [[12, 1], 'isFixedPitch', 'num', 0], [[12, 2], 'ItalicAngle', 'num', 0], [[12, 3], 'UnderlinePosition', 'num', -100], [[12, 4], 'UnderlineThickness', 'num', 50], [[12, 5], 'PaintType', 'num', 0], [[12, 6], 'CharstringType', 'num', 2], [[12, 7], 'FontMatrix', ['num', 'num', 'num', 'num', 'num', 'num'], [0.001, 0, 0, 0.001, 0, 0]], [13, 'UniqueID', 'num', null], [5, 'FontBBox', ['num', 'num', 'num', 'num'], [0, 0, 0, 0]], [[12, 8], 'StrokeWidth', 'num', 0], [14, 'XUID', 'array', null], [15, 'charset', 'offset', 0], [16, 'Encoding', 'offset', 0], [17, 'CharStrings', 'offset', 0], [18, 'Private', ['offset', 'offset'], null], [[12, 21], 'PostScript', 'sid', null], [[12, 22], 'BaseFontName', 'sid', null], [[12, 23], 'BaseFontBlend', 'delta', null], [[12, 31], 'CIDFontVersion', 'num', 0], [[12, 32], 'CIDFontRevision', 'num', 0], [[12, 33], 'CIDFontType', 'num', 0], [[12, 34], 'CIDCount', 'num', 8720], [[12, 35], 'UIDBase', 'num', null], [[12, 37], 'FDSelect', 'offset', null], [[12, 36], 'FDArray', 'offset', null], [[12, 38], 'FontName', 'sid', null]];\n  var tables = null;\n  function CFFTopDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.privateDict = null;\n  }\n  CFFTopDict.prototype = Object.create(CFFDict.prototype);\n  return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n  var layout = [[6, 'BlueValues', 'delta', null], [7, 'OtherBlues', 'delta', null], [8, 'FamilyBlues', 'delta', null], [9, 'FamilyOtherBlues', 'delta', null], [[12, 9], 'BlueScale', 'num', 0.039625], [[12, 10], 'BlueShift', 'num', 7], [[12, 11], 'BlueFuzz', 'num', 1], [10, 'StdHW', 'num', null], [11, 'StdVW', 'num', null], [[12, 12], 'StemSnapH', 'delta', null], [[12, 13], 'StemSnapV', 'delta', null], [[12, 14], 'ForceBold', 'num', 0], [[12, 17], 'LanguageGroup', 'num', 0], [[12, 18], 'ExpansionFactor', 'num', 0.06], [[12, 19], 'initialRandomSeed', 'num', 0], [20, 'defaultWidthX', 'num', 0], [21, 'nominalWidthX', 'num', 0], [19, 'Subrs', 'offset', null]];\n  var tables = null;\n  function CFFPrivateDict(strings) {\n    if (tables === null) {\n      tables = CFFDict.createTables(layout);\n    }\n    CFFDict.call(this, tables, strings);\n    this.subrsIndex = null;\n  }\n  CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n  return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n  ISO_ADOBE: 0,\n  EXPERT: 1,\n  EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n  function CFFCharset(predefined, format, charset, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.charset = charset;\n    this.raw = raw;\n  }\n  return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n  function CFFEncoding(predefined, format, encoding, raw) {\n    this.predefined = predefined;\n    this.format = format;\n    this.encoding = encoding;\n    this.raw = raw;\n  }\n  return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n  function CFFFDSelect(fdSelect, raw) {\n    this.fdSelect = fdSelect;\n    this.raw = raw;\n  }\n  CFFFDSelect.prototype = {\n    getFDIndex: function CFFFDSelect_get(glyphIndex) {\n      if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n        return -1;\n      }\n      return this.fdSelect[glyphIndex];\n    }\n  };\n  return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n  function CFFOffsetTracker() {\n    this.offsets = Object.create(null);\n  }\n  CFFOffsetTracker.prototype = {\n    isTracking: function CFFOffsetTracker_isTracking(key) {\n      return key in this.offsets;\n    },\n    track: function CFFOffsetTracker_track(key, location) {\n      if (key in this.offsets) {\n        throw new _util.FormatError('Already tracking location of ' + key);\n      }\n      this.offsets[key] = location;\n    },\n    offset: function CFFOffsetTracker_offset(value) {\n      for (var key in this.offsets) {\n        this.offsets[key] += value;\n      }\n    },\n    setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n      if (!(key in this.offsets)) {\n        throw new _util.FormatError('Not tracking location of ' + key);\n      }\n      var data = output.data;\n      var dataOffset = this.offsets[key];\n      var size = 5;\n      for (var i = 0, ii = values.length; i < ii; ++i) {\n        var offset0 = i * size + dataOffset;\n        var offset1 = offset0 + 1;\n        var offset2 = offset0 + 2;\n        var offset3 = offset0 + 3;\n        var offset4 = offset0 + 4;\n        if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n          throw new _util.FormatError('writing to an offset that is not empty');\n        }\n        var value = values[i];\n        data[offset0] = 0x1d;\n        data[offset1] = value >> 24 & 0xFF;\n        data[offset2] = value >> 16 & 0xFF;\n        data[offset3] = value >> 8 & 0xFF;\n        data[offset4] = value & 0xFF;\n      }\n    }\n  };\n  return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n  function CFFCompiler(cff) {\n    this.cff = cff;\n  }\n  CFFCompiler.prototype = {\n    compile: function CFFCompiler_compile() {\n      var cff = this.cff;\n      var output = {\n        data: [],\n        length: 0,\n        add: function CFFCompiler_add(data) {\n          this.data = this.data.concat(data);\n          this.length = this.data.length;\n        }\n      };\n      var header = this.compileHeader(cff.header);\n      output.add(header);\n      var nameIndex = this.compileNameIndex(cff.names);\n      output.add(nameIndex);\n      if (cff.isCIDFont) {\n        if (cff.topDict.hasName('FontMatrix')) {\n          var base = cff.topDict.getByName('FontMatrix');\n          cff.topDict.removeByName('FontMatrix');\n          for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n            var subDict = cff.fdArray[i];\n            var matrix = base.slice(0);\n            if (subDict.hasName('FontMatrix')) {\n              matrix = _util.Util.transform(matrix, subDict.getByName('FontMatrix'));\n            }\n            subDict.setByName('FontMatrix', matrix);\n          }\n        }\n      }\n      var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n      output.add(compiled.output);\n      var topDictTracker = compiled.trackers[0];\n      var stringIndex = this.compileStringIndex(cff.strings.strings);\n      output.add(stringIndex);\n      var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n      output.add(globalSubrIndex);\n      if (cff.encoding && cff.topDict.hasName('Encoding')) {\n        if (cff.encoding.predefined) {\n          topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n        } else {\n          var encoding = this.compileEncoding(cff.encoding);\n          topDictTracker.setEntryLocation('Encoding', [output.length], output);\n          output.add(encoding);\n        }\n      }\n      if (cff.charset && cff.topDict.hasName('charset')) {\n        if (cff.charset.predefined) {\n          topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n        } else {\n          var charset = this.compileCharset(cff.charset);\n          topDictTracker.setEntryLocation('charset', [output.length], output);\n          output.add(charset);\n        }\n      }\n      var charStrings = this.compileCharStrings(cff.charStrings);\n      topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n      output.add(charStrings);\n      if (cff.isCIDFont) {\n        topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n        var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n        output.add(fdSelect);\n        compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n        topDictTracker.setEntryLocation('FDArray', [output.length], output);\n        output.add(compiled.output);\n        var fontDictTrackers = compiled.trackers;\n        this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n      }\n      this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n      output.add([0]);\n      return output.data;\n    },\n    encodeNumber: function CFFCompiler_encodeNumber(value) {\n      if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n        return this.encodeInteger(value);\n      }\n      return this.encodeFloat(value);\n    },\n    encodeFloat: function CFFCompiler_encodeFloat(num) {\n      var value = num.toString();\n      var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n      if (m) {\n        var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n        value = (Math.round(num * epsilon) / epsilon).toString();\n      }\n      var nibbles = '';\n      var i, ii;\n      for (i = 0, ii = value.length; i < ii; ++i) {\n        var a = value[i];\n        if (a === 'e') {\n          nibbles += value[++i] === '-' ? 'c' : 'b';\n        } else if (a === '.') {\n          nibbles += 'a';\n        } else if (a === '-') {\n          nibbles += 'e';\n        } else {\n          nibbles += a;\n        }\n      }\n      nibbles += nibbles.length & 1 ? 'f' : 'ff';\n      var out = [30];\n      for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n        out.push(parseInt(nibbles.substr(i, 2), 16));\n      }\n      return out;\n    },\n    encodeInteger: function CFFCompiler_encodeInteger(value) {\n      var code;\n      if (value >= -107 && value <= 107) {\n        code = [value + 139];\n      } else if (value >= 108 && value <= 1131) {\n        value = value - 108;\n        code = [(value >> 8) + 247, value & 0xFF];\n      } else if (value >= -1131 && value <= -108) {\n        value = -value - 108;\n        code = [(value >> 8) + 251, value & 0xFF];\n      } else if (value >= -32768 && value <= 32767) {\n        code = [0x1c, value >> 8 & 0xFF, value & 0xFF];\n      } else {\n        code = [0x1d, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF];\n      }\n      return code;\n    },\n    compileHeader: function CFFCompiler_compileHeader(header) {\n      return [header.major, header.minor, header.hdrSize, header.offSize];\n    },\n    compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n      var nameIndex = new CFFIndex();\n      for (var i = 0, ii = names.length; i < ii; ++i) {\n        var name = names[i];\n        var length = Math.min(name.length, 127);\n        var sanitizedName = new Array(length);\n        for (var j = 0; j < length; j++) {\n          var char = name[j];\n          if (char < '!' || char > '~' || char === '[' || char === ']' || char === '(' || char === ')' || char === '{' || char === '}' || char === '<' || char === '>' || char === '/' || char === '%') {\n            char = '_';\n          }\n          sanitizedName[j] = char;\n        }\n        sanitizedName = sanitizedName.join('');\n        if (sanitizedName === '') {\n          sanitizedName = 'Bad_Font_Name';\n        }\n        nameIndex.add((0, _util.stringToBytes)(sanitizedName));\n      }\n      return this.compileIndex(nameIndex);\n    },\n    compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n      var fontDictTrackers = [];\n      var fdArrayIndex = new CFFIndex();\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        if (removeCidKeys) {\n          fontDict.removeByName('CIDFontVersion');\n          fontDict.removeByName('CIDFontRevision');\n          fontDict.removeByName('CIDFontType');\n          fontDict.removeByName('CIDCount');\n          fontDict.removeByName('UIDBase');\n        }\n        var fontDictTracker = new CFFOffsetTracker();\n        var fontDictData = this.compileDict(fontDict, fontDictTracker);\n        fontDictTrackers.push(fontDictTracker);\n        fdArrayIndex.add(fontDictData);\n        fontDictTracker.offset(length);\n      }\n      fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n      return {\n        trackers: fontDictTrackers,\n        output: fdArrayIndex\n      };\n    },\n    compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n      for (var i = 0, ii = dicts.length; i < ii; ++i) {\n        var fontDict = dicts[i];\n        var privateDict = fontDict.privateDict;\n        if (!privateDict || !fontDict.hasName('Private')) {\n          throw new _util.FormatError('There must be a private dictionary.');\n        }\n        var privateDictTracker = new CFFOffsetTracker();\n        var privateDictData = this.compileDict(privateDict, privateDictTracker);\n        var outputLength = output.length;\n        privateDictTracker.offset(outputLength);\n        if (!privateDictData.length) {\n          outputLength = 0;\n        }\n        trackers[i].setEntryLocation('Private', [privateDictData.length, outputLength], output);\n        output.add(privateDictData);\n        if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n          var subrs = this.compileIndex(privateDict.subrsIndex);\n          privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n          output.add(subrs);\n        }\n      }\n    },\n    compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n      var out = [];\n      var order = dict.order;\n      for (var i = 0; i < order.length; ++i) {\n        var key = order[i];\n        if (!(key in dict.values)) {\n          continue;\n        }\n        var values = dict.values[key];\n        var types = dict.types[key];\n        if (!Array.isArray(types)) {\n          types = [types];\n        }\n        if (!Array.isArray(values)) {\n          values = [values];\n        }\n        if (values.length === 0) {\n          continue;\n        }\n        for (var j = 0, jj = types.length; j < jj; ++j) {\n          var type = types[j];\n          var value = values[j];\n          switch (type) {\n            case 'num':\n            case 'sid':\n              out = out.concat(this.encodeNumber(value));\n              break;\n            case 'offset':\n              var name = dict.keyToNameMap[key];\n              if (!offsetTracker.isTracking(name)) {\n                offsetTracker.track(name, out.length);\n              }\n              out = out.concat([0x1d, 0, 0, 0, 0]);\n              break;\n            case 'array':\n            case 'delta':\n              out = out.concat(this.encodeNumber(value));\n              for (var k = 1, kk = values.length; k < kk; ++k) {\n                out = out.concat(this.encodeNumber(values[k]));\n              }\n              break;\n            default:\n              throw new _util.FormatError('Unknown data type of ' + type);\n          }\n        }\n        out = out.concat(dict.opcodes[key]);\n      }\n      return out;\n    },\n    compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n      var stringIndex = new CFFIndex();\n      for (var i = 0, ii = strings.length; i < ii; ++i) {\n        stringIndex.add((0, _util.stringToBytes)(strings[i]));\n      }\n      return this.compileIndex(stringIndex);\n    },\n    compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n      var globalSubrIndex = this.cff.globalSubrIndex;\n      this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n    },\n    compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n      return this.compileIndex(charStrings);\n    },\n    compileCharset: function CFFCompiler_compileCharset(charset) {\n      return this.compileTypedArray(charset.raw);\n    },\n    compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n      return this.compileTypedArray(encoding.raw);\n    },\n    compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n      return this.compileTypedArray(fdSelect);\n    },\n    compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n      var out = [];\n      for (var i = 0, ii = data.length; i < ii; ++i) {\n        out[i] = data[i];\n      }\n      return out;\n    },\n    compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n      trackers = trackers || [];\n      var objects = index.objects;\n      var count = objects.length;\n      if (count === 0) {\n        return [0, 0, 0];\n      }\n      var data = [count >> 8 & 0xFF, count & 0xff];\n      var lastOffset = 1,\n          i;\n      for (i = 0; i < count; ++i) {\n        lastOffset += objects[i].length;\n      }\n      var offsetSize;\n      if (lastOffset < 0x100) {\n        offsetSize = 1;\n      } else if (lastOffset < 0x10000) {\n        offsetSize = 2;\n      } else if (lastOffset < 0x1000000) {\n        offsetSize = 3;\n      } else {\n        offsetSize = 4;\n      }\n      data.push(offsetSize);\n      var relativeOffset = 1;\n      for (i = 0; i < count + 1; i++) {\n        if (offsetSize === 1) {\n          data.push(relativeOffset & 0xFF);\n        } else if (offsetSize === 2) {\n          data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else if (offsetSize === 3) {\n          data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        } else {\n          data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n        }\n        if (objects[i]) {\n          relativeOffset += objects[i].length;\n        }\n      }\n      for (i = 0; i < count; i++) {\n        if (trackers[i]) {\n          trackers[i].offset(data.length);\n        }\n        for (var j = 0, jj = objects[i].length; j < jj; j++) {\n          data.push(objects[i][j]);\n        }\n      }\n      return data;\n    }\n  };\n  return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.calculateSHA512 = exports.calculateSHA384 = exports.calculateSHA256 = exports.calculateMD5 = exports.PDF20 = exports.PDF17 = exports.CipherTransformFactory = exports.ARCFourCipher = exports.AES256Cipher = exports.AES128Cipher = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar ARCFourCipher = function ARCFourCipherClosure() {\n  function ARCFourCipher(key) {\n    this.a = 0;\n    this.b = 0;\n    var s = new Uint8Array(256);\n    var i,\n        j = 0,\n        tmp,\n        keyLength = key.length;\n    for (i = 0; i < 256; ++i) {\n      s[i] = i;\n    }\n    for (i = 0; i < 256; ++i) {\n      tmp = s[i];\n      j = j + tmp + key[i % keyLength] & 0xFF;\n      s[i] = s[j];\n      s[j] = tmp;\n    }\n    this.s = s;\n  }\n  ARCFourCipher.prototype = {\n    encryptBlock: function ARCFourCipher_encryptBlock(data) {\n      var i,\n          n = data.length,\n          tmp,\n          tmp2;\n      var a = this.a,\n          b = this.b,\n          s = this.s;\n      var output = new Uint8Array(n);\n      for (i = 0; i < n; ++i) {\n        a = a + 1 & 0xFF;\n        tmp = s[a];\n        b = b + tmp & 0xFF;\n        tmp2 = s[b];\n        s[a] = tmp2;\n        s[b] = tmp;\n        output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n      }\n      this.a = a;\n      this.b = b;\n      return output;\n    }\n  };\n  ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n  return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n  var r = new Uint8Array([7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 7, 12, 17, 22, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 5, 9, 14, 20, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 4, 11, 16, 23, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21, 6, 10, 15, 21]);\n  var k = new Int32Array([-680876936, -389564586, 606105819, -1044525330, -176418897, 1200080426, -1473231341, -45705983, 1770035416, -1958414417, -42063, -1990404162, 1804603682, -40341101, -1502002290, 1236535329, -165796510, -1069501632, 643717713, -373897302, -701558691, 38016083, -660478335, -405537848, 568446438, -1019803690, -187363961, 1163531501, -1444681467, -51403784, 1735328473, -1926607734, -378558, -2022574463, 1839030562, -35309556, -1530992060, 1272893353, -155497632, -1094730640, 681279174, -358537222, -722521979, 76029189, -640364487, -421815835, 530742520, -995338651, -198630844, 1126891415, -1416354905, -57434055, 1700485571, -1894986606, -1051523, -2054922799, 1873313359, -30611744, -1560198380, 1309151649, -145523070, -1120210379, 718787259, -343485551]);\n  function hash(data, offset, length) {\n    var h0 = 1732584193,\n        h1 = -271733879,\n        h2 = -1732584194,\n        h3 = 271733878;\n    var paddedLength = length + 72 & ~63;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = length << 3 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    var w = new Int32Array(16);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j, i += 4) {\n        w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          f,\n          g;\n      for (j = 0; j < 64; ++j) {\n        if (j < 16) {\n          f = b & c | ~b & d;\n          g = j;\n        } else if (j < 32) {\n          f = d & b | ~d & c;\n          g = 5 * j + 1 & 15;\n        } else if (j < 48) {\n          f = b ^ c ^ d;\n          g = 3 * j + 5 & 15;\n        } else {\n          f = c ^ (b | ~d);\n          g = 7 * j & 15;\n        }\n        var tmp = d,\n            rotateArg = a + f + k[j] + w[g] | 0,\n            rotate = r[j];\n        d = c;\n        c = b;\n        b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n        a = tmp;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n    }\n    return new Uint8Array([h0 & 0xFF, h0 >> 8 & 0xFF, h0 >> 16 & 0xFF, h0 >>> 24 & 0xFF, h1 & 0xFF, h1 >> 8 & 0xFF, h1 >> 16 & 0xFF, h1 >>> 24 & 0xFF, h2 & 0xFF, h2 >> 8 & 0xFF, h2 >> 16 & 0xFF, h2 >>> 24 & 0xFF, h3 & 0xFF, h3 >> 8 & 0xFF, h3 >> 16 & 0xFF, h3 >>> 24 & 0xFF]);\n  }\n  return hash;\n}();\nvar Word64 = function Word64Closure() {\n  function Word64(highInteger, lowInteger) {\n    this.high = highInteger | 0;\n    this.low = lowInteger | 0;\n  }\n  Word64.prototype = {\n    and: function Word64_and(word) {\n      this.high &= word.high;\n      this.low &= word.low;\n    },\n    xor: function Word64_xor(word) {\n      this.high ^= word.high;\n      this.low ^= word.low;\n    },\n    or: function Word64_or(word) {\n      this.high |= word.high;\n      this.low |= word.low;\n    },\n    shiftRight: function Word64_shiftRight(places) {\n      if (places >= 32) {\n        this.low = this.high >>> places - 32 | 0;\n        this.high = 0;\n      } else {\n        this.low = this.low >>> places | this.high << 32 - places;\n        this.high = this.high >>> places | 0;\n      }\n    },\n    shiftLeft: function Word64_shiftLeft(places) {\n      if (places >= 32) {\n        this.high = this.low << places - 32;\n        this.low = 0;\n      } else {\n        this.high = this.high << places | this.low >>> 32 - places;\n        this.low = this.low << places;\n      }\n    },\n    rotateRight: function Word64_rotateRight(places) {\n      var low, high;\n      if (places & 32) {\n        high = this.low;\n        low = this.high;\n      } else {\n        low = this.low;\n        high = this.high;\n      }\n      places &= 31;\n      this.low = low >>> places | high << 32 - places;\n      this.high = high >>> places | low << 32 - places;\n    },\n    not: function Word64_not() {\n      this.high = ~this.high;\n      this.low = ~this.low;\n    },\n    add: function Word64_add(word) {\n      var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n      var highAdd = (this.high >>> 0) + (word.high >>> 0);\n      if (lowAdd > 0xFFFFFFFF) {\n        highAdd += 1;\n      }\n      this.low = lowAdd | 0;\n      this.high = highAdd | 0;\n    },\n    copyTo: function Word64_copyTo(bytes, offset) {\n      bytes[offset] = this.high >>> 24 & 0xFF;\n      bytes[offset + 1] = this.high >> 16 & 0xFF;\n      bytes[offset + 2] = this.high >> 8 & 0xFF;\n      bytes[offset + 3] = this.high & 0xFF;\n      bytes[offset + 4] = this.low >>> 24 & 0xFF;\n      bytes[offset + 5] = this.low >> 16 & 0xFF;\n      bytes[offset + 6] = this.low >> 8 & 0xFF;\n      bytes[offset + 7] = this.low & 0xFF;\n    },\n    assign: function Word64_assign(word) {\n      this.high = word.high;\n      this.low = word.low;\n    }\n  };\n  return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n  function rotr(x, n) {\n    return x >>> n | x << 32 - n;\n  }\n  function ch(x, y, z) {\n    return x & y ^ ~x & z;\n  }\n  function maj(x, y, z) {\n    return x & y ^ x & z ^ y & z;\n  }\n  function sigma(x) {\n    return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n  }\n  function sigmaPrime(x) {\n    return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n  }\n  function littleSigma(x) {\n    return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n  }\n  function littleSigmaPrime(x) {\n    return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n  }\n  var k = [0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5, 0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174, 0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da, 0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967, 0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85, 0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070, 0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3, 0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2];\n  function hash(data, offset, length) {\n    var h0 = 0x6a09e667,\n        h1 = 0xbb67ae85,\n        h2 = 0x3c6ef372,\n        h3 = 0xa54ff53a,\n        h4 = 0x510e527f,\n        h5 = 0x9b05688c,\n        h6 = 0x1f83d9ab,\n        h7 = 0x5be0cd19;\n    var paddedLength = Math.ceil((length + 9) / 64) * 64;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 8;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Uint32Array(64);\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        i += 4;\n      }\n      for (j = 16; j < 64; ++j) {\n        w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n      }\n      var a = h0,\n          b = h1,\n          c = h2,\n          d = h3,\n          e = h4,\n          f = h5,\n          g = h6,\n          h = h7,\n          t1,\n          t2;\n      for (j = 0; j < 64; ++j) {\n        t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n        t2 = sigma(a) + maj(a, b, c);\n        h = g;\n        g = f;\n        f = e;\n        e = d + t1 | 0;\n        d = c;\n        c = b;\n        b = a;\n        a = t1 + t2 | 0;\n      }\n      h0 = h0 + a | 0;\n      h1 = h1 + b | 0;\n      h2 = h2 + c | 0;\n      h3 = h3 + d | 0;\n      h4 = h4 + e | 0;\n      h5 = h5 + f | 0;\n      h6 = h6 + g | 0;\n      h7 = h7 + h | 0;\n    }\n    return new Uint8Array([h0 >> 24 & 0xFF, h0 >> 16 & 0xFF, h0 >> 8 & 0xFF, h0 & 0xFF, h1 >> 24 & 0xFF, h1 >> 16 & 0xFF, h1 >> 8 & 0xFF, h1 & 0xFF, h2 >> 24 & 0xFF, h2 >> 16 & 0xFF, h2 >> 8 & 0xFF, h2 & 0xFF, h3 >> 24 & 0xFF, h3 >> 16 & 0xFF, h3 >> 8 & 0xFF, h3 & 0xFF, h4 >> 24 & 0xFF, h4 >> 16 & 0xFF, h4 >> 8 & 0xFF, h4 & 0xFF, h5 >> 24 & 0xFF, h5 >> 16 & 0xFF, h5 >> 8 & 0xFF, h5 & 0xFF, h6 >> 24 & 0xFF, h6 >> 16 & 0xFF, h6 >> 8 & 0xFF, h6 & 0xFF, h7 >> 24 & 0xFF, h7 >> 16 & 0xFF, h7 >> 8 & 0xFF, h7 & 0xFF]);\n  }\n  return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n  function ch(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.not();\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function maj(result, x, y, z, tmp) {\n    result.assign(x);\n    result.and(y);\n    tmp.assign(x);\n    tmp.and(z);\n    result.xor(tmp);\n    tmp.assign(y);\n    tmp.and(z);\n    result.xor(tmp);\n  }\n  function sigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(28);\n    tmp.assign(x);\n    tmp.rotateRight(34);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(39);\n    result.xor(tmp);\n  }\n  function sigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(14);\n    tmp.assign(x);\n    tmp.rotateRight(18);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.rotateRight(41);\n    result.xor(tmp);\n  }\n  function littleSigma(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(1);\n    tmp.assign(x);\n    tmp.rotateRight(8);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(7);\n    result.xor(tmp);\n  }\n  function littleSigmaPrime(result, x, tmp) {\n    result.assign(x);\n    result.rotateRight(19);\n    tmp.assign(x);\n    tmp.rotateRight(61);\n    result.xor(tmp);\n    tmp.assign(x);\n    tmp.shiftRight(6);\n    result.xor(tmp);\n  }\n  var k = [new Word64(0x428a2f98, 0xd728ae22), new Word64(0x71374491, 0x23ef65cd), new Word64(0xb5c0fbcf, 0xec4d3b2f), new Word64(0xe9b5dba5, 0x8189dbbc), new Word64(0x3956c25b, 0xf348b538), new Word64(0x59f111f1, 0xb605d019), new Word64(0x923f82a4, 0xaf194f9b), new Word64(0xab1c5ed5, 0xda6d8118), new Word64(0xd807aa98, 0xa3030242), new Word64(0x12835b01, 0x45706fbe), new Word64(0x243185be, 0x4ee4b28c), new Word64(0x550c7dc3, 0xd5ffb4e2), new Word64(0x72be5d74, 0xf27b896f), new Word64(0x80deb1fe, 0x3b1696b1), new Word64(0x9bdc06a7, 0x25c71235), new Word64(0xc19bf174, 0xcf692694), new Word64(0xe49b69c1, 0x9ef14ad2), new Word64(0xefbe4786, 0x384f25e3), new Word64(0x0fc19dc6, 0x8b8cd5b5), new Word64(0x240ca1cc, 0x77ac9c65), new Word64(0x2de92c6f, 0x592b0275), new Word64(0x4a7484aa, 0x6ea6e483), new Word64(0x5cb0a9dc, 0xbd41fbd4), new Word64(0x76f988da, 0x831153b5), new Word64(0x983e5152, 0xee66dfab), new Word64(0xa831c66d, 0x2db43210), new Word64(0xb00327c8, 0x98fb213f), new Word64(0xbf597fc7, 0xbeef0ee4), new Word64(0xc6e00bf3, 0x3da88fc2), new Word64(0xd5a79147, 0x930aa725), new Word64(0x06ca6351, 0xe003826f), new Word64(0x14292967, 0x0a0e6e70), new Word64(0x27b70a85, 0x46d22ffc), new Word64(0x2e1b2138, 0x5c26c926), new Word64(0x4d2c6dfc, 0x5ac42aed), new Word64(0x53380d13, 0x9d95b3df), new Word64(0x650a7354, 0x8baf63de), new Word64(0x766a0abb, 0x3c77b2a8), new Word64(0x81c2c92e, 0x47edaee6), new Word64(0x92722c85, 0x1482353b), new Word64(0xa2bfe8a1, 0x4cf10364), new Word64(0xa81a664b, 0xbc423001), new Word64(0xc24b8b70, 0xd0f89791), new Word64(0xc76c51a3, 0x0654be30), new Word64(0xd192e819, 0xd6ef5218), new Word64(0xd6990624, 0x5565a910), new Word64(0xf40e3585, 0x5771202a), new Word64(0x106aa070, 0x32bbd1b8), new Word64(0x19a4c116, 0xb8d2d0c8), new Word64(0x1e376c08, 0x5141ab53), new Word64(0x2748774c, 0xdf8eeb99), new Word64(0x34b0bcb5, 0xe19b48a8), new Word64(0x391c0cb3, 0xc5c95a63), new Word64(0x4ed8aa4a, 0xe3418acb), new Word64(0x5b9cca4f, 0x7763e373), new Word64(0x682e6ff3, 0xd6b2b8a3), new Word64(0x748f82ee, 0x5defb2fc), new Word64(0x78a5636f, 0x43172f60), new Word64(0x84c87814, 0xa1f0ab72), new Word64(0x8cc70208, 0x1a6439ec), new Word64(0x90befffa, 0x23631e28), new Word64(0xa4506ceb, 0xde82bde9), new Word64(0xbef9a3f7, 0xb2c67915), new Word64(0xc67178f2, 0xe372532b), new Word64(0xca273ece, 0xea26619c), new Word64(0xd186b8c7, 0x21c0c207), new Word64(0xeada7dd6, 0xcde0eb1e), new Word64(0xf57d4f7f, 0xee6ed178), new Word64(0x06f067aa, 0x72176fba), new Word64(0x0a637dc5, 0xa2c898a6), new Word64(0x113f9804, 0xbef90dae), new Word64(0x1b710b35, 0x131c471b), new Word64(0x28db77f5, 0x23047d84), new Word64(0x32caab7b, 0x40c72493), new Word64(0x3c9ebe0a, 0x15c9bebc), new Word64(0x431d67c4, 0x9c100d4c), new Word64(0x4cc5d4be, 0xcb3e42b6), new Word64(0x597f299c, 0xfc657e2a), new Word64(0x5fcb6fab, 0x3ad6faec), new Word64(0x6c44198c, 0x4a475817)];\n  function hash(data, offset, length, mode384) {\n    mode384 = !!mode384;\n    var h0, h1, h2, h3, h4, h5, h6, h7;\n    if (!mode384) {\n      h0 = new Word64(0x6a09e667, 0xf3bcc908);\n      h1 = new Word64(0xbb67ae85, 0x84caa73b);\n      h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n      h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n      h4 = new Word64(0x510e527f, 0xade682d1);\n      h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n      h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n      h7 = new Word64(0x5be0cd19, 0x137e2179);\n    } else {\n      h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n      h1 = new Word64(0x629a292a, 0x367cd507);\n      h2 = new Word64(0x9159015a, 0x3070dd17);\n      h3 = new Word64(0x152fecd8, 0xf70e5939);\n      h4 = new Word64(0x67332667, 0xffc00b31);\n      h5 = new Word64(0x8eb44a87, 0x68581511);\n      h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n      h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n    }\n    var paddedLength = Math.ceil((length + 17) / 128) * 128;\n    var padded = new Uint8Array(paddedLength);\n    var i, j, n;\n    for (i = 0; i < length; ++i) {\n      padded[i] = data[offset++];\n    }\n    padded[i++] = 0x80;\n    n = paddedLength - 16;\n    while (i < n) {\n      padded[i++] = 0;\n    }\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = 0;\n    padded[i++] = length >>> 29 & 0xFF;\n    padded[i++] = length >> 21 & 0xFF;\n    padded[i++] = length >> 13 & 0xFF;\n    padded[i++] = length >> 5 & 0xFF;\n    padded[i++] = length << 3 & 0xFF;\n    var w = new Array(80);\n    for (i = 0; i < 80; i++) {\n      w[i] = new Word64(0, 0);\n    }\n    var a = new Word64(0, 0),\n        b = new Word64(0, 0),\n        c = new Word64(0, 0);\n    var d = new Word64(0, 0),\n        e = new Word64(0, 0),\n        f = new Word64(0, 0);\n    var g = new Word64(0, 0),\n        h = new Word64(0, 0);\n    var t1 = new Word64(0, 0),\n        t2 = new Word64(0, 0);\n    var tmp1 = new Word64(0, 0),\n        tmp2 = new Word64(0, 0),\n        tmp3;\n    for (i = 0; i < paddedLength;) {\n      for (j = 0; j < 16; ++j) {\n        w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n        w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n        i += 8;\n      }\n      for (j = 16; j < 80; ++j) {\n        tmp3 = w[j];\n        littleSigmaPrime(tmp3, w[j - 2], tmp2);\n        tmp3.add(w[j - 7]);\n        littleSigma(tmp1, w[j - 15], tmp2);\n        tmp3.add(tmp1);\n        tmp3.add(w[j - 16]);\n      }\n      a.assign(h0);\n      b.assign(h1);\n      c.assign(h2);\n      d.assign(h3);\n      e.assign(h4);\n      f.assign(h5);\n      g.assign(h6);\n      h.assign(h7);\n      for (j = 0; j < 80; ++j) {\n        t1.assign(h);\n        sigmaPrime(tmp1, e, tmp2);\n        t1.add(tmp1);\n        ch(tmp1, e, f, g, tmp2);\n        t1.add(tmp1);\n        t1.add(k[j]);\n        t1.add(w[j]);\n        sigma(t2, a, tmp2);\n        maj(tmp1, a, b, c, tmp2);\n        t2.add(tmp1);\n        tmp3 = h;\n        h = g;\n        g = f;\n        f = e;\n        d.add(t1);\n        e = d;\n        d = c;\n        c = b;\n        b = a;\n        tmp3.assign(t1);\n        tmp3.add(t2);\n        a = tmp3;\n      }\n      h0.add(a);\n      h1.add(b);\n      h2.add(c);\n      h3.add(d);\n      h4.add(e);\n      h5.add(f);\n      h6.add(g);\n      h7.add(h);\n    }\n    var result;\n    if (!mode384) {\n      result = new Uint8Array(64);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n      h6.copyTo(result, 48);\n      h7.copyTo(result, 56);\n    } else {\n      result = new Uint8Array(48);\n      h0.copyTo(result, 0);\n      h1.copyTo(result, 8);\n      h2.copyTo(result, 16);\n      h3.copyTo(result, 24);\n      h4.copyTo(result, 32);\n      h5.copyTo(result, 40);\n    }\n    return result;\n  }\n  return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n  function hash(data, offset, length) {\n    return calculateSHA512(data, offset, length, true);\n  }\n  return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n  function NullCipher() {}\n  NullCipher.prototype = {\n    decryptBlock: function NullCipher_decryptBlock(data) {\n      return data;\n    }\n  };\n  return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n  var rcon = new Uint8Array([0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36, 0x6c, 0xd8, 0xab, 0x4d, 0x9a, 0x2f, 0x5e, 0xbc, 0x63, 0xc6, 0x97, 0x35, 0x6a, 0xd4, 0xb3, 0x7d, 0xfa, 0xef, 0xc5, 0x91, 0x39, 0x72, 0xe4, 0xd3, 0xbd, 0x61, 0xc2, 0x9f, 0x25, 0x4a, 0x94, 0x33, 0x66, 0xcc, 0x83, 0x1d, 0x3a, 0x74, 0xe8, 0xcb, 0x8d]);\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey128(cipherKey) {\n    var b = 176,\n        result = new Uint8Array(b);\n    result.set(cipherKey);\n    for (var j = 16, i = 1; j < b; ++i) {\n      var t1 = result[j - 3],\n          t2 = result[j - 2],\n          t3 = result[j - 1],\n          t4 = result[j - 4];\n      t1 = s[t1];\n      t2 = s[t2];\n      t3 = s[t3];\n      t4 = s[t4];\n      t1 = t1 ^ rcon[i];\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 16];\n        j++;\n        result[j] = t2 ^= result[j - 16];\n        j++;\n        result[j] = t3 ^= result[j - 16];\n        j++;\n        result[j] = t4 ^= result[j - 16];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt128(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 9; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt128(input, key) {\n    var t, u, v, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 10; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 160; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES128Cipher(key) {\n    this.key = expandKey128(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt128(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES128Cipher.prototype = {\n    decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n        buffer[bufferLength] = data[i];\n      }\n      if (bufferLength < 16) {\n        this.bufferLength = bufferLength;\n        return new Uint8Array([]);\n      }\n      this.iv = buffer;\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data.subarray(16), finalize);\n    },\n    encrypt: function AES128Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt128(buffer, this.key);\n        iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n  var s = new Uint8Array([0x63, 0x7c, 0x77, 0x7b, 0xf2, 0x6b, 0x6f, 0xc5, 0x30, 0x01, 0x67, 0x2b, 0xfe, 0xd7, 0xab, 0x76, 0xca, 0x82, 0xc9, 0x7d, 0xfa, 0x59, 0x47, 0xf0, 0xad, 0xd4, 0xa2, 0xaf, 0x9c, 0xa4, 0x72, 0xc0, 0xb7, 0xfd, 0x93, 0x26, 0x36, 0x3f, 0xf7, 0xcc, 0x34, 0xa5, 0xe5, 0xf1, 0x71, 0xd8, 0x31, 0x15, 0x04, 0xc7, 0x23, 0xc3, 0x18, 0x96, 0x05, 0x9a, 0x07, 0x12, 0x80, 0xe2, 0xeb, 0x27, 0xb2, 0x75, 0x09, 0x83, 0x2c, 0x1a, 0x1b, 0x6e, 0x5a, 0xa0, 0x52, 0x3b, 0xd6, 0xb3, 0x29, 0xe3, 0x2f, 0x84, 0x53, 0xd1, 0x00, 0xed, 0x20, 0xfc, 0xb1, 0x5b, 0x6a, 0xcb, 0xbe, 0x39, 0x4a, 0x4c, 0x58, 0xcf, 0xd0, 0xef, 0xaa, 0xfb, 0x43, 0x4d, 0x33, 0x85, 0x45, 0xf9, 0x02, 0x7f, 0x50, 0x3c, 0x9f, 0xa8, 0x51, 0xa3, 0x40, 0x8f, 0x92, 0x9d, 0x38, 0xf5, 0xbc, 0xb6, 0xda, 0x21, 0x10, 0xff, 0xf3, 0xd2, 0xcd, 0x0c, 0x13, 0xec, 0x5f, 0x97, 0x44, 0x17, 0xc4, 0xa7, 0x7e, 0x3d, 0x64, 0x5d, 0x19, 0x73, 0x60, 0x81, 0x4f, 0xdc, 0x22, 0x2a, 0x90, 0x88, 0x46, 0xee, 0xb8, 0x14, 0xde, 0x5e, 0x0b, 0xdb, 0xe0, 0x32, 0x3a, 0x0a, 0x49, 0x06, 0x24, 0x5c, 0xc2, 0xd3, 0xac, 0x62, 0x91, 0x95, 0xe4, 0x79, 0xe7, 0xc8, 0x37, 0x6d, 0x8d, 0xd5, 0x4e, 0xa9, 0x6c, 0x56, 0xf4, 0xea, 0x65, 0x7a, 0xae, 0x08, 0xba, 0x78, 0x25, 0x2e, 0x1c, 0xa6, 0xb4, 0xc6, 0xe8, 0xdd, 0x74, 0x1f, 0x4b, 0xbd, 0x8b, 0x8a, 0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e, 0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf, 0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16]);\n  var inv_s = new Uint8Array([0x52, 0x09, 0x6a, 0xd5, 0x30, 0x36, 0xa5, 0x38, 0xbf, 0x40, 0xa3, 0x9e, 0x81, 0xf3, 0xd7, 0xfb, 0x7c, 0xe3, 0x39, 0x82, 0x9b, 0x2f, 0xff, 0x87, 0x34, 0x8e, 0x43, 0x44, 0xc4, 0xde, 0xe9, 0xcb, 0x54, 0x7b, 0x94, 0x32, 0xa6, 0xc2, 0x23, 0x3d, 0xee, 0x4c, 0x95, 0x0b, 0x42, 0xfa, 0xc3, 0x4e, 0x08, 0x2e, 0xa1, 0x66, 0x28, 0xd9, 0x24, 0xb2, 0x76, 0x5b, 0xa2, 0x49, 0x6d, 0x8b, 0xd1, 0x25, 0x72, 0xf8, 0xf6, 0x64, 0x86, 0x68, 0x98, 0x16, 0xd4, 0xa4, 0x5c, 0xcc, 0x5d, 0x65, 0xb6, 0x92, 0x6c, 0x70, 0x48, 0x50, 0xfd, 0xed, 0xb9, 0xda, 0x5e, 0x15, 0x46, 0x57, 0xa7, 0x8d, 0x9d, 0x84, 0x90, 0xd8, 0xab, 0x00, 0x8c, 0xbc, 0xd3, 0x0a, 0xf7, 0xe4, 0x58, 0x05, 0xb8, 0xb3, 0x45, 0x06, 0xd0, 0x2c, 0x1e, 0x8f, 0xca, 0x3f, 0x0f, 0x02, 0xc1, 0xaf, 0xbd, 0x03, 0x01, 0x13, 0x8a, 0x6b, 0x3a, 0x91, 0x11, 0x41, 0x4f, 0x67, 0xdc, 0xea, 0x97, 0xf2, 0xcf, 0xce, 0xf0, 0xb4, 0xe6, 0x73, 0x96, 0xac, 0x74, 0x22, 0xe7, 0xad, 0x35, 0x85, 0xe2, 0xf9, 0x37, 0xe8, 0x1c, 0x75, 0xdf, 0x6e, 0x47, 0xf1, 0x1a, 0x71, 0x1d, 0x29, 0xc5, 0x89, 0x6f, 0xb7, 0x62, 0x0e, 0xaa, 0x18, 0xbe, 0x1b, 0xfc, 0x56, 0x3e, 0x4b, 0xc6, 0xd2, 0x79, 0x20, 0x9a, 0xdb, 0xc0, 0xfe, 0x78, 0xcd, 0x5a, 0xf4, 0x1f, 0xdd, 0xa8, 0x33, 0x88, 0x07, 0xc7, 0x31, 0xb1, 0x12, 0x10, 0x59, 0x27, 0x80, 0xec, 0x5f, 0x60, 0x51, 0x7f, 0xa9, 0x19, 0xb5, 0x4a, 0x0d, 0x2d, 0xe5, 0x7a, 0x9f, 0x93, 0xc9, 0x9c, 0xef, 0xa0, 0xe0, 0x3b, 0x4d, 0xae, 0x2a, 0xf5, 0xb0, 0xc8, 0xeb, 0xbb, 0x3c, 0x83, 0x53, 0x99, 0x61, 0x17, 0x2b, 0x04, 0x7e, 0xba, 0x77, 0xd6, 0x26, 0xe1, 0x69, 0x14, 0x63, 0x55, 0x21, 0x0c, 0x7d]);\n  var mixCol = new Uint8Array(256);\n  for (var i = 0; i < 256; i++) {\n    if (i < 128) {\n      mixCol[i] = i << 1;\n    } else {\n      mixCol[i] = i << 1 ^ 0x1b;\n    }\n  }\n  var mix = new Uint32Array([0x00000000, 0x0e090d0b, 0x1c121a16, 0x121b171d, 0x3824342c, 0x362d3927, 0x24362e3a, 0x2a3f2331, 0x70486858, 0x7e416553, 0x6c5a724e, 0x62537f45, 0x486c5c74, 0x4665517f, 0x547e4662, 0x5a774b69, 0xe090d0b0, 0xee99ddbb, 0xfc82caa6, 0xf28bc7ad, 0xd8b4e49c, 0xd6bde997, 0xc4a6fe8a, 0xcaaff381, 0x90d8b8e8, 0x9ed1b5e3, 0x8ccaa2fe, 0x82c3aff5, 0xa8fc8cc4, 0xa6f581cf, 0xb4ee96d2, 0xbae79bd9, 0xdb3bbb7b, 0xd532b670, 0xc729a16d, 0xc920ac66, 0xe31f8f57, 0xed16825c, 0xff0d9541, 0xf104984a, 0xab73d323, 0xa57ade28, 0xb761c935, 0xb968c43e, 0x9357e70f, 0x9d5eea04, 0x8f45fd19, 0x814cf012, 0x3bab6bcb, 0x35a266c0, 0x27b971dd, 0x29b07cd6, 0x038f5fe7, 0x0d8652ec, 0x1f9d45f1, 0x119448fa, 0x4be30393, 0x45ea0e98, 0x57f11985, 0x59f8148e, 0x73c737bf, 0x7dce3ab4, 0x6fd52da9, 0x61dc20a2, 0xad766df6, 0xa37f60fd, 0xb16477e0, 0xbf6d7aeb, 0x955259da, 0x9b5b54d1, 0x894043cc, 0x87494ec7, 0xdd3e05ae, 0xd33708a5, 0xc12c1fb8, 0xcf2512b3, 0xe51a3182, 0xeb133c89, 0xf9082b94, 0xf701269f, 0x4de6bd46, 0x43efb04d, 0x51f4a750, 0x5ffdaa5b, 0x75c2896a, 0x7bcb8461, 0x69d0937c, 0x67d99e77, 0x3daed51e, 0x33a7d815, 0x21bccf08, 0x2fb5c203, 0x058ae132, 0x0b83ec39, 0x1998fb24, 0x1791f62f, 0x764dd68d, 0x7844db86, 0x6a5fcc9b, 0x6456c190, 0x4e69e2a1, 0x4060efaa, 0x527bf8b7, 0x5c72f5bc, 0x0605bed5, 0x080cb3de, 0x1a17a4c3, 0x141ea9c8, 0x3e218af9, 0x302887f2, 0x223390ef, 0x2c3a9de4, 0x96dd063d, 0x98d40b36, 0x8acf1c2b, 0x84c61120, 0xaef93211, 0xa0f03f1a, 0xb2eb2807, 0xbce2250c, 0xe6956e65, 0xe89c636e, 0xfa877473, 0xf48e7978, 0xdeb15a49, 0xd0b85742, 0xc2a3405f, 0xccaa4d54, 0x41ecdaf7, 0x4fe5d7fc, 0x5dfec0e1, 0x53f7cdea, 0x79c8eedb, 0x77c1e3d0, 0x65daf4cd, 0x6bd3f9c6, 0x31a4b2af, 0x3fadbfa4, 0x2db6a8b9, 0x23bfa5b2, 0x09808683, 0x07898b88, 0x15929c95, 0x1b9b919e, 0xa17c0a47, 0xaf75074c, 0xbd6e1051, 0xb3671d5a, 0x99583e6b, 0x97513360, 0x854a247d, 0x8b432976, 0xd134621f, 0xdf3d6f14, 0xcd267809, 0xc32f7502, 0xe9105633, 0xe7195b38, 0xf5024c25, 0xfb0b412e, 0x9ad7618c, 0x94de6c87, 0x86c57b9a, 0x88cc7691, 0xa2f355a0, 0xacfa58ab, 0xbee14fb6, 0xb0e842bd, 0xea9f09d4, 0xe49604df, 0xf68d13c2, 0xf8841ec9, 0xd2bb3df8, 0xdcb230f3, 0xcea927ee, 0xc0a02ae5, 0x7a47b13c, 0x744ebc37, 0x6655ab2a, 0x685ca621, 0x42638510, 0x4c6a881b, 0x5e719f06, 0x5078920d, 0x0a0fd964, 0x0406d46f, 0x161dc372, 0x1814ce79, 0x322bed48, 0x3c22e043, 0x2e39f75e, 0x2030fa55, 0xec9ab701, 0xe293ba0a, 0xf088ad17, 0xfe81a01c, 0xd4be832d, 0xdab78e26, 0xc8ac993b, 0xc6a59430, 0x9cd2df59, 0x92dbd252, 0x80c0c54f, 0x8ec9c844, 0xa4f6eb75, 0xaaffe67e, 0xb8e4f163, 0xb6edfc68, 0x0c0a67b1, 0x02036aba, 0x10187da7, 0x1e1170ac, 0x342e539d, 0x3a275e96, 0x283c498b, 0x26354480, 0x7c420fe9, 0x724b02e2, 0x605015ff, 0x6e5918f4, 0x44663bc5, 0x4a6f36ce, 0x587421d3, 0x567d2cd8, 0x37a10c7a, 0x39a80171, 0x2bb3166c, 0x25ba1b67, 0x0f853856, 0x018c355d, 0x13972240, 0x1d9e2f4b, 0x47e96422, 0x49e06929, 0x5bfb7e34, 0x55f2733f, 0x7fcd500e, 0x71c45d05, 0x63df4a18, 0x6dd64713, 0xd731dcca, 0xd938d1c1, 0xcb23c6dc, 0xc52acbd7, 0xef15e8e6, 0xe11ce5ed, 0xf307f2f0, 0xfd0efffb, 0xa779b492, 0xa970b999, 0xbb6bae84, 0xb562a38f, 0x9f5d80be, 0x91548db5, 0x834f9aa8, 0x8d4697a3]);\n  function expandKey256(cipherKey) {\n    var b = 240,\n        result = new Uint8Array(b);\n    var r = 1;\n    result.set(cipherKey);\n    for (var j = 32, i = 1; j < b; ++i) {\n      var t1, t2, t3, t4;\n      if (j % 32 === 16) {\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n      } else if (j % 32 === 0) {\n        t1 = result[j - 3];\n        t2 = result[j - 2];\n        t3 = result[j - 1];\n        t4 = result[j - 4];\n        t1 = s[t1];\n        t2 = s[t2];\n        t3 = s[t3];\n        t4 = s[t4];\n        t1 = t1 ^ r;\n        if ((r <<= 1) >= 256) {\n          r = (r ^ 0x1b) & 0xFF;\n        }\n      }\n      for (var n = 0; n < 4; ++n) {\n        result[j] = t1 ^= result[j - 32];\n        j++;\n        result[j] = t2 ^= result[j - 32];\n        j++;\n        result[j] = t3 ^= result[j - 32];\n        j++;\n        result[j] = t4 ^= result[j - 32];\n        j++;\n      }\n    }\n    return result;\n  }\n  function decrypt256(input, key) {\n    var state = new Uint8Array(16);\n    state.set(input);\n    var i, j, k;\n    var t, u, v;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    for (i = 13; i >= 1; --i) {\n      t = state[13];\n      state[13] = state[9];\n      state[9] = state[5];\n      state[5] = state[1];\n      state[1] = t;\n      t = state[14];\n      u = state[10];\n      state[14] = state[6];\n      state[10] = state[2];\n      state[6] = t;\n      state[2] = u;\n      t = state[15];\n      u = state[11];\n      v = state[7];\n      state[15] = state[3];\n      state[11] = t;\n      state[7] = u;\n      state[3] = v;\n      for (j = 0; j < 16; ++j) {\n        state[j] = inv_s[state[j]];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n      for (j = 0; j < 16; j += 4) {\n        var s0 = mix[state[j]],\n            s1 = mix[state[j + 1]],\n            s2 = mix[state[j + 2]],\n            s3 = mix[state[j + 3]];\n        t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n        state[j] = t >>> 24 & 0xFF;\n        state[j + 1] = t >> 16 & 0xFF;\n        state[j + 2] = t >> 8 & 0xFF;\n        state[j + 3] = t & 0xFF;\n      }\n    }\n    t = state[13];\n    state[13] = state[9];\n    state[9] = state[5];\n    state[5] = state[1];\n    state[1] = t;\n    t = state[14];\n    u = state[10];\n    state[14] = state[6];\n    state[10] = state[2];\n    state[6] = t;\n    state[2] = u;\n    t = state[15];\n    u = state[11];\n    v = state[7];\n    state[15] = state[3];\n    state[11] = t;\n    state[7] = u;\n    state[3] = v;\n    for (j = 0; j < 16; ++j) {\n      state[j] = inv_s[state[j]];\n      state[j] ^= key[j];\n    }\n    return state;\n  }\n  function encrypt256(input, key) {\n    var t, u, v, i, j, k;\n    var state = new Uint8Array(16);\n    state.set(input);\n    for (j = 0; j < 16; ++j) {\n      state[j] ^= key[j];\n    }\n    for (i = 1; i < 14; i++) {\n      for (j = 0; j < 16; ++j) {\n        state[j] = s[state[j]];\n      }\n      v = state[1];\n      state[1] = state[5];\n      state[5] = state[9];\n      state[9] = state[13];\n      state[13] = v;\n      v = state[2];\n      u = state[6];\n      state[2] = state[10];\n      state[6] = state[14];\n      state[10] = v;\n      state[14] = u;\n      v = state[3];\n      u = state[7];\n      t = state[11];\n      state[3] = state[15];\n      state[7] = v;\n      state[11] = u;\n      state[15] = t;\n      for (j = 0; j < 16; j += 4) {\n        var s0 = state[j + 0],\n            s1 = state[j + 1];\n        var s2 = state[j + 2],\n            s3 = state[j + 3];\n        t = s0 ^ s1 ^ s2 ^ s3;\n        state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n        state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n        state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n        state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n      }\n      for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n        state[j] ^= key[k];\n      }\n    }\n    for (j = 0; j < 16; ++j) {\n      state[j] = s[state[j]];\n    }\n    v = state[1];\n    state[1] = state[5];\n    state[5] = state[9];\n    state[9] = state[13];\n    state[13] = v;\n    v = state[2];\n    u = state[6];\n    state[2] = state[10];\n    state[6] = state[14];\n    state[10] = v;\n    state[14] = u;\n    v = state[3];\n    u = state[7];\n    t = state[11];\n    state[3] = state[15];\n    state[7] = v;\n    state[11] = u;\n    state[15] = t;\n    for (j = 0, k = 224; j < 16; ++j, ++k) {\n      state[j] ^= key[k];\n    }\n    return state;\n  }\n  function AES256Cipher(key) {\n    this.key = expandKey256(key);\n    this.buffer = new Uint8Array(16);\n    this.bufferPosition = 0;\n  }\n  function decryptBlock2(data, finalize) {\n    var i,\n        j,\n        ii,\n        sourceLength = data.length,\n        buffer = this.buffer,\n        bufferLength = this.bufferPosition,\n        result = [],\n        iv = this.iv;\n    for (i = 0; i < sourceLength; ++i) {\n      buffer[bufferLength] = data[i];\n      ++bufferLength;\n      if (bufferLength < 16) {\n        continue;\n      }\n      var plain = decrypt256(buffer, this.key);\n      for (j = 0; j < 16; ++j) {\n        plain[j] ^= iv[j];\n      }\n      iv = buffer;\n      result.push(plain);\n      buffer = new Uint8Array(16);\n      bufferLength = 0;\n    }\n    this.buffer = buffer;\n    this.bufferLength = bufferLength;\n    this.iv = iv;\n    if (result.length === 0) {\n      return new Uint8Array([]);\n    }\n    var outputLength = 16 * result.length;\n    if (finalize) {\n      var lastBlock = result[result.length - 1];\n      var psLen = lastBlock[15];\n      if (psLen <= 16) {\n        for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n          if (lastBlock[i] !== psLen) {\n            psLen = 0;\n            break;\n          }\n        }\n        outputLength -= psLen;\n        result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n      }\n    }\n    var output = new Uint8Array(outputLength);\n    for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n      output.set(result[i], j);\n    }\n    return output;\n  }\n  AES256Cipher.prototype = {\n    decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n      var i,\n          sourceLength = data.length;\n      var buffer = this.buffer,\n          bufferLength = this.bufferPosition;\n      if (iv) {\n        this.iv = iv;\n      } else {\n        for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n          buffer[bufferLength] = data[i];\n        }\n        if (bufferLength < 16) {\n          this.bufferLength = bufferLength;\n          return new Uint8Array([]);\n        }\n        this.iv = buffer;\n        data = data.subarray(16);\n      }\n      this.buffer = new Uint8Array(16);\n      this.bufferLength = 0;\n      this.decryptBlock = decryptBlock2;\n      return this.decryptBlock(data, finalize);\n    },\n    encrypt: function AES256Cipher_encrypt(data, iv) {\n      var i,\n          j,\n          ii,\n          sourceLength = data.length,\n          buffer = this.buffer,\n          bufferLength = this.bufferPosition,\n          result = [];\n      if (!iv) {\n        iv = new Uint8Array(16);\n      }\n      for (i = 0; i < sourceLength; ++i) {\n        buffer[bufferLength] = data[i];\n        ++bufferLength;\n        if (bufferLength < 16) {\n          continue;\n        }\n        for (j = 0; j < 16; ++j) {\n          buffer[j] ^= iv[j];\n        }\n        var cipher = encrypt256(buffer, this.key);\n        this.iv = cipher;\n        result.push(cipher);\n        buffer = new Uint8Array(16);\n        bufferLength = 0;\n      }\n      this.buffer = buffer;\n      this.bufferLength = bufferLength;\n      this.iv = iv;\n      if (result.length === 0) {\n        return new Uint8Array([]);\n      }\n      var outputLength = 16 * result.length;\n      var output = new Uint8Array(outputLength);\n      for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n        output.set(result[i], j);\n      }\n      return output;\n    }\n  };\n  return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  function PDF17() {}\n  PDF17.prototype = {\n    checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculateSHA256(hashData, 0, hashData.length);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculateSHA256(hashData, 0, hashData.length);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n  function concatArrays(array1, array2) {\n    var t = new Uint8Array(array1.length + array2.length);\n    t.set(array1, 0);\n    t.set(array2, array1.length);\n    return t;\n  }\n  function calculatePDF20Hash(password, input, userBytes) {\n    var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n    var e = [0];\n    var i = 0;\n    while (i < 64 || e[e.length - 1] > i - 32) {\n      var arrayLength = password.length + k.length + userBytes.length;\n      var k1 = new Uint8Array(arrayLength * 64);\n      var array = concatArrays(password, k);\n      array = concatArrays(array, userBytes);\n      for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n        k1.set(array, pos);\n      }\n      var cipher = new AES128Cipher(k.subarray(0, 16));\n      e = cipher.encrypt(k1, k.subarray(16, 32));\n      var remainder = 0;\n      for (var z = 0; z < 16; z++) {\n        remainder *= 256 % 3;\n        remainder %= 3;\n        remainder += (e[z] >>> 0) % 3;\n        remainder %= 3;\n      }\n      if (remainder === 0) {\n        k = calculateSHA256(e, 0, e.length);\n      } else if (remainder === 1) {\n        k = calculateSHA384(e, 0, e.length);\n      } else if (remainder === 2) {\n        k = calculateSHA512(e, 0, e.length);\n      }\n      i++;\n    }\n    return k.subarray(0, 32);\n  }\n  function PDF20() {}\n  function compareByteArrays(array1, array2) {\n    if (array1.length !== array2.length) {\n      return false;\n    }\n    for (var i = 0; i < array1.length; i++) {\n      if (array1[i] !== array2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n  PDF20.prototype = {\n    hash: function PDF20_hash(password, concatBytes, userBytes) {\n      return calculatePDF20Hash(password, concatBytes, userBytes);\n    },\n    checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerValidationSalt, password.length);\n      hashData.set(userBytes, password.length + ownerValidationSalt.length);\n      var result = calculatePDF20Hash(password, hashData, userBytes);\n      return compareByteArrays(result, ownerPassword);\n    },\n    checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userValidationSalt, password.length);\n      var result = calculatePDF20Hash(password, hashData, []);\n      return compareByteArrays(result, userPassword);\n    },\n    getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n      var hashData = new Uint8Array(password.length + 56);\n      hashData.set(password, 0);\n      hashData.set(ownerKeySalt, password.length);\n      hashData.set(userBytes, password.length + ownerKeySalt.length);\n      var key = calculatePDF20Hash(password, hashData, userBytes);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n    },\n    getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n      var hashData = new Uint8Array(password.length + 8);\n      hashData.set(password, 0);\n      hashData.set(userKeySalt, password.length);\n      var key = calculatePDF20Hash(password, hashData, []);\n      var cipher = new AES256Cipher(key);\n      return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n    }\n  };\n  return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n  function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n    this.StringCipherConstructor = stringCipherConstructor;\n    this.StreamCipherConstructor = streamCipherConstructor;\n  }\n  CipherTransform.prototype = {\n    createStream: function CipherTransform_createStream(stream, length) {\n      var cipher = new this.StreamCipherConstructor();\n      return new _stream.DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n        return cipher.decryptBlock(data, finalize);\n      });\n    },\n    decryptString: function CipherTransform_decryptString(s) {\n      var cipher = new this.StringCipherConstructor();\n      var data = (0, _util.stringToBytes)(s);\n      data = cipher.decryptBlock(data, true);\n      return (0, _util.bytesToString)(data);\n    }\n  };\n  return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n  var defaultPasswordBytes = new Uint8Array([0x28, 0xBF, 0x4E, 0x5E, 0x4E, 0x75, 0x8A, 0x41, 0x64, 0x00, 0x4E, 0x56, 0xFF, 0xFA, 0x01, 0x08, 0x2E, 0x2E, 0x00, 0xB6, 0xD0, 0x68, 0x3E, 0x80, 0x2F, 0x0C, 0xA9, 0xFE, 0x64, 0x53, 0x69, 0x7A]);\n  function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n    if (password) {\n      var passwordLength = Math.min(127, password.length);\n      password = password.subarray(0, passwordLength);\n    } else {\n      password = [];\n    }\n    var pdfAlgorithm;\n    if (revision === 6) {\n      pdfAlgorithm = new PDF20();\n    } else {\n      pdfAlgorithm = new PDF17();\n    }\n    if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n      return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n    } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n      return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n    }\n    return null;\n  }\n  function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n    var hashDataSize = 40 + ownerPassword.length + fileId.length;\n    var hashData = new Uint8Array(hashDataSize),\n        i = 0,\n        j,\n        n;\n    if (password) {\n      n = Math.min(32, password.length);\n      for (; i < n; ++i) {\n        hashData[i] = password[i];\n      }\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    for (j = 0, n = ownerPassword.length; j < n; ++j) {\n      hashData[i++] = ownerPassword[j];\n    }\n    hashData[i++] = flags & 0xFF;\n    hashData[i++] = flags >> 8 & 0xFF;\n    hashData[i++] = flags >> 16 & 0xFF;\n    hashData[i++] = flags >>> 24 & 0xFF;\n    for (j = 0, n = fileId.length; j < n; ++j) {\n      hashData[i++] = fileId[j];\n    }\n    if (revision >= 4 && !encryptMetadata) {\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n      hashData[i++] = 0xFF;\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, keyLengthInBytes);\n      }\n    }\n    var encryptionKey = hash.subarray(0, keyLengthInBytes);\n    var cipher, checkData;\n    if (revision >= 3) {\n      for (i = 0; i < 32; ++i) {\n        hashData[i] = defaultPasswordBytes[i];\n      }\n      for (j = 0, n = fileId.length; j < n; ++j) {\n        hashData[i++] = fileId[j];\n      }\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n      n = encryptionKey.length;\n      var derivedKey = new Uint8Array(n),\n          k;\n      for (j = 1; j <= 19; ++j) {\n        for (k = 0; k < n; ++k) {\n          derivedKey[k] = encryptionKey[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        checkData = cipher.encryptBlock(checkData);\n      }\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    } else {\n      cipher = new ARCFourCipher(encryptionKey);\n      checkData = cipher.encryptBlock(defaultPasswordBytes);\n      for (j = 0, n = checkData.length; j < n; ++j) {\n        if (userPassword[j] !== checkData[j]) {\n          return null;\n        }\n      }\n    }\n    return encryptionKey;\n  }\n  function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n    var hashData = new Uint8Array(32),\n        i = 0,\n        j,\n        n;\n    n = Math.min(32, password.length);\n    for (; i < n; ++i) {\n      hashData[i] = password[i];\n    }\n    j = 0;\n    while (i < 32) {\n      hashData[i++] = defaultPasswordBytes[j++];\n    }\n    var hash = calculateMD5(hashData, 0, i);\n    var keyLengthInBytes = keyLength >> 3;\n    if (revision >= 3) {\n      for (j = 0; j < 50; ++j) {\n        hash = calculateMD5(hash, 0, hash.length);\n      }\n    }\n    var cipher, userPassword;\n    if (revision >= 3) {\n      userPassword = ownerPassword;\n      var derivedKey = new Uint8Array(keyLengthInBytes),\n          k;\n      for (j = 19; j >= 0; j--) {\n        for (k = 0; k < keyLengthInBytes; ++k) {\n          derivedKey[k] = hash[k] ^ j;\n        }\n        cipher = new ARCFourCipher(derivedKey);\n        userPassword = cipher.encryptBlock(userPassword);\n      }\n    } else {\n      cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n      userPassword = cipher.encryptBlock(ownerPassword);\n    }\n    return userPassword;\n  }\n  var identityName = _primitives.Name.get('Identity');\n  function CipherTransformFactory(dict, fileId, password) {\n    var filter = dict.get('Filter');\n    if (!(0, _primitives.isName)(filter, 'Standard')) {\n      throw new _util.FormatError('unknown encryption method');\n    }\n    this.dict = dict;\n    var algorithm = dict.get('V');\n    if (!Number.isInteger(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n      throw new _util.FormatError('unsupported encryption algorithm');\n    }\n    this.algorithm = algorithm;\n    var keyLength = dict.get('Length');\n    if (!keyLength) {\n      if (algorithm <= 3) {\n        keyLength = 40;\n      } else {\n        var cfDict = dict.get('CF');\n        var streamCryptoName = dict.get('StmF');\n        if ((0, _primitives.isDict)(cfDict) && (0, _primitives.isName)(streamCryptoName)) {\n          cfDict.suppressEncryption = true;\n          var handlerDict = cfDict.get(streamCryptoName.name);\n          keyLength = handlerDict && handlerDict.get('Length') || 128;\n          if (keyLength < 40) {\n            keyLength <<= 3;\n          }\n        }\n      }\n    }\n    if (!Number.isInteger(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n      throw new _util.FormatError('invalid key length');\n    }\n    var ownerPassword = (0, _util.stringToBytes)(dict.get('O')).subarray(0, 32);\n    var userPassword = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 32);\n    var flags = dict.get('P');\n    var revision = dict.get('R');\n    var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n    this.encryptMetadata = encryptMetadata;\n    var fileIdBytes = (0, _util.stringToBytes)(fileId);\n    var passwordBytes;\n    if (password) {\n      if (revision === 6) {\n        try {\n          password = (0, _util.utf8StringToString)(password);\n        } catch (ex) {\n          (0, _util.warn)('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n        }\n      }\n      passwordBytes = (0, _util.stringToBytes)(password);\n    }\n    var encryptionKey;\n    if (algorithm !== 5) {\n      encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    } else {\n      var ownerValidationSalt = (0, _util.stringToBytes)(dict.get('O')).subarray(32, 40);\n      var ownerKeySalt = (0, _util.stringToBytes)(dict.get('O')).subarray(40, 48);\n      var uBytes = (0, _util.stringToBytes)(dict.get('U')).subarray(0, 48);\n      var userValidationSalt = (0, _util.stringToBytes)(dict.get('U')).subarray(32, 40);\n      var userKeySalt = (0, _util.stringToBytes)(dict.get('U')).subarray(40, 48);\n      var ownerEncryption = (0, _util.stringToBytes)(dict.get('OE'));\n      var userEncryption = (0, _util.stringToBytes)(dict.get('UE'));\n      var perms = (0, _util.stringToBytes)(dict.get('Perms'));\n      encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n    }\n    if (!encryptionKey && !password) {\n      throw new _util.PasswordException('No password given', _util.PasswordResponses.NEED_PASSWORD);\n    } else if (!encryptionKey && password) {\n      var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n      encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n    }\n    if (!encryptionKey) {\n      throw new _util.PasswordException('Incorrect Password', _util.PasswordResponses.INCORRECT_PASSWORD);\n    }\n    this.encryptionKey = encryptionKey;\n    if (algorithm >= 4) {\n      var cf = dict.get('CF');\n      if ((0, _primitives.isDict)(cf)) {\n        cf.suppressEncryption = true;\n      }\n      this.cf = cf;\n      this.stmf = dict.get('StmF') || identityName;\n      this.strf = dict.get('StrF') || identityName;\n      this.eff = dict.get('EFF') || this.stmf;\n    }\n  }\n  function buildObjectKey(num, gen, encryptionKey, isAes) {\n    var key = new Uint8Array(encryptionKey.length + 9),\n        i,\n        n;\n    for (i = 0, n = encryptionKey.length; i < n; ++i) {\n      key[i] = encryptionKey[i];\n    }\n    key[i++] = num & 0xFF;\n    key[i++] = num >> 8 & 0xFF;\n    key[i++] = num >> 16 & 0xFF;\n    key[i++] = gen & 0xFF;\n    key[i++] = gen >> 8 & 0xFF;\n    if (isAes) {\n      key[i++] = 0x73;\n      key[i++] = 0x41;\n      key[i++] = 0x6C;\n      key[i++] = 0x54;\n    }\n    var hash = calculateMD5(key, 0, i);\n    return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n  }\n  function buildCipherConstructor(cf, name, num, gen, key) {\n    if (!(0, _primitives.isName)(name)) {\n      throw new _util.FormatError('Invalid crypt filter name.');\n    }\n    var cryptFilter = cf.get(name.name);\n    var cfm;\n    if (cryptFilter !== null && cryptFilter !== undefined) {\n      cfm = cryptFilter.get('CFM');\n    }\n    if (!cfm || cfm.name === 'None') {\n      return function cipherTransformFactoryBuildCipherConstructorNone() {\n        return new NullCipher();\n      };\n    }\n    if (cfm.name === 'V2') {\n      return function cipherTransformFactoryBuildCipherConstructorV2() {\n        return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n      };\n    }\n    if (cfm.name === 'AESV2') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n        return new AES128Cipher(buildObjectKey(num, gen, key, true));\n      };\n    }\n    if (cfm.name === 'AESV3') {\n      return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n        return new AES256Cipher(key);\n      };\n    }\n    throw new _util.FormatError('Unknown crypto method');\n  }\n  CipherTransformFactory.prototype = {\n    createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n      if (this.algorithm === 4 || this.algorithm === 5) {\n        return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n      }\n      var key = buildObjectKey(num, gen, this.encryptionKey, false);\n      var cipherConstructor = function buildCipherCipherConstructor() {\n        return new ARCFourCipher(key);\n      };\n      return new CipherTransform(cipherConstructor, cipherConstructor);\n    }\n  };\n  return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxImage = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar JpxError = function JpxErrorClosure() {\n  function JpxError(msg) {\n    this.message = 'JPX error: ' + msg;\n  }\n  JpxError.prototype = new Error();\n  JpxError.prototype.name = 'JpxError';\n  JpxError.constructor = JpxError;\n  return JpxError;\n}();\nvar JpxImage = function JpxImageClosure() {\n  var SubbandsGainLog2 = {\n    'LL': 0,\n    'LH': 1,\n    'HL': 1,\n    'HH': 2\n  };\n  function JpxImage() {\n    this.failOnCorruptedImage = false;\n  }\n  JpxImage.prototype = {\n    parse: function JpxImage_parse(data) {\n      var head = (0, _util.readUint16)(data, 0);\n      if (head === 0xFF4F) {\n        this.parseCodestream(data, 0, data.length);\n        return;\n      }\n      var position = 0,\n          length = data.length;\n      while (position < length) {\n        var headerSize = 8;\n        var lbox = (0, _util.readUint32)(data, position);\n        var tbox = (0, _util.readUint32)(data, position + 4);\n        position += headerSize;\n        if (lbox === 1) {\n          lbox = (0, _util.readUint32)(data, position) * 4294967296 + (0, _util.readUint32)(data, position + 4);\n          position += 8;\n          headerSize += 8;\n        }\n        if (lbox === 0) {\n          lbox = length - position + headerSize;\n        }\n        if (lbox < headerSize) {\n          throw new JpxError('Invalid box field size');\n        }\n        var dataLength = lbox - headerSize;\n        var jumpDataLength = true;\n        switch (tbox) {\n          case 0x6A703268:\n            jumpDataLength = false;\n            break;\n          case 0x636F6C72:\n            var method = data[position];\n            if (method === 1) {\n              var colorspace = (0, _util.readUint32)(data, position + 3);\n              switch (colorspace) {\n                case 16:\n                case 17:\n                case 18:\n                  break;\n                default:\n                  (0, _util.warn)('Unknown colorspace ' + colorspace);\n                  break;\n              }\n            } else if (method === 2) {\n              (0, _util.info)('ICC profile not supported');\n            }\n            break;\n          case 0x6A703263:\n            this.parseCodestream(data, position, position + dataLength);\n            break;\n          case 0x6A502020:\n            if ((0, _util.readUint32)(data, position) !== 0x0d0a870a) {\n              (0, _util.warn)('Invalid JP2 signature');\n            }\n            break;\n          case 0x6A501A1A:\n          case 0x66747970:\n          case 0x72726571:\n          case 0x72657320:\n          case 0x69686472:\n            break;\n          default:\n            var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n            (0, _util.warn)('Unsupported header type ' + tbox + ' (' + headerType + ')');\n            break;\n        }\n        if (jumpDataLength) {\n          position += dataLength;\n        }\n      }\n    },\n    parseImageProperties: function JpxImage_parseImageProperties(stream) {\n      var newByte = stream.getByte();\n      while (newByte >= 0) {\n        var oldByte = newByte;\n        newByte = stream.getByte();\n        var code = oldByte << 8 | newByte;\n        if (code === 0xFF51) {\n          stream.skip(4);\n          var Xsiz = stream.getInt32() >>> 0;\n          var Ysiz = stream.getInt32() >>> 0;\n          var XOsiz = stream.getInt32() >>> 0;\n          var YOsiz = stream.getInt32() >>> 0;\n          stream.skip(16);\n          var Csiz = stream.getUint16();\n          this.width = Xsiz - XOsiz;\n          this.height = Ysiz - YOsiz;\n          this.componentsCount = Csiz;\n          this.bitsPerComponent = 8;\n          return;\n        }\n      }\n      throw new JpxError('No size marker found in JPX stream');\n    },\n    parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n      var context = {};\n      var doNotRecover = false;\n      try {\n        var position = start;\n        while (position + 1 < end) {\n          var code = (0, _util.readUint16)(data, position);\n          position += 2;\n          var length = 0,\n              j,\n              sqcd,\n              spqcds,\n              spqcdSize,\n              scalarExpounded,\n              tile;\n          switch (code) {\n            case 0xFF4F:\n              context.mainHeader = true;\n              break;\n            case 0xFFD9:\n              break;\n            case 0xFF51:\n              length = (0, _util.readUint16)(data, position);\n              var siz = {};\n              siz.Xsiz = (0, _util.readUint32)(data, position + 4);\n              siz.Ysiz = (0, _util.readUint32)(data, position + 8);\n              siz.XOsiz = (0, _util.readUint32)(data, position + 12);\n              siz.YOsiz = (0, _util.readUint32)(data, position + 16);\n              siz.XTsiz = (0, _util.readUint32)(data, position + 20);\n              siz.YTsiz = (0, _util.readUint32)(data, position + 24);\n              siz.XTOsiz = (0, _util.readUint32)(data, position + 28);\n              siz.YTOsiz = (0, _util.readUint32)(data, position + 32);\n              var componentsCount = (0, _util.readUint16)(data, position + 36);\n              siz.Csiz = componentsCount;\n              var components = [];\n              j = position + 38;\n              for (var i = 0; i < componentsCount; i++) {\n                var component = {\n                  precision: (data[j] & 0x7F) + 1,\n                  isSigned: !!(data[j] & 0x80),\n                  XRsiz: data[j + 1],\n                  YRsiz: data[j + 2]\n                };\n                j += 3;\n                calculateComponentDimensions(component, siz);\n                components.push(component);\n              }\n              context.SIZ = siz;\n              context.components = components;\n              calculateTileGrids(context, components);\n              context.QCC = [];\n              context.COC = [];\n              break;\n            case 0xFF5C:\n              length = (0, _util.readUint16)(data, position);\n              var qcd = {};\n              j = position + 2;\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcd.noQuantization = spqcdSize === 8;\n              qcd.scalarExpounded = scalarExpounded;\n              qcd.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                var spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcd.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCD = qcd;\n              } else {\n                context.currentTile.QCD = qcd;\n                context.currentTile.QCC = [];\n              }\n              break;\n            case 0xFF5D:\n              length = (0, _util.readUint16)(data, position);\n              var qcc = {};\n              j = position + 2;\n              var cqcc;\n              if (context.SIZ.Csiz < 257) {\n                cqcc = data[j++];\n              } else {\n                cqcc = (0, _util.readUint16)(data, j);\n                j += 2;\n              }\n              sqcd = data[j++];\n              switch (sqcd & 0x1F) {\n                case 0:\n                  spqcdSize = 8;\n                  scalarExpounded = true;\n                  break;\n                case 1:\n                  spqcdSize = 16;\n                  scalarExpounded = false;\n                  break;\n                case 2:\n                  spqcdSize = 16;\n                  scalarExpounded = true;\n                  break;\n                default:\n                  throw new Error('Invalid SQcd value ' + sqcd);\n              }\n              qcc.noQuantization = spqcdSize === 8;\n              qcc.scalarExpounded = scalarExpounded;\n              qcc.guardBits = sqcd >> 5;\n              spqcds = [];\n              while (j < length + position) {\n                spqcd = {};\n                if (spqcdSize === 8) {\n                  spqcd.epsilon = data[j++] >> 3;\n                  spqcd.mu = 0;\n                } else {\n                  spqcd.epsilon = data[j] >> 3;\n                  spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n                  j += 2;\n                }\n                spqcds.push(spqcd);\n              }\n              qcc.SPqcds = spqcds;\n              if (context.mainHeader) {\n                context.QCC[cqcc] = qcc;\n              } else {\n                context.currentTile.QCC[cqcc] = qcc;\n              }\n              break;\n            case 0xFF52:\n              length = (0, _util.readUint16)(data, position);\n              var cod = {};\n              j = position + 2;\n              var scod = data[j++];\n              cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n              cod.sopMarkerUsed = !!(scod & 2);\n              cod.ephMarkerUsed = !!(scod & 4);\n              cod.progressionOrder = data[j++];\n              cod.layersCount = (0, _util.readUint16)(data, j);\n              j += 2;\n              cod.multipleComponentTransform = data[j++];\n              cod.decompositionLevelsCount = data[j++];\n              cod.xcb = (data[j++] & 0xF) + 2;\n              cod.ycb = (data[j++] & 0xF) + 2;\n              var blockStyle = data[j++];\n              cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n              cod.resetContextProbabilities = !!(blockStyle & 2);\n              cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n              cod.verticalyStripe = !!(blockStyle & 8);\n              cod.predictableTermination = !!(blockStyle & 16);\n              cod.segmentationSymbolUsed = !!(blockStyle & 32);\n              cod.reversibleTransformation = data[j++];\n              if (cod.entropyCoderWithCustomPrecincts) {\n                var precinctsSizes = [];\n                while (j < length + position) {\n                  var precinctsSize = data[j++];\n                  precinctsSizes.push({\n                    PPx: precinctsSize & 0xF,\n                    PPy: precinctsSize >> 4\n                  });\n                }\n                cod.precinctsSizes = precinctsSizes;\n              }\n              var unsupported = [];\n              if (cod.selectiveArithmeticCodingBypass) {\n                unsupported.push('selectiveArithmeticCodingBypass');\n              }\n              if (cod.resetContextProbabilities) {\n                unsupported.push('resetContextProbabilities');\n              }\n              if (cod.terminationOnEachCodingPass) {\n                unsupported.push('terminationOnEachCodingPass');\n              }\n              if (cod.verticalyStripe) {\n                unsupported.push('verticalyStripe');\n              }\n              if (cod.predictableTermination) {\n                unsupported.push('predictableTermination');\n              }\n              if (unsupported.length > 0) {\n                doNotRecover = true;\n                throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n              }\n              if (context.mainHeader) {\n                context.COD = cod;\n              } else {\n                context.currentTile.COD = cod;\n                context.currentTile.COC = [];\n              }\n              break;\n            case 0xFF90:\n              length = (0, _util.readUint16)(data, position);\n              tile = {};\n              tile.index = (0, _util.readUint16)(data, position + 2);\n              tile.length = (0, _util.readUint32)(data, position + 4);\n              tile.dataEnd = tile.length + position - 2;\n              tile.partIndex = data[position + 8];\n              tile.partsCount = data[position + 9];\n              context.mainHeader = false;\n              if (tile.partIndex === 0) {\n                tile.COD = context.COD;\n                tile.COC = context.COC.slice(0);\n                tile.QCD = context.QCD;\n                tile.QCC = context.QCC.slice(0);\n              }\n              context.currentTile = tile;\n              break;\n            case 0xFF93:\n              tile = context.currentTile;\n              if (tile.partIndex === 0) {\n                initializeTile(context, tile.index);\n                buildPackets(context);\n              }\n              length = tile.dataEnd - position;\n              parseTilePackets(context, data, position, length);\n              break;\n            case 0xFF55:\n            case 0xFF57:\n            case 0xFF58:\n            case 0xFF64:\n              length = (0, _util.readUint16)(data, position);\n              break;\n            case 0xFF53:\n              throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n            default:\n              throw new Error('Unknown codestream code: ' + code.toString(16));\n          }\n          position += length;\n        }\n      } catch (e) {\n        if (doNotRecover || this.failOnCorruptedImage) {\n          throw new JpxError(e.message);\n        } else {\n          (0, _util.warn)('JPX: Trying to recover from: ' + e.message);\n        }\n      }\n      this.tiles = transformComponents(context);\n      this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n      this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n      this.componentsCount = context.SIZ.Csiz;\n    }\n  };\n  function calculateComponentDimensions(component, siz) {\n    component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n    component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n    component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n    component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n    component.width = component.x1 - component.x0;\n    component.height = component.y1 - component.y0;\n  }\n  function calculateTileGrids(context, components) {\n    var siz = context.SIZ;\n    var tile,\n        tiles = [];\n    var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n    var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n    for (var q = 0; q < numYtiles; q++) {\n      for (var p = 0; p < numXtiles; p++) {\n        tile = {};\n        tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n        tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n        tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n        tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n        tile.width = tile.tx1 - tile.tx0;\n        tile.height = tile.ty1 - tile.ty0;\n        tile.components = [];\n        tiles.push(tile);\n      }\n    }\n    context.tiles = tiles;\n    var componentsCount = siz.Csiz;\n    for (var i = 0, ii = componentsCount; i < ii; i++) {\n      var component = components[i];\n      for (var j = 0, jj = tiles.length; j < jj; j++) {\n        var tileComponent = {};\n        tile = tiles[j];\n        tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n        tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n        tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n        tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n        tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n        tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n        tile.components[i] = tileComponent;\n      }\n    }\n  }\n  function getBlocksDimensions(context, component, r) {\n    var codOrCoc = component.codingStyleParameters;\n    var result = {};\n    if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n      result.PPx = 15;\n      result.PPy = 15;\n    } else {\n      result.PPx = codOrCoc.precinctsSizes[r].PPx;\n      result.PPy = codOrCoc.precinctsSizes[r].PPy;\n    }\n    result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n    result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n    return result;\n  }\n  function buildPrecincts(context, resolution, dimensions) {\n    var precinctWidth = 1 << dimensions.PPx;\n    var precinctHeight = 1 << dimensions.PPy;\n    var isZeroRes = resolution.resLevel === 0;\n    var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n    var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n    var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n    var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n    var numprecincts = numprecinctswide * numprecinctshigh;\n    resolution.precinctParameters = {\n      precinctWidth: precinctWidth,\n      precinctHeight: precinctHeight,\n      numprecinctswide: numprecinctswide,\n      numprecinctshigh: numprecinctshigh,\n      numprecincts: numprecincts,\n      precinctWidthInSubband: precinctWidthInSubband,\n      precinctHeightInSubband: precinctHeightInSubband\n    };\n  }\n  function buildCodeblocks(context, subband, dimensions) {\n    var xcb_ = dimensions.xcb_;\n    var ycb_ = dimensions.ycb_;\n    var codeblockWidth = 1 << xcb_;\n    var codeblockHeight = 1 << ycb_;\n    var cbx0 = subband.tbx0 >> xcb_;\n    var cby0 = subband.tby0 >> ycb_;\n    var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n    var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n    var precinctParameters = subband.resolution.precinctParameters;\n    var codeblocks = [];\n    var precincts = [];\n    var i, j, codeblock, precinctNumber;\n    for (j = cby0; j < cby1; j++) {\n      for (i = cbx0; i < cbx1; i++) {\n        codeblock = {\n          cbx: i,\n          cby: j,\n          tbx0: codeblockWidth * i,\n          tby0: codeblockHeight * j,\n          tbx1: codeblockWidth * (i + 1),\n          tby1: codeblockHeight * (j + 1)\n        };\n        codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n        codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n        codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n        codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n        var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n        var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n        precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n        codeblock.precinctNumber = precinctNumber;\n        codeblock.subbandType = subband.type;\n        codeblock.Lblock = 3;\n        if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n          continue;\n        }\n        codeblocks.push(codeblock);\n        var precinct = precincts[precinctNumber];\n        if (precinct !== undefined) {\n          if (i < precinct.cbxMin) {\n            precinct.cbxMin = i;\n          } else if (i > precinct.cbxMax) {\n            precinct.cbxMax = i;\n          }\n          if (j < precinct.cbyMin) {\n            precinct.cbxMin = j;\n          } else if (j > precinct.cbyMax) {\n            precinct.cbyMax = j;\n          }\n        } else {\n          precincts[precinctNumber] = precinct = {\n            cbxMin: i,\n            cbyMin: j,\n            cbxMax: i,\n            cbyMax: j\n          };\n        }\n        codeblock.precinct = precinct;\n      }\n    }\n    subband.codeblockParameters = {\n      codeblockWidth: xcb_,\n      codeblockHeight: ycb_,\n      numcodeblockwide: cbx1 - cbx0 + 1,\n      numcodeblockhigh: cby1 - cby0 + 1\n    };\n    subband.codeblocks = codeblocks;\n    subband.precincts = precincts;\n  }\n  function createPacket(resolution, precinctNumber, layerNumber) {\n    var precinctCodeblocks = [];\n    var subbands = resolution.subbands;\n    for (var i = 0, ii = subbands.length; i < ii; i++) {\n      var subband = subbands[i];\n      var codeblocks = subband.codeblocks;\n      for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n        var codeblock = codeblocks[j];\n        if (codeblock.precinctNumber !== precinctNumber) {\n          continue;\n        }\n        precinctCodeblocks.push(codeblock);\n      }\n    }\n    return {\n      layerNumber: layerNumber,\n      codeblocks: precinctCodeblocks\n    };\n  }\n  function LayerResolutionComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var l = 0,\n        r = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; l < layersCount; l++) {\n        for (; r <= maxDecompositionLevelsCount; r++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        r = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionLayerComponentPositionIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var maxDecompositionLevelsCount = 0;\n    for (var q = 0; q < componentsCount; q++) {\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n    }\n    var r = 0,\n        l = 0,\n        i = 0,\n        k = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; l < layersCount; l++) {\n          for (; i < componentsCount; i++) {\n            var component = tile.components[i];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            for (; k < numprecincts;) {\n              var packet = createPacket(resolution, k, l);\n              k++;\n              return packet;\n            }\n            k = 0;\n          }\n          i = 0;\n        }\n        l = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ResolutionPositionComponentLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var l, r, c, p;\n    var maxDecompositionLevelsCount = 0;\n    for (c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n    }\n    var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n    for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n      var maxNumPrecincts = 0;\n      for (c = 0; c < componentsCount; ++c) {\n        var resolutions = tile.components[c].resolutions;\n        if (r < resolutions.length) {\n          maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n        }\n      }\n      maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n    }\n    l = 0;\n    r = 0;\n    c = 0;\n    p = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; r <= maxDecompositionLevelsCount; r++) {\n        for (; p < maxNumPrecinctsInLevel[r]; p++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            if (r > component.codingStyleParameters.decompositionLevelsCount) {\n              continue;\n            }\n            var resolution = component.resolutions[r];\n            var numprecincts = resolution.precinctParameters.numprecincts;\n            if (p >= numprecincts) {\n              continue;\n            }\n            for (; l < layersCount;) {\n              var packet = createPacket(resolution, p, l);\n              l++;\n              return packet;\n            }\n            l = 0;\n          }\n          c = 0;\n        }\n        p = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function PositionComponentResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var precinctsIterationSizes = precinctsSizes;\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n        for (; px < precinctsIterationSizes.maxNumWide; px++) {\n          for (; c < componentsCount; c++) {\n            var component = tile.components[c];\n            var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          c = 0;\n        }\n        px = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function ComponentPositionResolutionLayerIterator(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var layersCount = tile.codingStyleDefaultParameters.layersCount;\n    var componentsCount = siz.Csiz;\n    var precinctsSizes = getPrecinctSizesInImageScale(tile);\n    var l = 0,\n        r = 0,\n        c = 0,\n        px = 0,\n        py = 0;\n    this.nextPacket = function JpxImage_nextPacket() {\n      for (; c < componentsCount; ++c) {\n        var component = tile.components[c];\n        var precinctsIterationSizes = precinctsSizes.components[c];\n        var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n        for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n          for (; px < precinctsIterationSizes.maxNumWide; px++) {\n            for (; r <= decompositionLevelsCount; r++) {\n              var resolution = component.resolutions[r];\n              var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n              var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n              if (k === null) {\n                continue;\n              }\n              for (; l < layersCount;) {\n                var packet = createPacket(resolution, k, l);\n                l++;\n                return packet;\n              }\n              l = 0;\n            }\n            r = 0;\n          }\n          px = 0;\n        }\n        py = 0;\n      }\n      throw new JpxError('Out of packets');\n    };\n  }\n  function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n    var posX = pxIndex * precinctIterationSizes.minWidth;\n    var posY = pyIndex * precinctIterationSizes.minHeight;\n    if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n      return null;\n    }\n    var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n    return posX / sizeInImageScale.height + startPrecinctRowIndex;\n  }\n  function getPrecinctSizesInImageScale(tile) {\n    var componentsCount = tile.components.length;\n    var minWidth = Number.MAX_VALUE;\n    var minHeight = Number.MAX_VALUE;\n    var maxNumWide = 0;\n    var maxNumHigh = 0;\n    var sizePerComponent = new Array(componentsCount);\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var sizePerResolution = new Array(decompositionLevelsCount + 1);\n      var minWidthCurrentComponent = Number.MAX_VALUE;\n      var minHeightCurrentComponent = Number.MAX_VALUE;\n      var maxNumWideCurrentComponent = 0;\n      var maxNumHighCurrentComponent = 0;\n      var scale = 1;\n      for (var r = decompositionLevelsCount; r >= 0; --r) {\n        var resolution = component.resolutions[r];\n        var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n        var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n        minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n        minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n        maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n        maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n        sizePerResolution[r] = {\n          width: widthCurrentResolution,\n          height: heightCurrentResolution\n        };\n        scale <<= 1;\n      }\n      minWidth = Math.min(minWidth, minWidthCurrentComponent);\n      minHeight = Math.min(minHeight, minHeightCurrentComponent);\n      maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n      maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n      sizePerComponent[c] = {\n        resolutions: sizePerResolution,\n        minWidth: minWidthCurrentComponent,\n        minHeight: minHeightCurrentComponent,\n        maxNumWide: maxNumWideCurrentComponent,\n        maxNumHigh: maxNumHighCurrentComponent\n      };\n    }\n    return {\n      components: sizePerComponent,\n      minWidth: minWidth,\n      minHeight: minHeight,\n      maxNumWide: maxNumWide,\n      maxNumHigh: maxNumHigh\n    };\n  }\n  function buildPackets(context) {\n    var siz = context.SIZ;\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var componentsCount = siz.Csiz;\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      var resolutions = [];\n      var subbands = [];\n      for (var r = 0; r <= decompositionLevelsCount; r++) {\n        var blocksDimensions = getBlocksDimensions(context, component, r);\n        var resolution = {};\n        var scale = 1 << decompositionLevelsCount - r;\n        resolution.trx0 = Math.ceil(component.tcx0 / scale);\n        resolution.try0 = Math.ceil(component.tcy0 / scale);\n        resolution.trx1 = Math.ceil(component.tcx1 / scale);\n        resolution.try1 = Math.ceil(component.tcy1 / scale);\n        resolution.resLevel = r;\n        buildPrecincts(context, resolution, blocksDimensions);\n        resolutions.push(resolution);\n        var subband;\n        if (r === 0) {\n          subband = {};\n          subband.type = 'LL';\n          subband.tbx0 = Math.ceil(component.tcx0 / scale);\n          subband.tby0 = Math.ceil(component.tcy0 / scale);\n          subband.tbx1 = Math.ceil(component.tcx1 / scale);\n          subband.tby1 = Math.ceil(component.tcy1 / scale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolution.subbands = [subband];\n        } else {\n          var bscale = 1 << decompositionLevelsCount - r + 1;\n          var resolutionSubbands = [];\n          subband = {};\n          subband.type = 'HL';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'LH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          subband = {};\n          subband.type = 'HH';\n          subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n          subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n          subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n          subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n          subband.resolution = resolution;\n          buildCodeblocks(context, subband, blocksDimensions);\n          subbands.push(subband);\n          resolutionSubbands.push(subband);\n          resolution.subbands = resolutionSubbands;\n        }\n      }\n      component.resolutions = resolutions;\n      component.subbands = subbands;\n    }\n    var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n    switch (progressionOrder) {\n      case 0:\n        tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n        break;\n      case 1:\n        tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n        break;\n      case 2:\n        tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n        break;\n      case 3:\n        tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n        break;\n      case 4:\n        tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n        break;\n      default:\n        throw new JpxError('Unsupported progression order ' + progressionOrder);\n    }\n  }\n  function parseTilePackets(context, data, offset, dataLength) {\n    var position = 0;\n    var buffer,\n        bufferSize = 0,\n        skipNextBit = false;\n    function readBits(count) {\n      while (bufferSize < count) {\n        var b = data[offset + position];\n        position++;\n        if (skipNextBit) {\n          buffer = buffer << 7 | b;\n          bufferSize += 7;\n          skipNextBit = false;\n        } else {\n          buffer = buffer << 8 | b;\n          bufferSize += 8;\n        }\n        if (b === 0xFF) {\n          skipNextBit = true;\n        }\n      }\n      bufferSize -= count;\n      return buffer >>> bufferSize & (1 << count) - 1;\n    }\n    function skipMarkerIfEqual(value) {\n      if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n        skipBytes(1);\n        return true;\n      } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n        skipBytes(2);\n        return true;\n      }\n      return false;\n    }\n    function skipBytes(count) {\n      position += count;\n    }\n    function alignToByte() {\n      bufferSize = 0;\n      if (skipNextBit) {\n        position++;\n        skipNextBit = false;\n      }\n    }\n    function readCodingpasses() {\n      if (readBits(1) === 0) {\n        return 1;\n      }\n      if (readBits(1) === 0) {\n        return 2;\n      }\n      var value = readBits(2);\n      if (value < 3) {\n        return value + 3;\n      }\n      value = readBits(5);\n      if (value < 31) {\n        return value + 6;\n      }\n      value = readBits(7);\n      return value + 37;\n    }\n    var tileIndex = context.currentTile.index;\n    var tile = context.tiles[tileIndex];\n    var sopMarkerUsed = context.COD.sopMarkerUsed;\n    var ephMarkerUsed = context.COD.ephMarkerUsed;\n    var packetsIterator = tile.packetsIterator;\n    while (position < dataLength) {\n      alignToByte();\n      if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n        skipBytes(4);\n      }\n      var packet = packetsIterator.nextPacket();\n      if (!readBits(1)) {\n        continue;\n      }\n      var layerNumber = packet.layerNumber;\n      var queue = [],\n          codeblock;\n      for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n        codeblock = packet.codeblocks[i];\n        var precinct = codeblock.precinct;\n        var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n        var codeblockRow = codeblock.cby - precinct.cbyMin;\n        var codeblockIncluded = false;\n        var firstTimeInclusion = false;\n        var valueReady;\n        if (codeblock['included'] !== undefined) {\n          codeblockIncluded = !!readBits(1);\n        } else {\n          precinct = codeblock.precinct;\n          var inclusionTree, zeroBitPlanesTree;\n          if (precinct['inclusionTree'] !== undefined) {\n            inclusionTree = precinct.inclusionTree;\n          } else {\n            var width = precinct.cbxMax - precinct.cbxMin + 1;\n            var height = precinct.cbyMax - precinct.cbyMin + 1;\n            inclusionTree = new InclusionTree(width, height, layerNumber);\n            zeroBitPlanesTree = new TagTree(width, height);\n            precinct.inclusionTree = inclusionTree;\n            precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n          }\n          if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n            while (true) {\n              if (readBits(1)) {\n                valueReady = !inclusionTree.nextLevel();\n                if (valueReady) {\n                  codeblock.included = true;\n                  codeblockIncluded = firstTimeInclusion = true;\n                  break;\n                }\n              } else {\n                inclusionTree.incrementValue(layerNumber);\n                break;\n              }\n            }\n          }\n        }\n        if (!codeblockIncluded) {\n          continue;\n        }\n        if (firstTimeInclusion) {\n          zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n          zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n          while (true) {\n            if (readBits(1)) {\n              valueReady = !zeroBitPlanesTree.nextLevel();\n              if (valueReady) {\n                break;\n              }\n            } else {\n              zeroBitPlanesTree.incrementValue();\n            }\n          }\n          codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n        }\n        var codingpasses = readCodingpasses();\n        while (readBits(1)) {\n          codeblock.Lblock++;\n        }\n        var codingpassesLog2 = (0, _util.log2)(codingpasses);\n        var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n        var codedDataLength = readBits(bits);\n        queue.push({\n          codeblock: codeblock,\n          codingpasses: codingpasses,\n          dataLength: codedDataLength\n        });\n      }\n      alignToByte();\n      if (ephMarkerUsed) {\n        skipMarkerIfEqual(0x92);\n      }\n      while (queue.length > 0) {\n        var packetItem = queue.shift();\n        codeblock = packetItem.codeblock;\n        if (codeblock['data'] === undefined) {\n          codeblock.data = [];\n        }\n        codeblock.data.push({\n          data: data,\n          start: offset + position,\n          end: offset + position + packetItem.dataLength,\n          codingpasses: packetItem.codingpasses\n        });\n        position += packetItem.dataLength;\n      }\n    }\n    return position;\n  }\n  function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n    var x0 = subband.tbx0;\n    var y0 = subband.tby0;\n    var width = subband.tbx1 - subband.tbx0;\n    var codeblocks = subband.codeblocks;\n    var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n    var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n    for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n      var codeblock = codeblocks[i];\n      var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n      var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n      if (blockWidth === 0 || blockHeight === 0) {\n        continue;\n      }\n      if (codeblock['data'] === undefined) {\n        continue;\n      }\n      var bitModel, currentCodingpassType;\n      bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n      currentCodingpassType = 2;\n      var data = codeblock.data,\n          totalLength = 0,\n          codingpasses = 0;\n      var j, jj, dataItem;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        totalLength += dataItem.end - dataItem.start;\n        codingpasses += dataItem.codingpasses;\n      }\n      var encodedData = new Uint8Array(totalLength);\n      var position = 0;\n      for (j = 0, jj = data.length; j < jj; j++) {\n        dataItem = data[j];\n        var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n        encodedData.set(chunk, position);\n        position += chunk.length;\n      }\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(encodedData, 0, totalLength);\n      bitModel.setDecoder(decoder);\n      for (j = 0; j < codingpasses; j++) {\n        switch (currentCodingpassType) {\n          case 0:\n            bitModel.runSignificancePropagationPass();\n            break;\n          case 1:\n            bitModel.runMagnitudeRefinementPass();\n            break;\n          case 2:\n            bitModel.runCleanupPass();\n            if (segmentationSymbolUsed) {\n              bitModel.checkSegmentationSymbol();\n            }\n            break;\n        }\n        currentCodingpassType = (currentCodingpassType + 1) % 3;\n      }\n      var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n      var sign = bitModel.coefficentsSign;\n      var magnitude = bitModel.coefficentsMagnitude;\n      var bitsDecoded = bitModel.bitsDecoded;\n      var magnitudeCorrection = reversible ? 0 : 0.5;\n      var k, n, nb;\n      position = 0;\n      var interleave = subband.type !== 'LL';\n      for (j = 0; j < blockHeight; j++) {\n        var row = offset / width | 0;\n        var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n        for (k = 0; k < blockWidth; k++) {\n          n = magnitude[position];\n          if (n !== 0) {\n            n = (n + magnitudeCorrection) * delta;\n            if (sign[position] !== 0) {\n              n = -n;\n            }\n            nb = bitsDecoded[position];\n            var pos = interleave ? levelOffset + (offset << 1) : offset;\n            if (reversible && nb >= mb) {\n              coefficients[pos] = n;\n            } else {\n              coefficients[pos] = n * (1 << mb - nb);\n            }\n          }\n          offset++;\n          position++;\n        }\n        offset += width - blockWidth;\n      }\n    }\n  }\n  function transformTile(context, tile, c) {\n    var component = tile.components[c];\n    var codingStyleParameters = component.codingStyleParameters;\n    var quantizationParameters = component.quantizationParameters;\n    var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n    var spqcds = quantizationParameters.SPqcds;\n    var scalarExpounded = quantizationParameters.scalarExpounded;\n    var guardBits = quantizationParameters.guardBits;\n    var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n    var precision = context.components[c].precision;\n    var reversible = codingStyleParameters.reversibleTransformation;\n    var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n    var subbandCoefficients = [];\n    var b = 0;\n    for (var i = 0; i <= decompositionLevelsCount; i++) {\n      var resolution = component.resolutions[i];\n      var width = resolution.trx1 - resolution.trx0;\n      var height = resolution.try1 - resolution.try0;\n      var coefficients = new Float32Array(width * height);\n      for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n        var mu, epsilon;\n        if (!scalarExpounded) {\n          mu = spqcds[0].mu;\n          epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n        } else {\n          mu = spqcds[b].mu;\n          epsilon = spqcds[b].epsilon;\n          b++;\n        }\n        var subband = resolution.subbands[j];\n        var gainLog2 = SubbandsGainLog2[subband.type];\n        var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n        var mb = guardBits + epsilon - 1;\n        copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n      }\n      subbandCoefficients.push({\n        width: width,\n        height: height,\n        items: coefficients\n      });\n    }\n    var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n    return {\n      left: component.tcx0,\n      top: component.tcy0,\n      width: result.width,\n      height: result.height,\n      items: result.items\n    };\n  }\n  function transformComponents(context) {\n    var siz = context.SIZ;\n    var components = context.components;\n    var componentsCount = siz.Csiz;\n    var resultImages = [];\n    for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n      var tile = context.tiles[i];\n      var transformedTiles = [];\n      var c;\n      for (c = 0; c < componentsCount; c++) {\n        transformedTiles[c] = transformTile(context, tile, c);\n      }\n      var tile0 = transformedTiles[0];\n      var out = new Uint8ClampedArray(tile0.items.length * componentsCount);\n      var result = {\n        left: tile0.left,\n        top: tile0.top,\n        width: tile0.width,\n        height: tile0.height,\n        items: out\n      };\n      var shift, offset;\n      var pos = 0,\n          j,\n          jj,\n          y0,\n          y1,\n          y2;\n      if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n        var fourComponents = componentsCount === 4;\n        var y0items = transformedTiles[0].items;\n        var y1items = transformedTiles[1].items;\n        var y2items = transformedTiles[2].items;\n        var y3items = fourComponents ? transformedTiles[3].items : null;\n        shift = components[0].precision - 8;\n        offset = (128 << shift) + 0.5;\n        var component0 = tile.components[0];\n        var alpha01 = componentsCount - 3;\n        jj = y0items.length;\n        if (!component0.codingStyleParameters.reversibleTransformation) {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            out[pos++] = y0 + 1.402 * y2 >> shift;\n            out[pos++] = y0 - 0.34413 * y1 - 0.71414 * y2 >> shift;\n            out[pos++] = y0 + 1.772 * y1 >> shift;\n          }\n        } else {\n          for (j = 0; j < jj; j++, pos += alpha01) {\n            y0 = y0items[j] + offset;\n            y1 = y1items[j];\n            y2 = y2items[j];\n            var g = y0 - (y2 + y1 >> 2);\n            out[pos++] = g + y2 >> shift;\n            out[pos++] = g >> shift;\n            out[pos++] = g + y1 >> shift;\n          }\n        }\n        if (fourComponents) {\n          for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n            out[pos] = y3items[j] + offset >> shift;\n          }\n        }\n      } else {\n        for (c = 0; c < componentsCount; c++) {\n          var items = transformedTiles[c].items;\n          shift = components[c].precision - 8;\n          offset = (128 << shift) + 0.5;\n          for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n            out[pos] = items[j] + offset >> shift;\n            pos += componentsCount;\n          }\n        }\n      }\n      resultImages.push(result);\n    }\n    return resultImages;\n  }\n  function initializeTile(context, tileIndex) {\n    var siz = context.SIZ;\n    var componentsCount = siz.Csiz;\n    var tile = context.tiles[tileIndex];\n    for (var c = 0; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n      component.quantizationParameters = qcdOrQcc;\n      var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n      component.codingStyleParameters = codOrCoc;\n    }\n    tile.codingStyleDefaultParameters = context.currentTile.COD;\n  }\n  var TagTree = function TagTreeClosure() {\n    function TagTree(width, height) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var level = {\n          width: width,\n          height: height,\n          items: []\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    TagTree.prototype = {\n      reset: function TagTree_reset(i, j) {\n        var currentLevel = 0,\n            value = 0,\n            level;\n        while (currentLevel < this.levels.length) {\n          level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          if (level.items[index] !== undefined) {\n            value = level.items[index];\n            break;\n          }\n          level.index = index;\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        currentLevel--;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        this.currentLevel = currentLevel;\n        delete this.value;\n      },\n      incrementValue: function TagTree_incrementValue() {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index]++;\n      },\n      nextLevel: function TagTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        currentLevel--;\n        if (currentLevel < 0) {\n          this.value = value;\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return TagTree;\n  }();\n  var InclusionTree = function InclusionTreeClosure() {\n    function InclusionTree(width, height, defaultValue) {\n      var levelsLength = (0, _util.log2)(Math.max(width, height)) + 1;\n      this.levels = [];\n      for (var i = 0; i < levelsLength; i++) {\n        var items = new Uint8Array(width * height);\n        for (var j = 0, jj = items.length; j < jj; j++) {\n          items[j] = defaultValue;\n        }\n        var level = {\n          width: width,\n          height: height,\n          items: items\n        };\n        this.levels.push(level);\n        width = Math.ceil(width / 2);\n        height = Math.ceil(height / 2);\n      }\n    }\n    InclusionTree.prototype = {\n      reset: function InclusionTree_reset(i, j, stopValue) {\n        var currentLevel = 0;\n        while (currentLevel < this.levels.length) {\n          var level = this.levels[currentLevel];\n          var index = i + j * level.width;\n          level.index = index;\n          var value = level.items[index];\n          if (value === 0xFF) {\n            break;\n          }\n          if (value > stopValue) {\n            this.currentLevel = currentLevel;\n            this.propagateValues();\n            return false;\n          }\n          i >>= 1;\n          j >>= 1;\n          currentLevel++;\n        }\n        this.currentLevel = currentLevel - 1;\n        return true;\n      },\n      incrementValue: function InclusionTree_incrementValue(stopValue) {\n        var level = this.levels[this.currentLevel];\n        level.items[level.index] = stopValue + 1;\n        this.propagateValues();\n      },\n      propagateValues: function InclusionTree_propagateValues() {\n        var levelIndex = this.currentLevel;\n        var level = this.levels[levelIndex];\n        var currentValue = level.items[level.index];\n        while (--levelIndex >= 0) {\n          level = this.levels[levelIndex];\n          level.items[level.index] = currentValue;\n        }\n      },\n      nextLevel: function InclusionTree_nextLevel() {\n        var currentLevel = this.currentLevel;\n        var level = this.levels[currentLevel];\n        var value = level.items[level.index];\n        level.items[level.index] = 0xFF;\n        currentLevel--;\n        if (currentLevel < 0) {\n          return false;\n        }\n        this.currentLevel = currentLevel;\n        level = this.levels[currentLevel];\n        level.items[level.index] = value;\n        return true;\n      }\n    };\n    return InclusionTree;\n  }();\n  var BitModel = function BitModelClosure() {\n    var UNIFORM_CONTEXT = 17;\n    var RUNLENGTH_CONTEXT = 18;\n    var LLAndLHContextsLabel = new Uint8Array([0, 5, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 1, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8, 0, 0, 0, 0, 0, 2, 6, 8, 0, 3, 7, 8, 0, 4, 7, 8]);\n    var HLContextLabel = new Uint8Array([0, 3, 4, 0, 5, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 1, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8, 0, 0, 0, 0, 0, 2, 3, 4, 0, 6, 7, 7, 0, 8, 8, 8]);\n    var HHContextLabel = new Uint8Array([0, 1, 2, 0, 1, 2, 2, 0, 2, 2, 2, 0, 0, 0, 0, 0, 3, 4, 5, 0, 4, 5, 5, 0, 5, 5, 5, 0, 0, 0, 0, 0, 6, 7, 7, 0, 7, 7, 7, 0, 7, 7, 7, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8, 0, 0, 0, 0, 0, 8, 8, 8, 0, 8, 8, 8, 0, 8, 8, 8]);\n    function BitModel(width, height, subband, zeroBitPlanes, mb) {\n      this.width = width;\n      this.height = height;\n      this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n      var coefficientCount = width * height;\n      this.neighborsSignificance = new Uint8Array(coefficientCount);\n      this.coefficentsSign = new Uint8Array(coefficientCount);\n      this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n      this.processingFlags = new Uint8Array(coefficientCount);\n      var bitsDecoded = new Uint8Array(coefficientCount);\n      if (zeroBitPlanes !== 0) {\n        for (var i = 0; i < coefficientCount; i++) {\n          bitsDecoded[i] = zeroBitPlanes;\n        }\n      }\n      this.bitsDecoded = bitsDecoded;\n      this.reset();\n    }\n    BitModel.prototype = {\n      setDecoder: function BitModel_setDecoder(decoder) {\n        this.decoder = decoder;\n      },\n      reset: function BitModel_reset() {\n        this.contexts = new Int8Array(19);\n        this.contexts[0] = 4 << 1 | 0;\n        this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n        this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n      },\n      setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n        var neighborsSignificance = this.neighborsSignificance;\n        var width = this.width,\n            height = this.height;\n        var left = column > 0;\n        var right = column + 1 < width;\n        var i;\n        if (row > 0) {\n          i = index - width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (row + 1 < height) {\n          i = index + width;\n          if (left) {\n            neighborsSignificance[i - 1] += 0x10;\n          }\n          if (right) {\n            neighborsSignificance[i + 1] += 0x10;\n          }\n          neighborsSignificance[i] += 0x04;\n        }\n        if (left) {\n          neighborsSignificance[index - 1] += 0x01;\n        }\n        if (right) {\n          neighborsSignificance[index + 1] += 0x01;\n        }\n        neighborsSignificance[index] |= 0x80;\n      },\n      runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var neighborsSignificance = this.neighborsSignificance;\n        var processingFlags = this.processingFlags;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processedInverseMask = ~1;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        for (var i0 = 0; i0 < height; i0 += 4) {\n          for (var j = 0; j < width; j++) {\n            var index = i0 * width + j;\n            for (var i1 = 0; i1 < 4; i1++, index += width) {\n              var i = i0 + i1;\n              if (i >= height) {\n                break;\n              }\n              processingFlags[index] &= processedInverseMask;\n              if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision) {\n                var sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contribution, sign0, sign1, significance1;\n        var contextLabel, decoded;\n        significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n        if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n          sign1 = coefficentsSign[index + 1];\n          if (significance1) {\n            sign0 = coefficentsSign[index - 1];\n            contribution = 1 - sign1 - sign0;\n          } else {\n            contribution = 1 - sign1 - sign1;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - 1];\n          contribution = 1 - sign0 - sign0;\n        } else {\n          contribution = 0;\n        }\n        var horizontalContribution = 3 * contribution;\n        significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n        if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n          sign1 = coefficentsSign[index + width];\n          if (significance1) {\n            sign0 = coefficentsSign[index - width];\n            contribution = 1 - sign1 - sign0 + horizontalContribution;\n          } else {\n            contribution = 1 - sign1 - sign1 + horizontalContribution;\n          }\n        } else if (significance1) {\n          sign0 = coefficentsSign[index - width];\n          contribution = 1 - sign0 - sign0 + horizontalContribution;\n        } else {\n          contribution = horizontalContribution;\n        }\n        if (contribution >= 0) {\n          contextLabel = 9 + contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel);\n        } else {\n          contextLabel = 9 - contribution;\n          decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n        }\n        return decoded;\n      },\n      runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var neighborsSignificance = this.neighborsSignificance;\n        var contexts = this.contexts;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var length = width * height;\n        var width4 = width * 4;\n        for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n          indexNext = Math.min(length, index0 + width4);\n          for (var j = 0; j < width; j++) {\n            for (var index = index0 + j; index < indexNext; index += width) {\n              if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = 16;\n              if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n                processingFlags[index] ^= firstMagnitudeBitMask;\n                var significance = neighborsSignificance[index] & 127;\n                contextLabel = significance === 0 ? 15 : 14;\n              }\n              var bit = decoder.readBit(contexts, contextLabel);\n              coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n              bitsDecoded[index]++;\n              processingFlags[index] |= processedMask;\n            }\n          }\n        }\n      },\n      runCleanupPass: function BitModel_runCleanupPass() {\n        var decoder = this.decoder;\n        var width = this.width,\n            height = this.height;\n        var neighborsSignificance = this.neighborsSignificance;\n        var coefficentsMagnitude = this.coefficentsMagnitude;\n        var coefficentsSign = this.coefficentsSign;\n        var contexts = this.contexts;\n        var labels = this.contextLabelTable;\n        var bitsDecoded = this.bitsDecoded;\n        var processingFlags = this.processingFlags;\n        var processedMask = 1;\n        var firstMagnitudeBitMask = 2;\n        var oneRowDown = width;\n        var twoRowsDown = width * 2;\n        var threeRowsDown = width * 3;\n        var iNext;\n        for (var i0 = 0; i0 < height; i0 = iNext) {\n          iNext = Math.min(i0 + 4, height);\n          var indexBase = i0 * width;\n          var checkAllEmpty = i0 + 3 < height;\n          for (var j = 0; j < width; j++) {\n            var index0 = indexBase + j;\n            var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n            var i1 = 0,\n                index = index0;\n            var i = i0,\n                sign;\n            if (allEmpty) {\n              var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n              if (!hasSignificantCoefficent) {\n                bitsDecoded[index0]++;\n                bitsDecoded[index0 + oneRowDown]++;\n                bitsDecoded[index0 + twoRowsDown]++;\n                bitsDecoded[index0 + threeRowsDown]++;\n                continue;\n              }\n              i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n              if (i1 !== 0) {\n                i = i0 + i1;\n                index += i1 * width;\n              }\n              sign = this.decodeSignBit(i, j, index);\n              coefficentsSign[index] = sign;\n              coefficentsMagnitude[index] = 1;\n              this.setNeighborsSignificance(i, j, index);\n              processingFlags[index] |= firstMagnitudeBitMask;\n              index = index0;\n              for (var i2 = i0; i2 <= i; i2++, index += width) {\n                bitsDecoded[index]++;\n              }\n              i1++;\n            }\n            for (i = i0 + i1; i < iNext; i++, index += width) {\n              if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n                continue;\n              }\n              var contextLabel = labels[neighborsSignificance[index]];\n              var decision = decoder.readBit(contexts, contextLabel);\n              if (decision === 1) {\n                sign = this.decodeSignBit(i, j, index);\n                coefficentsSign[index] = sign;\n                coefficentsMagnitude[index] = 1;\n                this.setNeighborsSignificance(i, j, index);\n                processingFlags[index] |= firstMagnitudeBitMask;\n              }\n              bitsDecoded[index]++;\n            }\n          }\n        }\n      },\n      checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n        var decoder = this.decoder;\n        var contexts = this.contexts;\n        var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n        if (symbol !== 0xA) {\n          throw new JpxError('Invalid segmentation symbol');\n        }\n      }\n    };\n    return BitModel;\n  }();\n  var Transform = function TransformClosure() {\n    function Transform() {}\n    Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n      var ll = subbands[0];\n      for (var i = 1, ii = subbands.length; i < ii; i++) {\n        ll = this.iterate(ll, subbands[i], u0, v0);\n      }\n      return ll;\n    };\n    Transform.prototype.extend = function extend(buffer, offset, size) {\n      var i1 = offset - 1,\n          j1 = offset + 1;\n      var i2 = offset + size - 2,\n          j2 = offset + size;\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1--] = buffer[j1++];\n      buffer[j2++] = buffer[i2--];\n      buffer[i1] = buffer[j1];\n      buffer[j2] = buffer[i2];\n    };\n    Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n      var llWidth = ll.width,\n          llHeight = ll.height,\n          llItems = ll.items;\n      var width = hl_lh_hh.width;\n      var height = hl_lh_hh.height;\n      var items = hl_lh_hh.items;\n      var i, j, k, l, u, v;\n      for (k = 0, i = 0; i < llHeight; i++) {\n        l = i * 2 * width;\n        for (j = 0; j < llWidth; j++, k++, l += 2) {\n          items[l] = llItems[k];\n        }\n      }\n      llItems = ll.items = null;\n      var bufferPadding = 4;\n      var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n      if (width === 1) {\n        if ((u0 & 1) !== 0) {\n          for (v = 0, k = 0; v < height; v++, k += width) {\n            items[k] *= 0.5;\n          }\n        }\n      } else {\n        for (v = 0, k = 0; v < height; v++, k += width) {\n          rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n          this.extend(rowBuffer, bufferPadding, width);\n          this.filter(rowBuffer, bufferPadding, width);\n          items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n        }\n      }\n      var numBuffers = 16;\n      var colBuffers = [];\n      for (i = 0; i < numBuffers; i++) {\n        colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n      }\n      var b,\n          currentBuffer = 0;\n      ll = bufferPadding + height;\n      if (height === 1) {\n        if ((v0 & 1) !== 0) {\n          for (u = 0; u < width; u++) {\n            items[u] *= 0.5;\n          }\n        }\n      } else {\n        for (u = 0; u < width; u++) {\n          if (currentBuffer === 0) {\n            numBuffers = Math.min(width - u, numBuffers);\n            for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                colBuffers[b][l] = items[k + b];\n              }\n            }\n            currentBuffer = numBuffers;\n          }\n          currentBuffer--;\n          var buffer = colBuffers[currentBuffer];\n          this.extend(buffer, bufferPadding, height);\n          this.filter(buffer, bufferPadding, height);\n          if (currentBuffer === 0) {\n            k = u - numBuffers + 1;\n            for (l = bufferPadding; l < ll; k += width, l++) {\n              for (b = 0; b < numBuffers; b++) {\n                items[k + b] = colBuffers[b][l];\n              }\n            }\n          }\n        }\n      }\n      return {\n        width: width,\n        height: height,\n        items: items\n      };\n    };\n    return Transform;\n  }();\n  var IrreversibleTransform = function IrreversibleTransformClosure() {\n    function IrreversibleTransform() {\n      Transform.call(this);\n    }\n    IrreversibleTransform.prototype = Object.create(Transform.prototype);\n    IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n, current, next;\n      var alpha = -1.586134342059924;\n      var beta = -0.052980118572961;\n      var gamma = 0.882911075530934;\n      var delta = 0.443506852043971;\n      var K = 1.230174104914001;\n      var K_ = 1 / K;\n      j = offset - 3;\n      for (n = len + 4; n--; j += 2) {\n        x[j] *= K_;\n      }\n      j = offset - 2;\n      current = delta * x[j - 1];\n      for (n = len + 3; n--; j += 2) {\n        next = delta * x[j + 1];\n        x[j] = K * x[j] - current - next;\n        if (n--) {\n          j += 2;\n          current = delta * x[j + 1];\n          x[j] = K * x[j] - current - next;\n        } else {\n          break;\n        }\n      }\n      j = offset - 1;\n      current = gamma * x[j - 1];\n      for (n = len + 2; n--; j += 2) {\n        next = gamma * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = gamma * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      j = offset;\n      current = beta * x[j - 1];\n      for (n = len + 1; n--; j += 2) {\n        next = beta * x[j + 1];\n        x[j] -= current + next;\n        if (n--) {\n          j += 2;\n          current = beta * x[j + 1];\n          x[j] -= current + next;\n        } else {\n          break;\n        }\n      }\n      if (len !== 0) {\n        j = offset + 1;\n        current = alpha * x[j - 1];\n        for (n = len; n--; j += 2) {\n          next = alpha * x[j + 1];\n          x[j] -= current + next;\n          if (n--) {\n            j += 2;\n            current = alpha * x[j + 1];\n            x[j] -= current + next;\n          } else {\n            break;\n          }\n        }\n      }\n    };\n    return IrreversibleTransform;\n  }();\n  var ReversibleTransform = function ReversibleTransformClosure() {\n    function ReversibleTransform() {\n      Transform.call(this);\n    }\n    ReversibleTransform.prototype = Object.create(Transform.prototype);\n    ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n      var len = length >> 1;\n      offset = offset | 0;\n      var j, n;\n      for (j = offset, n = len + 1; n--; j += 2) {\n        x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n      }\n      for (j = offset + 1, n = len; n--; j += 2) {\n        x[j] += x[j - 1] + x[j + 1] >> 1;\n      }\n    };\n    return ReversibleTransform;\n  }();\n  return JpxImage;\n}();\nexports.JpxImage = JpxImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n  var QeTable = [{\n    qe: 0x5601,\n    nmps: 1,\n    nlps: 1,\n    switchFlag: 1\n  }, {\n    qe: 0x3401,\n    nmps: 2,\n    nlps: 6,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 3,\n    nlps: 9,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 4,\n    nlps: 12,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 5,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 38,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 7,\n    nlps: 6,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 8,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 9,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 10,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 11,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 12,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 13,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 29,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 15,\n    nlps: 14,\n    switchFlag: 1\n  }, {\n    qe: 0x5401,\n    nmps: 16,\n    nlps: 14,\n    switchFlag: 0\n  }, {\n    qe: 0x5101,\n    nmps: 17,\n    nlps: 15,\n    switchFlag: 0\n  }, {\n    qe: 0x4801,\n    nmps: 18,\n    nlps: 16,\n    switchFlag: 0\n  }, {\n    qe: 0x3801,\n    nmps: 19,\n    nlps: 17,\n    switchFlag: 0\n  }, {\n    qe: 0x3401,\n    nmps: 20,\n    nlps: 18,\n    switchFlag: 0\n  }, {\n    qe: 0x3001,\n    nmps: 21,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2801,\n    nmps: 22,\n    nlps: 19,\n    switchFlag: 0\n  }, {\n    qe: 0x2401,\n    nmps: 23,\n    nlps: 20,\n    switchFlag: 0\n  }, {\n    qe: 0x2201,\n    nmps: 24,\n    nlps: 21,\n    switchFlag: 0\n  }, {\n    qe: 0x1C01,\n    nmps: 25,\n    nlps: 22,\n    switchFlag: 0\n  }, {\n    qe: 0x1801,\n    nmps: 26,\n    nlps: 23,\n    switchFlag: 0\n  }, {\n    qe: 0x1601,\n    nmps: 27,\n    nlps: 24,\n    switchFlag: 0\n  }, {\n    qe: 0x1401,\n    nmps: 28,\n    nlps: 25,\n    switchFlag: 0\n  }, {\n    qe: 0x1201,\n    nmps: 29,\n    nlps: 26,\n    switchFlag: 0\n  }, {\n    qe: 0x1101,\n    nmps: 30,\n    nlps: 27,\n    switchFlag: 0\n  }, {\n    qe: 0x0AC1,\n    nmps: 31,\n    nlps: 28,\n    switchFlag: 0\n  }, {\n    qe: 0x09C1,\n    nmps: 32,\n    nlps: 29,\n    switchFlag: 0\n  }, {\n    qe: 0x08A1,\n    nmps: 33,\n    nlps: 30,\n    switchFlag: 0\n  }, {\n    qe: 0x0521,\n    nmps: 34,\n    nlps: 31,\n    switchFlag: 0\n  }, {\n    qe: 0x0441,\n    nmps: 35,\n    nlps: 32,\n    switchFlag: 0\n  }, {\n    qe: 0x02A1,\n    nmps: 36,\n    nlps: 33,\n    switchFlag: 0\n  }, {\n    qe: 0x0221,\n    nmps: 37,\n    nlps: 34,\n    switchFlag: 0\n  }, {\n    qe: 0x0141,\n    nmps: 38,\n    nlps: 35,\n    switchFlag: 0\n  }, {\n    qe: 0x0111,\n    nmps: 39,\n    nlps: 36,\n    switchFlag: 0\n  }, {\n    qe: 0x0085,\n    nmps: 40,\n    nlps: 37,\n    switchFlag: 0\n  }, {\n    qe: 0x0049,\n    nmps: 41,\n    nlps: 38,\n    switchFlag: 0\n  }, {\n    qe: 0x0025,\n    nmps: 42,\n    nlps: 39,\n    switchFlag: 0\n  }, {\n    qe: 0x0015,\n    nmps: 43,\n    nlps: 40,\n    switchFlag: 0\n  }, {\n    qe: 0x0009,\n    nmps: 44,\n    nlps: 41,\n    switchFlag: 0\n  }, {\n    qe: 0x0005,\n    nmps: 45,\n    nlps: 42,\n    switchFlag: 0\n  }, {\n    qe: 0x0001,\n    nmps: 45,\n    nlps: 43,\n    switchFlag: 0\n  }, {\n    qe: 0x5601,\n    nmps: 46,\n    nlps: 46,\n    switchFlag: 0\n  }];\n  function ArithmeticDecoder(data, start, end) {\n    this.data = data;\n    this.bp = start;\n    this.dataEnd = end;\n    this.chigh = data[start];\n    this.clow = 0;\n    this.byteIn();\n    this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n    this.clow = this.clow << 7 & 0xFFFF;\n    this.ct -= 7;\n    this.a = 0x8000;\n  }\n  ArithmeticDecoder.prototype = {\n    byteIn: function ArithmeticDecoder_byteIn() {\n      var data = this.data;\n      var bp = this.bp;\n      if (data[bp] === 0xFF) {\n        var b1 = data[bp + 1];\n        if (b1 > 0x8F) {\n          this.clow += 0xFF00;\n          this.ct = 8;\n        } else {\n          bp++;\n          this.clow += data[bp] << 9;\n          this.ct = 7;\n          this.bp = bp;\n        }\n      } else {\n        bp++;\n        this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n        this.ct = 8;\n        this.bp = bp;\n      }\n      if (this.clow > 0xFFFF) {\n        this.chigh += this.clow >> 16;\n        this.clow &= 0xFFFF;\n      }\n    },\n    readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n      var cx_index = contexts[pos] >> 1,\n          cx_mps = contexts[pos] & 1;\n      var qeTableIcx = QeTable[cx_index];\n      var qeIcx = qeTableIcx.qe;\n      var d;\n      var a = this.a - qeIcx;\n      if (this.chigh < qeIcx) {\n        if (a < qeIcx) {\n          a = qeIcx;\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        } else {\n          a = qeIcx;\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        }\n      } else {\n        this.chigh -= qeIcx;\n        if ((a & 0x8000) !== 0) {\n          this.a = a;\n          return cx_mps;\n        }\n        if (a < qeIcx) {\n          d = 1 ^ cx_mps;\n          if (qeTableIcx.switchFlag === 1) {\n            cx_mps = d;\n          }\n          cx_index = qeTableIcx.nlps;\n        } else {\n          d = cx_mps;\n          cx_index = qeTableIcx.nmps;\n        }\n      }\n      do {\n        if (this.ct === 0) {\n          this.byteIn();\n        }\n        a <<= 1;\n        this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n        this.clow = this.clow << 1 & 0xFFFF;\n        this.ct--;\n      } while ((a & 0x8000) === 0);\n      this.a = a;\n      contexts[pos] = cx_index << 1 | cx_mps;\n      return d;\n    }\n  };\n  return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxDecoder = undefined;\n\nvar _util = require('../shared/util');\n\nvar CCITTFaxDecoder = function CCITTFaxDecoder() {\n  var ccittEOL = -2;\n  var ccittEOF = -1;\n  var twoDimPass = 0;\n  var twoDimHoriz = 1;\n  var twoDimVert0 = 2;\n  var twoDimVertR1 = 3;\n  var twoDimVertL1 = 4;\n  var twoDimVertR2 = 5;\n  var twoDimVertL2 = 6;\n  var twoDimVertR3 = 7;\n  var twoDimVertL3 = 8;\n  var twoDimTable = [[-1, -1], [-1, -1], [7, twoDimVertL3], [7, twoDimVertR3], [6, twoDimVertL2], [6, twoDimVertL2], [6, twoDimVertR2], [6, twoDimVertR2], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [4, twoDimPass], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimHoriz], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertL1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [3, twoDimVertR1], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0], [1, twoDimVert0]];\n  var whiteTable1 = [[-1, -1], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [12, 1984], [12, 2048], [12, 2112], [12, 2176], [12, 2240], [12, 2304], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [12, 2368], [12, 2432], [12, 2496], [12, 2560]];\n  var whiteTable2 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [8, 29], [8, 29], [8, 30], [8, 30], [8, 45], [8, 45], [8, 46], [8, 46], [7, 22], [7, 22], [7, 22], [7, 22], [7, 23], [7, 23], [7, 23], [7, 23], [8, 47], [8, 47], [8, 48], [8, 48], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [6, 13], [7, 20], [7, 20], [7, 20], [7, 20], [8, 33], [8, 33], [8, 34], [8, 34], [8, 35], [8, 35], [8, 36], [8, 36], [8, 37], [8, 37], [8, 38], [8, 38], [7, 19], [7, 19], [7, 19], [7, 19], [8, 31], [8, 31], [8, 32], [8, 32], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 1], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [6, 12], [8, 53], [8, 53], [8, 54], [8, 54], [7, 26], [7, 26], [7, 26], [7, 26], [8, 39], [8, 39], [8, 40], [8, 40], [8, 41], [8, 41], [8, 42], [8, 42], [8, 43], [8, 43], [8, 44], [8, 44], [7, 21], [7, 21], [7, 21], [7, 21], [7, 28], [7, 28], [7, 28], [7, 28], [8, 61], [8, 61], [8, 62], [8, 62], [8, 63], [8, 63], [8, 0], [8, 0], [8, 320], [8, 320], [8, 384], [8, 384], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 10], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [5, 11], [7, 27], [7, 27], [7, 27], [7, 27], [8, 59], [8, 59], [8, 60], [8, 60], [9, 1472], [9, 1536], [9, 1600], [9, 1728], [7, 18], [7, 18], [7, 18], [7, 18], [7, 24], [7, 24], [7, 24], [7, 24], [8, 49], [8, 49], [8, 50], [8, 50], [8, 51], [8, 51], [8, 52], [8, 52], [7, 25], [7, 25], [7, 25], [7, 25], [8, 55], [8, 55], [8, 56], [8, 56], [8, 57], [8, 57], [8, 58], [8, 58], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 192], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [6, 1664], [8, 448], [8, 448], [8, 512], [8, 512], [9, 704], [9, 768], [8, 640], [8, 640], [8, 576], [8, 576], [9, 832], [9, 896], [9, 960], [9, 1024], [9, 1088], [9, 1152], [9, 1216], [9, 1280], [9, 1344], [9, 1408], [7, 256], [7, 256], [7, 256], [7, 256], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 2], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [4, 3], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 128], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 8], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [5, 9], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 16], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [6, 17], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 4], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [4, 5], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 14], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [6, 15], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [5, 64], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 6], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7], [4, 7]];\n  var blackTable1 = [[-1, -1], [-1, -1], [12, ccittEOL], [12, ccittEOL], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [-1, -1], [11, 1792], [11, 1792], [11, 1792], [11, 1792], [12, 1984], [12, 1984], [12, 2048], [12, 2048], [12, 2112], [12, 2112], [12, 2176], [12, 2176], [12, 2240], [12, 2240], [12, 2304], [12, 2304], [11, 1856], [11, 1856], [11, 1856], [11, 1856], [11, 1920], [11, 1920], [11, 1920], [11, 1920], [12, 2368], [12, 2368], [12, 2432], [12, 2432], [12, 2496], [12, 2496], [12, 2560], [12, 2560], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [10, 18], [12, 52], [12, 52], [13, 640], [13, 704], [13, 768], [13, 832], [12, 55], [12, 55], [12, 56], [12, 56], [13, 1280], [13, 1344], [13, 1408], [13, 1472], [12, 59], [12, 59], [12, 60], [12, 60], [13, 1536], [13, 1600], [11, 24], [11, 24], [11, 24], [11, 24], [11, 25], [11, 25], [11, 25], [11, 25], [13, 1664], [13, 1728], [12, 320], [12, 320], [12, 384], [12, 384], [12, 448], [12, 448], [13, 512], [13, 576], [12, 53], [12, 53], [12, 54], [12, 54], [13, 896], [13, 960], [13, 1024], [13, 1088], [13, 1152], [13, 1216], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64], [10, 64]];\n  var blackTable2 = [[8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [8, 13], [11, 23], [11, 23], [12, 50], [12, 51], [12, 44], [12, 45], [12, 46], [12, 47], [12, 57], [12, 58], [12, 61], [12, 256], [10, 16], [10, 16], [10, 16], [10, 16], [10, 17], [10, 17], [10, 17], [10, 17], [12, 48], [12, 49], [12, 62], [12, 63], [12, 30], [12, 31], [12, 32], [12, 33], [12, 40], [12, 41], [11, 22], [11, 22], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [8, 14], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 10], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [7, 11], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [9, 15], [12, 128], [12, 192], [12, 26], [12, 27], [12, 28], [12, 29], [11, 19], [11, 19], [11, 20], [11, 20], [12, 34], [12, 35], [12, 36], [12, 37], [12, 38], [12, 39], [11, 21], [11, 21], [12, 42], [12, 43], [10, 0], [10, 0], [10, 0], [10, 0], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12], [7, 12]];\n  var blackTable3 = [[-1, -1], [-1, -1], [-1, -1], [-1, -1], [6, 9], [6, 8], [5, 7], [5, 7], [4, 6], [4, 6], [4, 6], [4, 6], [4, 5], [4, 5], [4, 5], [4, 5], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 1], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [3, 4], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 3], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2], [2, 2]];\n  function CCITTFaxDecoder(source) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (!source || typeof source.next !== 'function') {\n      throw new Error('CCITTFaxDecoder - invalid \"source\" parameter.');\n    }\n    this.source = source;\n    this.eof = false;\n    this.encoding = options['K'] || 0;\n    this.eoline = options['EndOfLine'] || false;\n    this.byteAlign = options['EncodedByteAlign'] || false;\n    this.columns = options['Columns'] || 1728;\n    this.rows = options['Rows'] || 0;\n    var eoblock = options['EndOfBlock'];\n    if (eoblock === null || eoblock === undefined) {\n      eoblock = true;\n    }\n    this.eoblock = eoblock;\n    this.black = options['BlackIs1'] || false;\n    this.codingLine = new Uint32Array(this.columns + 1);\n    this.refLine = new Uint32Array(this.columns + 2);\n    this.codingLine[0] = this.columns;\n    this.codingPos = 0;\n    this.row = 0;\n    this.nextLine2D = this.encoding < 0;\n    this.inputBits = 0;\n    this.inputBuf = 0;\n    this.outputBits = 0;\n    this.rowsDone = false;\n    var code1 = void 0;\n    while ((code1 = this._lookBits(12)) === 0) {\n      this._eatBits(1);\n    }\n    if (code1 === 1) {\n      this._eatBits(12);\n    }\n    if (this.encoding > 0) {\n      this.nextLine2D = !this._lookBits(1);\n      this._eatBits(1);\n    }\n  }\n  CCITTFaxDecoder.prototype = {\n    readNextChar: function readNextChar() {\n      if (this.eof) {\n        return -1;\n      }\n      var refLine = this.refLine;\n      var codingLine = this.codingLine;\n      var columns = this.columns;\n      var refPos = void 0,\n          blackPixels = void 0,\n          bits = void 0,\n          i = void 0;\n      if (this.outputBits === 0) {\n        if (this.rowsDone) {\n          this.eof = true;\n        }\n        if (this.eof) {\n          return -1;\n        }\n        this.err = false;\n        var code1 = void 0,\n            code2 = void 0,\n            code3 = void 0;\n        if (this.nextLine2D) {\n          for (i = 0; codingLine[i] < columns; ++i) {\n            refLine[i] = codingLine[i];\n          }\n          refLine[i++] = columns;\n          refLine[i] = columns;\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          refPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = this._getTwoDimCode();\n            switch (code1) {\n              case twoDimPass:\n                this._addPixels(refLine[refPos + 1], blackPixels);\n                if (refLine[refPos + 1] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimHoriz:\n                code1 = code2 = 0;\n                if (blackPixels) {\n                  do {\n                    code1 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                } else {\n                  do {\n                    code1 += code3 = this._getWhiteCode();\n                  } while (code3 >= 64);\n                  do {\n                    code2 += code3 = this._getBlackCode();\n                  } while (code3 >= 64);\n                }\n                this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n                if (codingLine[this.codingPos] < columns) {\n                  this._addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n                }\n                while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                  refPos += 2;\n                }\n                break;\n              case twoDimVertR3:\n                this._addPixels(refLine[refPos] + 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR2:\n                this._addPixels(refLine[refPos] + 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertR1:\n                this._addPixels(refLine[refPos] + 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVert0:\n                this._addPixels(refLine[refPos], blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  ++refPos;\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL3:\n                this._addPixelsNeg(refLine[refPos] - 3, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL2:\n                this._addPixelsNeg(refLine[refPos] - 2, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case twoDimVertL1:\n                this._addPixelsNeg(refLine[refPos] - 1, blackPixels);\n                blackPixels ^= 1;\n                if (codingLine[this.codingPos] < columns) {\n                  if (refPos > 0) {\n                    --refPos;\n                  } else {\n                    ++refPos;\n                  }\n                  while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n                    refPos += 2;\n                  }\n                }\n                break;\n              case ccittEOF:\n                this._addPixels(columns, 0);\n                this.eof = true;\n                break;\n              default:\n                (0, _util.info)('bad 2d code');\n                this._addPixels(columns, 0);\n                this.err = true;\n            }\n          }\n        } else {\n          codingLine[0] = 0;\n          this.codingPos = 0;\n          blackPixels = 0;\n          while (codingLine[this.codingPos] < columns) {\n            code1 = 0;\n            if (blackPixels) {\n              do {\n                code1 += code3 = this._getBlackCode();\n              } while (code3 >= 64);\n            } else {\n              do {\n                code1 += code3 = this._getWhiteCode();\n              } while (code3 >= 64);\n            }\n            this._addPixels(codingLine[this.codingPos] + code1, blackPixels);\n            blackPixels ^= 1;\n          }\n        }\n        var gotEOL = false;\n        if (this.byteAlign) {\n          this.inputBits &= ~7;\n        }\n        if (!this.eoblock && this.row === this.rows - 1) {\n          this.rowsDone = true;\n        } else {\n          code1 = this._lookBits(12);\n          if (this.eoline) {\n            while (code1 !== ccittEOF && code1 !== 1) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          } else {\n            while (code1 === 0) {\n              this._eatBits(1);\n              code1 = this._lookBits(12);\n            }\n          }\n          if (code1 === 1) {\n            this._eatBits(12);\n            gotEOL = true;\n          } else if (code1 === ccittEOF) {\n            this.eof = true;\n          }\n        }\n        if (!this.eof && this.encoding > 0 && !this.rowsDone) {\n          this.nextLine2D = !this._lookBits(1);\n          this._eatBits(1);\n        }\n        if (this.eoblock && gotEOL && this.byteAlign) {\n          code1 = this._lookBits(12);\n          if (code1 === 1) {\n            this._eatBits(12);\n            if (this.encoding > 0) {\n              this._lookBits(1);\n              this._eatBits(1);\n            }\n            if (this.encoding >= 0) {\n              for (i = 0; i < 4; ++i) {\n                code1 = this._lookBits(12);\n                if (code1 !== 1) {\n                  (0, _util.info)('bad rtc code: ' + code1);\n                }\n                this._eatBits(12);\n                if (this.encoding > 0) {\n                  this._lookBits(1);\n                  this._eatBits(1);\n                }\n              }\n            }\n            this.eof = true;\n          }\n        } else if (this.err && this.eoline) {\n          while (true) {\n            code1 = this._lookBits(13);\n            if (code1 === ccittEOF) {\n              this.eof = true;\n              return -1;\n            }\n            if (code1 >> 1 === 1) {\n              break;\n            }\n            this._eatBits(1);\n          }\n          this._eatBits(12);\n          if (this.encoding > 0) {\n            this._eatBits(1);\n            this.nextLine2D = !(code1 & 1);\n          }\n        }\n        if (codingLine[0] > 0) {\n          this.outputBits = codingLine[this.codingPos = 0];\n        } else {\n          this.outputBits = codingLine[this.codingPos = 1];\n        }\n        this.row++;\n      }\n      var c = void 0;\n      if (this.outputBits >= 8) {\n        c = this.codingPos & 1 ? 0 : 0xFF;\n        this.outputBits -= 8;\n        if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n          this.codingPos++;\n          this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n        }\n      } else {\n        bits = 8;\n        c = 0;\n        do {\n          if (this.outputBits > bits) {\n            c <<= bits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - bits;\n            }\n            this.outputBits -= bits;\n            bits = 0;\n          } else {\n            c <<= this.outputBits;\n            if (!(this.codingPos & 1)) {\n              c |= 0xFF >> 8 - this.outputBits;\n            }\n            bits -= this.outputBits;\n            this.outputBits = 0;\n            if (codingLine[this.codingPos] < columns) {\n              this.codingPos++;\n              this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n            } else if (bits > 0) {\n              c <<= bits;\n              bits = 0;\n            }\n          }\n        } while (bits);\n      }\n      if (this.black) {\n        c ^= 0xFF;\n      }\n      return c;\n    },\n    _addPixels: function _addPixels(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _addPixelsNeg: function _addPixelsNeg(a1, blackPixels) {\n      var codingLine = this.codingLine;\n      var codingPos = this.codingPos;\n      if (a1 > codingLine[codingPos]) {\n        if (a1 > this.columns) {\n          (0, _util.info)('row is wrong length');\n          this.err = true;\n          a1 = this.columns;\n        }\n        if (codingPos & 1 ^ blackPixels) {\n          ++codingPos;\n        }\n        codingLine[codingPos] = a1;\n      } else if (a1 < codingLine[codingPos]) {\n        if (a1 < 0) {\n          (0, _util.info)('invalid code');\n          this.err = true;\n          a1 = 0;\n        }\n        while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n          --codingPos;\n        }\n        codingLine[codingPos] = a1;\n      }\n      this.codingPos = codingPos;\n    },\n    _findTableCode: function _findTableCode(start, end, table, limit) {\n      var limitValue = limit || 0;\n      for (var i = start; i <= end; ++i) {\n        var code = this._lookBits(i);\n        if (code === ccittEOF) {\n          return [true, 1, false];\n        }\n        if (i < end) {\n          code <<= end - i;\n        }\n        if (!limitValue || code >= limitValue) {\n          var p = table[code - limitValue];\n          if (p[0] === i) {\n            this._eatBits(i);\n            return [true, p[1], true];\n          }\n        }\n      }\n      return [false, 0, false];\n    },\n    _getTwoDimCode: function _getTwoDimCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(7);\n        p = twoDimTable[code];\n        if (p && p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 7, twoDimTable);\n        if (result[0] && result[2]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('Bad two dim code');\n      return ccittEOF;\n    },\n    _getWhiteCode: function _getWhiteCode() {\n      var code = 0;\n      var p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(12);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 5 === 0) {\n          p = whiteTable1[code];\n        } else {\n          p = whiteTable2[code >> 3];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(1, 9, whiteTable2);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(11, 12, whiteTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad white code');\n      this._eatBits(1);\n      return 1;\n    },\n    _getBlackCode: function _getBlackCode() {\n      var code = void 0,\n          p = void 0;\n      if (this.eoblock) {\n        code = this._lookBits(13);\n        if (code === ccittEOF) {\n          return 1;\n        }\n        if (code >> 7 === 0) {\n          p = blackTable1[code];\n        } else if (code >> 9 === 0 && code >> 7 !== 0) {\n          p = blackTable2[(code >> 1) - 64];\n        } else {\n          p = blackTable3[code >> 7];\n        }\n        if (p[0] > 0) {\n          this._eatBits(p[0]);\n          return p[1];\n        }\n      } else {\n        var result = this._findTableCode(2, 6, blackTable3);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(7, 12, blackTable2, 64);\n        if (result[0]) {\n          return result[1];\n        }\n        result = this._findTableCode(10, 13, blackTable1);\n        if (result[0]) {\n          return result[1];\n        }\n      }\n      (0, _util.info)('bad black code');\n      this._eatBits(1);\n      return 1;\n    },\n    _lookBits: function _lookBits(n) {\n      var c = void 0;\n      while (this.inputBits < n) {\n        if ((c = this.source.next()) === -1) {\n          if (this.inputBits === 0) {\n            return ccittEOF;\n          }\n          return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n        }\n        this.inputBuf = this.inputBuf << 8 | c;\n        this.inputBits += 8;\n      }\n      return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n    },\n    _eatBits: function _eatBits(n) {\n      if ((this.inputBits -= n) < 0) {\n        this.inputBits = 0;\n      }\n    }\n  };\n  return CCITTFaxDecoder;\n}();\nexports.CCITTFaxDecoder = CCITTFaxDecoder;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FileSpec = exports.XRef = exports.ObjectLoader = exports.Catalog = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _crypto = require('./crypto');\n\nvar _colorspace = require('./colorspace');\n\nvar Catalog = function CatalogClosure() {\n  function Catalog(pdfManager, xref, pageFactory) {\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.catDict = xref.getCatalogObj();\n    if (!(0, _primitives.isDict)(this.catDict)) {\n      throw new _util.FormatError('catalog object is not a dictionary');\n    }\n    this.fontCache = new _primitives.RefSetCache();\n    this.builtInCMapCache = Object.create(null);\n    this.pageKidsCountCache = new _primitives.RefSetCache();\n    this.pageFactory = pageFactory;\n    this.pagePromises = [];\n  }\n  Catalog.prototype = {\n    get metadata() {\n      var streamRef = this.catDict.getRaw('Metadata');\n      if (!(0, _primitives.isRef)(streamRef)) {\n        return (0, _util.shadow)(this, 'metadata', null);\n      }\n      var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n      var stream = this.xref.fetch(streamRef, !encryptMetadata);\n      var metadata;\n      if (stream && (0, _primitives.isDict)(stream.dict)) {\n        var type = stream.dict.get('Type');\n        var subtype = stream.dict.get('Subtype');\n        if ((0, _primitives.isName)(type, 'Metadata') && (0, _primitives.isName)(subtype, 'XML')) {\n          try {\n            metadata = (0, _util.stringToUTF8String)((0, _util.bytesToString)(stream.getBytes()));\n          } catch (e) {\n            if (e instanceof _util.MissingDataException) {\n              throw e;\n            }\n            (0, _util.info)('Skipping invalid metadata.');\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'metadata', metadata);\n    },\n    get toplevelPagesDict() {\n      var pagesObj = this.catDict.get('Pages');\n      if (!(0, _primitives.isDict)(pagesObj)) {\n        throw new _util.FormatError('invalid top-level pages dictionary');\n      }\n      return (0, _util.shadow)(this, 'toplevelPagesDict', pagesObj);\n    },\n    get documentOutline() {\n      var obj = null;\n      try {\n        obj = this.readDocumentOutline();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read document outline');\n      }\n      return (0, _util.shadow)(this, 'documentOutline', obj);\n    },\n    readDocumentOutline: function Catalog_readDocumentOutline() {\n      var obj = this.catDict.get('Outlines');\n      if (!(0, _primitives.isDict)(obj)) {\n        return null;\n      }\n      obj = obj.getRaw('First');\n      if (!(0, _primitives.isRef)(obj)) {\n        return null;\n      }\n      var root = { items: [] };\n      var queue = [{\n        obj: obj,\n        parent: root\n      }];\n      var processed = new _primitives.RefSet();\n      processed.put(obj);\n      var xref = this.xref,\n          blackColor = new Uint8Array(3);\n      while (queue.length > 0) {\n        var i = queue.shift();\n        var outlineDict = xref.fetchIfRef(i.obj);\n        if (outlineDict === null) {\n          continue;\n        }\n        if (!outlineDict.has('Title')) {\n          throw new _util.FormatError('Invalid outline item');\n        }\n        var data = {\n          url: null,\n          dest: null\n        };\n        Catalog.parseDestDictionary({\n          destDict: outlineDict,\n          resultObj: data,\n          docBaseUrl: this.pdfManager.docBaseUrl\n        });\n        var title = outlineDict.get('Title');\n        var flags = outlineDict.get('F') || 0;\n        var color = outlineDict.getArray('C'),\n            rgbColor = blackColor;\n        if (Array.isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n          rgbColor = _colorspace.ColorSpace.singletons.rgb.getRgb(color, 0);\n        }\n        var outlineItem = {\n          dest: data.dest,\n          url: data.url,\n          unsafeUrl: data.unsafeUrl,\n          newWindow: data.newWindow,\n          title: (0, _util.stringToPDFString)(title),\n          color: rgbColor,\n          count: outlineDict.get('Count'),\n          bold: !!(flags & 2),\n          italic: !!(flags & 1),\n          items: []\n        };\n        i.parent.items.push(outlineItem);\n        obj = outlineDict.getRaw('First');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: outlineItem\n          });\n          processed.put(obj);\n        }\n        obj = outlineDict.getRaw('Next');\n        if ((0, _primitives.isRef)(obj) && !processed.has(obj)) {\n          queue.push({\n            obj: obj,\n            parent: i.parent\n          });\n          processed.put(obj);\n        }\n      }\n      return root.items.length > 0 ? root.items : null;\n    },\n    get numPages() {\n      var obj = this.toplevelPagesDict.get('Count');\n      if (!Number.isInteger(obj)) {\n        throw new _util.FormatError('page count in top level pages object is not an integer');\n      }\n      return (0, _util.shadow)(this, 'numPages', obj);\n    },\n    get destinations() {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dests = {},\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        obj = nameDictionaryRef;\n        obj.forEach(function catalogForEach(key, value) {\n          if (!value) {\n            return;\n          }\n          dests[key] = fetchDestination(value);\n        });\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          dests[name] = fetchDestination(names[name]);\n        }\n      }\n      return (0, _util.shadow)(this, 'destinations', dests);\n    },\n    getDestination: function Catalog_getDestination(destinationId) {\n      function fetchDestination(dest) {\n        return (0, _primitives.isDict)(dest) ? dest.get('D') : dest;\n      }\n      var xref = this.xref;\n      var dest = null,\n          nameTreeRef,\n          nameDictionaryRef;\n      var obj = this.catDict.get('Names');\n      if (obj && obj.has('Dests')) {\n        nameTreeRef = obj.getRaw('Dests');\n      } else if (this.catDict.has('Dests')) {\n        nameDictionaryRef = this.catDict.get('Dests');\n      }\n      if (nameDictionaryRef) {\n        var value = nameDictionaryRef.get(destinationId);\n        if (value) {\n          dest = fetchDestination(value);\n        }\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        dest = fetchDestination(nameTree.get(destinationId));\n      }\n      return dest;\n    },\n    get pageLabels() {\n      var obj = null;\n      try {\n        obj = this.readPageLabels();\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Unable to read page labels.');\n      }\n      return (0, _util.shadow)(this, 'pageLabels', obj);\n    },\n    readPageLabels: function Catalog_readPageLabels() {\n      var obj = this.catDict.getRaw('PageLabels');\n      if (!obj) {\n        return null;\n      }\n      var pageLabels = new Array(this.numPages);\n      var style = null;\n      var prefix = '';\n      var numberTree = new NumberTree(obj, this.xref);\n      var nums = numberTree.getAll();\n      var currentLabel = '',\n          currentIndex = 1;\n      for (var i = 0, ii = this.numPages; i < ii; i++) {\n        if (i in nums) {\n          var labelDict = nums[i];\n          if (!(0, _primitives.isDict)(labelDict)) {\n            throw new _util.FormatError('The PageLabel is not a dictionary.');\n          }\n          var type = labelDict.get('Type');\n          if (type && !(0, _primitives.isName)(type, 'PageLabel')) {\n            throw new _util.FormatError('Invalid type in PageLabel dictionary.');\n          }\n          var s = labelDict.get('S');\n          if (s && !(0, _primitives.isName)(s)) {\n            throw new _util.FormatError('Invalid style in PageLabel dictionary.');\n          }\n          style = s ? s.name : null;\n          var p = labelDict.get('P');\n          if (p && !(0, _util.isString)(p)) {\n            throw new _util.FormatError('Invalid prefix in PageLabel dictionary.');\n          }\n          prefix = p ? (0, _util.stringToPDFString)(p) : '';\n          var st = labelDict.get('St');\n          if (st && !(Number.isInteger(st) && st >= 1)) {\n            throw new _util.FormatError('Invalid start in PageLabel dictionary.');\n          }\n          currentIndex = st || 1;\n        }\n        switch (style) {\n          case 'D':\n            currentLabel = currentIndex;\n            break;\n          case 'R':\n          case 'r':\n            currentLabel = _util.Util.toRoman(currentIndex, style === 'r');\n            break;\n          case 'A':\n          case 'a':\n            var LIMIT = 26;\n            var A_UPPER_CASE = 0x41,\n                A_LOWER_CASE = 0x61;\n            var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n            var letterIndex = currentIndex - 1;\n            var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n            var charBuf = [];\n            for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n              charBuf.push(character);\n            }\n            currentLabel = charBuf.join('');\n            break;\n          default:\n            if (style) {\n              throw new _util.FormatError('Invalid style \"' + style + '\" in PageLabel dictionary.');\n            }\n        }\n        pageLabels[i] = prefix + currentLabel;\n        currentLabel = '';\n        currentIndex++;\n      }\n      return pageLabels;\n    },\n    get pageMode() {\n      var obj = this.catDict.get('PageMode');\n      var pageMode = 'UseNone';\n      if ((0, _primitives.isName)(obj)) {\n        switch (obj.name) {\n          case 'UseNone':\n          case 'UseOutlines':\n          case 'UseThumbs':\n          case 'FullScreen':\n          case 'UseOC':\n          case 'UseAttachments':\n            pageMode = obj.name;\n        }\n      }\n      return (0, _util.shadow)(this, 'pageMode', pageMode);\n    },\n    get attachments() {\n      var xref = this.xref;\n      var attachments = null,\n          nameTreeRef;\n      var obj = this.catDict.get('Names');\n      if (obj) {\n        nameTreeRef = obj.getRaw('EmbeddedFiles');\n      }\n      if (nameTreeRef) {\n        var nameTree = new NameTree(nameTreeRef, xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var fs = new FileSpec(names[name], xref);\n          if (!attachments) {\n            attachments = Object.create(null);\n          }\n          attachments[(0, _util.stringToPDFString)(name)] = fs.serializable;\n        }\n      }\n      return (0, _util.shadow)(this, 'attachments', attachments);\n    },\n    get javaScript() {\n      var xref = this.xref;\n      var obj = this.catDict.get('Names');\n      var javaScript = null;\n      function appendIfJavaScriptDict(jsDict) {\n        var type = jsDict.get('S');\n        if (!(0, _primitives.isName)(type, 'JavaScript')) {\n          return;\n        }\n        var js = jsDict.get('JS');\n        if ((0, _primitives.isStream)(js)) {\n          js = (0, _util.bytesToString)(js.getBytes());\n        } else if (!(0, _util.isString)(js)) {\n          return;\n        }\n        if (!javaScript) {\n          javaScript = [];\n        }\n        javaScript.push((0, _util.stringToPDFString)(js));\n      }\n      if (obj && obj.has('JavaScript')) {\n        var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n        var names = nameTree.getAll();\n        for (var name in names) {\n          var jsDict = names[name];\n          if ((0, _primitives.isDict)(jsDict)) {\n            appendIfJavaScriptDict(jsDict);\n          }\n        }\n      }\n      var openactionDict = this.catDict.get('OpenAction');\n      if ((0, _primitives.isDict)(openactionDict, 'Action')) {\n        var actionType = openactionDict.get('S');\n        if ((0, _primitives.isName)(actionType, 'Named')) {\n          var action = openactionDict.get('N');\n          if ((0, _primitives.isName)(action, 'Print')) {\n            if (!javaScript) {\n              javaScript = [];\n            }\n            javaScript.push('print({});');\n          }\n        } else {\n          appendIfJavaScriptDict(openactionDict);\n        }\n      }\n      return (0, _util.shadow)(this, 'javaScript', javaScript);\n    },\n    cleanup: function Catalog_cleanup() {\n      var _this = this;\n\n      this.pageKidsCountCache.clear();\n      var promises = [];\n      this.fontCache.forEach(function (promise) {\n        promises.push(promise);\n      });\n      return Promise.all(promises).then(function (translatedFonts) {\n        for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n          var font = translatedFonts[i].dict;\n          delete font.translated;\n        }\n        _this.fontCache.clear();\n        _this.builtInCMapCache = Object.create(null);\n      });\n    },\n    getPage: function Catalog_getPage(pageIndex) {\n      var _this2 = this;\n\n      if (!(pageIndex in this.pagePromises)) {\n        this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (_ref) {\n          var _ref2 = _slicedToArray(_ref, 2),\n              dict = _ref2[0],\n              ref = _ref2[1];\n\n          return _this2.pageFactory.createPage(pageIndex, dict, ref, _this2.fontCache, _this2.builtInCMapCache);\n        });\n      }\n      return this.pagePromises[pageIndex];\n    },\n    getPageDict: function Catalog_getPageDict(pageIndex) {\n      var capability = (0, _util.createPromiseCapability)();\n      var nodesToVisit = [this.catDict.getRaw('Pages')];\n      var count,\n          currentPageIndex = 0;\n      var xref = this.xref,\n          pageKidsCountCache = this.pageKidsCountCache;\n      function next() {\n        while (nodesToVisit.length) {\n          var currentNode = nodesToVisit.pop();\n          if ((0, _primitives.isRef)(currentNode)) {\n            count = pageKidsCountCache.get(currentNode);\n            if (count > 0 && currentPageIndex + count < pageIndex) {\n              currentPageIndex += count;\n              continue;\n            }\n            xref.fetchAsync(currentNode).then(function (obj) {\n              if ((0, _primitives.isDict)(obj, 'Page') || (0, _primitives.isDict)(obj) && !obj.has('Kids')) {\n                if (pageIndex === currentPageIndex) {\n                  if (currentNode && !pageKidsCountCache.has(currentNode)) {\n                    pageKidsCountCache.put(currentNode, 1);\n                  }\n                  capability.resolve([obj, currentNode]);\n                } else {\n                  currentPageIndex++;\n                  next();\n                }\n                return;\n              }\n              nodesToVisit.push(obj);\n              next();\n            }, capability.reject);\n            return;\n          }\n          if (!(0, _primitives.isDict)(currentNode)) {\n            capability.reject(new _util.FormatError('page dictionary kid reference points to wrong type of object'));\n            return;\n          }\n          count = currentNode.get('Count');\n          var objId = currentNode.objId;\n          if (objId && !pageKidsCountCache.has(objId)) {\n            pageKidsCountCache.put(objId, count);\n          }\n          if (currentPageIndex + count <= pageIndex) {\n            currentPageIndex += count;\n            continue;\n          }\n          var kids = currentNode.get('Kids');\n          if (!Array.isArray(kids)) {\n            capability.reject(new _util.FormatError('page dictionary kids object is not an array'));\n            return;\n          }\n          for (var last = kids.length - 1; last >= 0; last--) {\n            nodesToVisit.push(kids[last]);\n          }\n        }\n        capability.reject(new Error('Page index ' + pageIndex + ' not found.'));\n      }\n      next();\n      return capability.promise;\n    },\n    getPageIndex: function Catalog_getPageIndex(pageRef) {\n      var xref = this.xref;\n      function pagesBeforeRef(kidRef) {\n        var total = 0;\n        var parentRef;\n        return xref.fetchAsync(kidRef).then(function (node) {\n          if ((0, _primitives.isRefsEqual)(kidRef, pageRef) && !(0, _primitives.isDict)(node, 'Page') && !((0, _primitives.isDict)(node) && !node.has('Type') && node.has('Contents'))) {\n            throw new _util.FormatError('The reference does not point to a /Page Dict.');\n          }\n          if (!node) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(node)) {\n            throw new _util.FormatError('node must be a Dict.');\n          }\n          parentRef = node.getRaw('Parent');\n          return node.getAsync('Parent');\n        }).then(function (parent) {\n          if (!parent) {\n            return null;\n          }\n          if (!(0, _primitives.isDict)(parent)) {\n            throw new _util.FormatError('parent must be a Dict.');\n          }\n          return parent.getAsync('Kids');\n        }).then(function (kids) {\n          if (!kids) {\n            return null;\n          }\n          var kidPromises = [];\n          var found = false;\n          for (var i = 0; i < kids.length; i++) {\n            var kid = kids[i];\n            if (!(0, _primitives.isRef)(kid)) {\n              throw new _util.FormatError('kid must be a Ref.');\n            }\n            if (kid.num === kidRef.num) {\n              found = true;\n              break;\n            }\n            kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n              if (kid.has('Count')) {\n                var count = kid.get('Count');\n                total += count;\n              } else {\n                total++;\n              }\n            }));\n          }\n          if (!found) {\n            throw new _util.FormatError('kid ref not found in parents kids');\n          }\n          return Promise.all(kidPromises).then(function () {\n            return [total, parentRef];\n          });\n        });\n      }\n      var total = 0;\n      function next(ref) {\n        return pagesBeforeRef(ref).then(function (args) {\n          if (!args) {\n            return total;\n          }\n          var count = args[0];\n          var parentRef = args[1];\n          total += count;\n          return next(parentRef);\n        });\n      }\n      return next(pageRef);\n    }\n  };\n  Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n    function addDefaultProtocolToUrl(url) {\n      if (url.indexOf('www.') === 0) {\n        return 'http://' + url;\n      }\n      return url;\n    }\n    function tryConvertUrlEncoding(url) {\n      try {\n        return (0, _util.stringToUTF8String)(url);\n      } catch (e) {\n        return url;\n      }\n    }\n    var destDict = params.destDict;\n    if (!(0, _primitives.isDict)(destDict)) {\n      (0, _util.warn)('parseDestDictionary: \"destDict\" must be a dictionary.');\n      return;\n    }\n    var resultObj = params.resultObj;\n    if ((typeof resultObj === 'undefined' ? 'undefined' : _typeof(resultObj)) !== 'object') {\n      (0, _util.warn)('parseDestDictionary: \"resultObj\" must be an object.');\n      return;\n    }\n    var docBaseUrl = params.docBaseUrl || null;\n    var action = destDict.get('A'),\n        url,\n        dest;\n    if (!(0, _primitives.isDict)(action) && destDict.has('Dest')) {\n      action = destDict.get('Dest');\n    }\n    if ((0, _primitives.isDict)(action)) {\n      var actionType = action.get('S');\n      if (!(0, _primitives.isName)(actionType)) {\n        (0, _util.warn)('parseDestDictionary: Invalid type in Action dictionary.');\n        return;\n      }\n      var actionName = actionType.name;\n      switch (actionName) {\n        case 'URI':\n          url = action.get('URI');\n          if ((0, _primitives.isName)(url)) {\n            url = '/' + url.name;\n          } else if ((0, _util.isString)(url)) {\n            url = addDefaultProtocolToUrl(url);\n          }\n          break;\n        case 'GoTo':\n          dest = action.get('D');\n          break;\n        case 'Launch':\n        case 'GoToR':\n          var urlDict = action.get('F');\n          if ((0, _primitives.isDict)(urlDict)) {\n            url = urlDict.get('F') || null;\n          } else if ((0, _util.isString)(urlDict)) {\n            url = urlDict;\n          }\n          var remoteDest = action.get('D');\n          if (remoteDest) {\n            if ((0, _primitives.isName)(remoteDest)) {\n              remoteDest = remoteDest.name;\n            }\n            if ((0, _util.isString)(url)) {\n              var baseUrl = url.split('#')[0];\n              if ((0, _util.isString)(remoteDest)) {\n                url = baseUrl + '#' + remoteDest;\n              } else if (Array.isArray(remoteDest)) {\n                url = baseUrl + '#' + JSON.stringify(remoteDest);\n              }\n            }\n          }\n          var newWindow = action.get('NewWindow');\n          if ((0, _util.isBool)(newWindow)) {\n            resultObj.newWindow = newWindow;\n          }\n          break;\n        case 'Named':\n          var namedAction = action.get('N');\n          if ((0, _primitives.isName)(namedAction)) {\n            resultObj.action = namedAction.name;\n          }\n          break;\n        case 'JavaScript':\n          var jsAction = action.get('JS'),\n              js;\n          if ((0, _primitives.isStream)(jsAction)) {\n            js = (0, _util.bytesToString)(jsAction.getBytes());\n          } else if ((0, _util.isString)(jsAction)) {\n            js = jsAction;\n          }\n          if (js) {\n            var URL_OPEN_METHODS = ['app.launchURL', 'window.open'];\n            var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n            var jsUrl = regex.exec((0, _util.stringToPDFString)(js));\n            if (jsUrl && jsUrl[2]) {\n              url = jsUrl[2];\n              if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n                resultObj.newWindow = true;\n              }\n              break;\n            }\n          }\n        default:\n          (0, _util.warn)('parseDestDictionary: Unsupported Action type \"' + actionName + '\".');\n          break;\n      }\n    } else if (destDict.has('Dest')) {\n      dest = destDict.get('Dest');\n    }\n    if ((0, _util.isString)(url)) {\n      url = tryConvertUrlEncoding(url);\n      var absoluteUrl = (0, _util.createValidAbsoluteUrl)(url, docBaseUrl);\n      if (absoluteUrl) {\n        resultObj.url = absoluteUrl.href;\n      }\n      resultObj.unsafeUrl = url;\n    }\n    if (dest) {\n      if ((0, _primitives.isName)(dest)) {\n        dest = dest.name;\n      }\n      if ((0, _util.isString)(dest) || Array.isArray(dest)) {\n        resultObj.dest = dest;\n      }\n    }\n  };\n  return Catalog;\n}();\nvar XRef = function XRefClosure() {\n  function XRef(stream, pdfManager) {\n    this.stream = stream;\n    this.pdfManager = pdfManager;\n    this.entries = [];\n    this.xrefstms = Object.create(null);\n    this.cache = [];\n    this.stats = {\n      streamTypes: [],\n      fontTypes: []\n    };\n  }\n  XRef.prototype = {\n    setStartXRef: function XRef_setStartXRef(startXRef) {\n      this.startXRefQueue = [startXRef];\n    },\n    parse: function XRef_parse(recoveryMode) {\n      var trailerDict;\n      if (!recoveryMode) {\n        trailerDict = this.readXRef();\n      } else {\n        (0, _util.warn)('Indexing all PDF objects');\n        trailerDict = this.indexObjects();\n      }\n      trailerDict.assignXref(this);\n      this.trailer = trailerDict;\n      var encrypt = trailerDict.get('Encrypt');\n      if ((0, _primitives.isDict)(encrypt)) {\n        var ids = trailerDict.get('ID');\n        var fileId = ids && ids.length ? ids[0] : '';\n        encrypt.suppressEncryption = true;\n        this.encrypt = new _crypto.CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n      }\n      if (!(this.root = trailerDict.get('Root'))) {\n        throw new _util.FormatError('Invalid root reference');\n      }\n    },\n    processXRefTable: function XRef_processXRefTable(parser) {\n      if (!('tableState' in this)) {\n        this.tableState = {\n          entryNum: 0,\n          streamPos: parser.lexer.stream.pos,\n          parserBuf1: parser.buf1,\n          parserBuf2: parser.buf2\n        };\n      }\n      var obj = this.readXRefTable(parser);\n      if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n        throw new _util.FormatError('Invalid XRef table: could not find trailer dictionary');\n      }\n      var dict = parser.getObj();\n      if (!(0, _primitives.isDict)(dict) && dict.dict) {\n        dict = dict.dict;\n      }\n      if (!(0, _primitives.isDict)(dict)) {\n        throw new _util.FormatError('Invalid XRef table: could not parse trailer dictionary');\n      }\n      delete this.tableState;\n      return dict;\n    },\n    readXRefTable: function XRef_readXRefTable(parser) {\n      var stream = parser.lexer.stream;\n      var tableState = this.tableState;\n      stream.pos = tableState.streamPos;\n      parser.buf1 = tableState.parserBuf1;\n      parser.buf2 = tableState.parserBuf2;\n      var obj;\n      while (true) {\n        if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n          if ((0, _primitives.isCmd)(obj = parser.getObj(), 'trailer')) {\n            break;\n          }\n          tableState.firstEntryNum = obj;\n          tableState.entryCount = parser.getObj();\n        }\n        var first = tableState.firstEntryNum;\n        var count = tableState.entryCount;\n        if (!Number.isInteger(first) || !Number.isInteger(count)) {\n          throw new _util.FormatError('Invalid XRef table: wrong types in subsection header');\n        }\n        for (var i = tableState.entryNum; i < count; i++) {\n          tableState.streamPos = stream.pos;\n          tableState.entryNum = i;\n          tableState.parserBuf1 = parser.buf1;\n          tableState.parserBuf2 = parser.buf2;\n          var entry = {};\n          entry.offset = parser.getObj();\n          entry.gen = parser.getObj();\n          var type = parser.getObj();\n          if ((0, _primitives.isCmd)(type, 'f')) {\n            entry.free = true;\n          } else if ((0, _primitives.isCmd)(type, 'n')) {\n            entry.uncompressed = true;\n          }\n          if (!Number.isInteger(entry.offset) || !Number.isInteger(entry.gen) || !(entry.free || entry.uncompressed)) {\n            throw new _util.FormatError('Invalid entry in XRef subsection: ' + first + ', ' + count);\n          }\n          if (i === 0 && entry.free && first === 1) {\n            first = 0;\n          }\n          if (!this.entries[i + first]) {\n            this.entries[i + first] = entry;\n          }\n        }\n        tableState.entryNum = 0;\n        tableState.streamPos = stream.pos;\n        tableState.parserBuf1 = parser.buf1;\n        tableState.parserBuf2 = parser.buf2;\n        delete tableState.firstEntryNum;\n        delete tableState.entryCount;\n      }\n      if (this.entries[0] && !this.entries[0].free) {\n        throw new _util.FormatError('Invalid XRef table: unexpected first object');\n      }\n      return obj;\n    },\n    processXRefStream: function XRef_processXRefStream(stream) {\n      if (!('streamState' in this)) {\n        var streamParameters = stream.dict;\n        var byteWidths = streamParameters.get('W');\n        var range = streamParameters.get('Index');\n        if (!range) {\n          range = [0, streamParameters.get('Size')];\n        }\n        this.streamState = {\n          entryRanges: range,\n          byteWidths: byteWidths,\n          entryNum: 0,\n          streamPos: stream.pos\n        };\n      }\n      this.readXRefStream(stream);\n      delete this.streamState;\n      return stream.dict;\n    },\n    readXRefStream: function XRef_readXRefStream(stream) {\n      var i, j;\n      var streamState = this.streamState;\n      stream.pos = streamState.streamPos;\n      var byteWidths = streamState.byteWidths;\n      var typeFieldWidth = byteWidths[0];\n      var offsetFieldWidth = byteWidths[1];\n      var generationFieldWidth = byteWidths[2];\n      var entryRanges = streamState.entryRanges;\n      while (entryRanges.length > 0) {\n        var first = entryRanges[0];\n        var n = entryRanges[1];\n        if (!Number.isInteger(first) || !Number.isInteger(n)) {\n          throw new _util.FormatError('Invalid XRef range fields: ' + first + ', ' + n);\n        }\n        if (!Number.isInteger(typeFieldWidth) || !Number.isInteger(offsetFieldWidth) || !Number.isInteger(generationFieldWidth)) {\n          throw new _util.FormatError('Invalid XRef entry fields length: ' + first + ', ' + n);\n        }\n        for (i = streamState.entryNum; i < n; ++i) {\n          streamState.entryNum = i;\n          streamState.streamPos = stream.pos;\n          var type = 0,\n              offset = 0,\n              generation = 0;\n          for (j = 0; j < typeFieldWidth; ++j) {\n            type = type << 8 | stream.getByte();\n          }\n          if (typeFieldWidth === 0) {\n            type = 1;\n          }\n          for (j = 0; j < offsetFieldWidth; ++j) {\n            offset = offset << 8 | stream.getByte();\n          }\n          for (j = 0; j < generationFieldWidth; ++j) {\n            generation = generation << 8 | stream.getByte();\n          }\n          var entry = {};\n          entry.offset = offset;\n          entry.gen = generation;\n          switch (type) {\n            case 0:\n              entry.free = true;\n              break;\n            case 1:\n              entry.uncompressed = true;\n              break;\n            case 2:\n              break;\n            default:\n              throw new _util.FormatError('Invalid XRef entry type: ' + type);\n          }\n          if (!this.entries[first + i]) {\n            this.entries[first + i] = entry;\n          }\n        }\n        streamState.entryNum = 0;\n        streamState.streamPos = stream.pos;\n        entryRanges.splice(0, 2);\n      }\n    },\n    indexObjects: function XRef_indexObjects() {\n      var TAB = 0x9,\n          LF = 0xA,\n          CR = 0xD,\n          SPACE = 0x20;\n      var PERCENT = 0x25,\n          LT = 0x3C;\n      function readToken(data, offset) {\n        var token = '',\n            ch = data[offset];\n        while (ch !== LF && ch !== CR && ch !== LT) {\n          if (++offset >= data.length) {\n            break;\n          }\n          token += String.fromCharCode(ch);\n          ch = data[offset];\n        }\n        return token;\n      }\n      function skipUntil(data, offset, what) {\n        var length = what.length,\n            dataLength = data.length;\n        var skipped = 0;\n        while (offset < dataLength) {\n          var i = 0;\n          while (i < length && data[offset + i] === what[i]) {\n            ++i;\n          }\n          if (i >= length) {\n            break;\n          }\n          offset++;\n          skipped++;\n        }\n        return skipped;\n      }\n      var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n      var endobjRegExp = /\\bendobj[\\b\\s]$/;\n      var nestedObjRegExp = /\\s+(\\d+\\s+\\d+\\s+obj[\\b\\s])$/;\n      var CHECK_CONTENT_LENGTH = 25;\n      var trailerBytes = new Uint8Array([116, 114, 97, 105, 108, 101, 114]);\n      var startxrefBytes = new Uint8Array([115, 116, 97, 114, 116, 120, 114, 101, 102]);\n      var objBytes = new Uint8Array([111, 98, 106]);\n      var xrefBytes = new Uint8Array([47, 88, 82, 101, 102]);\n      this.entries.length = 0;\n      var stream = this.stream;\n      stream.pos = 0;\n      var buffer = stream.getBytes();\n      var position = stream.start,\n          length = buffer.length;\n      var trailers = [],\n          xrefStms = [];\n      while (position < length) {\n        var ch = buffer[position];\n        if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n          ++position;\n          continue;\n        }\n        if (ch === PERCENT) {\n          do {\n            ++position;\n            if (position >= length) {\n              break;\n            }\n            ch = buffer[position];\n          } while (ch !== LF && ch !== CR);\n          continue;\n        }\n        var token = readToken(buffer, position);\n        var m;\n        if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n          position += skipUntil(buffer, position, trailerBytes);\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else if (m = objRegExp.exec(token)) {\n          if (typeof this.entries[m[1]] === 'undefined') {\n            this.entries[m[1]] = {\n              offset: position - stream.start,\n              gen: m[2] | 0,\n              uncompressed: true\n            };\n          }\n          var contentLength = void 0,\n              startPos = position + token.length;\n          while (startPos < buffer.length) {\n            var endPos = startPos + skipUntil(buffer, startPos, objBytes) + 4;\n            contentLength = endPos - position;\n            var checkPos = Math.max(endPos - CHECK_CONTENT_LENGTH, startPos);\n            var tokenStr = (0, _util.bytesToString)(buffer.subarray(checkPos, endPos));\n            if (endobjRegExp.test(tokenStr)) {\n              break;\n            } else {\n              var objToken = nestedObjRegExp.exec(tokenStr);\n              if (objToken && objToken[1]) {\n                (0, _util.warn)('indexObjects: Found new \"obj\" inside of another \"obj\", ' + 'caused by missing \"endobj\" -- trying to recover.');\n                contentLength -= objToken[1].length;\n                break;\n              }\n            }\n            startPos += contentLength;\n          }\n          var content = buffer.subarray(position, position + contentLength);\n          var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n          if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n            xrefStms.push(position - stream.start);\n            this.xrefstms[position - stream.start] = 1;\n          }\n          position += contentLength;\n        } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n          trailers.push(position);\n          position += skipUntil(buffer, position, startxrefBytes);\n        } else {\n          position += token.length + 1;\n        }\n      }\n      var i, ii;\n      for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n        this.startXRefQueue.push(xrefStms[i]);\n        this.readXRef(true);\n      }\n      var dict;\n      for (i = 0, ii = trailers.length; i < ii; ++i) {\n        stream.pos = trailers[i];\n        var parser = new _parser.Parser(new _parser.Lexer(stream), true, this, true);\n        var obj = parser.getObj();\n        if (!(0, _primitives.isCmd)(obj, 'trailer')) {\n          continue;\n        }\n        dict = parser.getObj();\n        if (!(0, _primitives.isDict)(dict)) {\n          continue;\n        }\n        if (dict.has('ID')) {\n          return dict;\n        }\n      }\n      if (dict) {\n        return dict;\n      }\n      throw new _util.InvalidPDFException('Invalid PDF structure');\n    },\n    readXRef: function XRef_readXRef(recoveryMode) {\n      var stream = this.stream;\n      var startXRefParsedCache = Object.create(null);\n      try {\n        while (this.startXRefQueue.length) {\n          var startXRef = this.startXRefQueue[0];\n          if (startXRefParsedCache[startXRef]) {\n            (0, _util.warn)('readXRef - skipping XRef table since it was already parsed.');\n            this.startXRefQueue.shift();\n            continue;\n          }\n          startXRefParsedCache[startXRef] = true;\n          stream.pos = startXRef + stream.start;\n          var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n          var obj = parser.getObj();\n          var dict;\n          if ((0, _primitives.isCmd)(obj, 'xref')) {\n            dict = this.processXRefTable(parser);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            obj = dict.get('XRefStm');\n            if (Number.isInteger(obj)) {\n              var pos = obj;\n              if (!(pos in this.xrefstms)) {\n                this.xrefstms[pos] = 1;\n                this.startXRefQueue.push(pos);\n              }\n            }\n          } else if (Number.isInteger(obj)) {\n            if (!Number.isInteger(parser.getObj()) || !(0, _primitives.isCmd)(parser.getObj(), 'obj') || !(0, _primitives.isStream)(obj = parser.getObj())) {\n              throw new _util.FormatError('Invalid XRef stream');\n            }\n            dict = this.processXRefStream(obj);\n            if (!this.topDict) {\n              this.topDict = dict;\n            }\n            if (!dict) {\n              throw new _util.FormatError('Failed to read XRef stream');\n            }\n          } else {\n            throw new _util.FormatError('Invalid XRef stream header');\n          }\n          obj = dict.get('Prev');\n          if (Number.isInteger(obj)) {\n            this.startXRefQueue.push(obj);\n          } else if ((0, _primitives.isRef)(obj)) {\n            this.startXRefQueue.push(obj.num);\n          }\n          this.startXRefQueue.shift();\n        }\n        return this.topDict;\n      } catch (e) {\n        if (e instanceof _util.MissingDataException) {\n          throw e;\n        }\n        (0, _util.info)('(while reading XRef): ' + e);\n      }\n      if (recoveryMode) {\n        return;\n      }\n      throw new _util.XRefParseException();\n    },\n    getEntry: function XRef_getEntry(i) {\n      var xrefEntry = this.entries[i];\n      if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n        return xrefEntry;\n      }\n      return null;\n    },\n    fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return obj;\n      }\n      return this.fetch(obj, suppressEncryption);\n    },\n    fetch: function XRef_fetch(ref, suppressEncryption) {\n      if (!(0, _primitives.isRef)(ref)) {\n        throw new Error('ref object is not a reference');\n      }\n      var num = ref.num;\n      if (num in this.cache) {\n        var cacheEntry = this.cache[num];\n        if (cacheEntry instanceof _primitives.Dict && !cacheEntry.objId) {\n          cacheEntry.objId = ref.toString();\n        }\n        return cacheEntry;\n      }\n      var xrefEntry = this.getEntry(num);\n      if (xrefEntry === null) {\n        return this.cache[num] = null;\n      }\n      if (xrefEntry.uncompressed) {\n        xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n      } else {\n        xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n      }\n      if ((0, _primitives.isDict)(xrefEntry)) {\n        xrefEntry.objId = ref.toString();\n      } else if ((0, _primitives.isStream)(xrefEntry)) {\n        xrefEntry.dict.objId = ref.toString();\n      }\n      return xrefEntry;\n    },\n    fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n      var gen = ref.gen;\n      var num = ref.num;\n      if (xrefEntry.gen !== gen) {\n        throw new _util.FormatError('inconsistent generation in XRef');\n      }\n      var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n      var parser = new _parser.Parser(new _parser.Lexer(stream), true, this);\n      var obj1 = parser.getObj();\n      var obj2 = parser.getObj();\n      var obj3 = parser.getObj();\n      if (!Number.isInteger(obj1)) {\n        obj1 = parseInt(obj1, 10);\n      }\n      if (!Number.isInteger(obj2)) {\n        obj2 = parseInt(obj2, 10);\n      }\n      if (obj1 !== num || obj2 !== gen || !(0, _primitives.isCmd)(obj3)) {\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (obj3.cmd !== 'obj') {\n        if (obj3.cmd.indexOf('obj') === 0) {\n          num = parseInt(obj3.cmd.substring(3), 10);\n          if (!Number.isNaN(num)) {\n            return num;\n          }\n        }\n        throw new _util.FormatError('bad XRef entry');\n      }\n      if (this.encrypt && !suppressEncryption) {\n        xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n      } else {\n        xrefEntry = parser.getObj();\n      }\n      if (!(0, _primitives.isStream)(xrefEntry)) {\n        this.cache[num] = xrefEntry;\n      }\n      return xrefEntry;\n    },\n    fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n      var tableOffset = xrefEntry.offset;\n      var stream = this.fetch(new _primitives.Ref(tableOffset, 0));\n      if (!(0, _primitives.isStream)(stream)) {\n        throw new _util.FormatError('bad ObjStm stream');\n      }\n      var first = stream.dict.get('First');\n      var n = stream.dict.get('N');\n      if (!Number.isInteger(first) || !Number.isInteger(n)) {\n        throw new _util.FormatError('invalid first and n parameters for ObjStm stream');\n      }\n      var parser = new _parser.Parser(new _parser.Lexer(stream), false, this);\n      parser.allowStreams = true;\n      var i,\n          entries = [],\n          num,\n          nums = [];\n      for (i = 0; i < n; ++i) {\n        num = parser.getObj();\n        if (!Number.isInteger(num)) {\n          throw new _util.FormatError('invalid object number in the ObjStm stream: ' + num);\n        }\n        nums.push(num);\n        var offset = parser.getObj();\n        if (!Number.isInteger(offset)) {\n          throw new _util.FormatError('invalid object offset in the ObjStm stream: ' + offset);\n        }\n      }\n      for (i = 0; i < n; ++i) {\n        entries.push(parser.getObj());\n        if ((0, _primitives.isCmd)(parser.buf1, 'endobj')) {\n          parser.shift();\n        }\n        num = nums[i];\n        var entry = this.entries[num];\n        if (entry && entry.offset === tableOffset && entry.gen === i) {\n          this.cache[num] = entries[i];\n        }\n      }\n      xrefEntry = entries[xrefEntry.gen];\n      if (xrefEntry === undefined) {\n        throw new _util.FormatError('bad XRef entry for compressed object');\n      }\n      return xrefEntry;\n    },\n    fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n      if (!(0, _primitives.isRef)(obj)) {\n        return Promise.resolve(obj);\n      }\n      return this.fetchAsync(obj, suppressEncryption);\n    },\n    fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n      var streamManager = this.stream.manager;\n      var xref = this;\n      return new Promise(function tryFetch(resolve, reject) {\n        try {\n          resolve(xref.fetch(ref, suppressEncryption));\n        } catch (e) {\n          if (e instanceof _util.MissingDataException) {\n            streamManager.requestRange(e.begin, e.end).then(function () {\n              tryFetch(resolve, reject);\n            }, reject);\n            return;\n          }\n          reject(e);\n        }\n      });\n    },\n    getCatalogObj: function XRef_getCatalogObj() {\n      return this.root;\n    }\n  };\n  return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n  function NameOrNumberTree(root, xref) {\n    (0, _util.unreachable)('Cannot initialize NameOrNumberTree.');\n  }\n  NameOrNumberTree.prototype = {\n    getAll: function NameOrNumberTree_getAll() {\n      var dict = Object.create(null);\n      if (!this.root) {\n        return dict;\n      }\n      var xref = this.xref;\n      var processed = new _primitives.RefSet();\n      processed.put(this.root);\n      var queue = [this.root];\n      while (queue.length > 0) {\n        var i, n;\n        var obj = xref.fetchIfRef(queue.shift());\n        if (!(0, _primitives.isDict)(obj)) {\n          continue;\n        }\n        if (obj.has('Kids')) {\n          var kids = obj.get('Kids');\n          for (i = 0, n = kids.length; i < n; i++) {\n            var kid = kids[i];\n            if (processed.has(kid)) {\n              throw new _util.FormatError('Duplicate entry in \"' + this._type + '\" tree.');\n            }\n            queue.push(kid);\n            processed.put(kid);\n          }\n          continue;\n        }\n        var entries = obj.get(this._type);\n        if (Array.isArray(entries)) {\n          for (i = 0, n = entries.length; i < n; i += 2) {\n            dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n          }\n        }\n      }\n      return dict;\n    },\n    get: function NameOrNumberTree_get(key) {\n      if (!this.root) {\n        return null;\n      }\n      var xref = this.xref;\n      var kidsOrEntries = xref.fetchIfRef(this.root);\n      var loopCount = 0;\n      var MAX_LEVELS = 10;\n      var l, r, m;\n      while (kidsOrEntries.has('Kids')) {\n        if (++loopCount > MAX_LEVELS) {\n          (0, _util.warn)('Search depth limit reached for \"' + this._type + '\" tree.');\n          return null;\n        }\n        var kids = kidsOrEntries.get('Kids');\n        if (!Array.isArray(kids)) {\n          return null;\n        }\n        l = 0;\n        r = kids.length - 1;\n        while (l <= r) {\n          m = l + r >> 1;\n          var kid = xref.fetchIfRef(kids[m]);\n          var limits = kid.get('Limits');\n          if (key < xref.fetchIfRef(limits[0])) {\n            r = m - 1;\n          } else if (key > xref.fetchIfRef(limits[1])) {\n            l = m + 1;\n          } else {\n            kidsOrEntries = xref.fetchIfRef(kids[m]);\n            break;\n          }\n        }\n        if (l > r) {\n          return null;\n        }\n      }\n      var entries = kidsOrEntries.get(this._type);\n      if (Array.isArray(entries)) {\n        l = 0;\n        r = entries.length - 2;\n        while (l <= r) {\n          m = l + r & ~1;\n          var currentKey = xref.fetchIfRef(entries[m]);\n          if (key < currentKey) {\n            r = m - 2;\n          } else if (key > currentKey) {\n            l = m + 2;\n          } else {\n            return xref.fetchIfRef(entries[m + 1]);\n          }\n        }\n      }\n      return null;\n    }\n  };\n  return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n  function NameTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Names';\n  }\n  _util.Util.inherit(NameTree, NameOrNumberTree, {});\n  return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n  function NumberTree(root, xref) {\n    this.root = root;\n    this.xref = xref;\n    this._type = 'Nums';\n  }\n  _util.Util.inherit(NumberTree, NameOrNumberTree, {});\n  return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n  function FileSpec(root, xref) {\n    if (!root || !(0, _primitives.isDict)(root)) {\n      return;\n    }\n    this.xref = xref;\n    this.root = root;\n    if (root.has('FS')) {\n      this.fs = root.get('FS');\n    }\n    this.description = root.has('Desc') ? (0, _util.stringToPDFString)(root.get('Desc')) : '';\n    if (root.has('RF')) {\n      (0, _util.warn)('Related file specifications are not supported');\n    }\n    this.contentAvailable = true;\n    if (!root.has('EF')) {\n      this.contentAvailable = false;\n      (0, _util.warn)('Non-embedded file specifications are not supported');\n    }\n  }\n  function pickPlatformItem(dict) {\n    if (dict.has('UF')) {\n      return dict.get('UF');\n    } else if (dict.has('F')) {\n      return dict.get('F');\n    } else if (dict.has('Unix')) {\n      return dict.get('Unix');\n    } else if (dict.has('Mac')) {\n      return dict.get('Mac');\n    } else if (dict.has('DOS')) {\n      return dict.get('DOS');\n    }\n    return null;\n  }\n  FileSpec.prototype = {\n    get filename() {\n      if (!this._filename && this.root) {\n        var filename = pickPlatformItem(this.root) || 'unnamed';\n        this._filename = (0, _util.stringToPDFString)(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n      }\n      return this._filename;\n    },\n    get content() {\n      if (!this.contentAvailable) {\n        return null;\n      }\n      if (!this.contentRef && this.root) {\n        this.contentRef = pickPlatformItem(this.root.get('EF'));\n      }\n      var content = null;\n      if (this.contentRef) {\n        var xref = this.xref;\n        var fileObj = xref.fetchIfRef(this.contentRef);\n        if (fileObj && (0, _primitives.isStream)(fileObj)) {\n          content = fileObj.getBytes();\n        } else {\n          (0, _util.warn)('Embedded file specification points to non-existing/invalid ' + 'content');\n        }\n      } else {\n        (0, _util.warn)('Embedded file specification does not have a content');\n      }\n      return content;\n    },\n    get serializable() {\n      return {\n        filename: this.filename,\n        content: this.content\n      };\n    }\n  };\n  return FileSpec;\n}();\nvar ObjectLoader = function () {\n  function mayHaveChildren(value) {\n    return (0, _primitives.isRef)(value) || (0, _primitives.isDict)(value) || Array.isArray(value) || (0, _primitives.isStream)(value);\n  }\n  function addChildren(node, nodesToVisit) {\n    if ((0, _primitives.isDict)(node) || (0, _primitives.isStream)(node)) {\n      var dict = (0, _primitives.isDict)(node) ? node : node.dict;\n      var dictKeys = dict.getKeys();\n      for (var i = 0, ii = dictKeys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(dictKeys[i]);\n        if (mayHaveChildren(rawValue)) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n    } else if (Array.isArray(node)) {\n      for (var _i = 0, _ii = node.length; _i < _ii; _i++) {\n        var value = node[_i];\n        if (mayHaveChildren(value)) {\n          nodesToVisit.push(value);\n        }\n      }\n    }\n  }\n  function ObjectLoader(dict, keys, xref) {\n    this.dict = dict;\n    this.keys = keys;\n    this.xref = xref;\n    this.refSet = null;\n    this.capability = null;\n  }\n  ObjectLoader.prototype = {\n    load: function load() {\n      this.capability = (0, _util.createPromiseCapability)();\n      if (!(this.xref.stream instanceof _chunked_stream.ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n        this.capability.resolve();\n        return this.capability.promise;\n      }\n      var keys = this.keys,\n          dict = this.dict;\n\n      this.refSet = new _primitives.RefSet();\n      var nodesToVisit = [];\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        var rawValue = dict.getRaw(keys[i]);\n        if (rawValue !== undefined) {\n          nodesToVisit.push(rawValue);\n        }\n      }\n      this._walk(nodesToVisit);\n      return this.capability.promise;\n    },\n    _walk: function _walk(nodesToVisit) {\n      var _this3 = this;\n\n      var nodesToRevisit = [];\n      var pendingRequests = [];\n      while (nodesToVisit.length) {\n        var currentNode = nodesToVisit.pop();\n        if ((0, _primitives.isRef)(currentNode)) {\n          if (this.refSet.has(currentNode)) {\n            continue;\n          }\n          try {\n            this.refSet.put(currentNode);\n            currentNode = this.xref.fetch(currentNode);\n          } catch (ex) {\n            if (!(ex instanceof _util.MissingDataException)) {\n              throw ex;\n            }\n            nodesToRevisit.push(currentNode);\n            pendingRequests.push({\n              begin: ex.begin,\n              end: ex.end\n            });\n          }\n        }\n        if (currentNode && currentNode.getBaseStreams) {\n          var baseStreams = currentNode.getBaseStreams();\n          var foundMissingData = false;\n          for (var i = 0, ii = baseStreams.length; i < ii; i++) {\n            var stream = baseStreams[i];\n            if (stream.getMissingChunks && stream.getMissingChunks().length) {\n              foundMissingData = true;\n              pendingRequests.push({\n                begin: stream.start,\n                end: stream.end\n              });\n            }\n          }\n          if (foundMissingData) {\n            nodesToRevisit.push(currentNode);\n          }\n        }\n        addChildren(currentNode, nodesToVisit);\n      }\n      if (pendingRequests.length) {\n        this.xref.stream.manager.requestRanges(pendingRequests).then(function () {\n          for (var _i2 = 0, _ii2 = nodesToRevisit.length; _i2 < _ii2; _i2++) {\n            var node = nodesToRevisit[_i2];\n            if ((0, _primitives.isRef)(node)) {\n              _this3.refSet.remove(node);\n            }\n          }\n          _this3._walk(nodesToRevisit);\n        }, this.capability.reject);\n        return;\n      }\n      this.refSet = null;\n      this.capability.resolve();\n    }\n  };\n  return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChunkedStreamManager = exports.ChunkedStream = undefined;\n\nvar _util = require('../shared/util');\n\nvar ChunkedStream = function ChunkedStreamClosure() {\n  function ChunkedStream(length, chunkSize, manager) {\n    this.bytes = new Uint8Array(length);\n    this.start = 0;\n    this.pos = 0;\n    this.end = length;\n    this.chunkSize = chunkSize;\n    this.loadedChunks = [];\n    this.numChunksLoaded = 0;\n    this.numChunks = Math.ceil(length / chunkSize);\n    this.manager = manager;\n    this.progressiveDataLength = 0;\n    this.lastSuccessfulEnsureByteChunk = -1;\n  }\n  ChunkedStream.prototype = {\n    getMissingChunks: function ChunkedStream_getMissingChunks() {\n      var chunks = [];\n      for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          chunks.push(chunk);\n        }\n      }\n      return chunks;\n    },\n    getBaseStreams: function ChunkedStream_getBaseStreams() {\n      return [this];\n    },\n    allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n      return this.numChunksLoaded === this.numChunks;\n    },\n    onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n      var end = begin + chunk.byteLength;\n      if (begin % this.chunkSize !== 0) {\n        throw new Error('Bad begin offset: ' + begin);\n      }\n      var length = this.bytes.length;\n      if (end % this.chunkSize !== 0 && end !== length) {\n        throw new Error('Bad end offset: ' + end);\n      }\n      this.bytes.set(new Uint8Array(chunk), begin);\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n      var position = this.progressiveDataLength;\n      var beginChunk = Math.floor(position / this.chunkSize);\n      this.bytes.set(new Uint8Array(data), position);\n      position += data.byteLength;\n      this.progressiveDataLength = position;\n      var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n      var curChunk;\n      for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n        if (!this.loadedChunks[curChunk]) {\n          this.loadedChunks[curChunk] = true;\n          ++this.numChunksLoaded;\n        }\n      }\n    },\n    ensureByte: function ChunkedStream_ensureByte(pos) {\n      var chunk = Math.floor(pos / this.chunkSize);\n      if (chunk === this.lastSuccessfulEnsureByteChunk) {\n        return;\n      }\n      if (!this.loadedChunks[chunk]) {\n        throw new _util.MissingDataException(pos, pos + 1);\n      }\n      this.lastSuccessfulEnsureByteChunk = chunk;\n    },\n    ensureRange: function ChunkedStream_ensureRange(begin, end) {\n      if (begin >= end) {\n        return;\n      }\n      if (end <= this.progressiveDataLength) {\n        return;\n      }\n      var chunkSize = this.chunkSize;\n      var beginChunk = Math.floor(begin / chunkSize);\n      var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        if (!this.loadedChunks[chunk]) {\n          throw new _util.MissingDataException(begin, end);\n        }\n      }\n    },\n    nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n      var chunk,\n          numChunks = this.numChunks;\n      for (var i = 0; i < numChunks; ++i) {\n        chunk = (beginChunk + i) % numChunks;\n        if (!this.loadedChunks[chunk]) {\n          return chunk;\n        }\n      }\n      return null;\n    },\n    hasChunk: function ChunkedStream_hasChunk(chunk) {\n      return !!this.loadedChunks[chunk];\n    },\n    get length() {\n      return this.end - this.start;\n    },\n    get isEmpty() {\n      return this.length === 0;\n    },\n    getByte: function ChunkedStream_getByte() {\n      var pos = this.pos;\n      if (pos >= this.end) {\n        return -1;\n      }\n      this.ensureByte(pos);\n      return this.bytes[this.pos++];\n    },\n    getUint16: function ChunkedStream_getUint16() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      if (b0 === -1 || b1 === -1) {\n        return -1;\n      }\n      return (b0 << 8) + b1;\n    },\n    getInt32: function ChunkedStream_getInt32() {\n      var b0 = this.getByte();\n      var b1 = this.getByte();\n      var b2 = this.getByte();\n      var b3 = this.getByte();\n      return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n    },\n    getBytes: function ChunkedStream_getBytes(length) {\n      var bytes = this.bytes;\n      var pos = this.pos;\n      var strEnd = this.end;\n      if (!length) {\n        this.ensureRange(pos, strEnd);\n        return bytes.subarray(pos, strEnd);\n      }\n      var end = pos + length;\n      if (end > strEnd) {\n        end = strEnd;\n      }\n      this.ensureRange(pos, end);\n      this.pos = end;\n      return bytes.subarray(pos, end);\n    },\n    peekByte: function ChunkedStream_peekByte() {\n      var peekedByte = this.getByte();\n      this.pos--;\n      return peekedByte;\n    },\n    peekBytes: function ChunkedStream_peekBytes(length) {\n      var bytes = this.getBytes(length);\n      this.pos -= bytes.length;\n      return bytes;\n    },\n    getByteRange: function ChunkedStream_getBytes(begin, end) {\n      this.ensureRange(begin, end);\n      return this.bytes.subarray(begin, end);\n    },\n    skip: function ChunkedStream_skip(n) {\n      if (!n) {\n        n = 1;\n      }\n      this.pos += n;\n    },\n    reset: function ChunkedStream_reset() {\n      this.pos = this.start;\n    },\n    moveStart: function ChunkedStream_moveStart() {\n      this.start = this.pos;\n    },\n    makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n      this.ensureRange(start, start + length);\n      function ChunkedStreamSubstream() {}\n      ChunkedStreamSubstream.prototype = Object.create(this);\n      ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n        var chunkSize = this.chunkSize;\n        var beginChunk = Math.floor(this.start / chunkSize);\n        var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n        var missingChunks = [];\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (!this.loadedChunks[chunk]) {\n            missingChunks.push(chunk);\n          }\n        }\n        return missingChunks;\n      };\n      var subStream = new ChunkedStreamSubstream();\n      subStream.pos = subStream.start = start;\n      subStream.end = start + length || this.end;\n      subStream.dict = dict;\n      return subStream;\n    }\n  };\n  return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n  function ChunkedStreamManager(pdfNetworkStream, args) {\n    var chunkSize = args.rangeChunkSize;\n    var length = args.length;\n    this.stream = new ChunkedStream(length, chunkSize, this);\n    this.length = length;\n    this.chunkSize = chunkSize;\n    this.pdfNetworkStream = pdfNetworkStream;\n    this.url = args.url;\n    this.disableAutoFetch = args.disableAutoFetch;\n    this.msgHandler = args.msgHandler;\n    this.currRequestId = 0;\n    this.chunksNeededByRequest = Object.create(null);\n    this.requestsByChunk = Object.create(null);\n    this.promisesByRequest = Object.create(null);\n    this.progressiveDataLength = 0;\n    this.aborted = false;\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n  }\n  ChunkedStreamManager.prototype = {\n    onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n      var _this = this;\n\n      var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n      if (!rangeReader.isStreamingSupported) {\n        rangeReader.onProgress = this.onProgress.bind(this);\n      }\n      var chunks = [],\n          loaded = 0;\n      var manager = this;\n      var promise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            if (!chunk.done) {\n              var data = chunk.value;\n              chunks.push(data);\n              loaded += (0, _util.arrayByteLength)(data);\n              if (rangeReader.isStreamingSupported) {\n                manager.onProgress({ loaded: loaded });\n              }\n              rangeReader.read().then(readChunk, reject);\n              return;\n            }\n            var chunkData = (0, _util.arraysToBytes)(chunks);\n            chunks = null;\n            resolve(chunkData);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        rangeReader.read().then(readChunk, reject);\n      });\n      promise.then(function (data) {\n        if (_this.aborted) {\n          return;\n        }\n        _this.onReceiveData({\n          chunk: data,\n          begin: begin\n        });\n      });\n    },\n    requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n      var missingChunks = this.stream.getMissingChunks();\n      this._requestChunks(missingChunks);\n      return this._loadedStreamCapability.promise;\n    },\n    _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n      var requestId = this.currRequestId++;\n      var i, ii;\n      var chunksNeeded = Object.create(null);\n      this.chunksNeededByRequest[requestId] = chunksNeeded;\n      for (i = 0, ii = chunks.length; i < ii; i++) {\n        if (!this.stream.hasChunk(chunks[i])) {\n          chunksNeeded[chunks[i]] = true;\n        }\n      }\n      if ((0, _util.isEmptyObj)(chunksNeeded)) {\n        return Promise.resolve();\n      }\n      var capability = (0, _util.createPromiseCapability)();\n      this.promisesByRequest[requestId] = capability;\n      var chunksToRequest = [];\n      for (var chunk in chunksNeeded) {\n        chunk = chunk | 0;\n        if (!(chunk in this.requestsByChunk)) {\n          this.requestsByChunk[chunk] = [];\n          chunksToRequest.push(chunk);\n        }\n        this.requestsByChunk[chunk].push(requestId);\n      }\n      if (!chunksToRequest.length) {\n        return capability.promise;\n      }\n      var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n      for (i = 0; i < groupedChunksToRequest.length; ++i) {\n        var groupedChunk = groupedChunksToRequest[i];\n        var begin = groupedChunk.beginChunk * this.chunkSize;\n        var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n        this.sendRequest(begin, end);\n      }\n      return capability.promise;\n    },\n    getStream: function ChunkedStreamManager_getStream() {\n      return this.stream;\n    },\n    requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n      end = Math.min(end, this.length);\n      var beginChunk = this.getBeginChunk(begin);\n      var endChunk = this.getEndChunk(end);\n      var chunks = [];\n      for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n        chunks.push(chunk);\n      }\n      return this._requestChunks(chunks);\n    },\n    requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n      ranges = ranges || [];\n      var chunksToRequest = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var beginChunk = this.getBeginChunk(ranges[i].begin);\n        var endChunk = this.getEndChunk(ranges[i].end);\n        for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n          if (chunksToRequest.indexOf(chunk) < 0) {\n            chunksToRequest.push(chunk);\n          }\n        }\n      }\n      chunksToRequest.sort(function (a, b) {\n        return a - b;\n      });\n      return this._requestChunks(chunksToRequest);\n    },\n    groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n      var groupedChunks = [];\n      var beginChunk = -1;\n      var prevChunk = -1;\n      for (var i = 0; i < chunks.length; ++i) {\n        var chunk = chunks[i];\n        if (beginChunk < 0) {\n          beginChunk = chunk;\n        }\n        if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: prevChunk + 1\n          });\n          beginChunk = chunk;\n        }\n        if (i + 1 === chunks.length) {\n          groupedChunks.push({\n            beginChunk: beginChunk,\n            endChunk: chunk + 1\n          });\n        }\n        prevChunk = chunk;\n      }\n      return groupedChunks;\n    },\n    onProgress: function ChunkedStreamManager_onProgress(args) {\n      var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n      this.msgHandler.send('DocProgress', {\n        loaded: bytesLoaded,\n        total: this.length\n      });\n    },\n    onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n      var chunk = args.chunk;\n      var isProgressive = args.begin === undefined;\n      var begin = isProgressive ? this.progressiveDataLength : args.begin;\n      var end = begin + chunk.byteLength;\n      var beginChunk = Math.floor(begin / this.chunkSize);\n      var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n      if (isProgressive) {\n        this.stream.onReceiveProgressiveData(chunk);\n        this.progressiveDataLength = end;\n      } else {\n        this.stream.onReceiveData(begin, chunk);\n      }\n      if (this.stream.allChunksLoaded()) {\n        this._loadedStreamCapability.resolve(this.stream);\n      }\n      var loadedRequests = [];\n      var i, requestId;\n      for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n        var requestIds = this.requestsByChunk[chunk] || [];\n        delete this.requestsByChunk[chunk];\n        for (i = 0; i < requestIds.length; ++i) {\n          requestId = requestIds[i];\n          var chunksNeeded = this.chunksNeededByRequest[requestId];\n          if (chunk in chunksNeeded) {\n            delete chunksNeeded[chunk];\n          }\n          if (!(0, _util.isEmptyObj)(chunksNeeded)) {\n            continue;\n          }\n          loadedRequests.push(requestId);\n        }\n      }\n      if (!this.disableAutoFetch && (0, _util.isEmptyObj)(this.requestsByChunk)) {\n        var nextEmptyChunk;\n        if (this.stream.numChunksLoaded === 1) {\n          var lastChunk = this.stream.numChunks - 1;\n          if (!this.stream.hasChunk(lastChunk)) {\n            nextEmptyChunk = lastChunk;\n          }\n        } else {\n          nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n        }\n        if (Number.isInteger(nextEmptyChunk)) {\n          this._requestChunks([nextEmptyChunk]);\n        }\n      }\n      for (i = 0; i < loadedRequests.length; ++i) {\n        requestId = loadedRequests[i];\n        var capability = this.promisesByRequest[requestId];\n        delete this.promisesByRequest[requestId];\n        capability.resolve();\n      }\n      this.msgHandler.send('DocProgress', {\n        loaded: this.stream.numChunksLoaded * this.chunkSize,\n        total: this.length\n      });\n    },\n    onError: function ChunkedStreamManager_onError(err) {\n      this._loadedStreamCapability.reject(err);\n    },\n    getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n      var chunk = Math.floor(begin / this.chunkSize);\n      return chunk;\n    },\n    getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n      var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n      return chunk;\n    },\n    abort: function ChunkedStreamManager_abort() {\n      this.aborted = true;\n      if (this.pdfNetworkStream) {\n        this.pdfNetworkStream.cancelAllRequests('abort');\n      }\n      for (var requestId in this.promisesByRequest) {\n        var capability = this.promisesByRequest[requestId];\n        capability.reject(new Error('Request was aborted'));\n      }\n    }\n  };\n  return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFImage = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _stream = require('./stream');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _jpx = require('./jpx');\n\nvar PDFImage = function PDFImageClosure() {\n  function handleImageData(image, nativeDecoder) {\n    if (nativeDecoder && nativeDecoder.canDecode(image)) {\n      return nativeDecoder.decode(image);\n    }\n    return Promise.resolve(image);\n  }\n  function decodeAndClamp(value, addend, coefficient, max) {\n    value = addend + value * coefficient;\n    return value < 0 ? 0 : value > max ? max : value;\n  }\n  function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n    var length = w2 * h2;\n    var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n    var xRatio = w1 / w2;\n    var yRatio = h1 / h2;\n    var i,\n        j,\n        py,\n        newIndex = 0,\n        oldIndex;\n    var xScaled = new Uint16Array(w2);\n    var w1Scanline = w1;\n    for (i = 0; i < w2; i++) {\n      xScaled[i] = Math.floor(i * xRatio);\n    }\n    for (i = 0; i < h2; i++) {\n      py = Math.floor(i * yRatio) * w1Scanline;\n      for (j = 0; j < w2; j++) {\n        oldIndex = py + xScaled[j];\n        dest[newIndex++] = src[oldIndex];\n      }\n    }\n    return dest;\n  }\n  function PDFImage(_ref) {\n    var xref = _ref.xref,\n        res = _ref.res,\n        image = _ref.image,\n        _ref$isInline = _ref.isInline,\n        isInline = _ref$isInline === undefined ? false : _ref$isInline,\n        _ref$smask = _ref.smask,\n        smask = _ref$smask === undefined ? null : _ref$smask,\n        _ref$mask = _ref.mask,\n        mask = _ref$mask === undefined ? null : _ref$mask,\n        _ref$isMask = _ref.isMask,\n        isMask = _ref$isMask === undefined ? false : _ref$isMask,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.image = image;\n    var dict = image.dict;\n    if (dict.has('Filter')) {\n      var filter = dict.get('Filter').name;\n      if (filter === 'JPXDecode') {\n        var jpxImage = new _jpx.JpxImage();\n        jpxImage.parseImageProperties(image.stream);\n        image.stream.reset();\n        image.bitsPerComponent = jpxImage.bitsPerComponent;\n        image.numComps = jpxImage.componentsCount;\n      } else if (filter === 'JBIG2Decode') {\n        image.bitsPerComponent = 1;\n        image.numComps = 1;\n      }\n    }\n    this.width = dict.get('Width', 'W');\n    this.height = dict.get('Height', 'H');\n    if (this.width < 1 || this.height < 1) {\n      throw new _util.FormatError('Invalid image width: ' + this.width + ' or ' + ('height: ' + this.height));\n    }\n    this.interpolate = dict.get('Interpolate', 'I') || false;\n    this.imageMask = dict.get('ImageMask', 'IM') || false;\n    this.matte = dict.get('Matte') || false;\n    var bitsPerComponent = image.bitsPerComponent;\n    if (!bitsPerComponent) {\n      bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n      if (!bitsPerComponent) {\n        if (this.imageMask) {\n          bitsPerComponent = 1;\n        } else {\n          throw new _util.FormatError('Bits per component missing in image: ' + this.imageMask);\n        }\n      }\n    }\n    this.bpc = bitsPerComponent;\n    if (!this.imageMask) {\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      if (!colorSpace) {\n        (0, _util.info)('JPX images (which do not require color spaces)');\n        switch (image.numComps) {\n          case 1:\n            colorSpace = _primitives.Name.get('DeviceGray');\n            break;\n          case 3:\n            colorSpace = _primitives.Name.get('DeviceRGB');\n            break;\n          case 4:\n            colorSpace = _primitives.Name.get('DeviceCMYK');\n            break;\n          default:\n            throw new Error('JPX images with ' + this.numComps + ' ' + 'color components not supported.');\n        }\n      }\n      var resources = isInline ? res : null;\n      this.colorSpace = _colorspace.ColorSpace.parse(colorSpace, xref, resources, pdfFunctionFactory);\n      this.numComps = this.colorSpace.numComps;\n    }\n    this.decode = dict.getArray('Decode', 'D');\n    this.needsDecode = false;\n    if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !_colorspace.ColorSpace.isDefaultDecode(this.decode, 1))) {\n      this.needsDecode = true;\n      var max = (1 << bitsPerComponent) - 1;\n      this.decodeCoefficients = [];\n      this.decodeAddends = [];\n      for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n        var dmin = this.decode[i];\n        var dmax = this.decode[i + 1];\n        this.decodeCoefficients[j] = dmax - dmin;\n        this.decodeAddends[j] = max * dmin;\n      }\n    }\n    if (smask) {\n      this.smask = new PDFImage({\n        xref: xref,\n        res: res,\n        image: smask,\n        isInline: isInline,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    } else if (mask) {\n      if ((0, _primitives.isStream)(mask)) {\n        var maskDict = mask.dict,\n            imageMask = maskDict.get('ImageMask', 'IM');\n        if (!imageMask) {\n          (0, _util.warn)('Ignoring /Mask in image without /ImageMask.');\n        } else {\n          this.mask = new PDFImage({\n            xref: xref,\n            res: res,\n            image: mask,\n            isInline: isInline,\n            isMask: true,\n            pdfFunctionFactory: pdfFunctionFactory\n          });\n        }\n      } else {\n        this.mask = mask;\n      }\n    }\n  }\n  PDFImage.buildImage = function (_ref2) {\n    var handler = _ref2.handler,\n        xref = _ref2.xref,\n        res = _ref2.res,\n        image = _ref2.image,\n        _ref2$isInline = _ref2.isInline,\n        isInline = _ref2$isInline === undefined ? false : _ref2$isInline,\n        _ref2$nativeDecoder = _ref2.nativeDecoder,\n        nativeDecoder = _ref2$nativeDecoder === undefined ? null : _ref2$nativeDecoder,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    var imagePromise = handleImageData(image, nativeDecoder);\n    var smaskPromise;\n    var maskPromise;\n    var smask = image.dict.get('SMask');\n    var mask = image.dict.get('Mask');\n    if (smask) {\n      smaskPromise = handleImageData(smask, nativeDecoder);\n      maskPromise = Promise.resolve(null);\n    } else {\n      smaskPromise = Promise.resolve(null);\n      if (mask) {\n        if ((0, _primitives.isStream)(mask)) {\n          maskPromise = handleImageData(mask, nativeDecoder);\n        } else if (Array.isArray(mask)) {\n          maskPromise = Promise.resolve(mask);\n        } else {\n          (0, _util.warn)('Unsupported mask format.');\n          maskPromise = Promise.resolve(null);\n        }\n      } else {\n        maskPromise = Promise.resolve(null);\n      }\n    }\n    return Promise.all([imagePromise, smaskPromise, maskPromise]).then(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 3),\n          imageData = _ref4[0],\n          smaskData = _ref4[1],\n          maskData = _ref4[2];\n\n      return new PDFImage({\n        xref: xref,\n        res: res,\n        image: imageData,\n        isInline: isInline,\n        smask: smaskData,\n        mask: maskData,\n        pdfFunctionFactory: pdfFunctionFactory\n      });\n    });\n  };\n  PDFImage.createMask = function (_ref5) {\n    var imgArray = _ref5.imgArray,\n        width = _ref5.width,\n        height = _ref5.height,\n        imageIsFromDecodeStream = _ref5.imageIsFromDecodeStream,\n        inverseDecode = _ref5.inverseDecode;\n\n    var computedLength = (width + 7 >> 3) * height;\n    var actualLength = imgArray.byteLength;\n    var haveFullData = computedLength === actualLength;\n    var data, i;\n    if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n      data = imgArray;\n    } else if (!inverseDecode) {\n      data = new Uint8Array(actualLength);\n      data.set(imgArray);\n    } else {\n      data = new Uint8Array(computedLength);\n      data.set(imgArray);\n      for (i = actualLength; i < computedLength; i++) {\n        data[i] = 0xff;\n      }\n    }\n    if (inverseDecode) {\n      for (i = 0; i < actualLength; i++) {\n        data[i] ^= 0xFF;\n      }\n    }\n    return {\n      data: data,\n      width: width,\n      height: height\n    };\n  };\n  PDFImage.prototype = {\n    get drawWidth() {\n      return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n    },\n    get drawHeight() {\n      return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n    },\n    decodeBuffer: function decodeBuffer(buffer) {\n      var bpc = this.bpc;\n      var numComps = this.numComps;\n      var decodeAddends = this.decodeAddends;\n      var decodeCoefficients = this.decodeCoefficients;\n      var max = (1 << bpc) - 1;\n      var i, ii;\n      if (bpc === 1) {\n        for (i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = +!buffer[i];\n        }\n        return;\n      }\n      var index = 0;\n      for (i = 0, ii = this.width * this.height; i < ii; i++) {\n        for (var j = 0; j < numComps; j++) {\n          buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n          index++;\n        }\n      }\n    },\n    getComponents: function getComponents(buffer) {\n      var bpc = this.bpc;\n      if (bpc === 8) {\n        return buffer;\n      }\n      var width = this.width;\n      var height = this.height;\n      var numComps = this.numComps;\n      var length = width * height * numComps;\n      var bufferPos = 0;\n      var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n      var rowComps = width * numComps;\n      var max = (1 << bpc) - 1;\n      var i = 0,\n          ii,\n          buf;\n      if (bpc === 1) {\n        var mask, loop1End, loop2End;\n        for (var j = 0; j < height; j++) {\n          loop1End = i + (rowComps & ~7);\n          loop2End = i + rowComps;\n          while (i < loop1End) {\n            buf = buffer[bufferPos++];\n            output[i] = buf >> 7 & 1;\n            output[i + 1] = buf >> 6 & 1;\n            output[i + 2] = buf >> 5 & 1;\n            output[i + 3] = buf >> 4 & 1;\n            output[i + 4] = buf >> 3 & 1;\n            output[i + 5] = buf >> 2 & 1;\n            output[i + 6] = buf >> 1 & 1;\n            output[i + 7] = buf & 1;\n            i += 8;\n          }\n          if (i < loop2End) {\n            buf = buffer[bufferPos++];\n            mask = 128;\n            while (i < loop2End) {\n              output[i++] = +!!(buf & mask);\n              mask >>= 1;\n            }\n          }\n        }\n      } else {\n        var bits = 0;\n        buf = 0;\n        for (i = 0, ii = length; i < ii; ++i) {\n          if (i % rowComps === 0) {\n            buf = 0;\n            bits = 0;\n          }\n          while (bits < bpc) {\n            buf = buf << 8 | buffer[bufferPos++];\n            bits += 8;\n          }\n          var remainingBits = bits - bpc;\n          var value = buf >> remainingBits;\n          output[i] = value < 0 ? 0 : value > max ? max : value;\n          buf = buf & (1 << remainingBits) - 1;\n          bits = remainingBits;\n        }\n      }\n      return output;\n    },\n    fillOpacity: function fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n      var smask = this.smask;\n      var mask = this.mask;\n      var alphaBuf, sw, sh, i, ii, j;\n      if (smask) {\n        sw = smask.width;\n        sh = smask.height;\n        alphaBuf = new Uint8Array(sw * sh);\n        smask.fillGrayBuffer(alphaBuf);\n        if (sw !== width || sh !== height) {\n          alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n        }\n      } else if (mask) {\n        if (mask instanceof PDFImage) {\n          sw = mask.width;\n          sh = mask.height;\n          alphaBuf = new Uint8Array(sw * sh);\n          mask.numComps = 1;\n          mask.fillGrayBuffer(alphaBuf);\n          for (i = 0, ii = sw * sh; i < ii; ++i) {\n            alphaBuf[i] = 255 - alphaBuf[i];\n          }\n          if (sw !== width || sh !== height) {\n            alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n          }\n        } else if (Array.isArray(mask)) {\n          alphaBuf = new Uint8Array(width * height);\n          var numComps = this.numComps;\n          for (i = 0, ii = width * height; i < ii; ++i) {\n            var opacity = 0;\n            var imageOffset = i * numComps;\n            for (j = 0; j < numComps; ++j) {\n              var color = image[imageOffset + j];\n              var maskOffset = j * 2;\n              if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n                opacity = 255;\n                break;\n              }\n            }\n            alphaBuf[i] = opacity;\n          }\n        } else {\n          throw new _util.FormatError('Unknown mask format.');\n        }\n      }\n      if (alphaBuf) {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = alphaBuf[i];\n        }\n      } else {\n        for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n          rgbaBuf[j] = 255;\n        }\n      }\n    },\n    undoPreblend: function undoPreblend(buffer, width, height) {\n      var matte = this.smask && this.smask.matte;\n      if (!matte) {\n        return;\n      }\n      var matteRgb = this.colorSpace.getRgb(matte, 0);\n      var matteR = matteRgb[0];\n      var matteG = matteRgb[1];\n      var matteB = matteRgb[2];\n      var length = width * height * 4;\n      var r, g, b;\n      for (var i = 0; i < length; i += 4) {\n        var alpha = buffer[i + 3];\n        if (alpha === 0) {\n          buffer[i] = 255;\n          buffer[i + 1] = 255;\n          buffer[i + 2] = 255;\n          continue;\n        }\n        var k = 255 / alpha;\n        r = (buffer[i] - matteR) * k + matteR;\n        g = (buffer[i + 1] - matteG) * k + matteG;\n        b = (buffer[i + 2] - matteB) * k + matteB;\n        buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n        buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n        buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n      }\n    },\n    createImageData: function createImageData() {\n      var forceRGBA = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      var drawWidth = this.drawWidth;\n      var drawHeight = this.drawHeight;\n      var imgData = {\n        width: drawWidth,\n        height: drawHeight\n      };\n      var numComps = this.numComps;\n      var originalWidth = this.width;\n      var originalHeight = this.height;\n      var bpc = this.bpc;\n      var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n      var imgArray;\n      if (!forceRGBA) {\n        var kind;\n        if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n          kind = _util.ImageKind.GRAYSCALE_1BPP;\n        } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n          kind = _util.ImageKind.RGB_24BPP;\n        }\n        if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n          imgData.kind = kind;\n          imgArray = this.getImageBytes(originalHeight * rowBytes);\n          if (this.image instanceof _stream.DecodeStream) {\n            imgData.data = imgArray;\n          } else {\n            var newArray = new Uint8Array(imgArray.length);\n            newArray.set(imgArray);\n            imgData.data = newArray;\n          }\n          if (this.needsDecode) {\n            (0, _util.assert)(kind === _util.ImageKind.GRAYSCALE_1BPP);\n            var buffer = imgData.data;\n            for (var i = 0, ii = buffer.length; i < ii; i++) {\n              buffer[i] ^= 0xff;\n            }\n          }\n          return imgData;\n        }\n        if (this.image instanceof _jpeg_stream.JpegStream && !this.smask && !this.mask) {\n          var imageLength = originalHeight * rowBytes;\n          switch (this.colorSpace.name) {\n            case 'DeviceGray':\n              imageLength *= 3;\n            case 'DeviceRGB':\n            case 'DeviceCMYK':\n              imgData.kind = _util.ImageKind.RGB_24BPP;\n              imgData.data = this.getImageBytes(imageLength, drawWidth, drawHeight, true);\n              return imgData;\n          }\n        }\n      }\n      imgArray = this.getImageBytes(originalHeight * rowBytes);\n      var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n      var comps = this.getComponents(imgArray);\n      var alpha01, maybeUndoPreblend;\n      if (!forceRGBA && !this.smask && !this.mask) {\n        imgData.kind = _util.ImageKind.RGB_24BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n        alpha01 = 0;\n        maybeUndoPreblend = false;\n      } else {\n        imgData.kind = _util.ImageKind.RGBA_32BPP;\n        imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n        alpha01 = 1;\n        maybeUndoPreblend = true;\n        this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n      if (maybeUndoPreblend) {\n        this.undoPreblend(imgData.data, drawWidth, actualHeight);\n      }\n      return imgData;\n    },\n    fillGrayBuffer: function fillGrayBuffer(buffer) {\n      var numComps = this.numComps;\n      if (numComps !== 1) {\n        throw new _util.FormatError('Reading gray scale from a color image: ' + numComps);\n      }\n      var width = this.width;\n      var height = this.height;\n      var bpc = this.bpc;\n      var rowBytes = width * numComps * bpc + 7 >> 3;\n      var imgArray = this.getImageBytes(height * rowBytes);\n      var comps = this.getComponents(imgArray);\n      var i, length;\n      if (bpc === 1) {\n        length = width * height;\n        if (this.needsDecode) {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = comps[i] - 1 & 255;\n          }\n        } else {\n          for (i = 0; i < length; ++i) {\n            buffer[i] = -comps[i] & 255;\n          }\n        }\n        return;\n      }\n      if (this.needsDecode) {\n        this.decodeBuffer(comps);\n      }\n      length = width * height;\n      var scale = 255 / ((1 << bpc) - 1);\n      for (i = 0; i < length; ++i) {\n        buffer[i] = scale * comps[i] | 0;\n      }\n    },\n    getImageBytes: function getImageBytes(length, drawWidth, drawHeight) {\n      var forceRGB = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      this.image.reset();\n      this.image.drawWidth = drawWidth || this.width;\n      this.image.drawHeight = drawHeight || this.height;\n      this.image.forceRGB = !!forceRGB;\n      return this.image.getBytes(length);\n    }\n  };\n  return PDFImage;\n}();\nexports.PDFImage = PDFImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MurmurHash3_64 = undefined;\n\nvar _util = require('../shared/util');\n\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n  var MASK_HIGH = 0xffff0000;\n  var MASK_LOW = 0xffff;\n  function MurmurHash3_64(seed) {\n    var SEED = 0xc3d2e1f0;\n    this.h1 = seed ? seed & 0xffffffff : SEED;\n    this.h2 = seed ? seed & 0xffffffff : SEED;\n  }\n  MurmurHash3_64.prototype = {\n    update: function MurmurHash3_64_update(input) {\n      var data = void 0,\n          length = void 0;\n      if ((0, _util.isString)(input)) {\n        data = new Uint8Array(input.length * 2);\n        length = 0;\n        for (var i = 0, ii = input.length; i < ii; i++) {\n          var code = input.charCodeAt(i);\n          if (code <= 0xff) {\n            data[length++] = code;\n          } else {\n            data[length++] = code >>> 8;\n            data[length++] = code & 0xff;\n          }\n        }\n      } else if ((0, _util.isArrayBuffer)(input)) {\n        data = input;\n        length = data.byteLength;\n      } else {\n        throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n      }\n      var blockCounts = length >> 2;\n      var tailLength = length - blockCounts * 4;\n      var dataUint32 = new Uint32Array(data.buffer, 0, blockCounts);\n      var k1 = 0;\n      var k2 = 0;\n      var h1 = this.h1;\n      var h2 = this.h2;\n      var C1 = 0xcc9e2d51;\n      var C2 = 0x1b873593;\n      var C1_LOW = C1 & MASK_LOW;\n      var C2_LOW = C2 & MASK_LOW;\n      for (var _i = 0; _i < blockCounts; _i++) {\n        if (_i & 1) {\n          k1 = dataUint32[_i];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          h1 ^= k1;\n          h1 = h1 << 13 | h1 >>> 19;\n          h1 = h1 * 5 + 0xe6546b64;\n        } else {\n          k2 = dataUint32[_i];\n          k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n          k2 = k2 << 15 | k2 >>> 17;\n          k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n          h2 ^= k2;\n          h2 = h2 << 13 | h2 >>> 19;\n          h2 = h2 * 5 + 0xe6546b64;\n        }\n      }\n      k1 = 0;\n      switch (tailLength) {\n        case 3:\n          k1 ^= data[blockCounts * 4 + 2] << 16;\n        case 2:\n          k1 ^= data[blockCounts * 4 + 1] << 8;\n        case 1:\n          k1 ^= data[blockCounts * 4];\n          k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n          k1 = k1 << 15 | k1 >>> 17;\n          k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n          if (blockCounts & 1) {\n            h1 ^= k1;\n          } else {\n            h2 ^= k1;\n          }\n      }\n      this.h1 = h1;\n      this.h2 = h2;\n      return this;\n    },\n    hexdigest: function MurmurHash3_64_hexdigest() {\n      var h1 = this.h1;\n      var h2 = this.h2;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n      h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n      h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n      h1 ^= h2 >>> 1;\n      for (var i = 0, arr = [h1, h2], str = ''; i < arr.length; i++) {\n        var hex = (arr[i] >>> 0).toString(16);\n        while (hex.length < 8) {\n          hex = '0' + hex;\n        }\n        str += hex;\n      }\n      return str;\n    }\n  };\n  return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PostScriptParser = exports.PostScriptLexer = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar PostScriptParser = function PostScriptParserClosure() {\n  function PostScriptParser(lexer) {\n    this.lexer = lexer;\n    this.operators = [];\n    this.token = null;\n    this.prev = null;\n  }\n  PostScriptParser.prototype = {\n    nextToken: function PostScriptParser_nextToken() {\n      this.prev = this.token;\n      this.token = this.lexer.getToken();\n    },\n    accept: function PostScriptParser_accept(type) {\n      if (this.token.type === type) {\n        this.nextToken();\n        return true;\n      }\n      return false;\n    },\n    expect: function PostScriptParser_expect(type) {\n      if (this.accept(type)) {\n        return true;\n      }\n      throw new _util.FormatError('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n    },\n    parse: function PostScriptParser_parse() {\n      this.nextToken();\n      this.expect(PostScriptTokenTypes.LBRACE);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      return this.operators;\n    },\n    parseBlock: function PostScriptParser_parseBlock() {\n      while (true) {\n        if (this.accept(PostScriptTokenTypes.NUMBER)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n          this.operators.push(this.prev.value);\n        } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n          this.parseCondition();\n        } else {\n          return;\n        }\n      }\n    },\n    parseCondition: function PostScriptParser_parseCondition() {\n      var conditionLocation = this.operators.length;\n      this.operators.push(null, null);\n      this.parseBlock();\n      this.expect(PostScriptTokenTypes.RBRACE);\n      if (this.accept(PostScriptTokenTypes.IF)) {\n        this.operators[conditionLocation] = this.operators.length;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n        var jumpLocation = this.operators.length;\n        this.operators.push(null, null);\n        var endOfTrue = this.operators.length;\n        this.parseBlock();\n        this.expect(PostScriptTokenTypes.RBRACE);\n        this.expect(PostScriptTokenTypes.IFELSE);\n        this.operators[jumpLocation] = this.operators.length;\n        this.operators[jumpLocation + 1] = 'j';\n        this.operators[conditionLocation] = endOfTrue;\n        this.operators[conditionLocation + 1] = 'jz';\n      } else {\n        throw new _util.FormatError('PS Function: error parsing conditional.');\n      }\n    }\n  };\n  return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n  LBRACE: 0,\n  RBRACE: 1,\n  NUMBER: 2,\n  OPERATOR: 3,\n  IF: 4,\n  IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n  function PostScriptToken(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n  var opCache = Object.create(null);\n  PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n    var opValue = opCache[op];\n    if (opValue) {\n      return opValue;\n    }\n    return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n  };\n  PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n  PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n  PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n  PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n  return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n  function PostScriptLexer(stream) {\n    this.stream = stream;\n    this.nextChar();\n    this.strBuf = [];\n  }\n  PostScriptLexer.prototype = {\n    nextChar: function PostScriptLexer_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function PostScriptLexer_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch < 0) {\n          return _primitives.EOF;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      switch (ch | 0) {\n        case 0x30:\n        case 0x31:\n        case 0x32:\n        case 0x33:\n        case 0x34:\n        case 0x35:\n        case 0x36:\n        case 0x37:\n        case 0x38:\n        case 0x39:\n        case 0x2B:\n        case 0x2D:\n        case 0x2E:\n          return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n        case 0x7B:\n          this.nextChar();\n          return PostScriptToken.LBRACE;\n        case 0x7D:\n          this.nextChar();\n          return PostScriptToken.RBRACE;\n      }\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n        strBuf.push(String.fromCharCode(ch));\n      }\n      var str = strBuf.join('');\n      switch (str.toLowerCase()) {\n        case 'if':\n          return PostScriptToken.IF;\n        case 'ifelse':\n          return PostScriptToken.IFELSE;\n        default:\n          return PostScriptToken.getOperator(str);\n      }\n    },\n    getNumber: function PostScriptLexer_getNumber() {\n      var ch = this.currentChar;\n      var strBuf = this.strBuf;\n      strBuf.length = 0;\n      strBuf[0] = String.fromCharCode(ch);\n      while ((ch = this.nextChar()) >= 0) {\n        if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n          strBuf.push(String.fromCharCode(ch));\n        } else {\n          break;\n        }\n      }\n      var value = parseFloat(strBuf.join(''));\n      if (isNaN(value)) {\n        throw new _util.FormatError('Invalid floating point number: ' + value);\n      }\n      return value;\n    }\n  };\n  return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getMetrics = undefined;\n\nvar _util = require('../shared/util');\n\nvar getMetrics = (0, _util.getLookupTableFactory)(function (t) {\n  t['Courier'] = 600;\n  t['Courier-Bold'] = 600;\n  t['Courier-BoldOblique'] = 600;\n  t['Courier-Oblique'] = 600;\n  t['Helvetica'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-BoldOblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 333;\n    t['quotedbl'] = 474;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 722;\n    t['quoteright'] = 278;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 611;\n    t['at'] = 975;\n    t['A'] = 722;\n    t['B'] = 722;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 556;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 584;\n    t['underscore'] = 556;\n    t['quoteleft'] = 278;\n    t['a'] = 556;\n    t['b'] = 611;\n    t['c'] = 556;\n    t['d'] = 611;\n    t['e'] = 556;\n    t['f'] = 333;\n    t['g'] = 611;\n    t['h'] = 611;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 889;\n    t['n'] = 611;\n    t['o'] = 611;\n    t['p'] = 611;\n    t['q'] = 611;\n    t['r'] = 389;\n    t['s'] = 556;\n    t['t'] = 333;\n    t['u'] = 611;\n    t['v'] = 556;\n    t['w'] = 778;\n    t['x'] = 556;\n    t['y'] = 556;\n    t['z'] = 500;\n    t['braceleft'] = 389;\n    t['bar'] = 280;\n    t['braceright'] = 389;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 238;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 611;\n    t['fl'] = 611;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 556;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 278;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 611;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 611;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 556;\n    t['scommaaccent'] = 556;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 611;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 556;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 556;\n    t['scedilla'] = 556;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 611;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 722;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 556;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 743;\n    t['Umacron'] = 722;\n    t['uring'] = 611;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 584;\n    t['uacute'] = 611;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 556;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 556;\n    t['nacute'] = 611;\n    t['umacron'] = 611;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 280;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 611;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 389;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 611;\n    t['amacron'] = 556;\n    t['sacute'] = 556;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 611;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 611;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 611;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 611;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 400;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 611;\n    t['ntilde'] = 611;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 611;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 611;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 611;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 611;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 611;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 611;\n    t['udieresis'] = 611;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 611;\n    t['eth'] = 611;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 611;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Helvetica-Oblique'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['exclam'] = 278;\n    t['quotedbl'] = 355;\n    t['numbersign'] = 556;\n    t['dollar'] = 556;\n    t['percent'] = 889;\n    t['ampersand'] = 667;\n    t['quoteright'] = 222;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 389;\n    t['plus'] = 584;\n    t['comma'] = 278;\n    t['hyphen'] = 333;\n    t['period'] = 278;\n    t['slash'] = 278;\n    t['zero'] = 556;\n    t['one'] = 556;\n    t['two'] = 556;\n    t['three'] = 556;\n    t['four'] = 556;\n    t['five'] = 556;\n    t['six'] = 556;\n    t['seven'] = 556;\n    t['eight'] = 556;\n    t['nine'] = 556;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 584;\n    t['equal'] = 584;\n    t['greater'] = 584;\n    t['question'] = 556;\n    t['at'] = 1015;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 722;\n    t['I'] = 278;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 667;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 667;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 944;\n    t['X'] = 667;\n    t['Y'] = 667;\n    t['Z'] = 611;\n    t['bracketleft'] = 278;\n    t['backslash'] = 278;\n    t['bracketright'] = 278;\n    t['asciicircum'] = 469;\n    t['underscore'] = 556;\n    t['quoteleft'] = 222;\n    t['a'] = 556;\n    t['b'] = 556;\n    t['c'] = 500;\n    t['d'] = 556;\n    t['e'] = 556;\n    t['f'] = 278;\n    t['g'] = 556;\n    t['h'] = 556;\n    t['i'] = 222;\n    t['j'] = 222;\n    t['k'] = 500;\n    t['l'] = 222;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 556;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 333;\n    t['s'] = 500;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 500;\n    t['braceleft'] = 334;\n    t['bar'] = 260;\n    t['braceright'] = 334;\n    t['asciitilde'] = 584;\n    t['exclamdown'] = 333;\n    t['cent'] = 556;\n    t['sterling'] = 556;\n    t['fraction'] = 167;\n    t['yen'] = 556;\n    t['florin'] = 556;\n    t['section'] = 556;\n    t['currency'] = 556;\n    t['quotesingle'] = 191;\n    t['quotedblleft'] = 333;\n    t['guillemotleft'] = 556;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 556;\n    t['dagger'] = 556;\n    t['daggerdbl'] = 556;\n    t['periodcentered'] = 278;\n    t['paragraph'] = 537;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 222;\n    t['quotedblbase'] = 333;\n    t['quotedblright'] = 333;\n    t['guillemotright'] = 556;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 611;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 370;\n    t['Lslash'] = 556;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 365;\n    t['ae'] = 889;\n    t['dotlessi'] = 278;\n    t['lslash'] = 222;\n    t['oslash'] = 611;\n    t['oe'] = 944;\n    t['germandbls'] = 611;\n    t['Idieresis'] = 278;\n    t['eacute'] = 556;\n    t['abreve'] = 556;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 556;\n    t['Ydieresis'] = 667;\n    t['divide'] = 584;\n    t['Yacute'] = 667;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 556;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 500;\n    t['ecircumflex'] = 556;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 556;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 737;\n    t['Emacron'] = 667;\n    t['ccaron'] = 500;\n    t['aring'] = 556;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 222;\n    t['agrave'] = 556;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 722;\n    t['atilde'] = 556;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 500;\n    t['scedilla'] = 500;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 556;\n    t['Amacron'] = 667;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 500;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 667;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 667;\n    t['dcaron'] = 643;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 333;\n    t['Ograve'] = 778;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 584;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 556;\n    t['edieresis'] = 556;\n    t['cacute'] = 500;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 278;\n    t['plusminus'] = 584;\n    t['brokenbar'] = 260;\n    t['registered'] = 737;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 278;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 333;\n    t['omacron'] = 556;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 222;\n    t['tcaron'] = 317;\n    t['eogonek'] = 556;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 556;\n    t['zacute'] = 500;\n    t['iogonek'] = 222;\n    t['Oacute'] = 778;\n    t['oacute'] = 556;\n    t['amacron'] = 556;\n    t['sacute'] = 500;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 333;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 556;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 834;\n    t['Scedilla'] = 667;\n    t['lcaron'] = 299;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 556;\n    t['Igrave'] = 278;\n    t['Imacron'] = 278;\n    t['Lcaron'] = 556;\n    t['onehalf'] = 834;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 556;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 556;\n    t['gbreve'] = 556;\n    t['onequarter'] = 834;\n    t['Scaron'] = 667;\n    t['Scommaaccent'] = 667;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 556;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 556;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 500;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 278;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 584;\n    t['Icircumflex'] = 278;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 584;\n    t['odieresis'] = 556;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 556;\n    t['eth'] = 556;\n    t['zcaron'] = 500;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 333;\n    t['imacron'] = 278;\n    t['Euro'] = 556;\n  });\n  t['Symbol'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['universal'] = 713;\n    t['numbersign'] = 500;\n    t['existential'] = 549;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['suchthat'] = 439;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asteriskmath'] = 500;\n    t['plus'] = 549;\n    t['comma'] = 250;\n    t['minus'] = 549;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 549;\n    t['equal'] = 549;\n    t['greater'] = 549;\n    t['question'] = 444;\n    t['congruent'] = 549;\n    t['Alpha'] = 722;\n    t['Beta'] = 667;\n    t['Chi'] = 722;\n    t['Delta'] = 612;\n    t['Epsilon'] = 611;\n    t['Phi'] = 763;\n    t['Gamma'] = 603;\n    t['Eta'] = 722;\n    t['Iota'] = 333;\n    t['theta1'] = 631;\n    t['Kappa'] = 722;\n    t['Lambda'] = 686;\n    t['Mu'] = 889;\n    t['Nu'] = 722;\n    t['Omicron'] = 722;\n    t['Pi'] = 768;\n    t['Theta'] = 741;\n    t['Rho'] = 556;\n    t['Sigma'] = 592;\n    t['Tau'] = 611;\n    t['Upsilon'] = 690;\n    t['sigma1'] = 439;\n    t['Omega'] = 768;\n    t['Xi'] = 645;\n    t['Psi'] = 795;\n    t['Zeta'] = 611;\n    t['bracketleft'] = 333;\n    t['therefore'] = 863;\n    t['bracketright'] = 333;\n    t['perpendicular'] = 658;\n    t['underscore'] = 500;\n    t['radicalex'] = 500;\n    t['alpha'] = 631;\n    t['beta'] = 549;\n    t['chi'] = 549;\n    t['delta'] = 494;\n    t['epsilon'] = 439;\n    t['phi'] = 521;\n    t['gamma'] = 411;\n    t['eta'] = 603;\n    t['iota'] = 329;\n    t['phi1'] = 603;\n    t['kappa'] = 549;\n    t['lambda'] = 549;\n    t['mu'] = 576;\n    t['nu'] = 521;\n    t['omicron'] = 549;\n    t['pi'] = 549;\n    t['theta'] = 521;\n    t['rho'] = 549;\n    t['sigma'] = 603;\n    t['tau'] = 439;\n    t['upsilon'] = 576;\n    t['omega1'] = 713;\n    t['omega'] = 686;\n    t['xi'] = 493;\n    t['psi'] = 686;\n    t['zeta'] = 494;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['similar'] = 549;\n    t['Euro'] = 750;\n    t['Upsilon1'] = 620;\n    t['minute'] = 247;\n    t['lessequal'] = 549;\n    t['fraction'] = 167;\n    t['infinity'] = 713;\n    t['florin'] = 500;\n    t['club'] = 753;\n    t['diamond'] = 753;\n    t['heart'] = 753;\n    t['spade'] = 753;\n    t['arrowboth'] = 1042;\n    t['arrowleft'] = 987;\n    t['arrowup'] = 603;\n    t['arrowright'] = 987;\n    t['arrowdown'] = 603;\n    t['degree'] = 400;\n    t['plusminus'] = 549;\n    t['second'] = 411;\n    t['greaterequal'] = 549;\n    t['multiply'] = 549;\n    t['proportional'] = 713;\n    t['partialdiff'] = 494;\n    t['bullet'] = 460;\n    t['divide'] = 549;\n    t['notequal'] = 549;\n    t['equivalence'] = 549;\n    t['approxequal'] = 549;\n    t['ellipsis'] = 1000;\n    t['arrowvertex'] = 603;\n    t['arrowhorizex'] = 1000;\n    t['carriagereturn'] = 658;\n    t['aleph'] = 823;\n    t['Ifraktur'] = 686;\n    t['Rfraktur'] = 795;\n    t['weierstrass'] = 987;\n    t['circlemultiply'] = 768;\n    t['circleplus'] = 768;\n    t['emptyset'] = 823;\n    t['intersection'] = 768;\n    t['union'] = 768;\n    t['propersuperset'] = 713;\n    t['reflexsuperset'] = 713;\n    t['notsubset'] = 713;\n    t['propersubset'] = 713;\n    t['reflexsubset'] = 713;\n    t['element'] = 713;\n    t['notelement'] = 713;\n    t['angle'] = 768;\n    t['gradient'] = 713;\n    t['registerserif'] = 790;\n    t['copyrightserif'] = 790;\n    t['trademarkserif'] = 890;\n    t['product'] = 823;\n    t['radical'] = 549;\n    t['dotmath'] = 250;\n    t['logicalnot'] = 713;\n    t['logicaland'] = 603;\n    t['logicalor'] = 603;\n    t['arrowdblboth'] = 1042;\n    t['arrowdblleft'] = 987;\n    t['arrowdblup'] = 603;\n    t['arrowdblright'] = 987;\n    t['arrowdbldown'] = 603;\n    t['lozenge'] = 494;\n    t['angleleft'] = 329;\n    t['registersans'] = 790;\n    t['copyrightsans'] = 790;\n    t['trademarksans'] = 786;\n    t['summation'] = 713;\n    t['parenlefttp'] = 384;\n    t['parenleftex'] = 384;\n    t['parenleftbt'] = 384;\n    t['bracketlefttp'] = 384;\n    t['bracketleftex'] = 384;\n    t['bracketleftbt'] = 384;\n    t['bracelefttp'] = 494;\n    t['braceleftmid'] = 494;\n    t['braceleftbt'] = 494;\n    t['braceex'] = 494;\n    t['angleright'] = 329;\n    t['integral'] = 274;\n    t['integraltp'] = 686;\n    t['integralex'] = 686;\n    t['integralbt'] = 686;\n    t['parenrighttp'] = 384;\n    t['parenrightex'] = 384;\n    t['parenrightbt'] = 384;\n    t['bracketrighttp'] = 384;\n    t['bracketrightex'] = 384;\n    t['bracketrightbt'] = 384;\n    t['bracerighttp'] = 494;\n    t['bracerightmid'] = 494;\n    t['bracerightbt'] = 494;\n    t['apple'] = 790;\n  });\n  t['Times-Roman'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 408;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 564;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 278;\n    t['semicolon'] = 278;\n    t['less'] = 564;\n    t['equal'] = 564;\n    t['greater'] = 564;\n    t['question'] = 444;\n    t['at'] = 921;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 556;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 389;\n    t['K'] = 722;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 556;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 944;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 469;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 444;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 333;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 480;\n    t['bar'] = 200;\n    t['braceright'] = 480;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 180;\n    t['quotedblleft'] = 444;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 453;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 444;\n    t['quotedblright'] = 444;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 444;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 889;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 444;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 564;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 444;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 444;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 444;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 444;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 444;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 444;\n    t['Amacron'] = 722;\n    t['rcaron'] = 333;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 556;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 588;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 564;\n    t['uacute'] = 500;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 444;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 333;\n    t['plusminus'] = 564;\n    t['brokenbar'] = 200;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 333;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 326;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 444;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 344;\n    t['Kcommaaccent'] = 722;\n    t['Lacute'] = 611;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 333;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 564;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 564;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Bold'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 1000;\n    t['ampersand'] = 833;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 930;\n    t['A'] = 722;\n    t['B'] = 667;\n    t['C'] = 722;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 611;\n    t['G'] = 778;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 778;\n    t['L'] = 667;\n    t['M'] = 944;\n    t['N'] = 722;\n    t['O'] = 778;\n    t['P'] = 611;\n    t['Q'] = 778;\n    t['R'] = 722;\n    t['S'] = 556;\n    t['T'] = 667;\n    t['U'] = 722;\n    t['V'] = 722;\n    t['W'] = 1000;\n    t['X'] = 722;\n    t['Y'] = 722;\n    t['Z'] = 667;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 581;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 556;\n    t['c'] = 444;\n    t['d'] = 556;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 333;\n    t['k'] = 556;\n    t['l'] = 278;\n    t['m'] = 833;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 556;\n    t['q'] = 556;\n    t['r'] = 444;\n    t['s'] = 389;\n    t['t'] = 333;\n    t['u'] = 556;\n    t['v'] = 500;\n    t['w'] = 722;\n    t['x'] = 500;\n    t['y'] = 500;\n    t['z'] = 444;\n    t['braceleft'] = 394;\n    t['bar'] = 220;\n    t['braceright'] = 394;\n    t['asciitilde'] = 520;\n    t['exclamdown'] = 333;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 540;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 1000;\n    t['ordfeminine'] = 300;\n    t['Lslash'] = 667;\n    t['Oslash'] = 778;\n    t['OE'] = 1000;\n    t['ordmasculine'] = 330;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 556;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 722;\n    t['divide'] = 570;\n    t['Yacute'] = 722;\n    t['Acircumflex'] = 722;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 500;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 667;\n    t['Cacute'] = 722;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 722;\n    t['Gcommaaccent'] = 778;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 722;\n    t['rcaron'] = 444;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 667;\n    t['Thorn'] = 611;\n    t['Omacron'] = 778;\n    t['Racute'] = 722;\n    t['Sacute'] = 556;\n    t['dcaron'] = 672;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 778;\n    t['Agrave'] = 722;\n    t['Abreve'] = 722;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 667;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 500;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 778;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 444;\n    t['omacron'] = 500;\n    t['Zacute'] = 667;\n    t['Zcaron'] = 667;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 722;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 416;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 722;\n    t['Adieresis'] = 722;\n    t['egrave'] = 444;\n    t['zacute'] = 444;\n    t['iogonek'] = 278;\n    t['Oacute'] = 778;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 778;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 556;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 778;\n    t['mu'] = 556;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 556;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 394;\n    t['Kcommaaccent'] = 778;\n    t['Lacute'] = 667;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 667;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 778;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 722;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 444;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 722;\n    t['Lcommaaccent'] = 667;\n    t['Atilde'] = 722;\n    t['Aogonek'] = 722;\n    t['Aring'] = 722;\n    t['Otilde'] = 778;\n    t['zdotaccent'] = 444;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 556;\n    t['minus'] = 570;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 333;\n    t['logicalnot'] = 570;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 444;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-BoldItalic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 389;\n    t['quotedbl'] = 555;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 570;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 570;\n    t['equal'] = 570;\n    t['greater'] = 570;\n    t['question'] = 500;\n    t['at'] = 832;\n    t['A'] = 667;\n    t['B'] = 667;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 667;\n    t['F'] = 667;\n    t['G'] = 722;\n    t['H'] = 778;\n    t['I'] = 389;\n    t['J'] = 500;\n    t['K'] = 667;\n    t['L'] = 611;\n    t['M'] = 889;\n    t['N'] = 722;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 667;\n    t['S'] = 556;\n    t['T'] = 611;\n    t['U'] = 722;\n    t['V'] = 667;\n    t['W'] = 889;\n    t['X'] = 667;\n    t['Y'] = 611;\n    t['Z'] = 611;\n    t['bracketleft'] = 333;\n    t['backslash'] = 278;\n    t['bracketright'] = 333;\n    t['asciicircum'] = 570;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 333;\n    t['g'] = 500;\n    t['h'] = 556;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 500;\n    t['l'] = 278;\n    t['m'] = 778;\n    t['n'] = 556;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 556;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 500;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 348;\n    t['bar'] = 220;\n    t['braceright'] = 348;\n    t['asciitilde'] = 570;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 278;\n    t['quotedblleft'] = 500;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 556;\n    t['fl'] = 556;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 500;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 500;\n    t['quotedblright'] = 500;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 1000;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 1000;\n    t['AE'] = 944;\n    t['ordfeminine'] = 266;\n    t['Lslash'] = 611;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 300;\n    t['ae'] = 722;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 722;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 389;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 556;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 611;\n    t['divide'] = 570;\n    t['Yacute'] = 611;\n    t['Acircumflex'] = 667;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 556;\n    t['Edieresis'] = 667;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 747;\n    t['Emacron'] = 667;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 722;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 611;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 667;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 494;\n    t['Rcaron'] = 667;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 556;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 667;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 611;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 667;\n    t['Sacute'] = 556;\n    t['dcaron'] = 608;\n    t['Umacron'] = 722;\n    t['uring'] = 556;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 667;\n    t['Abreve'] = 667;\n    t['multiply'] = 570;\n    t['uacute'] = 556;\n    t['Tcaron'] = 611;\n    t['partialdiff'] = 494;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 722;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 667;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 556;\n    t['umacron'] = 556;\n    t['Ncaron'] = 722;\n    t['Iacute'] = 389;\n    t['plusminus'] = 570;\n    t['brokenbar'] = 220;\n    t['registered'] = 747;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 389;\n    t['summation'] = 600;\n    t['Egrave'] = 667;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 611;\n    t['Zcaron'] = 611;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 366;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 667;\n    t['Adieresis'] = 667;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 576;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 667;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 556;\n    t['lcaron'] = 382;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 611;\n    t['trademark'] = 1000;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 389;\n    t['Imacron'] = 389;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 556;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 667;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 556;\n    t['Scommaaccent'] = 556;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 556;\n    t['radical'] = 549;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 722;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 667;\n    t['Lcommaaccent'] = 611;\n    t['Atilde'] = 667;\n    t['Aogonek'] = 667;\n    t['Aring'] = 667;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 667;\n    t['Iogonek'] = 389;\n    t['kcommaaccent'] = 500;\n    t['minus'] = 606;\n    t['Icircumflex'] = 389;\n    t['ncaron'] = 556;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 606;\n    t['odieresis'] = 500;\n    t['udieresis'] = 556;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 556;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['Times-Italic'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 250;\n    t['exclam'] = 333;\n    t['quotedbl'] = 420;\n    t['numbersign'] = 500;\n    t['dollar'] = 500;\n    t['percent'] = 833;\n    t['ampersand'] = 778;\n    t['quoteright'] = 333;\n    t['parenleft'] = 333;\n    t['parenright'] = 333;\n    t['asterisk'] = 500;\n    t['plus'] = 675;\n    t['comma'] = 250;\n    t['hyphen'] = 333;\n    t['period'] = 250;\n    t['slash'] = 278;\n    t['zero'] = 500;\n    t['one'] = 500;\n    t['two'] = 500;\n    t['three'] = 500;\n    t['four'] = 500;\n    t['five'] = 500;\n    t['six'] = 500;\n    t['seven'] = 500;\n    t['eight'] = 500;\n    t['nine'] = 500;\n    t['colon'] = 333;\n    t['semicolon'] = 333;\n    t['less'] = 675;\n    t['equal'] = 675;\n    t['greater'] = 675;\n    t['question'] = 500;\n    t['at'] = 920;\n    t['A'] = 611;\n    t['B'] = 611;\n    t['C'] = 667;\n    t['D'] = 722;\n    t['E'] = 611;\n    t['F'] = 611;\n    t['G'] = 722;\n    t['H'] = 722;\n    t['I'] = 333;\n    t['J'] = 444;\n    t['K'] = 667;\n    t['L'] = 556;\n    t['M'] = 833;\n    t['N'] = 667;\n    t['O'] = 722;\n    t['P'] = 611;\n    t['Q'] = 722;\n    t['R'] = 611;\n    t['S'] = 500;\n    t['T'] = 556;\n    t['U'] = 722;\n    t['V'] = 611;\n    t['W'] = 833;\n    t['X'] = 611;\n    t['Y'] = 556;\n    t['Z'] = 556;\n    t['bracketleft'] = 389;\n    t['backslash'] = 278;\n    t['bracketright'] = 389;\n    t['asciicircum'] = 422;\n    t['underscore'] = 500;\n    t['quoteleft'] = 333;\n    t['a'] = 500;\n    t['b'] = 500;\n    t['c'] = 444;\n    t['d'] = 500;\n    t['e'] = 444;\n    t['f'] = 278;\n    t['g'] = 500;\n    t['h'] = 500;\n    t['i'] = 278;\n    t['j'] = 278;\n    t['k'] = 444;\n    t['l'] = 278;\n    t['m'] = 722;\n    t['n'] = 500;\n    t['o'] = 500;\n    t['p'] = 500;\n    t['q'] = 500;\n    t['r'] = 389;\n    t['s'] = 389;\n    t['t'] = 278;\n    t['u'] = 500;\n    t['v'] = 444;\n    t['w'] = 667;\n    t['x'] = 444;\n    t['y'] = 444;\n    t['z'] = 389;\n    t['braceleft'] = 400;\n    t['bar'] = 275;\n    t['braceright'] = 400;\n    t['asciitilde'] = 541;\n    t['exclamdown'] = 389;\n    t['cent'] = 500;\n    t['sterling'] = 500;\n    t['fraction'] = 167;\n    t['yen'] = 500;\n    t['florin'] = 500;\n    t['section'] = 500;\n    t['currency'] = 500;\n    t['quotesingle'] = 214;\n    t['quotedblleft'] = 556;\n    t['guillemotleft'] = 500;\n    t['guilsinglleft'] = 333;\n    t['guilsinglright'] = 333;\n    t['fi'] = 500;\n    t['fl'] = 500;\n    t['endash'] = 500;\n    t['dagger'] = 500;\n    t['daggerdbl'] = 500;\n    t['periodcentered'] = 250;\n    t['paragraph'] = 523;\n    t['bullet'] = 350;\n    t['quotesinglbase'] = 333;\n    t['quotedblbase'] = 556;\n    t['quotedblright'] = 556;\n    t['guillemotright'] = 500;\n    t['ellipsis'] = 889;\n    t['perthousand'] = 1000;\n    t['questiondown'] = 500;\n    t['grave'] = 333;\n    t['acute'] = 333;\n    t['circumflex'] = 333;\n    t['tilde'] = 333;\n    t['macron'] = 333;\n    t['breve'] = 333;\n    t['dotaccent'] = 333;\n    t['dieresis'] = 333;\n    t['ring'] = 333;\n    t['cedilla'] = 333;\n    t['hungarumlaut'] = 333;\n    t['ogonek'] = 333;\n    t['caron'] = 333;\n    t['emdash'] = 889;\n    t['AE'] = 889;\n    t['ordfeminine'] = 276;\n    t['Lslash'] = 556;\n    t['Oslash'] = 722;\n    t['OE'] = 944;\n    t['ordmasculine'] = 310;\n    t['ae'] = 667;\n    t['dotlessi'] = 278;\n    t['lslash'] = 278;\n    t['oslash'] = 500;\n    t['oe'] = 667;\n    t['germandbls'] = 500;\n    t['Idieresis'] = 333;\n    t['eacute'] = 444;\n    t['abreve'] = 500;\n    t['uhungarumlaut'] = 500;\n    t['ecaron'] = 444;\n    t['Ydieresis'] = 556;\n    t['divide'] = 675;\n    t['Yacute'] = 556;\n    t['Acircumflex'] = 611;\n    t['aacute'] = 500;\n    t['Ucircumflex'] = 722;\n    t['yacute'] = 444;\n    t['scommaaccent'] = 389;\n    t['ecircumflex'] = 444;\n    t['Uring'] = 722;\n    t['Udieresis'] = 722;\n    t['aogonek'] = 500;\n    t['Uacute'] = 722;\n    t['uogonek'] = 500;\n    t['Edieresis'] = 611;\n    t['Dcroat'] = 722;\n    t['commaaccent'] = 250;\n    t['copyright'] = 760;\n    t['Emacron'] = 611;\n    t['ccaron'] = 444;\n    t['aring'] = 500;\n    t['Ncommaaccent'] = 667;\n    t['lacute'] = 278;\n    t['agrave'] = 500;\n    t['Tcommaaccent'] = 556;\n    t['Cacute'] = 667;\n    t['atilde'] = 500;\n    t['Edotaccent'] = 611;\n    t['scaron'] = 389;\n    t['scedilla'] = 389;\n    t['iacute'] = 278;\n    t['lozenge'] = 471;\n    t['Rcaron'] = 611;\n    t['Gcommaaccent'] = 722;\n    t['ucircumflex'] = 500;\n    t['acircumflex'] = 500;\n    t['Amacron'] = 611;\n    t['rcaron'] = 389;\n    t['ccedilla'] = 444;\n    t['Zdotaccent'] = 556;\n    t['Thorn'] = 611;\n    t['Omacron'] = 722;\n    t['Racute'] = 611;\n    t['Sacute'] = 500;\n    t['dcaron'] = 544;\n    t['Umacron'] = 722;\n    t['uring'] = 500;\n    t['threesuperior'] = 300;\n    t['Ograve'] = 722;\n    t['Agrave'] = 611;\n    t['Abreve'] = 611;\n    t['multiply'] = 675;\n    t['uacute'] = 500;\n    t['Tcaron'] = 556;\n    t['partialdiff'] = 476;\n    t['ydieresis'] = 444;\n    t['Nacute'] = 667;\n    t['icircumflex'] = 278;\n    t['Ecircumflex'] = 611;\n    t['adieresis'] = 500;\n    t['edieresis'] = 444;\n    t['cacute'] = 444;\n    t['nacute'] = 500;\n    t['umacron'] = 500;\n    t['Ncaron'] = 667;\n    t['Iacute'] = 333;\n    t['plusminus'] = 675;\n    t['brokenbar'] = 275;\n    t['registered'] = 760;\n    t['Gbreve'] = 722;\n    t['Idotaccent'] = 333;\n    t['summation'] = 600;\n    t['Egrave'] = 611;\n    t['racute'] = 389;\n    t['omacron'] = 500;\n    t['Zacute'] = 556;\n    t['Zcaron'] = 556;\n    t['greaterequal'] = 549;\n    t['Eth'] = 722;\n    t['Ccedilla'] = 667;\n    t['lcommaaccent'] = 278;\n    t['tcaron'] = 300;\n    t['eogonek'] = 444;\n    t['Uogonek'] = 722;\n    t['Aacute'] = 611;\n    t['Adieresis'] = 611;\n    t['egrave'] = 444;\n    t['zacute'] = 389;\n    t['iogonek'] = 278;\n    t['Oacute'] = 722;\n    t['oacute'] = 500;\n    t['amacron'] = 500;\n    t['sacute'] = 389;\n    t['idieresis'] = 278;\n    t['Ocircumflex'] = 722;\n    t['Ugrave'] = 722;\n    t['Delta'] = 612;\n    t['thorn'] = 500;\n    t['twosuperior'] = 300;\n    t['Odieresis'] = 722;\n    t['mu'] = 500;\n    t['igrave'] = 278;\n    t['ohungarumlaut'] = 500;\n    t['Eogonek'] = 611;\n    t['dcroat'] = 500;\n    t['threequarters'] = 750;\n    t['Scedilla'] = 500;\n    t['lcaron'] = 300;\n    t['Kcommaaccent'] = 667;\n    t['Lacute'] = 556;\n    t['trademark'] = 980;\n    t['edotaccent'] = 444;\n    t['Igrave'] = 333;\n    t['Imacron'] = 333;\n    t['Lcaron'] = 611;\n    t['onehalf'] = 750;\n    t['lessequal'] = 549;\n    t['ocircumflex'] = 500;\n    t['ntilde'] = 500;\n    t['Uhungarumlaut'] = 722;\n    t['Eacute'] = 611;\n    t['emacron'] = 444;\n    t['gbreve'] = 500;\n    t['onequarter'] = 750;\n    t['Scaron'] = 500;\n    t['Scommaaccent'] = 500;\n    t['Ohungarumlaut'] = 722;\n    t['degree'] = 400;\n    t['ograve'] = 500;\n    t['Ccaron'] = 667;\n    t['ugrave'] = 500;\n    t['radical'] = 453;\n    t['Dcaron'] = 722;\n    t['rcommaaccent'] = 389;\n    t['Ntilde'] = 667;\n    t['otilde'] = 500;\n    t['Rcommaaccent'] = 611;\n    t['Lcommaaccent'] = 556;\n    t['Atilde'] = 611;\n    t['Aogonek'] = 611;\n    t['Aring'] = 611;\n    t['Otilde'] = 722;\n    t['zdotaccent'] = 389;\n    t['Ecaron'] = 611;\n    t['Iogonek'] = 333;\n    t['kcommaaccent'] = 444;\n    t['minus'] = 675;\n    t['Icircumflex'] = 333;\n    t['ncaron'] = 500;\n    t['tcommaaccent'] = 278;\n    t['logicalnot'] = 675;\n    t['odieresis'] = 500;\n    t['udieresis'] = 500;\n    t['notequal'] = 549;\n    t['gcommaaccent'] = 500;\n    t['eth'] = 500;\n    t['zcaron'] = 389;\n    t['ncommaaccent'] = 500;\n    t['onesuperior'] = 300;\n    t['imacron'] = 278;\n    t['Euro'] = 500;\n  });\n  t['ZapfDingbats'] = (0, _util.getLookupTableFactory)(function (t) {\n    t['space'] = 278;\n    t['a1'] = 974;\n    t['a2'] = 961;\n    t['a202'] = 974;\n    t['a3'] = 980;\n    t['a4'] = 719;\n    t['a5'] = 789;\n    t['a119'] = 790;\n    t['a118'] = 791;\n    t['a117'] = 690;\n    t['a11'] = 960;\n    t['a12'] = 939;\n    t['a13'] = 549;\n    t['a14'] = 855;\n    t['a15'] = 911;\n    t['a16'] = 933;\n    t['a105'] = 911;\n    t['a17'] = 945;\n    t['a18'] = 974;\n    t['a19'] = 755;\n    t['a20'] = 846;\n    t['a21'] = 762;\n    t['a22'] = 761;\n    t['a23'] = 571;\n    t['a24'] = 677;\n    t['a25'] = 763;\n    t['a26'] = 760;\n    t['a27'] = 759;\n    t['a28'] = 754;\n    t['a6'] = 494;\n    t['a7'] = 552;\n    t['a8'] = 537;\n    t['a9'] = 577;\n    t['a10'] = 692;\n    t['a29'] = 786;\n    t['a30'] = 788;\n    t['a31'] = 788;\n    t['a32'] = 790;\n    t['a33'] = 793;\n    t['a34'] = 794;\n    t['a35'] = 816;\n    t['a36'] = 823;\n    t['a37'] = 789;\n    t['a38'] = 841;\n    t['a39'] = 823;\n    t['a40'] = 833;\n    t['a41'] = 816;\n    t['a42'] = 831;\n    t['a43'] = 923;\n    t['a44'] = 744;\n    t['a45'] = 723;\n    t['a46'] = 749;\n    t['a47'] = 790;\n    t['a48'] = 792;\n    t['a49'] = 695;\n    t['a50'] = 776;\n    t['a51'] = 768;\n    t['a52'] = 792;\n    t['a53'] = 759;\n    t['a54'] = 707;\n    t['a55'] = 708;\n    t['a56'] = 682;\n    t['a57'] = 701;\n    t['a58'] = 826;\n    t['a59'] = 815;\n    t['a60'] = 789;\n    t['a61'] = 789;\n    t['a62'] = 707;\n    t['a63'] = 687;\n    t['a64'] = 696;\n    t['a65'] = 689;\n    t['a66'] = 786;\n    t['a67'] = 787;\n    t['a68'] = 713;\n    t['a69'] = 791;\n    t['a70'] = 785;\n    t['a71'] = 791;\n    t['a72'] = 873;\n    t['a73'] = 761;\n    t['a74'] = 762;\n    t['a203'] = 762;\n    t['a75'] = 759;\n    t['a204'] = 759;\n    t['a76'] = 892;\n    t['a77'] = 892;\n    t['a78'] = 788;\n    t['a79'] = 784;\n    t['a81'] = 438;\n    t['a82'] = 138;\n    t['a83'] = 277;\n    t['a84'] = 415;\n    t['a97'] = 392;\n    t['a98'] = 392;\n    t['a99'] = 668;\n    t['a100'] = 668;\n    t['a89'] = 390;\n    t['a90'] = 390;\n    t['a93'] = 317;\n    t['a94'] = 317;\n    t['a91'] = 276;\n    t['a92'] = 276;\n    t['a205'] = 509;\n    t['a85'] = 509;\n    t['a206'] = 410;\n    t['a86'] = 410;\n    t['a87'] = 234;\n    t['a88'] = 234;\n    t['a95'] = 334;\n    t['a96'] = 334;\n    t['a101'] = 732;\n    t['a102'] = 544;\n    t['a103'] = 544;\n    t['a104'] = 910;\n    t['a106'] = 667;\n    t['a107'] = 760;\n    t['a108'] = 760;\n    t['a112'] = 776;\n    t['a111'] = 595;\n    t['a110'] = 694;\n    t['a109'] = 626;\n    t['a120'] = 788;\n    t['a121'] = 788;\n    t['a122'] = 788;\n    t['a123'] = 788;\n    t['a124'] = 788;\n    t['a125'] = 788;\n    t['a126'] = 788;\n    t['a127'] = 788;\n    t['a128'] = 788;\n    t['a129'] = 788;\n    t['a130'] = 788;\n    t['a131'] = 788;\n    t['a132'] = 788;\n    t['a133'] = 788;\n    t['a134'] = 788;\n    t['a135'] = 788;\n    t['a136'] = 788;\n    t['a137'] = 788;\n    t['a138'] = 788;\n    t['a139'] = 788;\n    t['a140'] = 788;\n    t['a141'] = 788;\n    t['a142'] = 788;\n    t['a143'] = 788;\n    t['a144'] = 788;\n    t['a145'] = 788;\n    t['a146'] = 788;\n    t['a147'] = 788;\n    t['a148'] = 788;\n    t['a149'] = 788;\n    t['a150'] = 788;\n    t['a151'] = 788;\n    t['a152'] = 788;\n    t['a153'] = 788;\n    t['a154'] = 788;\n    t['a155'] = 788;\n    t['a156'] = 788;\n    t['a157'] = 788;\n    t['a158'] = 788;\n    t['a159'] = 788;\n    t['a160'] = 894;\n    t['a161'] = 838;\n    t['a163'] = 1016;\n    t['a164'] = 458;\n    t['a196'] = 748;\n    t['a165'] = 924;\n    t['a192'] = 748;\n    t['a166'] = 918;\n    t['a167'] = 927;\n    t['a168'] = 928;\n    t['a169'] = 928;\n    t['a170'] = 834;\n    t['a171'] = 873;\n    t['a172'] = 828;\n    t['a173'] = 924;\n    t['a162'] = 924;\n    t['a174'] = 917;\n    t['a175'] = 930;\n    t['a176'] = 931;\n    t['a177'] = 463;\n    t['a178'] = 883;\n    t['a179'] = 836;\n    t['a193'] = 836;\n    t['a180'] = 867;\n    t['a199'] = 867;\n    t['a181'] = 696;\n    t['a200'] = 696;\n    t['a182'] = 874;\n    t['a201'] = 874;\n    t['a183'] = 760;\n    t['a184'] = 946;\n    t['a197'] = 771;\n    t['a185'] = 865;\n    t['a194'] = 771;\n    t['a198'] = 888;\n    t['a186'] = 967;\n    t['a195'] = 888;\n    t['a187'] = 831;\n    t['a188'] = 873;\n    t['a189'] = 927;\n    t['a190'] = 970;\n    t['a191'] = 918;\n  });\n});\nexports.getMetrics = getMetrics;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.bidi = undefined;\n\nvar _util = require('../shared/util');\n\nvar baseTypes = ['BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'S', 'B', 'S', 'WS', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'B', 'B', 'S', 'WS', 'ON', 'ON', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'ON', 'ES', 'CS', 'ES', 'CS', 'CS', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'CS', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'ON', 'ON', 'ON', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'B', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'BN', 'CS', 'ON', 'ET', 'ET', 'ET', 'ET', 'ON', 'ON', 'ON', 'ON', 'L', 'ON', 'ON', 'BN', 'ON', 'ON', 'ET', 'ET', 'EN', 'EN', 'ON', 'L', 'ON', 'ON', 'ON', 'EN', 'L', 'ON', 'ON', 'ON', 'ON', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'ON', 'L', 'L', 'L', 'L', 'L', 'L', 'L', 'L'];\nvar arabicTypes = ['AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ON', 'ON', 'AL', 'ET', 'ET', 'AL', 'CS', 'AL', 'ON', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', '', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'AN', 'ET', 'AN', 'AN', 'AL', 'AL', 'AL', 'NSM', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AN', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'NSM', 'NSM', 'ON', 'NSM', 'NSM', 'NSM', 'NSM', 'AL', 'AL', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'EN', 'AL', 'AL', 'AL', 'AL', 'AL', 'AL'];\nfunction isOdd(i) {\n  return (i & 1) !== 0;\n}\nfunction isEven(i) {\n  return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n  for (var j = start, jj = arr.length; j < jj; ++j) {\n    if (arr[j] !== value) {\n      return j;\n    }\n  }\n  return j;\n}\nfunction setValues(arr, start, end, value) {\n  for (var j = start; j < end; ++j) {\n    arr[j] = value;\n  }\n}\nfunction reverseValues(arr, start, end) {\n  for (var i = start, j = end - 1; i < j; ++i, --j) {\n    var temp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = temp;\n  }\n}\nfunction createBidiText(str, isLTR, vertical) {\n  return {\n    str: str,\n    dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n  };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n  var isLTR = true;\n  var strLength = str.length;\n  if (strLength === 0 || vertical) {\n    return createBidiText(str, isLTR, vertical);\n  }\n  chars.length = strLength;\n  types.length = strLength;\n  var numBidi = 0;\n  var i, ii;\n  for (i = 0; i < strLength; ++i) {\n    chars[i] = str.charAt(i);\n    var charCode = str.charCodeAt(i);\n    var charType = 'L';\n    if (charCode <= 0x00ff) {\n      charType = baseTypes[charCode];\n    } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n      charType = 'R';\n    } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n      charType = arabicTypes[charCode & 0xff];\n      if (!charType) {\n        (0, _util.warn)('Bidi: invalid Unicode character ' + charCode.toString(16));\n      }\n    } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n      charType = 'AL';\n    }\n    if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n      numBidi++;\n    }\n    types[i] = charType;\n  }\n  if (numBidi === 0) {\n    isLTR = true;\n    return createBidiText(str, isLTR);\n  }\n  if (startLevel === -1) {\n    if (numBidi / strLength < 0.3) {\n      isLTR = true;\n      startLevel = 0;\n    } else {\n      isLTR = false;\n      startLevel = 1;\n    }\n  }\n  var levels = [];\n  for (i = 0; i < strLength; ++i) {\n    levels[i] = startLevel;\n  }\n  var e = isOdd(startLevel) ? 'R' : 'L';\n  var sor = e;\n  var eor = sor;\n  var lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'NSM') {\n      types[i] = lastType;\n    } else {\n      lastType = types[i];\n    }\n  }\n  lastType = sor;\n  var t;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'AL' ? 'AN' : 'EN';\n    } else if (t === 'R' || t === 'L' || t === 'AL') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'AL') {\n      types[i] = 'R';\n    }\n  }\n  for (i = 1; i < strLength - 1; ++i) {\n    if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n      types[i] = 'EN';\n    }\n    if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n      types[i] = types[i - 1];\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'EN') {\n      var j;\n      for (j = i - 1; j >= 0; --j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n      for (j = i + 1; j < strLength; ++j) {\n        if (types[j] !== 'ET') {\n          break;\n        }\n        types[j] = 'EN';\n      }\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n      types[i] = 'ON';\n    }\n  }\n  lastType = sor;\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (t === 'EN') {\n      types[i] = lastType === 'L' ? 'L' : 'EN';\n    } else if (t === 'R' || t === 'L') {\n      lastType = t;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      var end = findUnequal(types, i + 1, 'ON');\n      var before = sor;\n      if (i > 0) {\n        before = types[i - 1];\n      }\n      var after = eor;\n      if (end + 1 < strLength) {\n        after = types[end + 1];\n      }\n      if (before !== 'L') {\n        before = 'R';\n      }\n      if (after !== 'L') {\n        after = 'R';\n      }\n      if (before === after) {\n        setValues(types, i, end, before);\n      }\n      i = end - 1;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    if (types[i] === 'ON') {\n      types[i] = e;\n    }\n  }\n  for (i = 0; i < strLength; ++i) {\n    t = types[i];\n    if (isEven(levels[i])) {\n      if (t === 'R') {\n        levels[i] += 1;\n      } else if (t === 'AN' || t === 'EN') {\n        levels[i] += 2;\n      }\n    } else {\n      if (t === 'L' || t === 'AN' || t === 'EN') {\n        levels[i] += 1;\n      }\n    }\n  }\n  var highestLevel = -1;\n  var lowestOddLevel = 99;\n  var level;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n    level = levels[i];\n    if (highestLevel < level) {\n      highestLevel = level;\n    }\n    if (lowestOddLevel > level && isOdd(level)) {\n      lowestOddLevel = level;\n    }\n  }\n  for (level = highestLevel; level >= lowestOddLevel; --level) {\n    var start = -1;\n    for (i = 0, ii = levels.length; i < ii; ++i) {\n      if (levels[i] < level) {\n        if (start >= 0) {\n          reverseValues(chars, start, i);\n          start = -1;\n        }\n      } else if (start < 0) {\n        start = i;\n      }\n    }\n    if (start >= 0) {\n      reverseValues(chars, start, levels.length);\n    }\n  }\n  for (i = 0, ii = chars.length; i < ii; ++i) {\n    var ch = chars[i];\n    if (ch === '<' || ch === '>') {\n      chars[i] = '';\n    }\n  }\n  return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTilingPatternIR = exports.Pattern = undefined;\n\nvar _util = require('../shared/util');\n\nvar _colorspace = require('./colorspace');\n\nvar _primitives = require('./primitives');\n\nvar ShadingType = {\n  FUNCTION_BASED: 1,\n  AXIAL: 2,\n  RADIAL: 3,\n  FREE_FORM_MESH: 4,\n  LATTICE_FORM_MESH: 5,\n  COONS_PATCH_MESH: 6,\n  TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n  function Pattern() {\n    (0, _util.unreachable)('should not call Pattern constructor');\n  }\n  Pattern.prototype = {\n    getPattern: function Pattern_getPattern(ctx) {\n      (0, _util.unreachable)('Should not call Pattern.getStyle: ' + ctx);\n    }\n  };\n  Pattern.parseShading = function (shading, matrix, xref, res, handler, pdfFunctionFactory) {\n    var dict = (0, _primitives.isStream)(shading) ? shading.dict : shading;\n    var type = dict.get('ShadingType');\n    try {\n      switch (type) {\n        case ShadingType.AXIAL:\n        case ShadingType.RADIAL:\n          return new Shadings.RadialAxial(dict, matrix, xref, res, pdfFunctionFactory);\n        case ShadingType.FREE_FORM_MESH:\n        case ShadingType.LATTICE_FORM_MESH:\n        case ShadingType.COONS_PATCH_MESH:\n        case ShadingType.TENSOR_PATCH_MESH:\n          return new Shadings.Mesh(shading, matrix, xref, res, pdfFunctionFactory);\n        default:\n          throw new _util.FormatError('Unsupported ShadingType: ' + type);\n      }\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n      handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.shadingPattern });\n      (0, _util.warn)(ex);\n      return new Shadings.Dummy();\n    }\n  };\n  return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n  function RadialAxial(dict, matrix, xref, res, pdfFunctionFactory) {\n    this.matrix = matrix;\n    this.coordsArr = dict.getArray('Coords');\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    var t0 = 0.0,\n        t1 = 1.0;\n    if (dict.has('Domain')) {\n      var domainArr = dict.getArray('Domain');\n      t0 = domainArr[0];\n      t1 = domainArr[1];\n    }\n    var extendStart = false,\n        extendEnd = false;\n    if (dict.has('Extend')) {\n      var extendArr = dict.getArray('Extend');\n      extendStart = extendArr[0];\n      extendEnd = extendArr[1];\n    }\n    if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n      var x1 = this.coordsArr[0];\n      var y1 = this.coordsArr[1];\n      var r1 = this.coordsArr[2];\n      var x2 = this.coordsArr[3];\n      var y2 = this.coordsArr[4];\n      var r2 = this.coordsArr[5];\n      var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n      if (r1 <= r2 + distance && r2 <= r1 + distance) {\n        (0, _util.warn)('Unsupported radial gradient.');\n      }\n    }\n    this.extendStart = extendStart;\n    this.extendEnd = extendEnd;\n    var fnObj = dict.get('Function');\n    var fn = pdfFunctionFactory.createFromArray(fnObj);\n    var diff = t1 - t0;\n    var step = diff / 10;\n    var colorStops = this.colorStops = [];\n    if (t0 >= t1 || step <= 0) {\n      (0, _util.info)('Bad shading domain.');\n      return;\n    }\n    var color = new Float32Array(cs.numComps),\n        ratio = new Float32Array(1);\n    var rgbColor;\n    for (var i = t0; i <= t1; i += step) {\n      ratio[0] = i;\n      fn(ratio, 0, color, 0);\n      rgbColor = cs.getRgb(color, 0);\n      var cssColor = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n      colorStops.push([(i - t0) / diff, cssColor]);\n    }\n    var background = 'transparent';\n    if (dict.has('Background')) {\n      rgbColor = cs.getRgb(dict.get('Background'), 0);\n      background = _util.Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n    }\n    if (!extendStart) {\n      colorStops.unshift([0, background]);\n      colorStops[1][0] += Shadings.SMALL_NUMBER;\n    }\n    if (!extendEnd) {\n      colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n      colorStops.push([1, background]);\n    }\n    this.colorStops = colorStops;\n  }\n  RadialAxial.prototype = {\n    getIR: function RadialAxial_getIR() {\n      var coordsArr = this.coordsArr;\n      var shadingType = this.shadingType;\n      var type, p0, p1, r0, r1;\n      if (shadingType === ShadingType.AXIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[2], coordsArr[3]];\n        r0 = null;\n        r1 = null;\n        type = 'axial';\n      } else if (shadingType === ShadingType.RADIAL) {\n        p0 = [coordsArr[0], coordsArr[1]];\n        p1 = [coordsArr[3], coordsArr[4]];\n        r0 = coordsArr[2];\n        r1 = coordsArr[5];\n        type = 'radial';\n      } else {\n        (0, _util.unreachable)('getPattern type unknown: ' + shadingType);\n      }\n      var matrix = this.matrix;\n      if (matrix) {\n        p0 = _util.Util.applyTransform(p0, matrix);\n        p1 = _util.Util.applyTransform(p1, matrix);\n        if (shadingType === ShadingType.RADIAL) {\n          var scale = _util.Util.singularValueDecompose2dScale(matrix);\n          r0 *= scale[0];\n          r1 *= scale[1];\n        }\n      }\n      return ['RadialAxial', type, this.colorStops, p0, p1, r0, r1];\n    }\n  };\n  return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n  function MeshStreamReader(stream, context) {\n    this.stream = stream;\n    this.context = context;\n    this.buffer = 0;\n    this.bufferLength = 0;\n    var numComps = context.numComps;\n    this.tmpCompsBuf = new Float32Array(numComps);\n    var csNumComps = context.colorSpace.numComps;\n    this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n  }\n  MeshStreamReader.prototype = {\n    get hasData() {\n      if (this.stream.end) {\n        return this.stream.pos < this.stream.end;\n      }\n      if (this.bufferLength > 0) {\n        return true;\n      }\n      var nextByte = this.stream.getByte();\n      if (nextByte < 0) {\n        return false;\n      }\n      this.buffer = nextByte;\n      this.bufferLength = 8;\n      return true;\n    },\n    readBits: function MeshStreamReader_readBits(n) {\n      var buffer = this.buffer;\n      var bufferLength = this.bufferLength;\n      if (n === 32) {\n        if (bufferLength === 0) {\n          return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n        }\n        buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n        var nextByte = this.stream.getByte();\n        this.buffer = nextByte & (1 << bufferLength) - 1;\n        return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n      }\n      if (n === 8 && bufferLength === 0) {\n        return this.stream.getByte();\n      }\n      while (bufferLength < n) {\n        buffer = buffer << 8 | this.stream.getByte();\n        bufferLength += 8;\n      }\n      bufferLength -= n;\n      this.bufferLength = bufferLength;\n      this.buffer = buffer & (1 << bufferLength) - 1;\n      return buffer >> bufferLength;\n    },\n    align: function MeshStreamReader_align() {\n      this.buffer = 0;\n      this.bufferLength = 0;\n    },\n    readFlag: function MeshStreamReader_readFlag() {\n      return this.readBits(this.context.bitsPerFlag);\n    },\n    readCoordinate: function MeshStreamReader_readCoordinate() {\n      var bitsPerCoordinate = this.context.bitsPerCoordinate;\n      var xi = this.readBits(bitsPerCoordinate);\n      var yi = this.readBits(bitsPerCoordinate);\n      var decode = this.context.decode;\n      var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n      return [xi * scale * (decode[1] - decode[0]) + decode[0], yi * scale * (decode[3] - decode[2]) + decode[2]];\n    },\n    readComponents: function MeshStreamReader_readComponents() {\n      var numComps = this.context.numComps;\n      var bitsPerComponent = this.context.bitsPerComponent;\n      var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n      var decode = this.context.decode;\n      var components = this.tmpCompsBuf;\n      for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n        var ci = this.readBits(bitsPerComponent);\n        components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n      }\n      var color = this.tmpCsCompsBuf;\n      if (this.context.colorFn) {\n        this.context.colorFn(components, 0, color, 0);\n      }\n      return this.context.colorSpace.getRgb(color, 0);\n    }\n  };\n  function decodeType4Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var operators = [];\n    var ps = [];\n    var verticesLeft = 0;\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      if (verticesLeft === 0) {\n        if (!(0 <= f && f <= 2)) {\n          throw new _util.FormatError('Unknown type4 flag');\n        }\n        switch (f) {\n          case 0:\n            verticesLeft = 3;\n            break;\n          case 1:\n            ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n          case 2:\n            ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n            verticesLeft = 1;\n            break;\n        }\n        operators.push(f);\n      }\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n      verticesLeft--;\n      reader.align();\n    }\n    mesh.figures.push({\n      type: 'triangles',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps)\n    });\n  }\n  function decodeType5Shading(mesh, reader, verticesPerRow) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = [];\n    while (reader.hasData) {\n      var coord = reader.readCoordinate();\n      var color = reader.readComponents();\n      ps.push(coords.length);\n      coords.push(coord);\n      colors.push(color);\n    }\n    mesh.figures.push({\n      type: 'lattice',\n      coords: new Int32Array(ps),\n      colors: new Int32Array(ps),\n      verticesPerRow: verticesPerRow\n    });\n  }\n  var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n  var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n  var TRIANGLE_DENSITY = 20;\n  var getB = function getBClosure() {\n    function buildB(count) {\n      var lut = [];\n      for (var i = 0; i <= count; i++) {\n        var t = i / count,\n            t_ = 1 - t;\n        lut.push(new Float32Array([t_ * t_ * t_, 3 * t * t_ * t_, 3 * t * t * t_, t * t * t]));\n      }\n      return lut;\n    }\n    var cache = [];\n    return function getB(count) {\n      if (!cache[count]) {\n        cache[count] = buildB(count);\n      }\n      return cache[count];\n    };\n  }();\n  function buildFigureFromPatch(mesh, index) {\n    var figure = mesh.figures[index];\n    (0, _util.assert)(figure.type === 'patch', 'Unexpected patch mesh figure');\n    var coords = mesh.coords,\n        colors = mesh.colors;\n    var pi = figure.coords;\n    var ci = figure.colors;\n    var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n    var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n    var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n    splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n    var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n    splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n    var verticesPerRow = splitXBy + 1;\n    var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n    var k = 0;\n    var cl = new Uint8Array(3),\n        cr = new Uint8Array(3);\n    var c0 = colors[ci[0]],\n        c1 = colors[ci[1]],\n        c2 = colors[ci[2]],\n        c3 = colors[ci[3]];\n    var bRow = getB(splitYBy),\n        bCol = getB(splitXBy);\n    for (var row = 0; row <= splitYBy; row++) {\n      cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n      cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n      cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n      cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n      cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n      cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n      for (var col = 0; col <= splitXBy; col++, k++) {\n        if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n          continue;\n        }\n        var x = 0,\n            y = 0;\n        var q = 0;\n        for (var i = 0; i <= 3; i++) {\n          for (var j = 0; j <= 3; j++, q++) {\n            var m = bRow[row][i] * bCol[col][j];\n            x += coords[pi[q]][0] * m;\n            y += coords[pi[q]][1] * m;\n          }\n        }\n        figureCoords[k] = coords.length;\n        coords.push([x, y]);\n        figureColors[k] = colors.length;\n        var newColor = new Uint8Array(3);\n        newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n        newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n        newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n        colors.push(newColor);\n      }\n    }\n    figureCoords[0] = pi[0];\n    figureColors[0] = ci[0];\n    figureCoords[splitXBy] = pi[3];\n    figureColors[splitXBy] = ci[1];\n    figureCoords[verticesPerRow * splitYBy] = pi[12];\n    figureColors[verticesPerRow * splitYBy] = ci[2];\n    figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n    figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n    mesh.figures[index] = {\n      type: 'lattice',\n      coords: figureCoords,\n      colors: figureColors,\n      verticesPerRow: verticesPerRow\n    };\n  }\n  function decodeType6Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type6 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      ps[5] = coords.length;\n      coords.push([(-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9, (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9]);\n      ps[6] = coords.length;\n      coords.push([(-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9, (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9]);\n      ps[9] = coords.length;\n      coords.push([(-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9, (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9]);\n      ps[10] = coords.length;\n      coords.push([(-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9, (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9]);\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function decodeType7Shading(mesh, reader) {\n    var coords = mesh.coords;\n    var colors = mesh.colors;\n    var ps = new Int32Array(16);\n    var cs = new Int32Array(4);\n    while (reader.hasData) {\n      var f = reader.readFlag();\n      if (!(0 <= f && f <= 3)) {\n        throw new _util.FormatError('Unknown type7 flag');\n      }\n      var i, ii;\n      var pi = coords.length;\n      for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n        coords.push(reader.readCoordinate());\n      }\n      var ci = colors.length;\n      for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n        colors.push(reader.readComponents());\n      }\n      var tmp1, tmp2, tmp3, tmp4;\n      switch (f) {\n        case 0:\n          ps[12] = pi + 3;\n          ps[13] = pi + 4;\n          ps[14] = pi + 5;\n          ps[15] = pi + 6;\n          ps[8] = pi + 2;\n          ps[9] = pi + 13;\n          ps[10] = pi + 14;\n          ps[11] = pi + 7;\n          ps[4] = pi + 1;\n          ps[5] = pi + 12;\n          ps[6] = pi + 15;\n          ps[7] = pi + 8;\n          ps[0] = pi;\n          ps[1] = pi + 11;\n          ps[2] = pi + 10;\n          ps[3] = pi + 9;\n          cs[2] = ci + 1;\n          cs[3] = ci + 2;\n          cs[0] = ci;\n          cs[1] = ci + 3;\n          break;\n        case 1:\n          tmp1 = ps[12];\n          tmp2 = ps[13];\n          tmp3 = ps[14];\n          tmp4 = ps[15];\n          ps[12] = tmp4;\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = tmp3;\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[2];\n          tmp2 = cs[3];\n          cs[2] = tmp2;\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 2:\n          tmp1 = ps[15];\n          tmp2 = ps[11];\n          ps[12] = ps[3];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[7];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = tmp2;\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = tmp1;\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          tmp1 = cs[3];\n          cs[2] = cs[1];\n          cs[3] = ci;\n          cs[0] = tmp1;\n          cs[1] = ci + 1;\n          break;\n        case 3:\n          ps[12] = ps[0];\n          ps[13] = pi + 0;\n          ps[14] = pi + 1;\n          ps[15] = pi + 2;\n          ps[8] = ps[1];\n          ps[9] = pi + 9;\n          ps[10] = pi + 10;\n          ps[11] = pi + 3;\n          ps[4] = ps[2];\n          ps[5] = pi + 8;\n          ps[6] = pi + 11;\n          ps[7] = pi + 4;\n          ps[0] = ps[3];\n          ps[1] = pi + 7;\n          ps[2] = pi + 6;\n          ps[3] = pi + 5;\n          cs[2] = cs[0];\n          cs[3] = ci;\n          cs[0] = cs[1];\n          cs[1] = ci + 1;\n          break;\n      }\n      mesh.figures.push({\n        type: 'patch',\n        coords: new Int32Array(ps),\n        colors: new Int32Array(cs)\n      });\n    }\n  }\n  function updateBounds(mesh) {\n    var minX = mesh.coords[0][0],\n        minY = mesh.coords[0][1],\n        maxX = minX,\n        maxY = minY;\n    for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n      var x = mesh.coords[i][0],\n          y = mesh.coords[i][1];\n      minX = minX > x ? x : minX;\n      minY = minY > y ? y : minY;\n      maxX = maxX < x ? x : maxX;\n      maxY = maxY < y ? y : maxY;\n    }\n    mesh.bounds = [minX, minY, maxX, maxY];\n  }\n  function packData(mesh) {\n    var i, ii, j, jj;\n    var coords = mesh.coords;\n    var coordsPacked = new Float32Array(coords.length * 2);\n    for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n      var xy = coords[i];\n      coordsPacked[j++] = xy[0];\n      coordsPacked[j++] = xy[1];\n    }\n    mesh.coords = coordsPacked;\n    var colors = mesh.colors;\n    var colorsPacked = new Uint8Array(colors.length * 3);\n    for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n      var c = colors[i];\n      colorsPacked[j++] = c[0];\n      colorsPacked[j++] = c[1];\n      colorsPacked[j++] = c[2];\n    }\n    mesh.colors = colorsPacked;\n    var figures = mesh.figures;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n          ps = figure.coords,\n          cs = figure.colors;\n      for (j = 0, jj = ps.length; j < jj; j++) {\n        ps[j] *= 2;\n        cs[j] *= 3;\n      }\n    }\n  }\n  function Mesh(stream, matrix, xref, res, pdfFunctionFactory) {\n    if (!(0, _primitives.isStream)(stream)) {\n      throw new _util.FormatError('Mesh data is not a stream');\n    }\n    var dict = stream.dict;\n    this.matrix = matrix;\n    this.shadingType = dict.get('ShadingType');\n    this.type = 'Pattern';\n    this.bbox = dict.getArray('BBox');\n    var cs = dict.get('ColorSpace', 'CS');\n    cs = _colorspace.ColorSpace.parse(cs, xref, res, pdfFunctionFactory);\n    this.cs = cs;\n    this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n    var fnObj = dict.get('Function');\n    var fn = fnObj ? pdfFunctionFactory.createFromArray(fnObj) : null;\n    this.coords = [];\n    this.colors = [];\n    this.figures = [];\n    var decodeContext = {\n      bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n      bitsPerComponent: dict.get('BitsPerComponent'),\n      bitsPerFlag: dict.get('BitsPerFlag'),\n      decode: dict.getArray('Decode'),\n      colorFn: fn,\n      colorSpace: cs,\n      numComps: fn ? 1 : cs.numComps\n    };\n    var reader = new MeshStreamReader(stream, decodeContext);\n    var patchMesh = false;\n    switch (this.shadingType) {\n      case ShadingType.FREE_FORM_MESH:\n        decodeType4Shading(this, reader);\n        break;\n      case ShadingType.LATTICE_FORM_MESH:\n        var verticesPerRow = dict.get('VerticesPerRow') | 0;\n        if (verticesPerRow < 2) {\n          throw new _util.FormatError('Invalid VerticesPerRow');\n        }\n        decodeType5Shading(this, reader, verticesPerRow);\n        break;\n      case ShadingType.COONS_PATCH_MESH:\n        decodeType6Shading(this, reader);\n        patchMesh = true;\n        break;\n      case ShadingType.TENSOR_PATCH_MESH:\n        decodeType7Shading(this, reader);\n        patchMesh = true;\n        break;\n      default:\n        (0, _util.unreachable)('Unsupported mesh type.');\n        break;\n    }\n    if (patchMesh) {\n      updateBounds(this);\n      for (var i = 0, ii = this.figures.length; i < ii; i++) {\n        buildFigureFromPatch(this, i);\n      }\n    }\n    updateBounds(this);\n    packData(this);\n  }\n  Mesh.prototype = {\n    getIR: function Mesh_getIR() {\n      return ['Mesh', this.shadingType, this.coords, this.colors, this.figures, this.bounds, this.matrix, this.bbox, this.background];\n    }\n  };\n  return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n  function Dummy() {\n    this.type = 'Pattern';\n  }\n  Dummy.prototype = {\n    getIR: function Dummy_getIR() {\n      return ['Dummy'];\n    }\n  };\n  return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n  var matrix = dict.getArray('Matrix');\n  var bbox = _util.Util.normalizeRect(dict.getArray('BBox'));\n  var xstep = dict.get('XStep');\n  var ystep = dict.get('YStep');\n  var paintType = dict.get('PaintType');\n  var tilingType = dict.get('TilingType');\n  if (bbox[2] - bbox[0] === 0 || bbox[3] - bbox[1] === 0) {\n    throw new _util.FormatError('Invalid getTilingPatternIR /BBox array: [' + bbox + '].');\n  }\n  return ['TilingPattern', args, operatorList, matrix, bbox, xstep, ystep, paintType, tilingType];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Type1Parser = undefined;\n\nvar _util = require('../shared/util');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n  var COMMAND_MAP = {\n    'hstem': [1],\n    'vstem': [3],\n    'vmoveto': [4],\n    'rlineto': [5],\n    'hlineto': [6],\n    'vlineto': [7],\n    'rrcurveto': [8],\n    'callsubr': [10],\n    'flex': [12, 35],\n    'drop': [12, 18],\n    'endchar': [14],\n    'rmoveto': [21],\n    'hmoveto': [22],\n    'vhcurveto': [30],\n    'hvcurveto': [31]\n  };\n  function Type1CharString() {\n    this.width = 0;\n    this.lsb = 0;\n    this.flexing = false;\n    this.output = [];\n    this.stack = [];\n  }\n  Type1CharString.prototype = {\n    convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n      var count = encoded.length;\n      var error = false;\n      var wx, sbx, subrNumber;\n      for (var i = 0; i < count; i++) {\n        var value = encoded[i];\n        if (value < 32) {\n          if (value === 12) {\n            value = (value << 8) + encoded[++i];\n          }\n          switch (value) {\n            case 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case 3:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case 4:\n              if (this.flexing) {\n                if (this.stack.length < 1) {\n                  error = true;\n                  break;\n                }\n                var dy = this.stack.pop();\n                this.stack.push(0, dy);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n              break;\n            case 5:\n              error = this.executeCommand(2, COMMAND_MAP.rlineto);\n              break;\n            case 6:\n              error = this.executeCommand(1, COMMAND_MAP.hlineto);\n              break;\n            case 7:\n              error = this.executeCommand(1, COMMAND_MAP.vlineto);\n              break;\n            case 8:\n              error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n              break;\n            case 9:\n              this.stack = [];\n              break;\n            case 10:\n              if (this.stack.length < 1) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              if (!subrs[subrNumber]) {\n                error = true;\n                break;\n              }\n              error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n              break;\n            case 11:\n              return error;\n            case 13:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              wx = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx);\n              error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n              break;\n            case 14:\n              this.output.push(COMMAND_MAP.endchar[0]);\n              break;\n            case 21:\n              if (this.flexing) {\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n              break;\n            case 22:\n              if (this.flexing) {\n                this.stack.push(0);\n                break;\n              }\n              error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n              break;\n            case 30:\n              error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n              break;\n            case 31:\n              error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n              break;\n            case (12 << 8) + 0:\n              this.stack = [];\n              break;\n            case (12 << 8) + 1:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.vstem);\n              break;\n            case (12 << 8) + 2:\n              if (!HINTING_ENABLED) {\n                this.stack = [];\n                break;\n              }\n              error = this.executeCommand(2, COMMAND_MAP.hstem);\n              break;\n            case (12 << 8) + 6:\n              if (seacAnalysisEnabled) {\n                this.seac = this.stack.splice(-4, 4);\n                error = this.executeCommand(0, COMMAND_MAP.endchar);\n              } else {\n                error = this.executeCommand(4, COMMAND_MAP.endchar);\n              }\n              break;\n            case (12 << 8) + 7:\n              if (this.stack.length < 4) {\n                error = true;\n                break;\n              }\n              this.stack.pop();\n              wx = this.stack.pop();\n              var sby = this.stack.pop();\n              sbx = this.stack.pop();\n              this.lsb = sbx;\n              this.width = wx;\n              this.stack.push(wx, sbx, sby);\n              error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n              break;\n            case (12 << 8) + 12:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              var num2 = this.stack.pop();\n              var num1 = this.stack.pop();\n              this.stack.push(num1 / num2);\n              break;\n            case (12 << 8) + 16:\n              if (this.stack.length < 2) {\n                error = true;\n                break;\n              }\n              subrNumber = this.stack.pop();\n              var numArgs = this.stack.pop();\n              if (subrNumber === 0 && numArgs === 3) {\n                var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n                this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n                error = this.executeCommand(13, COMMAND_MAP.flex, true);\n                this.flexing = false;\n                this.stack.push(flexArgs[15], flexArgs[16]);\n              } else if (subrNumber === 1 && numArgs === 0) {\n                this.flexing = true;\n              }\n              break;\n            case (12 << 8) + 17:\n              break;\n            case (12 << 8) + 33:\n              this.stack = [];\n              break;\n            default:\n              (0, _util.warn)('Unknown type 1 charstring command of \"' + value + '\"');\n              break;\n          }\n          if (error) {\n            break;\n          }\n          continue;\n        } else if (value <= 246) {\n          value = value - 139;\n        } else if (value <= 250) {\n          value = (value - 247) * 256 + encoded[++i] + 108;\n        } else if (value <= 254) {\n          value = -((value - 251) * 256) - encoded[++i] - 108;\n        } else {\n          value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n        }\n        this.stack.push(value);\n      }\n      return error;\n    },\n    executeCommand: function executeCommand(howManyArgs, command, keepStack) {\n      var stackLength = this.stack.length;\n      if (howManyArgs > stackLength) {\n        return true;\n      }\n      var start = stackLength - howManyArgs;\n      for (var i = start; i < stackLength; i++) {\n        var value = this.stack[i];\n        if (Number.isInteger(value)) {\n          this.output.push(28, value >> 8 & 0xff, value & 0xff);\n        } else {\n          value = 65536 * value | 0;\n          this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n        }\n      }\n      this.output.push.apply(this.output, command);\n      if (keepStack) {\n        this.stack.splice(start, howManyArgs);\n      } else {\n        this.stack.length = 0;\n      }\n      return false;\n    }\n  };\n  return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n  var EEXEC_ENCRYPT_KEY = 55665;\n  var CHAR_STRS_ENCRYPT_KEY = 4330;\n  function isHexDigit(code) {\n    return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n  }\n  function decrypt(data, key, discardNumber) {\n    if (discardNumber >= data.length) {\n      return new Uint8Array(0);\n    }\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719,\n        i,\n        j;\n    for (i = 0; i < discardNumber; i++) {\n      r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    var count = data.length - discardNumber;\n    var decrypted = new Uint8Array(count);\n    for (i = discardNumber, j = 0; j < count; i++, j++) {\n      var value = data[i];\n      decrypted[j] = value ^ r >> 8;\n      r = (value + r) * c1 + c2 & (1 << 16) - 1;\n    }\n    return decrypted;\n  }\n  function decryptAscii(data, key, discardNumber) {\n    var r = key | 0,\n        c1 = 52845,\n        c2 = 22719;\n    var count = data.length,\n        maybeLength = count >>> 1;\n    var decrypted = new Uint8Array(maybeLength);\n    var i, j;\n    for (i = 0, j = 0; i < count; i++) {\n      var digit1 = data[i];\n      if (!isHexDigit(digit1)) {\n        continue;\n      }\n      i++;\n      var digit2;\n      while (i < count && !isHexDigit(digit2 = data[i])) {\n        i++;\n      }\n      if (i < count) {\n        var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n        decrypted[j++] = value ^ r >> 8;\n        r = (value + r) * c1 + c2 & (1 << 16) - 1;\n      }\n    }\n    return Array.prototype.slice.call(decrypted, discardNumber, j);\n  }\n  function isSpecial(c) {\n    return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n  }\n  function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n    if (encrypted) {\n      var data = stream.getBytes();\n      var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n      stream = new _stream.Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n    }\n    this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n    this.stream = stream;\n    this.nextChar();\n  }\n  Type1Parser.prototype = {\n    readNumberArray: function Type1Parser_readNumberArray() {\n      this.getToken();\n      var array = [];\n      while (true) {\n        var token = this.getToken();\n        if (token === null || token === ']' || token === '}') {\n          break;\n        }\n        array.push(parseFloat(token || 0));\n      }\n      return array;\n    },\n    readNumber: function Type1Parser_readNumber() {\n      var token = this.getToken();\n      return parseFloat(token || 0);\n    },\n    readInt: function Type1Parser_readInt() {\n      var token = this.getToken();\n      return parseInt(token || 0, 10) | 0;\n    },\n    readBoolean: function Type1Parser_readBoolean() {\n      var token = this.getToken();\n      return token === 'true' ? 1 : 0;\n    },\n    nextChar: function Type1_nextChar() {\n      return this.currentChar = this.stream.getByte();\n    },\n    getToken: function Type1Parser_getToken() {\n      var comment = false;\n      var ch = this.currentChar;\n      while (true) {\n        if (ch === -1) {\n          return null;\n        }\n        if (comment) {\n          if (ch === 0x0A || ch === 0x0D) {\n            comment = false;\n          }\n        } else if (ch === 0x25) {\n          comment = true;\n        } else if (!(0, _util.isSpace)(ch)) {\n          break;\n        }\n        ch = this.nextChar();\n      }\n      if (isSpecial(ch)) {\n        this.nextChar();\n        return String.fromCharCode(ch);\n      }\n      var token = '';\n      do {\n        token += String.fromCharCode(ch);\n        ch = this.nextChar();\n      } while (ch >= 0 && !(0, _util.isSpace)(ch) && !isSpecial(ch));\n      return token;\n    },\n    readCharStrings: function Type1Parser_readCharStrings(bytes, lenIV) {\n      if (lenIV === -1) {\n        return bytes;\n      }\n      return decrypt(bytes, CHAR_STRS_ENCRYPT_KEY, lenIV);\n    },\n    extractFontProgram: function Type1Parser_extractFontProgram() {\n      var stream = this.stream;\n      var subrs = [],\n          charstrings = [];\n      var privateData = Object.create(null);\n      privateData['lenIV'] = 4;\n      var program = {\n        subrs: [],\n        charstrings: [],\n        properties: { 'privateData': privateData }\n      };\n      var token, length, data, lenIV, encoded;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'CharStrings':\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            this.getToken();\n            while (true) {\n              token = this.getToken();\n              if (token === null || token === 'end') {\n                break;\n              }\n              if (token !== '/') {\n                continue;\n              }\n              var glyph = this.getToken();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              charstrings.push({\n                glyph: glyph,\n                encoded: encoded\n              });\n            }\n            break;\n          case 'Subrs':\n            this.readInt();\n            this.getToken();\n            while (this.getToken() === 'dup') {\n              var index = this.readInt();\n              length = this.readInt();\n              this.getToken();\n              data = stream.makeSubStream(stream.pos, length);\n              lenIV = program.properties.privateData['lenIV'];\n              encoded = this.readCharStrings(data.getBytes(), lenIV);\n              stream.skip(length);\n              this.nextChar();\n              token = this.getToken();\n              if (token === 'noaccess') {\n                this.getToken();\n              }\n              subrs[index] = encoded;\n            }\n            break;\n          case 'BlueValues':\n          case 'OtherBlues':\n          case 'FamilyBlues':\n          case 'FamilyOtherBlues':\n            var blueArray = this.readNumberArray();\n            if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n              program.properties.privateData[token] = blueArray;\n            }\n            break;\n          case 'StemSnapH':\n          case 'StemSnapV':\n            program.properties.privateData[token] = this.readNumberArray();\n            break;\n          case 'StdHW':\n          case 'StdVW':\n            program.properties.privateData[token] = this.readNumberArray()[0];\n            break;\n          case 'BlueShift':\n          case 'lenIV':\n          case 'BlueFuzz':\n          case 'BlueScale':\n          case 'LanguageGroup':\n          case 'ExpansionFactor':\n            program.properties.privateData[token] = this.readNumber();\n            break;\n          case 'ForceBold':\n            program.properties.privateData[token] = this.readBoolean();\n            break;\n        }\n      }\n      for (var i = 0; i < charstrings.length; i++) {\n        glyph = charstrings[i].glyph;\n        encoded = charstrings[i].encoded;\n        var charString = new Type1CharString();\n        var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n        var output = charString.output;\n        if (error) {\n          output = [14];\n        }\n        program.charstrings.push({\n          glyphName: glyph,\n          charstring: output,\n          width: charString.width,\n          lsb: charString.lsb,\n          seac: charString.seac\n        });\n      }\n      return program;\n    },\n    extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n      var token;\n      while ((token = this.getToken()) !== null) {\n        if (token !== '/') {\n          continue;\n        }\n        token = this.getToken();\n        switch (token) {\n          case 'FontMatrix':\n            var matrix = this.readNumberArray();\n            properties.fontMatrix = matrix;\n            break;\n          case 'Encoding':\n            var encodingArg = this.getToken();\n            var encoding;\n            if (!/^\\d+$/.test(encodingArg)) {\n              encoding = (0, _encodings.getEncoding)(encodingArg);\n            } else {\n              encoding = [];\n              var size = parseInt(encodingArg, 10) | 0;\n              this.getToken();\n              for (var j = 0; j < size; j++) {\n                token = this.getToken();\n                while (token !== 'dup' && token !== 'def') {\n                  token = this.getToken();\n                  if (token === null) {\n                    return;\n                  }\n                }\n                if (token === 'def') {\n                  break;\n                }\n                var index = this.readInt();\n                this.getToken();\n                var glyph = this.getToken();\n                encoding[index] = glyph;\n                this.getToken();\n              }\n            }\n            properties.builtInEncoding = encoding;\n            break;\n          case 'FontBBox':\n            var fontBBox = this.readNumberArray();\n            properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n            properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n            properties.ascentScaled = true;\n            break;\n        }\n      }\n    }\n  };\n  return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FontRendererFactory = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _stream = require('./stream');\n\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n  function getLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n  }\n  function getUshort(data, offset) {\n    return data[offset] << 8 | data[offset + 1];\n  }\n  function parseCmap(data, start, end) {\n    var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n    var format = getUshort(data, start + offset);\n    var ranges, p, i;\n    if (format === 4) {\n      getUshort(data, start + offset + 2);\n      var segCount = getUshort(data, start + offset + 6) >> 1;\n      p = start + offset + 14;\n      ranges = [];\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i] = { end: getUshort(data, p) };\n      }\n      p += 2;\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].start = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        ranges[i].idDelta = getUshort(data, p);\n      }\n      for (i = 0; i < segCount; i++, p += 2) {\n        var idOffset = getUshort(data, p);\n        if (idOffset === 0) {\n          continue;\n        }\n        ranges[i].ids = [];\n        for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n          ranges[i].ids[j] = getUshort(data, p + idOffset);\n          idOffset += 2;\n        }\n      }\n      return ranges;\n    } else if (format === 12) {\n      getLong(data, start + offset + 4);\n      var groups = getLong(data, start + offset + 12);\n      p = start + offset + 16;\n      ranges = [];\n      for (i = 0; i < groups; i++) {\n        ranges.push({\n          start: getLong(data, p),\n          end: getLong(data, p + 4),\n          idDelta: getLong(data, p + 8) - getLong(data, p)\n        });\n        p += 12;\n      }\n      return ranges;\n    }\n    throw new _util.FormatError('unsupported cmap: ' + format);\n  }\n  function parseCff(data, start, end, seacAnalysisEnabled) {\n    var properties = {};\n    var parser = new _cff_parser.CFFParser(new _stream.Stream(data, start, end - start), properties, seacAnalysisEnabled);\n    var cff = parser.parse();\n    return {\n      glyphs: cff.charStrings.objects,\n      subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n      gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n    };\n  }\n  function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n    var itemSize, itemDecode;\n    if (isGlyphLocationsLong) {\n      itemSize = 4;\n      itemDecode = function fontItemDecodeLong(data, offset) {\n        return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n      };\n    } else {\n      itemSize = 2;\n      itemDecode = function fontItemDecode(data, offset) {\n        return data[offset] << 9 | data[offset + 1] << 1;\n      };\n    }\n    var glyphs = [];\n    var startOffset = itemDecode(loca, 0);\n    for (var j = itemSize; j < loca.length; j += itemSize) {\n      var endOffset = itemDecode(loca, j);\n      glyphs.push(glyf.subarray(startOffset, endOffset));\n      startOffset = endOffset;\n    }\n    return glyphs;\n  }\n  function lookupCmap(ranges, unicode) {\n    var code = unicode.charCodeAt(0),\n        gid = 0;\n    var l = 0,\n        r = ranges.length - 1;\n    while (l < r) {\n      var c = l + r + 1 >> 1;\n      if (code < ranges[c].start) {\n        r = c - 1;\n      } else {\n        l = c;\n      }\n    }\n    if (ranges[l].start <= code && code <= ranges[l].end) {\n      gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n    }\n    return {\n      charCode: code,\n      glyphId: gid\n    };\n  }\n  function compileGlyf(code, cmds, font) {\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function quadraticCurveTo(xa, ya, x, y) {\n      cmds.push({\n        cmd: 'quadraticCurveTo',\n        args: [xa, ya, x, y]\n      });\n    }\n    var i = 0;\n    var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n    var flags;\n    var x = 0,\n        y = 0;\n    i += 10;\n    if (numberOfContours < 0) {\n      do {\n        flags = code[i] << 8 | code[i + 1];\n        var glyphIndex = code[i + 2] << 8 | code[i + 3];\n        i += 4;\n        var arg1, arg2;\n        if (flags & 0x01) {\n          arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n          arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n          i += 4;\n        } else {\n          arg1 = code[i++];\n          arg2 = code[i++];\n        }\n        if (flags & 0x02) {\n          x = arg1;\n          y = arg2;\n        } else {\n          x = 0;\n          y = 0;\n        }\n        var scaleX = 1,\n            scaleY = 1,\n            scale01 = 0,\n            scale10 = 0;\n        if (flags & 0x08) {\n          scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          i += 2;\n        } else if (flags & 0x40) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          i += 4;\n        } else if (flags & 0x80) {\n          scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n          scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n          scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n          scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n          i += 8;\n        }\n        var subglyph = font.glyphs[glyphIndex];\n        if (subglyph) {\n          cmds.push({ cmd: 'save' });\n          cmds.push({\n            cmd: 'transform',\n            args: [scaleX, scale01, scale10, scaleY, x, y]\n          });\n          compileGlyf(subglyph, cmds, font);\n          cmds.push({ cmd: 'restore' });\n        }\n      } while (flags & 0x20);\n    } else {\n      var endPtsOfContours = [];\n      var j, jj;\n      for (j = 0; j < numberOfContours; j++) {\n        endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n        i += 2;\n      }\n      var instructionLength = code[i] << 8 | code[i + 1];\n      i += 2 + instructionLength;\n      var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n      var points = [];\n      while (points.length < numberOfPoints) {\n        flags = code[i++];\n        var repeat = 1;\n        if (flags & 0x08) {\n          repeat += code[i++];\n        }\n        while (repeat-- > 0) {\n          points.push({ flags: flags });\n        }\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x12) {\n          case 0x00:\n            x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x02:\n            x -= code[i++];\n            break;\n          case 0x12:\n            x += code[i++];\n            break;\n        }\n        points[j].x = x;\n      }\n      for (j = 0; j < numberOfPoints; j++) {\n        switch (points[j].flags & 0x24) {\n          case 0x00:\n            y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n            i += 2;\n            break;\n          case 0x04:\n            y -= code[i++];\n            break;\n          case 0x24:\n            y += code[i++];\n            break;\n        }\n        points[j].y = y;\n      }\n      var startPoint = 0;\n      for (i = 0; i < numberOfContours; i++) {\n        var endPoint = endPtsOfContours[i];\n        var contour = points.slice(startPoint, endPoint + 1);\n        if (contour[0].flags & 1) {\n          contour.push(contour[0]);\n        } else if (contour[contour.length - 1].flags & 1) {\n          contour.unshift(contour[contour.length - 1]);\n        } else {\n          var p = {\n            flags: 1,\n            x: (contour[0].x + contour[contour.length - 1].x) / 2,\n            y: (contour[0].y + contour[contour.length - 1].y) / 2\n          };\n          contour.unshift(p);\n          contour.push(p);\n        }\n        moveTo(contour[0].x, contour[0].y);\n        for (j = 1, jj = contour.length; j < jj; j++) {\n          if (contour[j].flags & 1) {\n            lineTo(contour[j].x, contour[j].y);\n          } else if (contour[j + 1].flags & 1) {\n            quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n            j++;\n          } else {\n            quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n          }\n        }\n        startPoint = endPoint + 1;\n      }\n    }\n  }\n  function compileCharString(code, cmds, font) {\n    var stack = [];\n    var x = 0,\n        y = 0;\n    var stems = 0;\n    function moveTo(x, y) {\n      cmds.push({\n        cmd: 'moveTo',\n        args: [x, y]\n      });\n    }\n    function lineTo(x, y) {\n      cmds.push({\n        cmd: 'lineTo',\n        args: [x, y]\n      });\n    }\n    function bezierCurveTo(x1, y1, x2, y2, x, y) {\n      cmds.push({\n        cmd: 'bezierCurveTo',\n        args: [x1, y1, x2, y2, x, y]\n      });\n    }\n    function parse(code) {\n      var i = 0;\n      while (i < code.length) {\n        var stackClean = false;\n        var v = code[i++];\n        var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n        switch (v) {\n          case 1:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 3:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 4:\n            y += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 5:\n            while (stack.length > 0) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 6:\n            while (stack.length > 0) {\n              x += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 7:\n            while (stack.length > 0) {\n              y += stack.shift();\n              lineTo(x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              x += stack.shift();\n              lineTo(x, y);\n            }\n            break;\n          case 8:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 10:\n            n = stack.pop() + font.subrsBias;\n            subrCode = font.subrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 11:\n            return;\n          case 12:\n            v = code[i++];\n            switch (v) {\n              case 34:\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y1 = y + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y, xb, y1, x, y1);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y, x, y);\n                break;\n              case 35:\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                stack.pop();\n                break;\n              case 36:\n                xa = x + stack.shift();\n                y1 = y + stack.shift();\n                xb = xa + stack.shift();\n                y2 = y1 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y1, xb, y2, x, y2);\n                xa = x + stack.shift();\n                xb = xa + stack.shift();\n                y3 = y2 + stack.shift();\n                x = xb + stack.shift();\n                bezierCurveTo(xa, y2, xb, y3, x, y);\n                break;\n              case 37:\n                var x0 = x,\n                    y0 = y;\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb + stack.shift();\n                y = yb + stack.shift();\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                xa = x + stack.shift();\n                ya = y + stack.shift();\n                xb = xa + stack.shift();\n                yb = ya + stack.shift();\n                x = xb;\n                y = yb;\n                if (Math.abs(x - x0) > Math.abs(y - y0)) {\n                  x += stack.shift();\n                } else {\n                  y += stack.shift();\n                }\n                bezierCurveTo(xa, ya, xb, yb, x, y);\n                break;\n              default:\n                throw new _util.FormatError('unknown operator: 12 ' + v);\n            }\n            break;\n          case 14:\n            if (stack.length >= 4) {\n              var achar = stack.pop();\n              var bchar = stack.pop();\n              y = stack.pop();\n              x = stack.pop();\n              cmds.push({ cmd: 'save' });\n              cmds.push({\n                cmd: 'translate',\n                args: [x, y]\n              });\n              var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[achar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n              cmds.push({ cmd: 'restore' });\n              cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[_encodings.StandardEncoding[bchar]]));\n              compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n            }\n            return;\n          case 18:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 19:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 20:\n            stems += stack.length >> 1;\n            i += stems + 7 >> 3;\n            stackClean = true;\n            break;\n          case 21:\n            y += stack.pop();\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 22:\n            x += stack.pop();\n            moveTo(x, y);\n            stackClean = true;\n            break;\n          case 23:\n            stems += stack.length >> 1;\n            stackClean = true;\n            break;\n          case 24:\n            while (stack.length > 2) {\n              xa = x + stack.shift();\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            x += stack.shift();\n            y += stack.shift();\n            lineTo(x, y);\n            break;\n          case 25:\n            while (stack.length > 6) {\n              x += stack.shift();\n              y += stack.shift();\n              lineTo(x, y);\n            }\n            xa = x + stack.shift();\n            ya = y + stack.shift();\n            xb = xa + stack.shift();\n            yb = ya + stack.shift();\n            x = xb + stack.shift();\n            y = yb + stack.shift();\n            bezierCurveTo(xa, ya, xb, yb, x, y);\n            break;\n          case 26:\n            if (stack.length % 2) {\n              x += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb;\n              y = yb + stack.shift();\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 27:\n            if (stack.length % 2) {\n              y += stack.shift();\n            }\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb;\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 28:\n            stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n            i += 2;\n            break;\n          case 29:\n            n = stack.pop() + font.gsubrsBias;\n            subrCode = font.gsubrs[n];\n            if (subrCode) {\n              parse(subrCode);\n            }\n            break;\n          case 30:\n            while (stack.length > 0) {\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          case 31:\n            while (stack.length > 0) {\n              xa = x + stack.shift();\n              ya = y;\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              y = yb + stack.shift();\n              x = xb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n              if (stack.length === 0) {\n                break;\n              }\n              xa = x;\n              ya = y + stack.shift();\n              xb = xa + stack.shift();\n              yb = ya + stack.shift();\n              x = xb + stack.shift();\n              y = yb + (stack.length === 1 ? stack.shift() : 0);\n              bezierCurveTo(xa, ya, xb, yb, x, y);\n            }\n            break;\n          default:\n            if (v < 32) {\n              throw new _util.FormatError('unknown operator: ' + v);\n            }\n            if (v < 247) {\n              stack.push(v - 139);\n            } else if (v < 251) {\n              stack.push((v - 247) * 256 + code[i++] + 108);\n            } else if (v < 255) {\n              stack.push(-(v - 251) * 256 - code[i++] - 108);\n            } else {\n              stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n              i += 4;\n            }\n            break;\n        }\n        if (stackClean) {\n          stack.length = 0;\n        }\n      }\n    }\n    parse(code);\n  }\n  var noop = '';\n  function CompiledFont(fontMatrix) {\n    this.compiledGlyphs = Object.create(null);\n    this.compiledCharCodeToGlyphId = Object.create(null);\n    this.fontMatrix = fontMatrix;\n  }\n  CompiledFont.prototype = {\n    getPathJs: function getPathJs(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      var fn = this.compiledGlyphs[cmap.glyphId];\n      if (!fn) {\n        fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n        this.compiledGlyphs[cmap.glyphId] = fn;\n      }\n      if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n        this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n      }\n      return fn;\n    },\n    compileGlyph: function compileGlyph(code) {\n      if (!code || code.length === 0 || code[0] === 14) {\n        return noop;\n      }\n      var cmds = [];\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n        cmd: 'transform',\n        args: this.fontMatrix.slice()\n      });\n      cmds.push({\n        cmd: 'scale',\n        args: ['size', '-size']\n      });\n      this.compileGlyphImpl(code, cmds);\n      cmds.push({ cmd: 'restore' });\n      return cmds;\n    },\n    compileGlyphImpl: function compileGlyphImpl() {\n      (0, _util.unreachable)('Children classes should implement this.');\n    },\n    hasBuiltPath: function hasBuiltPath(unicode) {\n      var cmap = lookupCmap(this.cmap, unicode);\n      return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n    }\n  };\n  function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n    fontMatrix = fontMatrix || [0.000488, 0, 0, 0.000488, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = glyphs;\n    this.cmap = cmap;\n  }\n  _util.Util.inherit(TrueTypeCompiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileGlyf(code, cmds, this);\n    }\n  });\n  function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n    fontMatrix = fontMatrix || [0.001, 0, 0, 0.001, 0, 0];\n    CompiledFont.call(this, fontMatrix);\n    this.glyphs = cffInfo.glyphs;\n    this.gsubrs = cffInfo.gsubrs || [];\n    this.subrs = cffInfo.subrs || [];\n    this.cmap = cmap;\n    this.glyphNameMap = glyphNameMap || (0, _glyphlist.getGlyphsUnicode)();\n    this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n    this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n  }\n  _util.Util.inherit(Type2Compiled, CompiledFont, {\n    compileGlyphImpl: function compileGlyphImpl(code, cmds) {\n      compileCharString(code, cmds, this);\n    }\n  });\n  return {\n    create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n      var data = new Uint8Array(font.data);\n      var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n      var numTables = getUshort(data, 4);\n      for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n        var tag = (0, _util.bytesToString)(data.subarray(p, p + 4));\n        var offset = getLong(data, p + 8);\n        var length = getLong(data, p + 12);\n        switch (tag) {\n          case 'cmap':\n            cmap = parseCmap(data, offset, offset + length);\n            break;\n          case 'glyf':\n            glyf = data.subarray(offset, offset + length);\n            break;\n          case 'loca':\n            loca = data.subarray(offset, offset + length);\n            break;\n          case 'head':\n            unitsPerEm = getUshort(data, offset + 18);\n            indexToLocFormat = getUshort(data, offset + 50);\n            break;\n          case 'CFF ':\n            cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n            break;\n        }\n      }\n      if (glyf) {\n        var fontMatrix = !unitsPerEm ? font.fontMatrix : [1 / unitsPerEm, 0, 0, 1 / unitsPerEm, 0, 0];\n        return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n      }\n      return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n    }\n  };\n}();\nexports.FontRendererFactory = FontRendererFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ISOAdobeCharset = ['.notdef', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quoteright', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'quoteleft', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'exclamdown', 'cent', 'sterling', 'fraction', 'yen', 'florin', 'section', 'currency', 'quotesingle', 'quotedblleft', 'guillemotleft', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'endash', 'dagger', 'daggerdbl', 'periodcentered', 'paragraph', 'bullet', 'quotesinglbase', 'quotedblbase', 'quotedblright', 'guillemotright', 'ellipsis', 'perthousand', 'questiondown', 'grave', 'acute', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'dieresis', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'emdash', 'AE', 'ordfeminine', 'Lslash', 'Oslash', 'OE', 'ordmasculine', 'ae', 'dotlessi', 'lslash', 'oslash', 'oe', 'germandbls', 'onesuperior', 'logicalnot', 'mu', 'trademark', 'Eth', 'onehalf', 'plusminus', 'Thorn', 'onequarter', 'divide', 'brokenbar', 'degree', 'thorn', 'threequarters', 'twosuperior', 'registered', 'minus', 'eth', 'multiply', 'threesuperior', 'copyright', 'Aacute', 'Acircumflex', 'Adieresis', 'Agrave', 'Aring', 'Atilde', 'Ccedilla', 'Eacute', 'Ecircumflex', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Ntilde', 'Oacute', 'Ocircumflex', 'Odieresis', 'Ograve', 'Otilde', 'Scaron', 'Uacute', 'Ucircumflex', 'Udieresis', 'Ugrave', 'Yacute', 'Ydieresis', 'Zcaron', 'aacute', 'acircumflex', 'adieresis', 'agrave', 'aring', 'atilde', 'ccedilla', 'eacute', 'ecircumflex', 'edieresis', 'egrave', 'iacute', 'icircumflex', 'idieresis', 'igrave', 'ntilde', 'oacute', 'ocircumflex', 'odieresis', 'ograve', 'otilde', 'scaron', 'uacute', 'ucircumflex', 'udieresis', 'ugrave', 'yacute', 'ydieresis', 'zcaron'];\nvar ExpertCharset = ['.notdef', 'space', 'exclamsmall', 'Hungarumlautsmall', 'dollaroldstyle', 'dollarsuperior', 'ampersandsmall', 'Acutesmall', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'questionsmall', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'Circumflexsmall', 'hyphensuperior', 'Gravesmall', 'Asmall', 'Bsmall', 'Csmall', 'Dsmall', 'Esmall', 'Fsmall', 'Gsmall', 'Hsmall', 'Ismall', 'Jsmall', 'Ksmall', 'Lsmall', 'Msmall', 'Nsmall', 'Osmall', 'Psmall', 'Qsmall', 'Rsmall', 'Ssmall', 'Tsmall', 'Usmall', 'Vsmall', 'Wsmall', 'Xsmall', 'Ysmall', 'Zsmall', 'colonmonetary', 'onefitted', 'rupiah', 'Tildesmall', 'exclamdownsmall', 'centoldstyle', 'Lslashsmall', 'Scaronsmall', 'Zcaronsmall', 'Dieresissmall', 'Brevesmall', 'Caronsmall', 'Dotaccentsmall', 'Macronsmall', 'figuredash', 'hypheninferior', 'Ogoneksmall', 'Ringsmall', 'Cedillasmall', 'onequarter', 'onehalf', 'threequarters', 'questiondownsmall', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior', 'Agravesmall', 'Aacutesmall', 'Acircumflexsmall', 'Atildesmall', 'Adieresissmall', 'Aringsmall', 'AEsmall', 'Ccedillasmall', 'Egravesmall', 'Eacutesmall', 'Ecircumflexsmall', 'Edieresissmall', 'Igravesmall', 'Iacutesmall', 'Icircumflexsmall', 'Idieresissmall', 'Ethsmall', 'Ntildesmall', 'Ogravesmall', 'Oacutesmall', 'Ocircumflexsmall', 'Otildesmall', 'Odieresissmall', 'OEsmall', 'Oslashsmall', 'Ugravesmall', 'Uacutesmall', 'Ucircumflexsmall', 'Udieresissmall', 'Yacutesmall', 'Thornsmall', 'Ydieresissmall'];\nvar ExpertSubsetCharset = ['.notdef', 'space', 'dollaroldstyle', 'dollarsuperior', 'parenleftsuperior', 'parenrightsuperior', 'twodotenleader', 'onedotenleader', 'comma', 'hyphen', 'period', 'fraction', 'zerooldstyle', 'oneoldstyle', 'twooldstyle', 'threeoldstyle', 'fouroldstyle', 'fiveoldstyle', 'sixoldstyle', 'sevenoldstyle', 'eightoldstyle', 'nineoldstyle', 'colon', 'semicolon', 'commasuperior', 'threequartersemdash', 'periodsuperior', 'asuperior', 'bsuperior', 'centsuperior', 'dsuperior', 'esuperior', 'isuperior', 'lsuperior', 'msuperior', 'nsuperior', 'osuperior', 'rsuperior', 'ssuperior', 'tsuperior', 'ff', 'fi', 'fl', 'ffi', 'ffl', 'parenleftinferior', 'parenrightinferior', 'hyphensuperior', 'colonmonetary', 'onefitted', 'rupiah', 'centoldstyle', 'figuredash', 'hypheninferior', 'onequarter', 'onehalf', 'threequarters', 'oneeighth', 'threeeighths', 'fiveeighths', 'seveneighths', 'onethird', 'twothirds', 'zerosuperior', 'onesuperior', 'twosuperior', 'threesuperior', 'foursuperior', 'fivesuperior', 'sixsuperior', 'sevensuperior', 'eightsuperior', 'ninesuperior', 'zeroinferior', 'oneinferior', 'twoinferior', 'threeinferior', 'fourinferior', 'fiveinferior', 'sixinferior', 'seveninferior', 'eightinferior', 'nineinferior', 'centinferior', 'dollarinferior', 'periodinferior', 'commainferior'];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getFontType = exports.ProblematicCharRanges = exports.IdentityToUnicodeMap = exports.ToUnicodeMap = exports.FontFlags = exports.Font = exports.ErrorFont = exports.PRIVATE_USE_OFFSET_END = exports.PRIVATE_USE_OFFSET_START = exports.SEAC_ANALYSIS_ENABLED = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cff_parser = require('./cff_parser');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _encodings = require('./encodings');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _unicode = require('./unicode');\n\nvar _font_renderer = require('./font_renderer');\n\nvar _stream = require('./stream');\n\nvar _type1_parser = require('./type1_parser');\n\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n  FixedPitch: 1,\n  Serif: 2,\n  Symbolic: 4,\n  Script: 8,\n  Nonsymbolic: 32,\n  Italic: 64,\n  AllCap: 65536,\n  SmallCap: 131072,\n  ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = ['.notdef', '.null', 'nonmarkingreturn', 'space', 'exclam', 'quotedbl', 'numbersign', 'dollar', 'percent', 'ampersand', 'quotesingle', 'parenleft', 'parenright', 'asterisk', 'plus', 'comma', 'hyphen', 'period', 'slash', 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight', 'nine', 'colon', 'semicolon', 'less', 'equal', 'greater', 'question', 'at', 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'bracketleft', 'backslash', 'bracketright', 'asciicircum', 'underscore', 'grave', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'braceleft', 'bar', 'braceright', 'asciitilde', 'Adieresis', 'Aring', 'Ccedilla', 'Eacute', 'Ntilde', 'Odieresis', 'Udieresis', 'aacute', 'agrave', 'acircumflex', 'adieresis', 'atilde', 'aring', 'ccedilla', 'eacute', 'egrave', 'ecircumflex', 'edieresis', 'iacute', 'igrave', 'icircumflex', 'idieresis', 'ntilde', 'oacute', 'ograve', 'ocircumflex', 'odieresis', 'otilde', 'uacute', 'ugrave', 'ucircumflex', 'udieresis', 'dagger', 'degree', 'cent', 'sterling', 'section', 'bullet', 'paragraph', 'germandbls', 'registered', 'copyright', 'trademark', 'acute', 'dieresis', 'notequal', 'AE', 'Oslash', 'infinity', 'plusminus', 'lessequal', 'greaterequal', 'yen', 'mu', 'partialdiff', 'summation', 'product', 'pi', 'integral', 'ordfeminine', 'ordmasculine', 'Omega', 'ae', 'oslash', 'questiondown', 'exclamdown', 'logicalnot', 'radical', 'florin', 'approxequal', 'Delta', 'guillemotleft', 'guillemotright', 'ellipsis', 'nonbreakingspace', 'Agrave', 'Atilde', 'Otilde', 'OE', 'oe', 'endash', 'emdash', 'quotedblleft', 'quotedblright', 'quoteleft', 'quoteright', 'divide', 'lozenge', 'ydieresis', 'Ydieresis', 'fraction', 'currency', 'guilsinglleft', 'guilsinglright', 'fi', 'fl', 'daggerdbl', 'periodcentered', 'quotesinglbase', 'quotedblbase', 'perthousand', 'Acircumflex', 'Ecircumflex', 'Aacute', 'Edieresis', 'Egrave', 'Iacute', 'Icircumflex', 'Idieresis', 'Igrave', 'Oacute', 'Ocircumflex', 'apple', 'Ograve', 'Uacute', 'Ucircumflex', 'Ugrave', 'dotlessi', 'circumflex', 'tilde', 'macron', 'breve', 'dotaccent', 'ring', 'cedilla', 'hungarumlaut', 'ogonek', 'caron', 'Lslash', 'lslash', 'Scaron', 'scaron', 'Zcaron', 'zcaron', 'brokenbar', 'Eth', 'eth', 'Yacute', 'yacute', 'Thorn', 'thorn', 'minus', 'multiply', 'onesuperior', 'twosuperior', 'threesuperior', 'onehalf', 'onequarter', 'threequarters', 'franc', 'Gbreve', 'gbreve', 'Idotaccent', 'Scedilla', 'scedilla', 'Cacute', 'cacute', 'Ccaron', 'ccaron', 'dcroat'];\nfunction adjustWidths(properties) {\n  if (!properties.fontMatrix) {\n    return;\n  }\n  if (properties.fontMatrix[0] === _util.FONT_IDENTITY_MATRIX[0]) {\n    return;\n  }\n  var scale = 0.001 / properties.fontMatrix[0];\n  var glyphsWidths = properties.widths;\n  for (var glyph in glyphsWidths) {\n    glyphsWidths[glyph] *= scale;\n  }\n  properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n  if (properties.hasIncludedToUnicodeMap) {\n    return;\n  }\n  if (properties.hasEncoding) {\n    return;\n  }\n  if (builtInEncoding === properties.defaultEncoding) {\n    return;\n  }\n  if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n    return;\n  }\n  var toUnicode = [],\n      glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n  for (var charCode in builtInEncoding) {\n    var glyphName = builtInEncoding[charCode];\n    var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n    if (unicode !== -1) {\n      toUnicode[charCode] = String.fromCharCode(unicode);\n    }\n  }\n  properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n  switch (type) {\n    case 'Type1':\n      return subtype === 'Type1C' ? _util.FontType.TYPE1C : _util.FontType.TYPE1;\n    case 'CIDFontType0':\n      return subtype === 'CIDFontType0C' ? _util.FontType.CIDFONTTYPE0C : _util.FontType.CIDFONTTYPE0;\n    case 'OpenType':\n      return _util.FontType.OPENTYPE;\n    case 'TrueType':\n      return _util.FontType.TRUETYPE;\n    case 'CIDFontType2':\n      return _util.FontType.CIDFONTTYPE2;\n    case 'MMType1':\n      return _util.FontType.MMTYPE1;\n    case 'Type0':\n      return _util.FontType.TYPE0;\n    default:\n      return _util.FontType.UNKNOWN;\n  }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n  if (glyphsUnicodeMap[name] !== undefined) {\n    return name;\n  }\n  var unicode = (0, _unicode.getUnicodeForGlyph)(name, glyphsUnicodeMap);\n  if (unicode !== -1) {\n    for (var key in glyphsUnicodeMap) {\n      if (glyphsUnicodeMap[key] === unicode) {\n        return key;\n      }\n    }\n  }\n  (0, _util.info)('Unable to recover a standard glyph name for: ' + name);\n  return name;\n}\nvar Glyph = function GlyphClosure() {\n  function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    this.fontChar = fontChar;\n    this.unicode = unicode;\n    this.accent = accent;\n    this.width = width;\n    this.vmetric = vmetric;\n    this.operatorListId = operatorListId;\n    this.isSpace = isSpace;\n    this.isInFont = isInFont;\n  }\n  Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n    return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n  };\n  return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n  function ToUnicodeMap() {\n    var cmap = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    this._map = cmap;\n  }\n  ToUnicodeMap.prototype = {\n    get length() {\n      return this._map.length;\n    },\n    forEach: function forEach(callback) {\n      for (var charCode in this._map) {\n        callback(charCode, this._map[charCode].charCodeAt(0));\n      }\n    },\n    has: function has(i) {\n      return this._map[i] !== undefined;\n    },\n    get: function get(i) {\n      return this._map[i];\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    amend: function amend(map) {\n      for (var charCode in map) {\n        this._map[charCode] = map[charCode];\n      }\n    }\n  };\n  return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n  function IdentityToUnicodeMap(firstChar, lastChar) {\n    this.firstChar = firstChar;\n    this.lastChar = lastChar;\n  }\n  IdentityToUnicodeMap.prototype = {\n    get length() {\n      return this.lastChar + 1 - this.firstChar;\n    },\n    forEach: function forEach(callback) {\n      for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n        callback(i, i);\n      }\n    },\n    has: function has(i) {\n      return this.firstChar <= i && i <= this.lastChar;\n    },\n    get: function get(i) {\n      if (this.firstChar <= i && i <= this.lastChar) {\n        return String.fromCharCode(i);\n      }\n      return undefined;\n    },\n    charCodeOf: function charCodeOf(v) {\n      return Number.isInteger(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n    },\n    amend: function amend(map) {\n      (0, _util.unreachable)('Should not call amend()');\n    }\n  };\n  return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n  function writeInt16(dest, offset, num) {\n    dest[offset] = num >> 8 & 0xFF;\n    dest[offset + 1] = num & 0xFF;\n  }\n  function writeInt32(dest, offset, num) {\n    dest[offset] = num >> 24 & 0xFF;\n    dest[offset + 1] = num >> 16 & 0xFF;\n    dest[offset + 2] = num >> 8 & 0xFF;\n    dest[offset + 3] = num & 0xFF;\n  }\n  function writeData(dest, offset, data) {\n    var i, ii;\n    if (data instanceof Uint8Array) {\n      dest.set(data, offset);\n    } else if (typeof data === 'string') {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data.charCodeAt(i) & 0xFF;\n      }\n    } else {\n      for (i = 0, ii = data.length; i < ii; i++) {\n        dest[offset++] = data[i] & 0xFF;\n      }\n    }\n  }\n  function OpenTypeFileBuilder(sfnt) {\n    this.sfnt = sfnt;\n    this.tables = Object.create(null);\n  }\n  OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n    var maxPower2 = 1,\n        log2 = 0;\n    while ((maxPower2 ^ entriesCount) > maxPower2) {\n      maxPower2 <<= 1;\n      log2++;\n    }\n    var searchRange = maxPower2 * entrySize;\n    return {\n      range: searchRange,\n      entry: log2,\n      rangeShift: entrySize * entriesCount - searchRange\n    };\n  };\n  var OTF_HEADER_SIZE = 12;\n  var OTF_TABLE_ENTRY_SIZE = 16;\n  OpenTypeFileBuilder.prototype = {\n    toArray: function OpenTypeFileBuilder_toArray() {\n      var sfnt = this.sfnt;\n      var tables = this.tables;\n      var tablesNames = Object.keys(tables);\n      tablesNames.sort();\n      var numTables = tablesNames.length;\n      var i, j, jj, table, tableName;\n      var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n      var tableOffsets = [offset];\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        var paddedLength = (table.length + 3 & ~3) >>> 0;\n        offset += paddedLength;\n        tableOffsets.push(offset);\n      }\n      var file = new Uint8Array(offset);\n      for (i = 0; i < numTables; i++) {\n        table = tables[tablesNames[i]];\n        writeData(file, tableOffsets[i], table);\n      }\n      if (sfnt === 'true') {\n        sfnt = (0, _util.string32)(0x00010000);\n      }\n      file[0] = sfnt.charCodeAt(0) & 0xFF;\n      file[1] = sfnt.charCodeAt(1) & 0xFF;\n      file[2] = sfnt.charCodeAt(2) & 0xFF;\n      file[3] = sfnt.charCodeAt(3) & 0xFF;\n      writeInt16(file, 4, numTables);\n      var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n      writeInt16(file, 6, searchParams.range);\n      writeInt16(file, 8, searchParams.entry);\n      writeInt16(file, 10, searchParams.rangeShift);\n      offset = OTF_HEADER_SIZE;\n      for (i = 0; i < numTables; i++) {\n        tableName = tablesNames[i];\n        file[offset] = tableName.charCodeAt(0) & 0xFF;\n        file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n        file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n        file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n        var checksum = 0;\n        for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n          var quad = (0, _util.readUint32)(file, j);\n          checksum = checksum + quad >>> 0;\n        }\n        writeInt32(file, offset + 4, checksum);\n        writeInt32(file, offset + 8, tableOffsets[i]);\n        writeInt32(file, offset + 12, tables[tableName].length);\n        offset += OTF_TABLE_ENTRY_SIZE;\n      }\n      return file;\n    },\n    addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n      if (tag in this.tables) {\n        throw new Error('Table ' + tag + ' already exists');\n      }\n      this.tables[tag] = data;\n    }\n  };\n  return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([0x0000, 0x0020, 0x007F, 0x00A1, 0x00AD, 0x00AE, 0x0600, 0x0780, 0x08A0, 0x10A0, 0x1780, 0x1800, 0x1C00, 0x1C50, 0x2000, 0x2010, 0x2011, 0x2012, 0x2028, 0x2030, 0x205F, 0x2070, 0x25CC, 0x25CD, 0x3000, 0x3001, 0x3164, 0x3165, 0xAA60, 0xAA80, 0xD800, 0xE000, 0xFFF0, 0x10000]);\nvar Font = function FontClosure() {\n  function Font(name, file, properties) {\n    var charCode;\n    this.name = name;\n    this.loadedName = properties.loadedName;\n    this.isType3Font = properties.isType3Font;\n    this.sizes = [];\n    this.missingFile = false;\n    this.glyphCache = Object.create(null);\n    this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n    this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n    var type = properties.type;\n    var subtype = properties.subtype;\n    this.type = type;\n    this.subtype = subtype;\n    this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n    this.differences = properties.differences;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.composite = properties.composite;\n    this.wideChars = properties.wideChars;\n    this.cMap = properties.cMap;\n    this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n    this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n    this.fontMatrix = properties.fontMatrix;\n    this.bbox = properties.bbox;\n    this.defaultEncoding = properties.defaultEncoding;\n    this.toUnicode = properties.toUnicode;\n    this.fallbackToUnicode = properties.fallbackToUnicode || new ToUnicodeMap();\n    this.toFontChar = [];\n    if (properties.type === 'Type3') {\n      for (charCode = 0; charCode < 256; charCode++) {\n        this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n      }\n      this.fontType = _util.FontType.TYPE3;\n      return;\n    }\n    this.cidEncoding = properties.cidEncoding;\n    this.vertical = properties.vertical;\n    if (this.vertical) {\n      this.vmetrics = properties.vmetrics;\n      this.defaultVMetrics = properties.defaultVMetrics;\n    }\n    if (!file || file.isEmpty) {\n      if (file) {\n        (0, _util.warn)('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n      }\n      this.fallbackToSystemFont();\n      return;\n    }\n    if (subtype === 'Type1C') {\n      if (type !== 'Type1' && type !== 'MMType1') {\n        if (isTrueTypeFile(file)) {\n          subtype = 'TrueType';\n        } else {\n          type = 'Type1';\n        }\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      }\n    }\n    if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n      type = 'CIDFontType0';\n    }\n    if (type === 'CIDFontType0') {\n      if (isType1File(file)) {\n        subtype = 'CIDFontType0';\n      } else if (isOpenTypeFile(file)) {\n        subtype = 'OpenType';\n      } else {\n        subtype = 'CIDFontType0C';\n      }\n    }\n    if (subtype === 'OpenType' && type !== 'OpenType') {\n      type = 'OpenType';\n    }\n    try {\n      var data;\n      switch (type) {\n        case 'MMType1':\n          (0, _util.info)('MMType1 font (' + name + '), falling back to Type1.');\n        case 'Type1':\n        case 'CIDFontType0':\n          this.mimetype = 'font/opentype';\n          var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n          adjustWidths(properties);\n          data = this.convert(name, cff, properties);\n          break;\n        case 'OpenType':\n        case 'TrueType':\n        case 'CIDFontType2':\n          this.mimetype = 'font/opentype';\n          data = this.checkAndRepair(name, file, properties);\n          if (this.isOpenType) {\n            adjustWidths(properties);\n            type = 'OpenType';\n          }\n          break;\n        default:\n          throw new _util.FormatError('Font ' + type + ' is not supported');\n      }\n    } catch (e) {\n      if (!(e instanceof _util.FormatError)) {\n        throw e;\n      }\n      (0, _util.warn)(e);\n      this.fallbackToSystemFont();\n      return;\n    }\n    this.data = data;\n    this.fontType = getFontType(type, subtype);\n    this.fontMatrix = properties.fontMatrix;\n    this.widths = properties.widths;\n    this.defaultWidth = properties.defaultWidth;\n    this.toUnicode = properties.toUnicode;\n    this.encoding = properties.baseEncoding;\n    this.seacMap = properties.seacMap;\n    this.loading = true;\n  }\n  Font.getFontID = function () {\n    var ID = 1;\n    return function Font_getFontID() {\n      return String(ID++);\n    };\n  }();\n  function int16(b0, b1) {\n    return (b0 << 8) + b1;\n  }\n  function writeSignedInt16(bytes, index, value) {\n    bytes[index + 1] = value;\n    bytes[index] = value >>> 8;\n  }\n  function signedInt16(b0, b1) {\n    var value = (b0 << 8) + b1;\n    return value & 1 << 15 ? value - 0x10000 : value;\n  }\n  function int32(b0, b1, b2, b3) {\n    return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  }\n  function string16(value) {\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function safeString16(value) {\n    value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n    return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n  }\n  function isTrueTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.readUint32)(header, 0) === 0x00010000;\n  }\n  function isTrueTypeCollectionFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'ttcf';\n  }\n  function isOpenTypeFile(file) {\n    var header = file.peekBytes(4);\n    return (0, _util.bytesToString)(header) === 'OTTO';\n  }\n  function isType1File(file) {\n    var header = file.peekBytes(2);\n    if (header[0] === 0x25 && header[1] === 0x21) {\n      return true;\n    }\n    if (header[0] === 0x80 && header[1] === 0x01) {\n      return true;\n    }\n    return false;\n  }\n  function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n    var toFontChar = [],\n        unicode;\n    for (var i = 0, ii = encoding.length; i < ii; i++) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(encoding[i], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[i] = unicode;\n      }\n    }\n    for (var charCode in differences) {\n      unicode = (0, _unicode.getUnicodeForGlyph)(differences[charCode], glyphsUnicodeMap);\n      if (unicode !== -1) {\n        toFontChar[+charCode] = unicode;\n      }\n    }\n    return toFontChar;\n  }\n  function isProblematicUnicodeLocation(code) {\n    var i = 0,\n        j = ProblematicCharRanges.length - 1;\n    while (i < j) {\n      var c = i + j + 1 >> 1;\n      if (code < ProblematicCharRanges[c]) {\n        j = c - 1;\n      } else {\n        i = c;\n      }\n    }\n    return !(i & 1);\n  }\n  function adjustMapping(charCodeToGlyphId, properties, missingGlyphs) {\n    var toUnicode = properties.toUnicode;\n    var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n    var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n    var newMap = Object.create(null);\n    var toFontChar = [];\n    var usedFontCharCodes = [];\n    var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n    for (var originalCharCode in charCodeToGlyphId) {\n      originalCharCode |= 0;\n      var glyphId = charCodeToGlyphId[originalCharCode];\n      if (missingGlyphs[glyphId]) {\n        continue;\n      }\n      var fontCharCode = originalCharCode;\n      var hasUnicodeValue = false;\n      if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n        hasUnicodeValue = true;\n        var unicode = toUnicode.get(fontCharCode);\n        if (unicode.length === 1) {\n          fontCharCode = unicode.charCodeAt(0);\n        }\n      }\n      if (usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) {\n        do {\n          if (nextAvailableFontCharCode > PRIVATE_USE_OFFSET_END) {\n            (0, _util.warn)('Ran out of space in font private use area.');\n            break;\n          }\n          fontCharCode = nextAvailableFontCharCode++;\n          if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n            fontCharCode = 0xF020;\n            nextAvailableFontCharCode = fontCharCode + 1;\n          }\n        } while (usedFontCharCodes[fontCharCode] !== undefined);\n      }\n      newMap[fontCharCode] = glyphId;\n      toFontChar[originalCharCode] = fontCharCode;\n      usedFontCharCodes[fontCharCode] = true;\n    }\n    return {\n      toFontChar: toFontChar,\n      charCodeToGlyphId: newMap,\n      nextAvailableFontCharCode: nextAvailableFontCharCode\n    };\n  }\n  function getRanges(glyphs, numGlyphs) {\n    var codes = [];\n    for (var charCode in glyphs) {\n      if (glyphs[charCode] >= numGlyphs) {\n        continue;\n      }\n      codes.push({\n        fontCharCode: charCode | 0,\n        glyphId: glyphs[charCode]\n      });\n    }\n    if (codes.length === 0) {\n      codes.push({\n        fontCharCode: 0,\n        glyphId: 0\n      });\n    }\n    codes.sort(function fontGetRangesSort(a, b) {\n      return a.fontCharCode - b.fontCharCode;\n    });\n    var ranges = [];\n    var length = codes.length;\n    for (var n = 0; n < length;) {\n      var start = codes[n].fontCharCode;\n      var codeIndices = [codes[n].glyphId];\n      ++n;\n      var end = start;\n      while (n < length && end + 1 === codes[n].fontCharCode) {\n        codeIndices.push(codes[n].glyphId);\n        ++end;\n        ++n;\n        if (end === 0xFFFF) {\n          break;\n        }\n      }\n      ranges.push([start, end, codeIndices]);\n    }\n    return ranges;\n  }\n  function createCmapTable(glyphs, numGlyphs) {\n    var ranges = getRanges(glyphs, numGlyphs);\n    var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n    var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + (0, _util.string32)(4 + numTables * 8);\n    var i, ii, j, jj;\n    for (i = ranges.length - 1; i >= 0; --i) {\n      if (ranges[i][0] <= 0xFFFF) {\n        break;\n      }\n    }\n    var bmpLength = i + 1;\n    if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n      ranges[i][1] = 0xFFFE;\n    }\n    var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n    var segCount = bmpLength + trailingRangesCount;\n    var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n    var startCount = '';\n    var endCount = '';\n    var idDeltas = '';\n    var idRangeOffsets = '';\n    var glyphsIds = '';\n    var bias = 0;\n    var range, start, end, codes;\n    for (i = 0, ii = bmpLength; i < ii; i++) {\n      range = ranges[i];\n      start = range[0];\n      end = range[1];\n      startCount += string16(start);\n      endCount += string16(end);\n      codes = range[2];\n      var contiguous = true;\n      for (j = 1, jj = codes.length; j < jj; ++j) {\n        if (codes[j] !== codes[j - 1] + 1) {\n          contiguous = false;\n          break;\n        }\n      }\n      if (!contiguous) {\n        var offset = (segCount - i) * 2 + bias * 2;\n        bias += end - start + 1;\n        idDeltas += string16(0);\n        idRangeOffsets += string16(offset);\n        for (j = 0, jj = codes.length; j < jj; ++j) {\n          glyphsIds += string16(codes[j]);\n        }\n      } else {\n        var startCode = codes[0];\n        idDeltas += string16(startCode - start & 0xFFFF);\n        idRangeOffsets += string16(0);\n      }\n    }\n    if (trailingRangesCount > 0) {\n      endCount += '\\xFF\\xFF';\n      startCount += '\\xFF\\xFF';\n      idDeltas += '\\x00\\x01';\n      idRangeOffsets += '\\x00\\x00';\n    }\n    var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n    var format31012 = '';\n    var header31012 = '';\n    if (numTables > 1) {\n      cmap += '\\x00\\x03' + '\\x00\\x0A' + (0, _util.string32)(4 + numTables * 8 + 4 + format314.length);\n      format31012 = '';\n      for (i = 0, ii = ranges.length; i < ii; i++) {\n        range = ranges[i];\n        start = range[0];\n        codes = range[2];\n        var code = codes[0];\n        for (j = 1, jj = codes.length; j < jj; ++j) {\n          if (codes[j] !== codes[j - 1] + 1) {\n            end = range[0] + j - 1;\n            format31012 += (0, _util.string32)(start) + (0, _util.string32)(end) + (0, _util.string32)(code);\n            start = end + 1;\n            code = codes[j];\n          }\n        }\n        format31012 += (0, _util.string32)(start) + (0, _util.string32)(range[1]) + (0, _util.string32)(code);\n      }\n      header31012 = '\\x00\\x0C' + '\\x00\\x00' + (0, _util.string32)(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + (0, _util.string32)(format31012.length / 12);\n    }\n    return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n  }\n  function validateOS2Table(os2) {\n    var stream = new _stream.Stream(os2.data);\n    var version = stream.getUint16();\n    stream.getBytes(60);\n    var selection = stream.getUint16();\n    if (version < 4 && selection & 0x0300) {\n      return false;\n    }\n    var firstChar = stream.getUint16();\n    var lastChar = stream.getUint16();\n    if (firstChar > lastChar) {\n      return false;\n    }\n    stream.getBytes(6);\n    var usWinAscent = stream.getUint16();\n    if (usWinAscent === 0) {\n      return false;\n    }\n    os2.data[8] = os2.data[9] = 0;\n    return true;\n  }\n  function createOS2Table(properties, charstrings, override) {\n    override = override || {\n      unitsPerEm: 0,\n      yMax: 0,\n      yMin: 0,\n      ascent: 0,\n      descent: 0\n    };\n    var ulUnicodeRange1 = 0;\n    var ulUnicodeRange2 = 0;\n    var ulUnicodeRange3 = 0;\n    var ulUnicodeRange4 = 0;\n    var firstCharIndex = null;\n    var lastCharIndex = 0;\n    if (charstrings) {\n      for (var code in charstrings) {\n        code |= 0;\n        if (firstCharIndex > code || !firstCharIndex) {\n          firstCharIndex = code;\n        }\n        if (lastCharIndex < code) {\n          lastCharIndex = code;\n        }\n        var position = (0, _unicode.getUnicodeRangeFor)(code);\n        if (position < 32) {\n          ulUnicodeRange1 |= 1 << position;\n        } else if (position < 64) {\n          ulUnicodeRange2 |= 1 << position - 32;\n        } else if (position < 96) {\n          ulUnicodeRange3 |= 1 << position - 64;\n        } else if (position < 123) {\n          ulUnicodeRange4 |= 1 << position - 96;\n        } else {\n          throw new _util.FormatError('Unicode ranges Bits > 123 are reserved for internal usage');\n        }\n      }\n    } else {\n      firstCharIndex = 0;\n      lastCharIndex = 255;\n    }\n    var bbox = properties.bbox || [0, 0, 0, 0];\n    var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n    var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n    var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n    var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n    if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n      typoDescent = -typoDescent;\n    }\n    var winAscent = override.yMax || typoAscent;\n    var winDescent = -override.yMin || -typoDescent;\n    return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + (0, _util.string32)(ulUnicodeRange1) + (0, _util.string32)(ulUnicodeRange2) + (0, _util.string32)(ulUnicodeRange3) + (0, _util.string32)(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n  }\n  function createPostTable(properties) {\n    var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n    return '\\x00\\x03\\x00\\x00' + (0, _util.string32)(angle) + '\\x00\\x00' + '\\x00\\x00' + (0, _util.string32)(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n  }\n  function createNameTable(name, proto) {\n    if (!proto) {\n      proto = [[], []];\n    }\n    var strings = [proto[0][0] || 'Original licence', proto[0][1] || name, proto[0][2] || 'Unknown', proto[0][3] || 'uniqueID', proto[0][4] || name, proto[0][5] || 'Version 0.11', proto[0][6] || '', proto[0][7] || 'Unknown', proto[0][8] || 'Unknown', proto[0][9] || 'Unknown'];\n    var stringsUnicode = [];\n    var i, ii, j, jj, str;\n    for (i = 0, ii = strings.length; i < ii; i++) {\n      str = proto[1][i] || strings[i];\n      var strBufUnicode = [];\n      for (j = 0, jj = str.length; j < jj; j++) {\n        strBufUnicode.push(string16(str.charCodeAt(j)));\n      }\n      stringsUnicode.push(strBufUnicode.join(''));\n    }\n    var names = [strings, stringsUnicode];\n    var platforms = ['\\x00\\x01', '\\x00\\x03'];\n    var encodings = ['\\x00\\x00', '\\x00\\x01'];\n    var languages = ['\\x00\\x00', '\\x04\\x09'];\n    var namesRecordCount = strings.length * platforms.length;\n    var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n    var strOffset = 0;\n    for (i = 0, ii = platforms.length; i < ii; i++) {\n      var strs = names[i];\n      for (j = 0, jj = strs.length; j < jj; j++) {\n        str = strs[j];\n        var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n        nameTable += nameRecord;\n        strOffset += str.length;\n      }\n    }\n    nameTable += strings.join('') + stringsUnicode.join('');\n    return nameTable;\n  }\n  Font.prototype = {\n    name: null,\n    font: null,\n    mimetype: null,\n    encoding: null,\n    get renderer() {\n      var renderer = _font_renderer.FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n      return (0, _util.shadow)(this, 'renderer', renderer);\n    },\n    exportData: function Font_exportData() {\n      var data = {};\n      for (var i in this) {\n        if (this.hasOwnProperty(i)) {\n          data[i] = this[i];\n        }\n      }\n      return data;\n    },\n    fallbackToSystemFont: function Font_fallbackToSystemFont() {\n      var _this = this;\n\n      this.missingFile = true;\n      var charCode, unicode;\n      var name = this.name;\n      var type = this.type;\n      var subtype = this.subtype;\n      var fontName = name.replace(/[,_]/g, '-');\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)(),\n          nonStdFontMap = (0, _standard_fonts.getNonStdFontMap)();\n      var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n      fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n      this.bold = fontName.search(/bold/gi) !== -1;\n      this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n      this.black = name.search(/Black/g) !== -1;\n      this.remeasure = Object.keys(this.widths).length > 0;\n      if (isStandardFont && type === 'CIDFontType2' && this.cidEncoding.indexOf('Identity-') === 0) {\n        var GlyphMapForStandardFonts = (0, _standard_fonts.getGlyphMapForStandardFonts)();\n        var map = [];\n        for (charCode in GlyphMapForStandardFonts) {\n          map[+charCode] = GlyphMapForStandardFonts[charCode];\n        }\n        if (/Arial-?Black/i.test(name)) {\n          var SupplementalGlyphMapForArialBlack = (0, _standard_fonts.getSupplementalGlyphMapForArialBlack)();\n          for (charCode in SupplementalGlyphMapForArialBlack) {\n            map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n          }\n        } else if (/Calibri/i.test(name)) {\n          var SupplementalGlyphMapForCalibri = (0, _standard_fonts.getSupplementalGlyphMapForCalibri)();\n          for (charCode in SupplementalGlyphMapForCalibri) {\n            map[+charCode] = SupplementalGlyphMapForCalibri[charCode];\n          }\n        }\n        var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n        if (!isIdentityUnicode) {\n          this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n            map[+charCode] = unicodeCharCode;\n          });\n        }\n        this.toFontChar = map;\n        this.toUnicode = new ToUnicodeMap(map);\n      } else if (/Symbol/i.test(fontName)) {\n        this.toFontChar = buildToFontChar(_encodings.SymbolSetEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else if (/Dingbats/i.test(fontName)) {\n        if (/Wingdings/i.test(name)) {\n          (0, _util.warn)('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n        }\n        this.toFontChar = buildToFontChar(_encodings.ZapfDingbatsEncoding, (0, _glyphlist.getDingbatsGlyphsUnicode)(), this.differences);\n      } else if (isStandardFont) {\n        this.toFontChar = buildToFontChar(this.defaultEncoding, (0, _glyphlist.getGlyphsUnicode)(), this.differences);\n      } else {\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n          if (!_this.composite) {\n            var glyphName = _this.differences[charCode] || _this.defaultEncoding[charCode];\n            unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n            if (unicode !== -1) {\n              unicodeCharCode = unicode;\n            }\n          }\n          _this.toFontChar[charCode] = unicodeCharCode;\n        });\n      }\n      this.loadedName = fontName.split('-')[0];\n      this.loading = false;\n      this.fontType = getFontType(type, subtype);\n    },\n    checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n      var VALID_TABLES = ['OS/2', 'cmap', 'head', 'hhea', 'hmtx', 'maxp', 'name', 'post', 'loca', 'glyf', 'fpgm', 'prep', 'cvt ', 'CFF '];\n      function readTables(file, numTables) {\n        var tables = Object.create(null);\n        tables['OS/2'] = null;\n        tables['cmap'] = null;\n        tables['head'] = null;\n        tables['hhea'] = null;\n        tables['hmtx'] = null;\n        tables['maxp'] = null;\n        tables['name'] = null;\n        tables['post'] = null;\n        for (var i = 0; i < numTables; i++) {\n          var table = readTableEntry(font);\n          if (VALID_TABLES.indexOf(table.tag) < 0) {\n            continue;\n          }\n          if (table.length === 0) {\n            continue;\n          }\n          tables[table.tag] = table;\n        }\n        return tables;\n      }\n      function readTableEntry(file) {\n        var tag = (0, _util.bytesToString)(file.getBytes(4));\n        var checksum = file.getInt32() >>> 0;\n        var offset = file.getInt32() >>> 0;\n        var length = file.getInt32() >>> 0;\n        var previousPosition = file.pos;\n        file.pos = file.start ? file.start : 0;\n        file.skip(offset);\n        var data = file.getBytes(length);\n        file.pos = previousPosition;\n        if (tag === 'head') {\n          data[8] = data[9] = data[10] = data[11] = 0;\n          data[17] |= 0x20;\n        }\n        return {\n          tag: tag,\n          checksum: checksum,\n          length: length,\n          offset: offset,\n          data: data\n        };\n      }\n      function readOpenTypeHeader(ttf) {\n        return {\n          version: (0, _util.bytesToString)(ttf.getBytes(4)),\n          numTables: ttf.getUint16(),\n          searchRange: ttf.getUint16(),\n          entrySelector: ttf.getUint16(),\n          rangeShift: ttf.getUint16()\n        };\n      }\n      function readTrueTypeCollectionHeader(ttc) {\n        var ttcTag = (0, _util.bytesToString)(ttc.getBytes(4));\n        (0, _util.assert)(ttcTag === 'ttcf', 'Must be a TrueType Collection font.');\n        var majorVersion = ttc.getUint16();\n        var minorVersion = ttc.getUint16();\n        var numFonts = ttc.getInt32() >>> 0;\n        var offsetTable = [];\n        for (var i = 0; i < numFonts; i++) {\n          offsetTable.push(ttc.getInt32() >>> 0);\n        }\n        var header = {\n          ttcTag: ttcTag,\n          majorVersion: majorVersion,\n          minorVersion: minorVersion,\n          numFonts: numFonts,\n          offsetTable: offsetTable\n        };\n        switch (majorVersion) {\n          case 1:\n            return header;\n          case 2:\n            header.dsigTag = ttc.getInt32() >>> 0;\n            header.dsigLength = ttc.getInt32() >>> 0;\n            header.dsigOffset = ttc.getInt32() >>> 0;\n            return header;\n        }\n        throw new _util.FormatError('Invalid TrueType Collection majorVersion: ' + majorVersion + '.');\n      }\n      function readTrueTypeCollectionData(ttc, fontName) {\n        var _readTrueTypeCollecti = readTrueTypeCollectionHeader(ttc),\n            numFonts = _readTrueTypeCollecti.numFonts,\n            offsetTable = _readTrueTypeCollecti.offsetTable;\n\n        for (var i = 0; i < numFonts; i++) {\n          ttc.pos = (ttc.start || 0) + offsetTable[i];\n          var potentialHeader = readOpenTypeHeader(ttc);\n          var potentialTables = readTables(ttc, potentialHeader.numTables);\n          if (!potentialTables['name']) {\n            throw new _util.FormatError('TrueType Collection font must contain a \"name\" table.');\n          }\n          var nameTable = readNameTable(potentialTables['name']);\n          for (var j = 0, jj = nameTable.length; j < jj; j++) {\n            for (var k = 0, kk = nameTable[j].length; k < kk; k++) {\n              var nameEntry = nameTable[j][k];\n              if (nameEntry && nameEntry.replace(/\\s/g, '') === fontName) {\n                return {\n                  header: potentialHeader,\n                  tables: potentialTables\n                };\n              }\n            }\n          }\n        }\n        throw new _util.FormatError('TrueType Collection does not contain \"' + fontName + '\" font.');\n      }\n      function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n        if (!cmap) {\n          (0, _util.warn)('No cmap table available.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var segment;\n        var start = (font.start ? font.start : 0) + cmap.offset;\n        font.pos = start;\n        font.getUint16();\n        var numTables = font.getUint16();\n        var potentialTable;\n        var canBreak = false;\n        for (var i = 0; i < numTables; i++) {\n          var platformId = font.getUint16();\n          var encodingId = font.getUint16();\n          var offset = font.getInt32() >>> 0;\n          var useTable = false;\n          if (potentialTable && potentialTable.platformId === platformId && potentialTable.encodingId === encodingId) {\n            continue;\n          }\n          if (platformId === 0 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 1 && encodingId === 0) {\n            useTable = true;\n          } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n            useTable = true;\n            if (!isSymbolicFont) {\n              canBreak = true;\n            }\n          } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n            useTable = true;\n            canBreak = true;\n          }\n          if (useTable) {\n            potentialTable = {\n              platformId: platformId,\n              encodingId: encodingId,\n              offset: offset\n            };\n          }\n          if (canBreak) {\n            break;\n          }\n        }\n        if (potentialTable) {\n          font.pos = start + potentialTable.offset;\n        }\n        if (!potentialTable || font.peekByte() === -1) {\n          (0, _util.warn)('Could not find a preferred cmap table.');\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        var format = font.getUint16();\n        font.getUint16();\n        font.getUint16();\n        var hasShortCmap = false;\n        var mappings = [];\n        var j, glyphId;\n        if (format === 0) {\n          for (j = 0; j < 256; j++) {\n            var index = font.getByte();\n            if (!index) {\n              continue;\n            }\n            mappings.push({\n              charCode: j,\n              glyphId: index\n            });\n          }\n          hasShortCmap = true;\n        } else if (format === 4) {\n          var segCount = font.getUint16() >> 1;\n          font.getBytes(6);\n          var segIndex,\n              segments = [];\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments.push({ end: font.getUint16() });\n          }\n          font.getUint16();\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].start = font.getUint16();\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segments[segIndex].delta = font.getUint16();\n          }\n          var offsetsCount = 0;\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            var rangeOffset = font.getUint16();\n            if (!rangeOffset) {\n              segment.offsetIndex = -1;\n              continue;\n            }\n            var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n            segment.offsetIndex = offsetIndex;\n            offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n          }\n          var offsets = [];\n          for (j = 0; j < offsetsCount; j++) {\n            offsets.push(font.getUint16());\n          }\n          for (segIndex = 0; segIndex < segCount; segIndex++) {\n            segment = segments[segIndex];\n            start = segment.start;\n            var end = segment.end;\n            var delta = segment.delta;\n            offsetIndex = segment.offsetIndex;\n            for (j = start; j <= end; j++) {\n              if (j === 0xFFFF) {\n                continue;\n              }\n              glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n              glyphId = glyphId + delta & 0xFFFF;\n              mappings.push({\n                charCode: j,\n                glyphId: glyphId\n              });\n            }\n          }\n        } else if (format === 6) {\n          var firstCode = font.getUint16();\n          var entryCount = font.getUint16();\n          for (j = 0; j < entryCount; j++) {\n            glyphId = font.getUint16();\n            var charCode = firstCode + j;\n            mappings.push({\n              charCode: charCode,\n              glyphId: glyphId\n            });\n          }\n        } else {\n          (0, _util.warn)('cmap table has unsupported format: ' + format);\n          return {\n            platformId: -1,\n            encodingId: -1,\n            mappings: [],\n            hasShortCmap: false\n          };\n        }\n        mappings.sort(function (a, b) {\n          return a.charCode - b.charCode;\n        });\n        for (i = 1; i < mappings.length; i++) {\n          if (mappings[i - 1].charCode === mappings[i].charCode) {\n            mappings.splice(i, 1);\n            i--;\n          }\n        }\n        return {\n          platformId: potentialTable.platformId,\n          encodingId: potentialTable.encodingId,\n          mappings: mappings,\n          hasShortCmap: hasShortCmap\n        };\n      }\n      function sanitizeMetrics(font, header, metrics, numGlyphs) {\n        if (!header) {\n          if (metrics) {\n            metrics.data = null;\n          }\n          return;\n        }\n        font.pos = (font.start ? font.start : 0) + header.offset;\n        font.pos += header.length - 2;\n        var numOfMetrics = font.getUint16();\n        if (numOfMetrics > numGlyphs) {\n          (0, _util.info)('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n          numOfMetrics = numGlyphs;\n          header.data[34] = (numOfMetrics & 0xff00) >> 8;\n          header.data[35] = numOfMetrics & 0x00ff;\n        }\n        var numOfSidebearings = numGlyphs - numOfMetrics;\n        var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n        if (numMissing > 0) {\n          var entries = new Uint8Array(metrics.length + numMissing * 2);\n          entries.set(metrics.data);\n          metrics.data = entries;\n        }\n      }\n      function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n        var glyphProfile = {\n          length: 0,\n          sizeOfInstructions: 0\n        };\n        if (sourceEnd - sourceStart <= 12) {\n          return glyphProfile;\n        }\n        var glyf = source.subarray(sourceStart, sourceEnd);\n        var contoursCount = signedInt16(glyf[0], glyf[1]);\n        if (contoursCount < 0) {\n          contoursCount = -1;\n          writeSignedInt16(glyf, 0, contoursCount);\n          dest.set(glyf, destStart);\n          glyphProfile.length = glyf.length;\n          return glyphProfile;\n        }\n        var i,\n            j = 10,\n            flagsCount = 0;\n        for (i = 0; i < contoursCount; i++) {\n          var endPoint = glyf[j] << 8 | glyf[j + 1];\n          flagsCount = endPoint + 1;\n          j += 2;\n        }\n        var instructionsStart = j;\n        var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n        glyphProfile.sizeOfInstructions = instructionsLength;\n        j += 2 + instructionsLength;\n        var instructionsEnd = j;\n        var coordinatesLength = 0;\n        for (i = 0; i < flagsCount; i++) {\n          var flag = glyf[j++];\n          if (flag & 0xC0) {\n            glyf[j - 1] = flag & 0x3F;\n          }\n          var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n          coordinatesLength += xyLength;\n          if (flag & 8) {\n            var repeat = glyf[j++];\n            i += repeat;\n            coordinatesLength += repeat * xyLength;\n          }\n        }\n        if (coordinatesLength === 0) {\n          return glyphProfile;\n        }\n        var glyphDataLength = j + coordinatesLength;\n        if (glyphDataLength > glyf.length) {\n          return glyphProfile;\n        }\n        if (!hintsValid && instructionsLength > 0) {\n          dest.set(glyf.subarray(0, instructionsStart), destStart);\n          dest.set([0, 0], destStart + instructionsStart);\n          dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n          glyphDataLength -= instructionsLength;\n          if (glyf.length - glyphDataLength > 3) {\n            glyphDataLength = glyphDataLength + 3 & ~3;\n          }\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        if (glyf.length - glyphDataLength > 3) {\n          glyphDataLength = glyphDataLength + 3 & ~3;\n          dest.set(glyf.subarray(0, glyphDataLength), destStart);\n          glyphProfile.length = glyphDataLength;\n          return glyphProfile;\n        }\n        dest.set(glyf, destStart);\n        glyphProfile.length = glyf.length;\n        return glyphProfile;\n      }\n      function sanitizeHead(head, numGlyphs, locaLength) {\n        var data = head.data;\n        var version = int32(data[0], data[1], data[2], data[3]);\n        if (version >> 16 !== 1) {\n          (0, _util.info)('Attempting to fix invalid version in head table: ' + version);\n          data[0] = 0;\n          data[1] = 1;\n          data[2] = 0;\n          data[3] = 0;\n        }\n        var indexToLocFormat = int16(data[50], data[51]);\n        if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n          (0, _util.info)('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n          var numGlyphsPlusOne = numGlyphs + 1;\n          if (locaLength === numGlyphsPlusOne << 1) {\n            data[50] = 0;\n            data[51] = 0;\n          } else if (locaLength === numGlyphsPlusOne << 2) {\n            data[50] = 0;\n            data[51] = 1;\n          } else {\n            throw new _util.FormatError('Could not fix indexToLocFormat: ' + indexToLocFormat);\n          }\n        }\n      }\n      function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions) {\n        var itemSize, itemDecode, itemEncode;\n        if (isGlyphLocationsLong) {\n          itemSize = 4;\n          itemDecode = function fontItemDecodeLong(data, offset) {\n            return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n          };\n          itemEncode = function fontItemEncodeLong(data, offset, value) {\n            data[offset] = value >>> 24 & 0xFF;\n            data[offset + 1] = value >> 16 & 0xFF;\n            data[offset + 2] = value >> 8 & 0xFF;\n            data[offset + 3] = value & 0xFF;\n          };\n        } else {\n          itemSize = 2;\n          itemDecode = function fontItemDecode(data, offset) {\n            return data[offset] << 9 | data[offset + 1] << 1;\n          };\n          itemEncode = function fontItemEncode(data, offset, value) {\n            data[offset] = value >> 9 & 0xFF;\n            data[offset + 1] = value >> 1 & 0xFF;\n          };\n        }\n        var locaData = loca.data;\n        var locaDataSize = itemSize * (1 + numGlyphs);\n        if (locaData.length !== locaDataSize) {\n          locaData = new Uint8Array(locaDataSize);\n          locaData.set(loca.data.subarray(0, locaDataSize));\n          loca.data = locaData;\n        }\n        var oldGlyfData = glyf.data;\n        var oldGlyfDataLength = oldGlyfData.length;\n        var newGlyfData = new Uint8Array(oldGlyfDataLength);\n        var startOffset = itemDecode(locaData, 0);\n        var writeOffset = 0;\n        var missingGlyphs = Object.create(null);\n        itemEncode(locaData, 0, writeOffset);\n        var i, j;\n        var locaCount = dupFirstEntry ? numGlyphs - 1 : numGlyphs;\n        for (i = 0, j = itemSize; i < locaCount; i++, j += itemSize) {\n          var endOffset = itemDecode(locaData, j);\n          if (endOffset === 0) {\n            endOffset = startOffset;\n          }\n          if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n            endOffset = oldGlyfDataLength;\n          }\n          if (endOffset > oldGlyfDataLength) {\n            startOffset = endOffset;\n          }\n          var glyphProfile = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n          var newLength = glyphProfile.length;\n          if (newLength === 0) {\n            missingGlyphs[i] = true;\n          }\n          if (glyphProfile.sizeOfInstructions > maxSizeOfInstructions) {\n            maxSizeOfInstructions = glyphProfile.sizeOfInstructions;\n          }\n          writeOffset += newLength;\n          itemEncode(locaData, j, writeOffset);\n          startOffset = endOffset;\n        }\n        if (writeOffset === 0) {\n          var simpleGlyph = new Uint8Array([0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 49, 0]);\n          for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n            itemEncode(locaData, j, simpleGlyph.length);\n          }\n          glyf.data = simpleGlyph;\n        } else if (dupFirstEntry) {\n          var firstEntryLength = itemDecode(locaData, itemSize);\n          if (newGlyfData.length > firstEntryLength + writeOffset) {\n            glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n          } else {\n            glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n            glyf.data.set(newGlyfData.subarray(0, writeOffset));\n          }\n          glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n          itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n        } else {\n          glyf.data = newGlyfData.subarray(0, writeOffset);\n        }\n        return {\n          missingGlyphs: missingGlyphs,\n          maxSizeOfInstructions: maxSizeOfInstructions\n        };\n      }\n      function readPostScriptTable(post, properties, maxpNumGlyphs) {\n        var start = (font.start ? font.start : 0) + post.offset;\n        font.pos = start;\n        var length = post.length,\n            end = start + length;\n        var version = font.getInt32();\n        font.getBytes(28);\n        var glyphNames;\n        var valid = true;\n        var i;\n        switch (version) {\n          case 0x00010000:\n            glyphNames = MacStandardGlyphOrdering;\n            break;\n          case 0x00020000:\n            var numGlyphs = font.getUint16();\n            if (numGlyphs !== maxpNumGlyphs) {\n              valid = false;\n              break;\n            }\n            var glyphNameIndexes = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var index = font.getUint16();\n              if (index >= 32768) {\n                valid = false;\n                break;\n              }\n              glyphNameIndexes.push(index);\n            }\n            if (!valid) {\n              break;\n            }\n            var customNames = [];\n            var strBuf = [];\n            while (font.pos < end) {\n              var stringLength = font.getByte();\n              strBuf.length = stringLength;\n              for (i = 0; i < stringLength; ++i) {\n                strBuf[i] = String.fromCharCode(font.getByte());\n              }\n              customNames.push(strBuf.join(''));\n            }\n            glyphNames = [];\n            for (i = 0; i < numGlyphs; ++i) {\n              var j = glyphNameIndexes[i];\n              if (j < 258) {\n                glyphNames.push(MacStandardGlyphOrdering[j]);\n                continue;\n              }\n              glyphNames.push(customNames[j - 258]);\n            }\n            break;\n          case 0x00030000:\n            break;\n          default:\n            (0, _util.warn)('Unknown/unsupported post table version ' + version);\n            valid = false;\n            if (properties.defaultEncoding) {\n              glyphNames = properties.defaultEncoding;\n            }\n            break;\n        }\n        properties.glyphNames = glyphNames;\n        return valid;\n      }\n      function readNameTable(nameTable) {\n        var start = (font.start ? font.start : 0) + nameTable.offset;\n        font.pos = start;\n        var names = [[], []];\n        var length = nameTable.length,\n            end = start + length;\n        var format = font.getUint16();\n        var FORMAT_0_HEADER_LENGTH = 6;\n        if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n          return names;\n        }\n        var numRecords = font.getUint16();\n        var stringsStart = font.getUint16();\n        var records = [];\n        var NAME_RECORD_LENGTH = 12;\n        var i, ii;\n        for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n          var r = {\n            platform: font.getUint16(),\n            encoding: font.getUint16(),\n            language: font.getUint16(),\n            name: font.getUint16(),\n            length: font.getUint16(),\n            offset: font.getUint16()\n          };\n          if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n            records.push(r);\n          }\n        }\n        for (i = 0, ii = records.length; i < ii; i++) {\n          var record = records[i];\n          if (record.length <= 0) {\n            continue;\n          }\n          var pos = start + stringsStart + record.offset;\n          if (pos + record.length > end) {\n            continue;\n          }\n          font.pos = pos;\n          var nameIndex = record.name;\n          if (record.encoding) {\n            var str = '';\n            for (var j = 0, jj = record.length; j < jj; j += 2) {\n              str += String.fromCharCode(font.getUint16());\n            }\n            names[1][nameIndex] = str;\n          } else {\n            names[0][nameIndex] = (0, _util.bytesToString)(font.getBytes(record.length));\n          }\n        }\n        return names;\n      }\n      var TTOpsStackDeltas = [0, 0, 0, 0, 0, 0, 0, 0, -2, -2, -2, -2, 0, 0, -2, -5, -1, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, -1, -1, 1, -1, -999, 0, 1, 0, -1, -2, 0, -1, -2, -1, -1, 0, -1, -1, 0, 0, -999, -999, -1, -1, -1, -1, -2, -999, -2, -2, -999, 0, -2, -2, 0, 0, -2, 0, -2, 0, 0, 0, -2, -1, -1, 1, 1, 0, 0, -1, -1, -1, -1, -1, -1, -1, 0, 0, -1, 0, -1, -1, 0, -999, -1, -1, -1, -1, -1, -1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, -2, -999, -999, -999, -999, -999, -1, -1, -2, -2, 0, 0, 0, 0, -1, -1, -999, -2, -2, 0, 0, -1, -2, -2, 0, 0, 0, -1, -1, -1, -2];\n      function sanitizeTTProgram(table, ttContext) {\n        var data = table.data;\n        var i = 0,\n            j,\n            n,\n            b,\n            funcId,\n            pc,\n            lastEndf = 0,\n            lastDeff = 0;\n        var stack = [];\n        var callstack = [];\n        var functionsCalled = [];\n        var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n        var inFDEF = false,\n            ifLevel = 0,\n            inELSE = 0;\n        for (var ii = data.length; i < ii;) {\n          var op = data[i++];\n          if (op === 0x40) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if (op === 0x41) {\n            n = data[i++];\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB0) {\n            n = op - 0xB0 + 1;\n            if (inFDEF || inELSE) {\n              i += n;\n            } else {\n              for (j = 0; j < n; j++) {\n                stack.push(data[i++]);\n              }\n            }\n          } else if ((op & 0xF8) === 0xB8) {\n            n = op - 0xB8 + 1;\n            if (inFDEF || inELSE) {\n              i += n * 2;\n            } else {\n              for (j = 0; j < n; j++) {\n                b = data[i++];\n                stack.push(b << 8 | data[i++]);\n              }\n            }\n          } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n            if (!inFDEF && !inELSE) {\n              funcId = stack[stack.length - 1];\n              ttContext.functionsUsed[funcId] = true;\n              if (funcId in ttContext.functionsStackDeltas) {\n                stack.length += ttContext.functionsStackDeltas[funcId];\n              } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n                callstack.push({\n                  data: data,\n                  i: i,\n                  stackTop: stack.length - 1\n                });\n                functionsCalled.push(funcId);\n                pc = ttContext.functionsDefined[funcId];\n                if (!pc) {\n                  (0, _util.warn)('TT: CALL non-existent function');\n                  ttContext.hintsValid = false;\n                  return;\n                }\n                data = pc.data;\n                i = pc.i;\n              }\n            }\n          } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested FDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n            funcId = stack.pop();\n            ttContext.functionsDefined[funcId] = {\n              data: data,\n              i: i\n            };\n          } else if (op === 0x2D) {\n            if (inFDEF) {\n              inFDEF = false;\n              lastEndf = i;\n            } else {\n              pc = callstack.pop();\n              if (!pc) {\n                (0, _util.warn)('TT: ENDF bad stack');\n                ttContext.hintsValid = false;\n                return;\n              }\n              funcId = functionsCalled.pop();\n              data = pc.data;\n              i = pc.i;\n              ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n            }\n          } else if (op === 0x89) {\n            if (inFDEF || inELSE) {\n              (0, _util.warn)('TT: nested IDEFs not allowed');\n              tooComplexToFollowFunctions = true;\n            }\n            inFDEF = true;\n            lastDeff = i;\n          } else if (op === 0x58) {\n            ++ifLevel;\n          } else if (op === 0x1B) {\n            inELSE = ifLevel;\n          } else if (op === 0x59) {\n            if (inELSE === ifLevel) {\n              inELSE = 0;\n            }\n            --ifLevel;\n          } else if (op === 0x1C) {\n            if (!inFDEF && !inELSE) {\n              var offset = stack[stack.length - 1];\n              if (offset > 0) {\n                i += offset - 1;\n              }\n            }\n          }\n          if (!inFDEF && !inELSE) {\n            var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n            if (op >= 0x71 && op <= 0x75) {\n              n = stack.pop();\n              if (!isNaN(n)) {\n                stackDelta = -n * 2;\n              }\n            }\n            while (stackDelta < 0 && stack.length > 0) {\n              stack.pop();\n              stackDelta++;\n            }\n            while (stackDelta > 0) {\n              stack.push(NaN);\n              stackDelta--;\n            }\n          }\n        }\n        ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n        var content = [data];\n        if (i > data.length) {\n          content.push(new Uint8Array(i - data.length));\n        }\n        if (lastDeff > lastEndf) {\n          (0, _util.warn)('TT: complementing a missing function tail');\n          content.push(new Uint8Array([0x22, 0x2D]));\n        }\n        foldTTTable(table, content);\n      }\n      function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n        if (ttContext.tooComplexToFollowFunctions) {\n          return;\n        }\n        if (ttContext.functionsDefined.length > maxFunctionDefs) {\n          (0, _util.warn)('TT: more functions defined than expected');\n          ttContext.hintsValid = false;\n          return;\n        }\n        for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n          if (j > maxFunctionDefs) {\n            (0, _util.warn)('TT: invalid function id: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n          if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n            (0, _util.warn)('TT: undefined function: ' + j);\n            ttContext.hintsValid = false;\n            return;\n          }\n        }\n      }\n      function foldTTTable(table, content) {\n        if (content.length > 1) {\n          var newLength = 0;\n          var j, jj;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            newLength += content[j].length;\n          }\n          newLength = newLength + 3 & ~3;\n          var result = new Uint8Array(newLength);\n          var pos = 0;\n          for (j = 0, jj = content.length; j < jj; j++) {\n            result.set(content[j], pos);\n            pos += content[j].length;\n          }\n          table.data = result;\n          table.length = newLength;\n        }\n      }\n      function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n        var ttContext = {\n          functionsDefined: [],\n          functionsUsed: [],\n          functionsStackDeltas: [],\n          tooComplexToFollowFunctions: false,\n          hintsValid: true\n        };\n        if (fpgm) {\n          sanitizeTTProgram(fpgm, ttContext);\n        }\n        if (prep) {\n          sanitizeTTProgram(prep, ttContext);\n        }\n        if (fpgm) {\n          checkInvalidFunctions(ttContext, maxFunctionDefs);\n        }\n        if (cvt && cvt.length & 1) {\n          var cvtData = new Uint8Array(cvt.length + 1);\n          cvtData.set(cvt.data);\n          cvt.data = cvtData;\n        }\n        return ttContext.hintsValid;\n      }\n      font = new _stream.Stream(new Uint8Array(font.getBytes()));\n      var header = void 0,\n          tables = void 0;\n      if (isTrueTypeCollectionFile(font)) {\n        var ttcData = readTrueTypeCollectionData(font, this.name);\n        header = ttcData.header;\n        tables = ttcData.tables;\n      } else {\n        header = readOpenTypeHeader(font);\n        tables = readTables(font, header.numTables);\n      }\n      var cff = void 0,\n          cffFile = void 0;\n      var isTrueType = !tables['CFF '];\n      if (!isTrueType) {\n        if (header.version === 'OTTO' && !(properties.composite && properties.cidToGidMap) || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          cff = new CFFFont(cffFile, properties);\n          adjustWidths(properties);\n          return this.convert(name, cff, properties);\n        }\n        delete tables['glyf'];\n        delete tables['loca'];\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n        this.isOpenType = true;\n      } else {\n        if (!tables['loca']) {\n          throw new _util.FormatError('Required \"loca\" table is not found');\n        }\n        if (!tables['glyf']) {\n          (0, _util.warn)('Required \"glyf\" table is not found -- trying to recover.');\n          tables['glyf'] = {\n            tag: 'glyf',\n            data: new Uint8Array(0)\n          };\n        }\n        this.isOpenType = false;\n      }\n      if (!tables['maxp']) {\n        throw new _util.FormatError('Required \"maxp\" table is not found');\n      }\n      font.pos = (font.start || 0) + tables['maxp'].offset;\n      var version = font.getInt32();\n      var numGlyphs = font.getUint16();\n      var maxFunctionDefs = 0;\n      var maxSizeOfInstructions = 0;\n      if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n        font.pos += 8;\n        var maxZones = font.getUint16();\n        if (maxZones > 2) {\n          tables['maxp'].data[14] = 0;\n          tables['maxp'].data[15] = 2;\n        }\n        font.pos += 4;\n        maxFunctionDefs = font.getUint16();\n        font.pos += 6;\n        maxSizeOfInstructions = font.getUint16();\n      }\n      var dupFirstEntry = false;\n      if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\0') {\n        dupFirstEntry = true;\n        numGlyphs++;\n        tables['maxp'].data[4] = numGlyphs >> 8;\n        tables['maxp'].data[5] = numGlyphs & 255;\n      }\n      var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n      if (!hintsValid) {\n        delete tables['fpgm'];\n        delete tables['prep'];\n        delete tables['cvt '];\n      }\n      sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n      if (!tables['head']) {\n        throw new _util.FormatError('Required \"head\" table is not found');\n      }\n      sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n      var missingGlyphs = Object.create(null);\n      if (isTrueType) {\n        var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n        var glyphsInfo = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry, maxSizeOfInstructions);\n        missingGlyphs = glyphsInfo.missingGlyphs;\n        if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n          tables['maxp'].data[26] = glyphsInfo.maxSizeOfInstructions >> 8;\n          tables['maxp'].data[27] = glyphsInfo.maxSizeOfInstructions & 255;\n        }\n      }\n      if (!tables['hhea']) {\n        throw new _util.FormatError('Required \"hhea\" table is not found');\n      }\n      if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n        tables['hhea'].data[10] = 0xFF;\n        tables['hhea'].data[11] = 0xFF;\n      }\n      var metricsOverride = {\n        unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n        yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n        yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n        ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n        descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n      };\n      this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n      this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n      if (tables['post']) {\n        var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n        if (!valid) {\n          tables['post'] = null;\n        }\n      }\n      var charCodeToGlyphId = [],\n          charCode;\n      function hasGlyph(glyphId) {\n        return !missingGlyphs[glyphId];\n      }\n      if (properties.composite) {\n        var cidToGidMap = properties.cidToGidMap || [];\n        var isCidToGidMapEmpty = cidToGidMap.length === 0;\n        properties.cMap.forEach(function (charCode, cid) {\n          if (cid > 0xffff) {\n            throw new _util.FormatError('Max size of CID is 65,535');\n          }\n          var glyphId = -1;\n          if (isCidToGidMapEmpty) {\n            glyphId = cid;\n          } else if (cidToGidMap[cid] !== undefined) {\n            glyphId = cidToGidMap[cid];\n          }\n          if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId)) {\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        });\n        if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n          charCodeToGlyphId[0] = numGlyphs - 1;\n        }\n      } else {\n        var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n        var cmapPlatformId = cmapTable.platformId;\n        var cmapEncodingId = cmapTable.encodingId;\n        var cmapMappings = cmapTable.mappings;\n        var cmapMappingsLength = cmapMappings.length;\n        if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!(0, _encodings.getEncoding)(properties.baseEncodingName)) {\n          var baseEncoding = [];\n          if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n            baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n          }\n          var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n          for (charCode = 0; charCode < 256; charCode++) {\n            var glyphName, standardGlyphName;\n            if (this.differences && charCode in this.differences) {\n              glyphName = this.differences[charCode];\n            } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n              glyphName = baseEncoding[charCode];\n            } else {\n              glyphName = _encodings.StandardEncoding[charCode];\n            }\n            if (!glyphName) {\n              continue;\n            }\n            standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n            var unicodeOrCharCode;\n            if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n              unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n            } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n              unicodeOrCharCode = _encodings.MacRomanEncoding.indexOf(standardGlyphName);\n            }\n            var found = false;\n            for (var i = 0; i < cmapMappingsLength; ++i) {\n              if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n                continue;\n              }\n              charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n              found = true;\n              break;\n            }\n            if (!found && properties.glyphNames) {\n              var glyphId = properties.glyphNames.indexOf(glyphName);\n              if (glyphId === -1 && standardGlyphName !== glyphName) {\n                glyphId = properties.glyphNames.indexOf(standardGlyphName);\n              }\n              if (glyphId > 0 && hasGlyph(glyphId)) {\n                charCodeToGlyphId[charCode] = glyphId;\n              }\n            }\n          }\n        } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n          for (var _i = 0; _i < cmapMappingsLength; ++_i) {\n            charCodeToGlyphId[cmapMappings[_i].charCode] = cmapMappings[_i].glyphId;\n          }\n        } else {\n          for (var _i2 = 0; _i2 < cmapMappingsLength; ++_i2) {\n            charCode = cmapMappings[_i2].charCode;\n            if (cmapPlatformId === 3 && charCode >= 0xF000 && charCode <= 0xF0FF) {\n              charCode &= 0xFF;\n            }\n            charCodeToGlyphId[charCode] = cmapMappings[_i2].glyphId;\n          }\n        }\n      }\n      if (charCodeToGlyphId.length === 0) {\n        charCodeToGlyphId[0] = 0;\n      }\n      var newMapping = adjustMapping(charCodeToGlyphId, properties, missingGlyphs);\n      this.toFontChar = newMapping.toFontChar;\n      tables['cmap'] = {\n        tag: 'cmap',\n        data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n      };\n      if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n        tables['OS/2'] = {\n          tag: 'OS/2',\n          data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n        };\n      }\n      if (!tables['post']) {\n        tables['post'] = {\n          tag: 'post',\n          data: createPostTable(properties)\n        };\n      }\n      if (!isTrueType) {\n        try {\n          cffFile = new _stream.Stream(tables['CFF '].data);\n          var parser = new _cff_parser.CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n          cff = parser.parse();\n          var compiler = new _cff_parser.CFFCompiler(cff);\n          tables['CFF '].data = compiler.compile();\n        } catch (e) {\n          (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n        }\n      }\n      if (!tables['name']) {\n        tables['name'] = {\n          tag: 'name',\n          data: createNameTable(this.name)\n        };\n      } else {\n        var namePrototype = readNameTable(tables['name']);\n        tables['name'].data = createNameTable(name, namePrototype);\n      }\n      var builder = new OpenTypeFileBuilder(header.version);\n      for (var tableTag in tables) {\n        builder.addTable(tableTag, tables[tableTag].data);\n      }\n      return builder.toArray();\n    },\n    convert: function Font_convert(fontName, font, properties) {\n      properties.fixedPitch = false;\n      if (properties.builtInEncoding) {\n        adjustToUnicode(properties, properties.builtInEncoding);\n      }\n      var mapping = font.getGlyphMapping(properties);\n      var newMapping = adjustMapping(mapping, properties, Object.create(null));\n      this.toFontChar = newMapping.toFontChar;\n      var numGlyphs = font.numGlyphs;\n      function getCharCodes(charCodeToGlyphId, glyphId) {\n        var charCodes = null;\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            if (!charCodes) {\n              charCodes = [];\n            }\n            charCodes.push(charCode | 0);\n          }\n        }\n        return charCodes;\n      }\n      function createCharCode(charCodeToGlyphId, glyphId) {\n        for (var charCode in charCodeToGlyphId) {\n          if (glyphId === charCodeToGlyphId[charCode]) {\n            return charCode | 0;\n          }\n        }\n        newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n        return newMapping.nextAvailableFontCharCode++;\n      }\n      var seacs = font.seacs;\n      if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n        var matrix = properties.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        var charset = font.getCharset();\n        var seacMap = Object.create(null);\n        for (var glyphId in seacs) {\n          glyphId |= 0;\n          var seac = seacs[glyphId];\n          var baseGlyphName = _encodings.StandardEncoding[seac[2]];\n          var accentGlyphName = _encodings.StandardEncoding[seac[3]];\n          var baseGlyphId = charset.indexOf(baseGlyphName);\n          var accentGlyphId = charset.indexOf(accentGlyphName);\n          if (baseGlyphId < 0 || accentGlyphId < 0) {\n            continue;\n          }\n          var accentOffset = {\n            x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n            y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n          };\n          var charCodes = getCharCodes(mapping, glyphId);\n          if (!charCodes) {\n            continue;\n          }\n          for (var i = 0, ii = charCodes.length; i < ii; i++) {\n            var charCode = charCodes[i];\n            var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n            var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n            var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n            seacMap[charCode] = {\n              baseFontCharCode: baseFontCharCode,\n              accentFontCharCode: accentFontCharCode,\n              accentOffset: accentOffset\n            };\n          }\n        }\n        properties.seacMap = seacMap;\n      }\n      var unitsPerEm = 1 / (properties.fontMatrix || _util.FONT_IDENTITY_MATRIX)[0];\n      var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n      builder.addTable('CFF ', font.data);\n      builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n      builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n      builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n      builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n      builder.addTable('hmtx', function fontFieldsHmtx() {\n        var charstrings = font.charstrings;\n        var cffWidths = font.cff ? font.cff.widths : null;\n        var hmtx = '\\x00\\x00\\x00\\x00';\n        for (var i = 1, ii = numGlyphs; i < ii; i++) {\n          var width = 0;\n          if (charstrings) {\n            var charstring = charstrings[i - 1];\n            width = 'width' in charstring ? charstring.width : 0;\n          } else if (cffWidths) {\n            width = Math.ceil(cffWidths[i] || 0);\n          }\n          hmtx += string16(width) + string16(0);\n        }\n        return hmtx;\n      }());\n      builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n      builder.addTable('name', createNameTable(fontName));\n      builder.addTable('post', createPostTable(properties));\n      return builder.toArray();\n    },\n    get spaceWidth() {\n      if ('_shadowWidth' in this) {\n        return this._shadowWidth;\n      }\n      var possibleSpaceReplacements = ['space', 'minus', 'one', 'i', 'I'];\n      var width;\n      for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n        var glyphName = possibleSpaceReplacements[i];\n        if (glyphName in this.widths) {\n          width = this.widths[glyphName];\n          break;\n        }\n        var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        var glyphUnicode = glyphsUnicodeMap[glyphName];\n        var charcode = 0;\n        if (this.composite) {\n          if (this.cMap.contains(glyphUnicode)) {\n            charcode = this.cMap.lookup(glyphUnicode);\n          }\n        }\n        if (!charcode && this.toUnicode) {\n          charcode = this.toUnicode.charCodeOf(glyphUnicode);\n        }\n        if (charcode <= 0) {\n          charcode = glyphUnicode;\n        }\n        width = this.widths[charcode];\n        if (width) {\n          break;\n        }\n      }\n      width = width || this.defaultWidth;\n      this._shadowWidth = width;\n      return width;\n    },\n    charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n      var fontCharCode, width, operatorListId;\n      var widthCode = charcode;\n      if (this.cMap && this.cMap.contains(charcode)) {\n        widthCode = this.cMap.lookup(charcode);\n      }\n      width = this.widths[widthCode];\n      width = (0, _util.isNum)(width) ? width : this.defaultWidth;\n      var vmetric = this.vmetrics && this.vmetrics[widthCode];\n      var unicode = this.toUnicode.get(charcode) || this.fallbackToUnicode.get(charcode) || charcode;\n      if (typeof unicode === 'number') {\n        unicode = String.fromCharCode(unicode);\n      }\n      var isInFont = charcode in this.toFontChar;\n      fontCharCode = this.toFontChar[charcode] || charcode;\n      if (this.missingFile) {\n        fontCharCode = (0, _unicode.mapSpecialUnicodeValues)(fontCharCode);\n      }\n      if (this.isType3Font) {\n        operatorListId = fontCharCode;\n      }\n      var accent = null;\n      if (this.seacMap && this.seacMap[charcode]) {\n        isInFont = true;\n        var seac = this.seacMap[charcode];\n        fontCharCode = seac.baseFontCharCode;\n        accent = {\n          fontChar: String.fromCharCode(seac.accentFontCharCode),\n          offset: seac.accentOffset\n        };\n      }\n      var fontChar = String.fromCharCode(fontCharCode);\n      var glyph = this.glyphCache[charcode];\n      if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n        glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n        this.glyphCache[charcode] = glyph;\n      }\n      return glyph;\n    },\n    charsToGlyphs: function Font_charsToGlyphs(chars) {\n      var charsCache = this.charsCache;\n      var glyphs, glyph, charcode;\n      if (charsCache) {\n        glyphs = charsCache[chars];\n        if (glyphs) {\n          return glyphs;\n        }\n      }\n      if (!charsCache) {\n        charsCache = this.charsCache = Object.create(null);\n      }\n      glyphs = [];\n      var charsCacheKey = chars;\n      var i = 0,\n          ii;\n      if (this.cMap) {\n        var c = Object.create(null);\n        while (i < chars.length) {\n          this.cMap.readCharCode(chars, i, c);\n          charcode = c.charcode;\n          var length = c.length;\n          i += length;\n          var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n          glyph = this.charToGlyph(charcode, isSpace);\n          glyphs.push(glyph);\n        }\n      } else {\n        for (i = 0, ii = chars.length; i < ii; ++i) {\n          charcode = chars.charCodeAt(i);\n          glyph = this.charToGlyph(charcode, charcode === 0x20);\n          glyphs.push(glyph);\n        }\n      }\n      return charsCache[charsCacheKey] = glyphs;\n    }\n  };\n  return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n  function ErrorFont(error) {\n    this.error = error;\n    this.loadedName = 'g_font_error';\n    this.loading = false;\n  }\n  ErrorFont.prototype = {\n    charsToGlyphs: function ErrorFont_charsToGlyphs() {\n      return [];\n    },\n    exportData: function ErrorFont_exportData() {\n      return { error: this.error };\n    }\n  };\n  return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n  var charCodeToGlyphId = Object.create(null);\n  var glyphId, charCode, baseEncoding;\n  var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  if (properties.baseEncodingName) {\n    baseEncoding = (0, _encodings.getEncoding)(properties.baseEncodingName);\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  } else if (isSymbolicFont) {\n    for (charCode in builtInEncoding) {\n      charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n    }\n  } else {\n    baseEncoding = _encodings.StandardEncoding;\n    for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n      glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  var differences = properties.differences,\n      glyphsUnicodeMap;\n  if (differences) {\n    for (charCode in differences) {\n      var glyphName = differences[charCode];\n      glyphId = glyphNames.indexOf(glyphName);\n      if (glyphId === -1) {\n        if (!glyphsUnicodeMap) {\n          glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n        }\n        var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n        if (standardGlyphName !== glyphName) {\n          glyphId = glyphNames.indexOf(standardGlyphName);\n        }\n      }\n      if (glyphId >= 0) {\n        charCodeToGlyphId[charCode] = glyphId;\n      } else {\n        charCodeToGlyphId[charCode] = 0;\n      }\n    }\n  }\n  return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n  function findBlock(streamBytes, signature, startIndex) {\n    var streamBytesLength = streamBytes.length;\n    var signatureLength = signature.length;\n    var scanLength = streamBytesLength - signatureLength;\n    var i = startIndex,\n        j,\n        found = false;\n    while (i < scanLength) {\n      j = 0;\n      while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n        j++;\n      }\n      if (j >= signatureLength) {\n        i += j;\n        while (i < streamBytesLength && (0, _util.isSpace)(streamBytes[i])) {\n          i++;\n        }\n        found = true;\n        break;\n      }\n      i++;\n    }\n    return {\n      found: found,\n      length: i\n    };\n  }\n  function getHeaderBlock(stream, suggestedLength) {\n    var EEXEC_SIGNATURE = [0x65, 0x65, 0x78, 0x65, 0x63];\n    var streamStartPos = stream.pos;\n    var headerBytes, headerBytesLength, block;\n    try {\n      headerBytes = stream.getBytes(suggestedLength);\n      headerBytesLength = headerBytes.length;\n    } catch (ex) {\n      if (ex instanceof _util.MissingDataException) {\n        throw ex;\n      }\n    }\n    if (headerBytesLength === suggestedLength) {\n      block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n      if (block.found && block.length === suggestedLength) {\n        return {\n          stream: new _stream.Stream(headerBytes),\n          length: suggestedLength\n        };\n      }\n    }\n    (0, _util.warn)('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n    stream.pos = streamStartPos;\n    var SCAN_BLOCK_LENGTH = 2048;\n    var actualLength;\n    while (true) {\n      var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n      block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n      if (block.length === 0) {\n        break;\n      }\n      stream.pos += block.length;\n      if (block.found) {\n        actualLength = stream.pos - streamStartPos;\n        break;\n      }\n    }\n    stream.pos = streamStartPos;\n    if (actualLength) {\n      return {\n        stream: new _stream.Stream(stream.getBytes(actualLength)),\n        length: actualLength\n      };\n    }\n    (0, _util.warn)('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n    return {\n      stream: new _stream.Stream(stream.getBytes(suggestedLength)),\n      length: suggestedLength\n    };\n  }\n  function getEexecBlock(stream, suggestedLength) {\n    var eexecBytes = stream.getBytes();\n    return {\n      stream: new _stream.Stream(eexecBytes),\n      length: eexecBytes.length\n    };\n  }\n  function Type1Font(name, file, properties) {\n    var PFB_HEADER_SIZE = 6;\n    var headerBlockLength = properties.length1;\n    var eexecBlockLength = properties.length2;\n    var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n    var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n    if (pfbHeaderPresent) {\n      file.skip(PFB_HEADER_SIZE);\n      headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var headerBlock = getHeaderBlock(file, headerBlockLength);\n    var headerBlockParser = new _type1_parser.Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n    headerBlockParser.extractFontHeader(properties);\n    if (pfbHeaderPresent) {\n      pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n      eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n    }\n    var eexecBlock = getEexecBlock(file, eexecBlockLength);\n    var eexecBlockParser = new _type1_parser.Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n    var data = eexecBlockParser.extractFontProgram();\n    for (var info in data.properties) {\n      properties[info] = data.properties[info];\n    }\n    var charstrings = data.charstrings;\n    var type2Charstrings = this.getType2Charstrings(charstrings);\n    var subrs = this.getType2Subrs(data.subrs);\n    this.charstrings = charstrings;\n    this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n    this.seacs = this.getSeacs(data.charstrings);\n  }\n  Type1Font.prototype = {\n    get numGlyphs() {\n      return this.charstrings.length + 1;\n    },\n    getCharset: function Type1Font_getCharset() {\n      var charset = ['.notdef'];\n      var charstrings = this.charstrings;\n      for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        charset.push(charstrings[glyphId].glyphName);\n      }\n      return charset;\n    },\n    getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n      var charstrings = this.charstrings;\n      var glyphNames = ['.notdef'],\n          glyphId;\n      for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n        glyphNames.push(charstrings[glyphId].glyphName);\n      }\n      var encoding = properties.builtInEncoding;\n      if (encoding) {\n        var builtInEncoding = Object.create(null);\n        for (var charCode in encoding) {\n          glyphId = glyphNames.indexOf(encoding[charCode]);\n          if (glyphId >= 0) {\n            builtInEncoding[charCode] = glyphId;\n          }\n        }\n      }\n      return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n    },\n    getSeacs: function Type1Font_getSeacs(charstrings) {\n      var i, ii;\n      var seacMap = [];\n      for (i = 0, ii = charstrings.length; i < ii; i++) {\n        var charstring = charstrings[i];\n        if (charstring.seac) {\n          seacMap[i + 1] = charstring.seac;\n        }\n      }\n      return seacMap;\n    },\n    getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n      var type2Charstrings = [];\n      for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n        type2Charstrings.push(type1Charstrings[i].charstring);\n      }\n      return type2Charstrings;\n    },\n    getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n      var bias = 0;\n      var count = type1Subrs.length;\n      if (count < 1133) {\n        bias = 107;\n      } else if (count < 33769) {\n        bias = 1131;\n      } else {\n        bias = 32768;\n      }\n      var type2Subrs = [];\n      var i;\n      for (i = 0; i < bias; i++) {\n        type2Subrs.push([0x0B]);\n      }\n      for (i = 0; i < count; i++) {\n        type2Subrs.push(type1Subrs[i]);\n      }\n      return type2Subrs;\n    },\n    wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n      var cff = new _cff_parser.CFF();\n      cff.header = new _cff_parser.CFFHeader(1, 0, 4, 4);\n      cff.names = [name];\n      var topDict = new _cff_parser.CFFTopDict();\n      topDict.setByName('version', 391);\n      topDict.setByName('Notice', 392);\n      topDict.setByName('FullName', 393);\n      topDict.setByName('FamilyName', 394);\n      topDict.setByName('Weight', 395);\n      topDict.setByName('Encoding', null);\n      topDict.setByName('FontMatrix', properties.fontMatrix);\n      topDict.setByName('FontBBox', properties.bbox);\n      topDict.setByName('charset', null);\n      topDict.setByName('CharStrings', null);\n      topDict.setByName('Private', null);\n      cff.topDict = topDict;\n      var strings = new _cff_parser.CFFStrings();\n      strings.add('Version 0.11');\n      strings.add('See original notice');\n      strings.add(name);\n      strings.add(name);\n      strings.add('Medium');\n      cff.strings = strings;\n      cff.globalSubrIndex = new _cff_parser.CFFIndex();\n      var count = glyphs.length;\n      var charsetArray = [0];\n      var i, ii;\n      for (i = 0; i < count; i++) {\n        var index = _cff_parser.CFFStandardStrings.indexOf(charstrings[i].glyphName);\n        if (index === -1) {\n          index = 0;\n        }\n        charsetArray.push(index >> 8 & 0xff, index & 0xff);\n      }\n      cff.charset = new _cff_parser.CFFCharset(false, 0, [], charsetArray);\n      var charStringsIndex = new _cff_parser.CFFIndex();\n      charStringsIndex.add([0x8B, 0x0E]);\n      for (i = 0; i < count; i++) {\n        var glyph = glyphs[i];\n        if (glyph.length === 0) {\n          charStringsIndex.add([0x8B, 0x0E]);\n          continue;\n        }\n        charStringsIndex.add(glyph);\n      }\n      cff.charStrings = charStringsIndex;\n      var privateDict = new _cff_parser.CFFPrivateDict();\n      privateDict.setByName('Subrs', null);\n      var fields = ['BlueValues', 'OtherBlues', 'FamilyBlues', 'FamilyOtherBlues', 'StemSnapH', 'StemSnapV', 'BlueShift', 'BlueFuzz', 'BlueScale', 'LanguageGroup', 'ExpansionFactor', 'ForceBold', 'StdHW', 'StdVW'];\n      for (i = 0, ii = fields.length; i < ii; i++) {\n        var field = fields[i];\n        if (!(field in properties.privateData)) {\n          continue;\n        }\n        var value = properties.privateData[field];\n        if (Array.isArray(value)) {\n          for (var j = value.length - 1; j > 0; j--) {\n            value[j] -= value[j - 1];\n          }\n        }\n        privateDict.setByName(field, value);\n      }\n      cff.topDict.privateDict = privateDict;\n      var subrIndex = new _cff_parser.CFFIndex();\n      for (i = 0, ii = subrs.length; i < ii; i++) {\n        subrIndex.add(subrs[i]);\n      }\n      privateDict.subrsIndex = subrIndex;\n      var compiler = new _cff_parser.CFFCompiler(cff);\n      return compiler.compile();\n    }\n  };\n  return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n  function CFFFont(file, properties) {\n    this.properties = properties;\n    var parser = new _cff_parser.CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n    this.cff = parser.parse();\n    var compiler = new _cff_parser.CFFCompiler(this.cff);\n    this.seacs = this.cff.seacs;\n    try {\n      this.data = compiler.compile();\n    } catch (e) {\n      (0, _util.warn)('Failed to compile font ' + properties.loadedName);\n      this.data = file;\n    }\n  }\n  CFFFont.prototype = {\n    get numGlyphs() {\n      return this.cff.charStrings.count;\n    },\n    getCharset: function CFFFont_getCharset() {\n      return this.cff.charset.charset;\n    },\n    getGlyphMapping: function CFFFont_getGlyphMapping() {\n      var cff = this.cff;\n      var properties = this.properties;\n      var charsets = cff.charset.charset;\n      var charCodeToGlyphId;\n      var glyphId;\n      if (properties.composite) {\n        charCodeToGlyphId = Object.create(null);\n        if (cff.isCIDFont) {\n          for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n            var cid = charsets[glyphId];\n            var charCode = properties.cMap.charCodeOf(cid);\n            charCodeToGlyphId[charCode] = glyphId;\n          }\n        } else {\n          for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n            charCodeToGlyphId[glyphId] = glyphId;\n          }\n        }\n        return charCodeToGlyphId;\n      }\n      var encoding = cff.encoding ? cff.encoding.encoding : null;\n      charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n      return charCodeToGlyphId;\n    }\n  };\n  return CFFFont;\n}();\n(function checkSeacSupport() {\n  if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n    exports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED = true;\n  }\n})();\n(function checkChromeWindows() {\n  if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n    SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n  }\n})();\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.getFontType = getFontType;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CMapFactory = exports.IdentityCMap = exports.CMap = undefined;\n\nvar _util = require('../shared/util');\n\nvar _primitives = require('./primitives');\n\nvar _parser = require('./parser');\n\nvar _stream = require('./stream');\n\nvar BUILT_IN_CMAPS = ['Adobe-GB1-UCS2', 'Adobe-CNS1-UCS2', 'Adobe-Japan1-UCS2', 'Adobe-Korea1-UCS2', '78-EUC-H', '78-EUC-V', '78-H', '78-RKSJ-H', '78-RKSJ-V', '78-V', '78ms-RKSJ-H', '78ms-RKSJ-V', '83pv-RKSJ-H', '90ms-RKSJ-H', '90ms-RKSJ-V', '90msp-RKSJ-H', '90msp-RKSJ-V', '90pv-RKSJ-H', '90pv-RKSJ-V', 'Add-H', 'Add-RKSJ-H', 'Add-RKSJ-V', 'Add-V', 'Adobe-CNS1-0', 'Adobe-CNS1-1', 'Adobe-CNS1-2', 'Adobe-CNS1-3', 'Adobe-CNS1-4', 'Adobe-CNS1-5', 'Adobe-CNS1-6', 'Adobe-GB1-0', 'Adobe-GB1-1', 'Adobe-GB1-2', 'Adobe-GB1-3', 'Adobe-GB1-4', 'Adobe-GB1-5', 'Adobe-Japan1-0', 'Adobe-Japan1-1', 'Adobe-Japan1-2', 'Adobe-Japan1-3', 'Adobe-Japan1-4', 'Adobe-Japan1-5', 'Adobe-Japan1-6', 'Adobe-Korea1-0', 'Adobe-Korea1-1', 'Adobe-Korea1-2', 'B5-H', 'B5-V', 'B5pc-H', 'B5pc-V', 'CNS-EUC-H', 'CNS-EUC-V', 'CNS1-H', 'CNS1-V', 'CNS2-H', 'CNS2-V', 'ETHK-B5-H', 'ETHK-B5-V', 'ETen-B5-H', 'ETen-B5-V', 'ETenms-B5-H', 'ETenms-B5-V', 'EUC-H', 'EUC-V', 'Ext-H', 'Ext-RKSJ-H', 'Ext-RKSJ-V', 'Ext-V', 'GB-EUC-H', 'GB-EUC-V', 'GB-H', 'GB-V', 'GBK-EUC-H', 'GBK-EUC-V', 'GBK2K-H', 'GBK2K-V', 'GBKp-EUC-H', 'GBKp-EUC-V', 'GBT-EUC-H', 'GBT-EUC-V', 'GBT-H', 'GBT-V', 'GBTpc-EUC-H', 'GBTpc-EUC-V', 'GBpc-EUC-H', 'GBpc-EUC-V', 'H', 'HKdla-B5-H', 'HKdla-B5-V', 'HKdlb-B5-H', 'HKdlb-B5-V', 'HKgccs-B5-H', 'HKgccs-B5-V', 'HKm314-B5-H', 'HKm314-B5-V', 'HKm471-B5-H', 'HKm471-B5-V', 'HKscs-B5-H', 'HKscs-B5-V', 'Hankaku', 'Hiragana', 'KSC-EUC-H', 'KSC-EUC-V', 'KSC-H', 'KSC-Johab-H', 'KSC-Johab-V', 'KSC-V', 'KSCms-UHC-H', 'KSCms-UHC-HW-H', 'KSCms-UHC-HW-V', 'KSCms-UHC-V', 'KSCpc-EUC-H', 'KSCpc-EUC-V', 'Katakana', 'NWP-H', 'NWP-V', 'RKSJ-H', 'RKSJ-V', 'Roman', 'UniCNS-UCS2-H', 'UniCNS-UCS2-V', 'UniCNS-UTF16-H', 'UniCNS-UTF16-V', 'UniCNS-UTF32-H', 'UniCNS-UTF32-V', 'UniCNS-UTF8-H', 'UniCNS-UTF8-V', 'UniGB-UCS2-H', 'UniGB-UCS2-V', 'UniGB-UTF16-H', 'UniGB-UTF16-V', 'UniGB-UTF32-H', 'UniGB-UTF32-V', 'UniGB-UTF8-H', 'UniGB-UTF8-V', 'UniJIS-UCS2-H', 'UniJIS-UCS2-HW-H', 'UniJIS-UCS2-HW-V', 'UniJIS-UCS2-V', 'UniJIS-UTF16-H', 'UniJIS-UTF16-V', 'UniJIS-UTF32-H', 'UniJIS-UTF32-V', 'UniJIS-UTF8-H', 'UniJIS-UTF8-V', 'UniJIS2004-UTF16-H', 'UniJIS2004-UTF16-V', 'UniJIS2004-UTF32-H', 'UniJIS2004-UTF32-V', 'UniJIS2004-UTF8-H', 'UniJIS2004-UTF8-V', 'UniJISPro-UCS2-HW-V', 'UniJISPro-UCS2-V', 'UniJISPro-UTF8-V', 'UniJISX0213-UTF32-H', 'UniJISX0213-UTF32-V', 'UniJISX02132004-UTF32-H', 'UniJISX02132004-UTF32-V', 'UniKS-UCS2-H', 'UniKS-UCS2-V', 'UniKS-UTF16-H', 'UniKS-UTF16-V', 'UniKS-UTF32-H', 'UniKS-UTF32-V', 'UniKS-UTF8-H', 'UniKS-UTF8-V', 'V', 'WP-Symbol'];\nvar CMap = function CMapClosure() {\n  function CMap(builtInCMap) {\n    this.codespaceRanges = [[], [], [], []];\n    this.numCodespaceRanges = 0;\n    this._map = [];\n    this.name = '';\n    this.vertical = false;\n    this.useCMap = null;\n    this.builtInCMap = builtInCMap;\n  }\n  CMap.prototype = {\n    addCodespaceRange: function addCodespaceRange(n, low, high) {\n      this.codespaceRanges[n - 1].push(low, high);\n      this.numCodespaceRanges++;\n    },\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      while (low <= high) {\n        this._map[low++] = dstLow++;\n      }\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      var lastByte = dstLow.length - 1;\n      while (low <= high) {\n        this._map[low++] = dstLow;\n        dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n      }\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      var i = 0,\n          ii = array.length;\n      while (low <= high && i < ii) {\n        this._map[low] = array[i++];\n        ++low;\n      }\n    },\n    mapOne: function mapOne(src, dst) {\n      this._map[src] = dst;\n    },\n    lookup: function lookup(code) {\n      return this._map[code];\n    },\n    contains: function contains(code) {\n      return this._map[code] !== undefined;\n    },\n    forEach: function forEach(callback) {\n      var map = this._map;\n      var length = map.length;\n      if (length <= 0x10000) {\n        for (var i = 0; i < length; i++) {\n          if (map[i] !== undefined) {\n            callback(i, map[i]);\n          }\n        }\n      } else {\n        for (var _i in map) {\n          callback(_i, map[_i]);\n        }\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      var map = this._map;\n      if (map.length <= 0x10000) {\n        return map.indexOf(value);\n      }\n      for (var charCode in map) {\n        if (map[charCode] === value) {\n          return charCode | 0;\n        }\n      }\n      return -1;\n    },\n    getMap: function getMap() {\n      return this._map;\n    },\n    readCharCode: function readCharCode(str, offset, out) {\n      var c = 0;\n      var codespaceRanges = this.codespaceRanges;\n      var codespaceRangesLen = this.codespaceRanges.length;\n      for (var n = 0; n < codespaceRangesLen; n++) {\n        c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n        var codespaceRange = codespaceRanges[n];\n        for (var k = 0, kk = codespaceRange.length; k < kk;) {\n          var low = codespaceRange[k++];\n          var high = codespaceRange[k++];\n          if (c >= low && c <= high) {\n            out.charcode = c;\n            out.length = n + 1;\n            return;\n          }\n        }\n      }\n      out.charcode = 0;\n      out.length = 1;\n    },\n\n    get length() {\n      return this._map.length;\n    },\n    get isIdentityCMap() {\n      if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n        return false;\n      }\n      if (this._map.length !== 0x10000) {\n        return false;\n      }\n      for (var i = 0; i < 0x10000; i++) {\n        if (this._map[i] !== i) {\n          return false;\n        }\n      }\n      return true;\n    }\n  };\n  return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n  function IdentityCMap(vertical, n) {\n    CMap.call(this);\n    this.vertical = vertical;\n    this.addCodespaceRange(n, 0, 0xffff);\n  }\n  _util.Util.inherit(IdentityCMap, CMap, {});\n  IdentityCMap.prototype = {\n    addCodespaceRange: CMap.prototype.addCodespaceRange,\n    mapCidRange: function mapCidRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapCidRange');\n    },\n    mapBfRange: function mapBfRange(low, high, dstLow) {\n      (0, _util.unreachable)('should not call mapBfRange');\n    },\n    mapBfRangeToArray: function mapBfRangeToArray(low, high, array) {\n      (0, _util.unreachable)('should not call mapBfRangeToArray');\n    },\n    mapOne: function mapOne(src, dst) {\n      (0, _util.unreachable)('should not call mapCidOne');\n    },\n    lookup: function lookup(code) {\n      return Number.isInteger(code) && code <= 0xffff ? code : undefined;\n    },\n    contains: function contains(code) {\n      return Number.isInteger(code) && code <= 0xffff;\n    },\n    forEach: function forEach(callback) {\n      for (var i = 0; i <= 0xffff; i++) {\n        callback(i, i);\n      }\n    },\n    charCodeOf: function charCodeOf(value) {\n      return Number.isInteger(value) && value <= 0xffff ? value : -1;\n    },\n    getMap: function getMap() {\n      var map = new Array(0x10000);\n      for (var i = 0; i <= 0xffff; i++) {\n        map[i] = i;\n      }\n      return map;\n    },\n\n    readCharCode: CMap.prototype.readCharCode,\n    get length() {\n      return 0x10000;\n    },\n    get isIdentityCMap() {\n      (0, _util.unreachable)('should not access .isIdentityCMap');\n    }\n  };\n  return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n  function hexToInt(a, size) {\n    var n = 0;\n    for (var i = 0; i <= size; i++) {\n      n = n << 8 | a[i];\n    }\n    return n >>> 0;\n  }\n  function hexToStr(a, size) {\n    if (size === 1) {\n      return String.fromCharCode(a[0], a[1]);\n    }\n    if (size === 3) {\n      return String.fromCharCode(a[0], a[1], a[2], a[3]);\n    }\n    return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n  }\n  function addHex(a, b, size) {\n    var c = 0;\n    for (var i = size; i >= 0; i--) {\n      c += a[i] + b[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  function incHex(a, size) {\n    var c = 1;\n    for (var i = size; i >= 0 && c > 0; i--) {\n      c += a[i];\n      a[i] = c & 255;\n      c >>= 8;\n    }\n  }\n  var MAX_NUM_SIZE = 16;\n  var MAX_ENCODED_NUM_SIZE = 19;\n  function BinaryCMapStream(data) {\n    this.buffer = data;\n    this.pos = 0;\n    this.end = data.length;\n    this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n  }\n  BinaryCMapStream.prototype = {\n    readByte: function readByte() {\n      if (this.pos >= this.end) {\n        return -1;\n      }\n      return this.buffer[this.pos++];\n    },\n    readNumber: function readNumber() {\n      var n = 0;\n      var last;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        n = n << 7 | b & 0x7F;\n      } while (!last);\n      return n;\n    },\n    readSigned: function readSigned() {\n      var n = this.readNumber();\n      return n & 1 ? ~(n >>> 1) : n >>> 1;\n    },\n    readHex: function readHex(num, size) {\n      num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n      this.pos += size + 1;\n    },\n    readHexNumber: function readHexNumber(num, size) {\n      var last;\n      var stack = this.tmpBuf,\n          sp = 0;\n      do {\n        var b = this.readByte();\n        if (b < 0) {\n          throw new _util.FormatError('unexpected EOF in bcmap');\n        }\n        last = !(b & 0x80);\n        stack[sp++] = b & 0x7F;\n      } while (!last);\n      var i = size,\n          buffer = 0,\n          bufferSize = 0;\n      while (i >= 0) {\n        while (bufferSize < 8 && stack.length > 0) {\n          buffer = stack[--sp] << bufferSize | buffer;\n          bufferSize += 7;\n        }\n        num[i] = buffer & 255;\n        i--;\n        buffer >>= 8;\n        bufferSize -= 8;\n      }\n    },\n    readHexSigned: function readHexSigned(num, size) {\n      this.readHexNumber(num, size);\n      var sign = num[size] & 1 ? 255 : 0;\n      var c = 0;\n      for (var i = 0; i <= size; i++) {\n        c = (c & 1) << 8 | num[i];\n        num[i] = c >> 1 ^ sign;\n      }\n    },\n    readString: function readString() {\n      var len = this.readNumber();\n      var s = '';\n      for (var i = 0; i < len; i++) {\n        s += String.fromCharCode(this.readNumber());\n      }\n      return s;\n    }\n  };\n  function processBinaryCMap(data, cMap, extend) {\n    return new Promise(function (resolve, reject) {\n      var stream = new BinaryCMapStream(data);\n      var header = stream.readByte();\n      cMap.vertical = !!(header & 1);\n      var useCMap = null;\n      var start = new Uint8Array(MAX_NUM_SIZE);\n      var end = new Uint8Array(MAX_NUM_SIZE);\n      var char = new Uint8Array(MAX_NUM_SIZE);\n      var charCode = new Uint8Array(MAX_NUM_SIZE);\n      var tmp = new Uint8Array(MAX_NUM_SIZE);\n      var code;\n      var b;\n      while ((b = stream.readByte()) >= 0) {\n        var type = b >> 5;\n        if (type === 7) {\n          switch (b & 0x1F) {\n            case 0:\n              stream.readString();\n              break;\n            case 1:\n              useCMap = stream.readString();\n              break;\n          }\n          continue;\n        }\n        var sequence = !!(b & 0x10);\n        var dataSize = b & 15;\n        if (dataSize + 1 > MAX_NUM_SIZE) {\n          throw new Error('processBinaryCMap: Invalid dataSize.');\n        }\n        var ucs2DataSize = 1;\n        var subitemsCount = stream.readNumber();\n        var i;\n        switch (type) {\n          case 0:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n            }\n            break;\n          case 1:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            stream.readNumber();\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              stream.readHexNumber(start, dataSize);\n              addHex(start, end, dataSize);\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              stream.readNumber();\n            }\n            break;\n          case 2:\n            stream.readHex(char, dataSize);\n            code = stream.readNumber();\n            cMap.mapOne(hexToInt(char, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, dataSize);\n                addHex(char, tmp, dataSize);\n              }\n              code = stream.readSigned() + (code + 1);\n              cMap.mapOne(hexToInt(char, dataSize), code);\n            }\n            break;\n          case 3:\n            stream.readHex(start, dataSize);\n            stream.readHexNumber(end, dataSize);\n            addHex(end, start, dataSize);\n            code = stream.readNumber();\n            cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, dataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, dataSize);\n                addHex(start, end, dataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, dataSize);\n              addHex(end, start, dataSize);\n              code = stream.readNumber();\n              cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n            }\n            break;\n          case 4:\n            stream.readHex(char, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(char, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(tmp, ucs2DataSize);\n                addHex(char, tmp, ucs2DataSize);\n              }\n              incHex(charCode, dataSize);\n              stream.readHexSigned(tmp, dataSize);\n              addHex(charCode, tmp, dataSize);\n              cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          case 5:\n            stream.readHex(start, ucs2DataSize);\n            stream.readHexNumber(end, ucs2DataSize);\n            addHex(end, start, ucs2DataSize);\n            stream.readHex(charCode, dataSize);\n            cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            for (i = 1; i < subitemsCount; i++) {\n              incHex(end, ucs2DataSize);\n              if (!sequence) {\n                stream.readHexNumber(start, ucs2DataSize);\n                addHex(start, end, ucs2DataSize);\n              } else {\n                start.set(end);\n              }\n              stream.readHexNumber(end, ucs2DataSize);\n              addHex(end, start, ucs2DataSize);\n              stream.readHex(charCode, dataSize);\n              cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n            }\n            break;\n          default:\n            reject(new Error('processBinaryCMap: Unknown type: ' + type));\n            return;\n        }\n      }\n      if (useCMap) {\n        resolve(extend(useCMap));\n        return;\n      }\n      resolve(cMap);\n    });\n  }\n  function BinaryCMapReader() {}\n  BinaryCMapReader.prototype = { process: processBinaryCMap };\n  return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n  function strToInt(str) {\n    var a = 0;\n    for (var i = 0; i < str.length; i++) {\n      a = a << 8 | str.charCodeAt(i);\n    }\n    return a >>> 0;\n  }\n  function expectString(obj) {\n    if (!(0, _util.isString)(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected string.');\n    }\n  }\n  function expectInt(obj) {\n    if (!Number.isInteger(obj)) {\n      throw new _util.FormatError('Malformed CMap: expected int.');\n    }\n  }\n  function parseBfChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseBfRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endbfrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      if (Number.isInteger(obj) || (0, _util.isString)(obj)) {\n        var dstLow = Number.isInteger(obj) ? String.fromCharCode(obj) : obj;\n        cMap.mapBfRange(low, high, dstLow);\n      } else if ((0, _primitives.isCmd)(obj, '[')) {\n        obj = lexer.getObj();\n        var array = [];\n        while (!(0, _primitives.isCmd)(obj, ']') && !(0, _primitives.isEOF)(obj)) {\n          array.push(obj);\n          obj = lexer.getObj();\n        }\n        cMap.mapBfRangeToArray(low, high, array);\n      } else {\n        break;\n      }\n    }\n    throw new _util.FormatError('Invalid bf range.');\n  }\n  function parseCidChar(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidchar')) {\n        return;\n      }\n      expectString(obj);\n      var src = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dst = obj;\n      cMap.mapOne(src, dst);\n    }\n  }\n  function parseCidRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcidrange')) {\n        return;\n      }\n      expectString(obj);\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      expectString(obj);\n      var high = strToInt(obj);\n      obj = lexer.getObj();\n      expectInt(obj);\n      var dstLow = obj;\n      cMap.mapCidRange(low, high, dstLow);\n    }\n  }\n  function parseCodespaceRange(cMap, lexer) {\n    while (true) {\n      var obj = lexer.getObj();\n      if ((0, _primitives.isEOF)(obj)) {\n        break;\n      }\n      if ((0, _primitives.isCmd)(obj, 'endcodespacerange')) {\n        return;\n      }\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var low = strToInt(obj);\n      obj = lexer.getObj();\n      if (!(0, _util.isString)(obj)) {\n        break;\n      }\n      var high = strToInt(obj);\n      cMap.addCodespaceRange(obj.length, low, high);\n    }\n    throw new _util.FormatError('Invalid codespace range.');\n  }\n  function parseWMode(cMap, lexer) {\n    var obj = lexer.getObj();\n    if (Number.isInteger(obj)) {\n      cMap.vertical = !!obj;\n    }\n  }\n  function parseCMapName(cMap, lexer) {\n    var obj = lexer.getObj();\n    if ((0, _primitives.isName)(obj) && (0, _util.isString)(obj.name)) {\n      cMap.name = obj.name;\n    }\n  }\n  function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n    var previous;\n    var embededUseCMap;\n    objLoop: while (true) {\n      try {\n        var obj = lexer.getObj();\n        if ((0, _primitives.isEOF)(obj)) {\n          break;\n        } else if ((0, _primitives.isName)(obj)) {\n          if (obj.name === 'WMode') {\n            parseWMode(cMap, lexer);\n          } else if (obj.name === 'CMapName') {\n            parseCMapName(cMap, lexer);\n          }\n          previous = obj;\n        } else if ((0, _primitives.isCmd)(obj)) {\n          switch (obj.cmd) {\n            case 'endcmap':\n              break objLoop;\n            case 'usecmap':\n              if ((0, _primitives.isName)(previous)) {\n                embededUseCMap = previous.name;\n              }\n              break;\n            case 'begincodespacerange':\n              parseCodespaceRange(cMap, lexer);\n              break;\n            case 'beginbfchar':\n              parseBfChar(cMap, lexer);\n              break;\n            case 'begincidchar':\n              parseCidChar(cMap, lexer);\n              break;\n            case 'beginbfrange':\n              parseBfRange(cMap, lexer);\n              break;\n            case 'begincidrange':\n              parseCidRange(cMap, lexer);\n              break;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.warn)('Invalid cMap data: ' + ex);\n        continue;\n      }\n    }\n    if (!useCMap && embededUseCMap) {\n      useCMap = embededUseCMap;\n    }\n    if (useCMap) {\n      return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    }\n    return Promise.resolve(cMap);\n  }\n  function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n    return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n      cMap.useCMap = newCMap;\n      if (cMap.numCodespaceRanges === 0) {\n        var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n        for (var i = 0; i < useCodespaceRanges.length; i++) {\n          cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n        }\n        cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n      }\n      cMap.useCMap.forEach(function (key, value) {\n        if (!cMap.contains(key)) {\n          cMap.mapOne(key, cMap.useCMap.lookup(key));\n        }\n      });\n      return cMap;\n    });\n  }\n  function createBuiltInCMap(name, fetchBuiltInCMap) {\n    if (name === 'Identity-H') {\n      return Promise.resolve(new IdentityCMap(false, 2));\n    } else if (name === 'Identity-V') {\n      return Promise.resolve(new IdentityCMap(true, 2));\n    }\n    if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n      return Promise.reject(new Error('Unknown CMap name: ' + name));\n    }\n    if (!fetchBuiltInCMap) {\n      return Promise.reject(new Error('Built-in CMap parameters are not provided.'));\n    }\n    return fetchBuiltInCMap(name).then(function (data) {\n      var cMapData = data.cMapData,\n          compressionType = data.compressionType;\n      var cMap = new CMap(true);\n      if (compressionType === _util.CMapCompressionType.BINARY) {\n        return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n          return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n        });\n      }\n      if (compressionType === _util.CMapCompressionType.NONE) {\n        var lexer = new _parser.Lexer(new _stream.Stream(cMapData));\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n      }\n      return Promise.reject(new Error('TODO: Only BINARY/NONE CMap compression is currently supported.'));\n    });\n  }\n  return {\n    create: function create(params) {\n      var encoding = params.encoding;\n      var fetchBuiltInCMap = params.fetchBuiltInCMap;\n      var useCMap = params.useCMap;\n      if ((0, _primitives.isName)(encoding)) {\n        return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n      } else if ((0, _primitives.isStream)(encoding)) {\n        var cMap = new CMap();\n        var lexer = new _parser.Lexer(encoding);\n        return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n          if (parsedCMap.isIdentityCMap) {\n            return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n          }\n          return parsedCMap;\n        });\n      }\n      return Promise.reject(new Error('Encoding required.'));\n    }\n  };\n}();\nexports.CMap = CMap;\nexports.IdentityCMap = IdentityCMap;\nexports.CMapFactory = CMapFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PartialEvaluator = undefined;\n\nvar _util = require('../shared/util');\n\nvar _cmap = require('./cmap');\n\nvar _stream = require('./stream');\n\nvar _primitives = require('./primitives');\n\nvar _fonts = require('./fonts');\n\nvar _encodings = require('./encodings');\n\nvar _unicode = require('./unicode');\n\nvar _standard_fonts = require('./standard_fonts');\n\nvar _pattern = require('./pattern');\n\nvar _parser = require('./parser');\n\nvar _bidi = require('./bidi');\n\nvar _colorspace = require('./colorspace');\n\nvar _glyphlist = require('./glyphlist');\n\nvar _metrics = require('./metrics');\n\nvar _function = require('./function');\n\nvar _jpeg_stream = require('./jpeg_stream');\n\nvar _murmurhash = require('./murmurhash3');\n\nvar _operator_list = require('./operator_list');\n\nvar _image = require('./image');\n\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n  var DefaultPartialEvaluatorOptions = {\n    forceDataSchema: false,\n    maxImageSize: -1,\n    disableFontFace: false,\n    nativeImageDecoderSupport: _util.NativeImageDecoding.DECODE,\n    ignoreErrors: false,\n    isEvalSupported: true\n  };\n  function NativeImageDecoder(_ref) {\n    var xref = _ref.xref,\n        resources = _ref.resources,\n        handler = _ref.handler,\n        _ref$forceDataSchema = _ref.forceDataSchema,\n        forceDataSchema = _ref$forceDataSchema === undefined ? false : _ref$forceDataSchema,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.xref = xref;\n    this.resources = resources;\n    this.handler = handler;\n    this.forceDataSchema = forceDataSchema;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n  }\n  NativeImageDecoder.prototype = {\n    canDecode: function canDecode(image) {\n      return image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources, this.pdfFunctionFactory);\n    },\n    decode: function decode(image) {\n      var dict = image.dict;\n      var colorSpace = dict.get('ColorSpace', 'CS');\n      colorSpace = _colorspace.ColorSpace.parse(colorSpace, this.xref, this.resources, this.pdfFunctionFactory);\n      var numComps = colorSpace.numComps;\n      var decodePromise = this.handler.sendWithPromise('JpegDecode', [image.getIR(this.forceDataSchema), numComps]);\n      return decodePromise.then(function (message) {\n        var data = message.data;\n        return new _stream.Stream(data, 0, data.length, image.dict);\n      });\n    }\n  };\n  NativeImageDecoder.isSupported = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  NativeImageDecoder.isDecodable = function (image, xref, res, pdfFunctionFactory) {\n    var dict = image.dict;\n    if (dict.has('DecodeParms') || dict.has('DP')) {\n      return false;\n    }\n    var cs = _colorspace.ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res, pdfFunctionFactory);\n    return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n  };\n  function PartialEvaluator(_ref2) {\n    var _this = this;\n\n    var pdfManager = _ref2.pdfManager,\n        xref = _ref2.xref,\n        handler = _ref2.handler,\n        pageIndex = _ref2.pageIndex,\n        idFactory = _ref2.idFactory,\n        fontCache = _ref2.fontCache,\n        builtInCMapCache = _ref2.builtInCMapCache,\n        _ref2$options = _ref2.options,\n        options = _ref2$options === undefined ? null : _ref2$options,\n        pdfFunctionFactory = _ref2.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.xref = xref;\n    this.handler = handler;\n    this.pageIndex = pageIndex;\n    this.idFactory = idFactory;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.options = options || DefaultPartialEvaluatorOptions;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.fetchBuiltInCMap = function (name) {\n      var cachedCMap = _this.builtInCMapCache[name];\n      if (cachedCMap) {\n        return Promise.resolve(cachedCMap);\n      }\n      return _this.handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n        if (data.compressionType !== _util.CMapCompressionType.NONE) {\n          _this.builtInCMapCache[name] = data;\n        }\n        return data;\n      });\n    };\n  }\n  var TIME_SLOT_DURATION_MS = 20;\n  var CHECK_TIME_EVERY = 100;\n  function TimeSlotManager() {\n    this.reset();\n  }\n  TimeSlotManager.prototype = {\n    check: function TimeSlotManager_check() {\n      if (++this.checked < CHECK_TIME_EVERY) {\n        return false;\n      }\n      this.checked = 0;\n      return this.endTime <= Date.now();\n    },\n    reset: function TimeSlotManager_reset() {\n      this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n      this.checked = 0;\n    }\n  };\n  function normalizeBlendMode(value) {\n    if (!(0, _primitives.isName)(value)) {\n      return 'source-over';\n    }\n    switch (value.name) {\n      case 'Normal':\n      case 'Compatible':\n        return 'source-over';\n      case 'Multiply':\n        return 'multiply';\n      case 'Screen':\n        return 'screen';\n      case 'Overlay':\n        return 'overlay';\n      case 'Darken':\n        return 'darken';\n      case 'Lighten':\n        return 'lighten';\n      case 'ColorDodge':\n        return 'color-dodge';\n      case 'ColorBurn':\n        return 'color-burn';\n      case 'HardLight':\n        return 'hard-light';\n      case 'SoftLight':\n        return 'soft-light';\n      case 'Difference':\n        return 'difference';\n      case 'Exclusion':\n        return 'exclusion';\n      case 'Hue':\n        return 'hue';\n      case 'Saturation':\n        return 'saturation';\n      case 'Color':\n        return 'color';\n      case 'Luminosity':\n        return 'luminosity';\n    }\n    (0, _util.warn)('Unsupported blend mode: ' + value.name);\n    return 'source-over';\n  }\n  var deferred = Promise.resolve();\n  var TILING_PATTERN = 1,\n      SHADING_PATTERN = 2;\n  PartialEvaluator.prototype = {\n    clone: function clone() {\n      var newOptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DefaultPartialEvaluatorOptions;\n\n      var newEvaluator = Object.create(this);\n      newEvaluator.options = newOptions;\n      return newEvaluator;\n    },\n\n    hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n      if (!(0, _primitives.isDict)(resources)) {\n        return false;\n      }\n      var processed = Object.create(null);\n      if (resources.objId) {\n        processed[resources.objId] = true;\n      }\n      var nodes = [resources],\n          xref = this.xref;\n      while (nodes.length) {\n        var key, i, ii;\n        var node = nodes.shift();\n        var graphicStates = node.get('ExtGState');\n        if ((0, _primitives.isDict)(graphicStates)) {\n          var graphicStatesKeys = graphicStates.getKeys();\n          for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n            key = graphicStatesKeys[i];\n            var graphicState = graphicStates.get(key);\n            var bm = graphicState.get('BM');\n            if ((0, _primitives.isName)(bm) && bm.name !== 'Normal') {\n              return true;\n            }\n          }\n        }\n        var xObjects = node.get('XObject');\n        if (!(0, _primitives.isDict)(xObjects)) {\n          continue;\n        }\n        var xObjectsKeys = xObjects.getKeys();\n        for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n          key = xObjectsKeys[i];\n          var xObject = xObjects.getRaw(key);\n          if ((0, _primitives.isRef)(xObject)) {\n            if (processed[xObject.toString()]) {\n              continue;\n            }\n            xObject = xref.fetch(xObject);\n          }\n          if (!(0, _primitives.isStream)(xObject)) {\n            continue;\n          }\n          if (xObject.dict.objId) {\n            if (processed[xObject.dict.objId]) {\n              continue;\n            }\n            processed[xObject.dict.objId] = true;\n          }\n          var xResources = xObject.dict.get('Resources');\n          if ((0, _primitives.isDict)(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n            nodes.push(xResources);\n            if (xResources.objId) {\n              processed[xResources.objId] = true;\n            }\n          }\n        }\n      }\n      return false;\n    },\n    buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n      var dict = xobj.dict;\n      var matrix = dict.getArray('Matrix');\n      var bbox = dict.getArray('BBox');\n      var group = dict.get('Group');\n      if (group) {\n        var groupOptions = {\n          matrix: matrix,\n          bbox: bbox,\n          smask: smask,\n          isolated: false,\n          knockout: false\n        };\n        var groupSubtype = group.get('S');\n        var colorSpace = null;\n        if ((0, _primitives.isName)(groupSubtype, 'Transparency')) {\n          groupOptions.isolated = group.get('I') || false;\n          groupOptions.knockout = group.get('K') || false;\n          if (group.has('CS')) {\n            colorSpace = _colorspace.ColorSpace.parse(group.get('CS'), this.xref, resources, this.pdfFunctionFactory);\n          }\n        }\n        if (smask && smask.backdrop) {\n          colorSpace = colorSpace || _colorspace.ColorSpace.singletons.rgb;\n          smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n        }\n        operatorList.addOp(_util.OPS.beginGroup, [groupOptions]);\n      }\n      operatorList.addOp(_util.OPS.paintFormXObjectBegin, [matrix, bbox]);\n      return this.getOperatorList({\n        stream: xobj,\n        task: task,\n        resources: dict.get('Resources') || resources,\n        operatorList: operatorList,\n        initialState: initialState\n      }).then(function () {\n        operatorList.addOp(_util.OPS.paintFormXObjectEnd, []);\n        if (group) {\n          operatorList.addOp(_util.OPS.endGroup, [groupOptions]);\n        }\n      });\n    },\n    buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n      var _this2 = this;\n\n      var dict = image.dict;\n      var w = dict.get('Width', 'W');\n      var h = dict.get('Height', 'H');\n      if (!(w && (0, _util.isNum)(w)) || !(h && (0, _util.isNum)(h))) {\n        (0, _util.warn)('Image dimensions are missing, or not numbers.');\n        return;\n      }\n      var maxImageSize = this.options.maxImageSize;\n      if (maxImageSize !== -1 && w * h > maxImageSize) {\n        (0, _util.warn)('Image exceeded maximum allowed size and was removed.');\n        return;\n      }\n      var imageMask = dict.get('ImageMask', 'IM') || false;\n      var imgData, args;\n      if (imageMask) {\n        var width = dict.get('Width', 'W');\n        var height = dict.get('Height', 'H');\n        var bitStrideLength = width + 7 >> 3;\n        var imgArray = image.getBytes(bitStrideLength * height);\n        var decode = dict.getArray('Decode', 'D');\n        imgData = _image.PDFImage.createMask({\n          imgArray: imgArray,\n          width: width,\n          height: height,\n          imageIsFromDecodeStream: image instanceof _stream.DecodeStream,\n          inverseDecode: !!decode && decode[0] > 0\n        });\n        imgData.cached = true;\n        args = [imgData];\n        operatorList.addOp(_util.OPS.paintImageMaskXObject, args);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintImageMaskXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var softMask = dict.get('SMask', 'SM') || false;\n      var mask = dict.get('Mask') || false;\n      var SMALL_IMAGE_DIMENSIONS = 200;\n      if (inline && !softMask && !mask && !(image instanceof _jpeg_stream.JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n        var imageObj = new _image.PDFImage({\n          xref: this.xref,\n          res: resources,\n          image: image,\n          isInline: inline,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n        imgData = imageObj.createImageData(true);\n        operatorList.addOp(_util.OPS.paintInlineImageXObject, [imgData]);\n        return;\n      }\n      var nativeImageDecoderSupport = this.options.nativeImageDecoderSupport;\n      var objId = 'img_' + this.idFactory.createObjId();\n      operatorList.addDependency(objId);\n      args = [objId, w, h];\n      if (nativeImageDecoderSupport !== _util.NativeImageDecoding.NONE && !softMask && !mask && image instanceof _jpeg_stream.JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources, this.pdfFunctionFactory)) {\n        operatorList.addOp(_util.OPS.paintJpegXObject, args);\n        this.handler.send('obj', [objId, this.pageIndex, 'JpegStream', image.getIR(this.options.forceDataSchema)]);\n        if (cacheKey) {\n          imageCache[cacheKey] = {\n            fn: _util.OPS.paintJpegXObject,\n            args: args\n          };\n        }\n        return;\n      }\n      var nativeImageDecoder = null;\n      if (nativeImageDecoderSupport === _util.NativeImageDecoding.DECODE && (image instanceof _jpeg_stream.JpegStream || mask instanceof _jpeg_stream.JpegStream || softMask instanceof _jpeg_stream.JpegStream)) {\n        nativeImageDecoder = new NativeImageDecoder({\n          xref: this.xref,\n          resources: resources,\n          handler: this.handler,\n          forceDataSchema: this.options.forceDataSchema,\n          pdfFunctionFactory: this.pdfFunctionFactory\n        });\n      }\n      _image.PDFImage.buildImage({\n        handler: this.handler,\n        xref: this.xref,\n        res: resources,\n        image: image,\n        isInline: inline,\n        nativeDecoder: nativeImageDecoder,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      }).then(function (imageObj) {\n        var imgData = imageObj.createImageData(false);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', imgData], [imgData.data.buffer]);\n      }).catch(function (reason) {\n        (0, _util.warn)('Unable to decode image: ' + reason);\n        _this2.handler.send('obj', [objId, _this2.pageIndex, 'Image', null]);\n      });\n      operatorList.addOp(_util.OPS.paintImageXObject, args);\n      if (cacheKey) {\n        imageCache[cacheKey] = {\n          fn: _util.OPS.paintImageXObject,\n          args: args\n        };\n      }\n    },\n    handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n      var smaskContent = smask.get('G');\n      var smaskOptions = {\n        subtype: smask.get('S').name,\n        backdrop: smask.get('BC')\n      };\n      var transferObj = smask.get('TR');\n      if ((0, _function.isPDFFunction)(transferObj)) {\n        var transferFn = this.pdfFunctionFactory.create(transferObj);\n        var transferMap = new Uint8Array(256);\n        var tmp = new Float32Array(1);\n        for (var i = 0; i < 256; i++) {\n          tmp[0] = i / 255;\n          transferFn(tmp, 0, tmp, 0);\n          transferMap[i] = tmp[0] * 255 | 0;\n        }\n        smaskOptions.transferMap = transferMap;\n      }\n      return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n    },\n    handleTilingType: function handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n      var _this3 = this;\n\n      var tilingOpList = new _operator_list.OperatorList();\n      var resourcesArray = [patternDict.get('Resources'), resources];\n      var patternResources = _primitives.Dict.merge(this.xref, resourcesArray);\n      return this.getOperatorList({\n        stream: pattern,\n        task: task,\n        resources: patternResources,\n        operatorList: tilingOpList\n      }).then(function () {\n        return (0, _pattern.getTilingPatternIR)({\n          fnArray: tilingOpList.fnArray,\n          argsArray: tilingOpList.argsArray\n        }, patternDict, args);\n      }).then(function (tilingPatternIR) {\n        operatorList.addDependencies(tilingOpList.dependencies);\n        operatorList.addOp(fn, tilingPatternIR);\n      }, function (reason) {\n        if (_this3.options.ignoreErrors) {\n          _this3.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('handleTilingType - ignoring pattern: \"' + reason + '\".');\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n      var _this4 = this;\n\n      var fontName;\n      if (fontArgs) {\n        fontArgs = fontArgs.slice();\n        fontName = fontArgs[0].name;\n      }\n      return this.loadFont(fontName, fontRef, resources).then(function (translated) {\n        if (!translated.font.isType3Font) {\n          return translated;\n        }\n        return translated.loadType3Data(_this4, resources, operatorList, task).then(function () {\n          return translated;\n        }).catch(function (reason) {\n          _this4.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n          return new TranslatedFont('g_font_error', new _fonts.ErrorFont('Type3 font load error: ' + reason), translated.font);\n        });\n      }).then(function (translated) {\n        state.font = translated.font;\n        translated.send(_this4.handler);\n        return translated.loadedName;\n      });\n    },\n    handleText: function PartialEvaluator_handleText(chars, state) {\n      var _this5 = this;\n\n      var font = state.font;\n      var glyphs = font.charsToGlyphs(chars);\n      var isAddToPathSet = !!(state.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n      if (font.data && (isAddToPathSet || this.options.disableFontFace || state.fillColorSpace.name === 'Pattern')) {\n        var buildPath = function buildPath(fontChar) {\n          if (!font.renderer.hasBuiltPath(fontChar)) {\n            var path = font.renderer.getPathJs(fontChar);\n            _this5.handler.send('commonobj', [font.loadedName + '_path_' + fontChar, 'FontPath', path]);\n          }\n        };\n        for (var i = 0, ii = glyphs.length; i < ii; i++) {\n          var glyph = glyphs[i];\n          buildPath(glyph.fontChar);\n          var accent = glyph.accent;\n          if (accent && accent.fontChar) {\n            buildPath(accent.fontChar);\n          }\n        }\n      }\n      return glyphs;\n    },\n    setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, stateManager) {\n      var _this6 = this;\n\n      var gStateObj = [];\n      var gStateKeys = gState.getKeys();\n      var promise = Promise.resolve();\n\n      var _loop = function _loop() {\n        var key = gStateKeys[i];\n        var value = gState.get(key);\n        switch (key) {\n          case 'Type':\n            break;\n          case 'LW':\n          case 'LC':\n          case 'LJ':\n          case 'ML':\n          case 'D':\n          case 'RI':\n          case 'FL':\n          case 'CA':\n          case 'ca':\n            gStateObj.push([key, value]);\n            break;\n          case 'Font':\n            promise = promise.then(function () {\n              return _this6.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                gStateObj.push([key, [loadedName, value[1]]]);\n              });\n            });\n            break;\n          case 'BM':\n            gStateObj.push([key, normalizeBlendMode(value)]);\n            break;\n          case 'SMask':\n            if ((0, _primitives.isName)(value, 'None')) {\n              gStateObj.push([key, false]);\n              break;\n            }\n            if ((0, _primitives.isDict)(value)) {\n              promise = promise.then(function () {\n                return _this6.handleSMask(value, resources, operatorList, task, stateManager);\n              });\n              gStateObj.push([key, true]);\n            } else {\n              (0, _util.warn)('Unsupported SMask type');\n            }\n            break;\n          case 'OP':\n          case 'op':\n          case 'OPM':\n          case 'BG':\n          case 'BG2':\n          case 'UCR':\n          case 'UCR2':\n          case 'TR':\n          case 'TR2':\n          case 'HT':\n          case 'SM':\n          case 'SA':\n          case 'AIS':\n          case 'TK':\n            (0, _util.info)('graphic state operator ' + key);\n            break;\n          default:\n            (0, _util.info)('Unknown graphic state operator ' + key);\n            break;\n        }\n      };\n\n      for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n        _loop();\n      }\n      return promise.then(function () {\n        if (gStateObj.length > 0) {\n          operatorList.addOp(_util.OPS.setGState, [gStateObj]);\n        }\n      });\n    },\n    loadFont: function PartialEvaluator_loadFont(fontName, font, resources) {\n      var _this7 = this;\n\n      function errorFont() {\n        return Promise.resolve(new TranslatedFont('g_font_error', new _fonts.ErrorFont('Font ' + fontName + ' is not available'), font));\n      }\n      var fontRef,\n          xref = this.xref;\n      if (font) {\n        if (!(0, _primitives.isRef)(font)) {\n          throw new Error('The \"font\" object should be a reference.');\n        }\n        fontRef = font;\n      } else {\n        var fontRes = resources.get('Font');\n        if (fontRes) {\n          fontRef = fontRes.getRaw(fontName);\n        } else {\n          (0, _util.warn)('fontRes not available');\n          return errorFont();\n        }\n      }\n      if (!fontRef) {\n        (0, _util.warn)('fontRef not available');\n        return errorFont();\n      }\n      if (this.fontCache.has(fontRef)) {\n        return this.fontCache.get(fontRef);\n      }\n      font = xref.fetchIfRef(fontRef);\n      if (!(0, _primitives.isDict)(font)) {\n        return errorFont();\n      }\n      if (font.translated) {\n        return font.translated;\n      }\n      var fontCapability = (0, _util.createPromiseCapability)();\n      var preEvaluatedFont = this.preEvaluateFont(font);\n      var descriptor = preEvaluatedFont.descriptor;\n      var fontRefIsRef = (0, _primitives.isRef)(fontRef),\n          fontID;\n      if (fontRefIsRef) {\n        fontID = fontRef.toString();\n      }\n      if ((0, _primitives.isDict)(descriptor)) {\n        if (!descriptor.fontAliases) {\n          descriptor.fontAliases = Object.create(null);\n        }\n        var fontAliases = descriptor.fontAliases;\n        var hash = preEvaluatedFont.hash;\n        if (fontAliases[hash]) {\n          var aliasFontRef = fontAliases[hash].aliasRef;\n          if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n            this.fontCache.putAlias(fontRef, aliasFontRef);\n            return this.fontCache.get(fontRef);\n          }\n        } else {\n          fontAliases[hash] = { fontID: _fonts.Font.getFontID() };\n        }\n        if (fontRefIsRef) {\n          fontAliases[hash].aliasRef = fontRef;\n        }\n        fontID = fontAliases[hash].fontID;\n      }\n      if (fontRefIsRef) {\n        this.fontCache.put(fontRef, fontCapability.promise);\n      } else {\n        if (!fontID) {\n          fontID = this.idFactory.createObjId();\n        }\n        this.fontCache.put('id_' + fontID, fontCapability.promise);\n      }\n      (0, _util.assert)(fontID, 'The \"fontID\" must be defined.');\n      font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n      font.translated = fontCapability.promise;\n      var translatedPromise;\n      try {\n        translatedPromise = this.translateFont(preEvaluatedFont);\n      } catch (e) {\n        translatedPromise = Promise.reject(e);\n      }\n      translatedPromise.then(function (translatedFont) {\n        if (translatedFont.fontType !== undefined) {\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[translatedFont.fontType] = true;\n        }\n        fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n      }).catch(function (reason) {\n        _this7.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.font });\n        try {\n          var descriptor = preEvaluatedFont.descriptor;\n          var fontFile3 = descriptor && descriptor.get('FontFile3');\n          var subtype = fontFile3 && fontFile3.get('Subtype');\n          var fontType = (0, _fonts.getFontType)(preEvaluatedFont.type, subtype && subtype.name);\n          var xrefFontStats = xref.stats.fontTypes;\n          xrefFontStats[fontType] = true;\n        } catch (ex) {}\n        fontCapability.resolve(new TranslatedFont(font.loadedName, new _fonts.ErrorFont(reason instanceof Error ? reason.message : reason), font));\n      });\n      return fontCapability.promise;\n    },\n    buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n      var lastIndex = operatorList.length - 1;\n      if (!args) {\n        args = [];\n      }\n      if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== _util.OPS.constructPath) {\n        operatorList.addOp(_util.OPS.constructPath, [[fn], args]);\n      } else {\n        var opArgs = operatorList.argsArray[lastIndex];\n        opArgs[0].push(fn);\n        Array.prototype.push.apply(opArgs[1], args);\n      }\n    },\n    handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task) {\n      var patternName = args[args.length - 1];\n      var pattern;\n      if ((0, _primitives.isName)(patternName) && (pattern = patterns.get(patternName.name))) {\n        var dict = (0, _primitives.isStream)(pattern) ? pattern.dict : pattern;\n        var typeNum = dict.get('PatternType');\n        if (typeNum === TILING_PATTERN) {\n          var color = cs.base ? cs.base.getRgb(args, 0) : null;\n          return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n        } else if (typeNum === SHADING_PATTERN) {\n          var shading = dict.get('Shading');\n          var matrix = dict.getArray('Matrix');\n          pattern = _pattern.Pattern.parseShading(shading, matrix, this.xref, resources, this.handler, this.pdfFunctionFactory);\n          operatorList.addOp(fn, pattern.getIR());\n          return Promise.resolve();\n        }\n        return Promise.reject(new Error('Unknown PatternType: ' + typeNum));\n      }\n      operatorList.addOp(fn, args);\n      return Promise.resolve();\n    },\n    getOperatorList: function getOperatorList(_ref3) {\n      var _this8 = this;\n\n      var stream = _ref3.stream,\n          task = _ref3.task,\n          resources = _ref3.resources,\n          operatorList = _ref3.operatorList,\n          _ref3$initialState = _ref3.initialState,\n          initialState = _ref3$initialState === undefined ? null : _ref3$initialState;\n\n      resources = resources || _primitives.Dict.empty;\n      initialState = initialState || new EvalState();\n      if (!operatorList) {\n        throw new Error('getOperatorList: missing \"operatorList\" parameter');\n      }\n      var self = this;\n      var xref = this.xref;\n      var imageCache = Object.create(null);\n      var xobjs = resources.get('XObject') || _primitives.Dict.empty;\n      var patterns = resources.get('Pattern') || _primitives.Dict.empty;\n      var stateManager = new StateManager(initialState);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var timeSlotManager = new TimeSlotManager();\n      function closePendingRestoreOPS(argument) {\n        for (var i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n          operatorList.addOp(_util.OPS.restore, []);\n        }\n      }\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          promise.then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            i,\n            ii,\n            cs;\n        while (!(stop = timeSlotManager.check())) {\n          operation.args = null;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          var args = operation.args;\n          var fn = operation.fn;\n          switch (fn | 0) {\n            case _util.OPS.paintXObject:\n              var name = args[0].name;\n              if (name && imageCache[name] !== undefined) {\n                operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n                args = null;\n                continue;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  operatorList.addOp(fn, args);\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name === 'Form') {\n                  stateManager.save();\n                  self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n                    stateManager.restore();\n                    resolveXObject();\n                  }, rejectXObject);\n                  return;\n                } else if (type.name === 'Image') {\n                  self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n                } else if (type.name === 'PS') {\n                  (0, _util.info)('Ignored XObject subtype PS');\n                } else {\n                  throw new _util.FormatError('Unhandled XObject subtype ' + type.name);\n                }\n                resolveXObject();\n              }).catch(function (reason) {\n                if (self.options.ignoreErrors) {\n                  self.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n                  (0, _util.warn)('getOperatorList - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setFont:\n              var fontSize = args[1];\n              next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n                operatorList.addDependency(loadedName);\n                operatorList.addOp(_util.OPS.setFont, [loadedName, fontSize]);\n              }));\n              return;\n            case _util.OPS.endInlineImage:\n              var cacheKey = args[0].cacheKey;\n              if (cacheKey) {\n                var cacheEntry = imageCache[cacheKey];\n                if (cacheEntry !== undefined) {\n                  operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n                  args = null;\n                  continue;\n                }\n              }\n              self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n              args = null;\n              continue;\n            case _util.OPS.showText:\n              args[0] = self.handleText(args[0], stateManager.state);\n              break;\n            case _util.OPS.showSpacedText:\n              var arr = args[0];\n              var combinedGlyphs = [];\n              var arrLength = arr.length;\n              var state = stateManager.state;\n              for (i = 0; i < arrLength; ++i) {\n                var arrItem = arr[i];\n                if ((0, _util.isString)(arrItem)) {\n                  Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n                } else if ((0, _util.isNum)(arrItem)) {\n                  combinedGlyphs.push(arrItem);\n                }\n              }\n              args[0] = combinedGlyphs;\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              operatorList.addOp(_util.OPS.nextLine);\n              operatorList.addOp(_util.OPS.setWordSpacing, [args.shift()]);\n              operatorList.addOp(_util.OPS.setCharSpacing, [args.shift()]);\n              args[0] = self.handleText(args[0], stateManager.state);\n              fn = _util.OPS.showText;\n              break;\n            case _util.OPS.setTextRenderingMode:\n              stateManager.state.textRenderingMode = args[0];\n              break;\n            case _util.OPS.setFillColorSpace:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setStrokeColorSpace:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.parse(args[0], xref, resources, self.pdfFunctionFactory);\n              continue;\n            case _util.OPS.setFillColor:\n              cs = stateManager.state.fillColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColor:\n              cs = stateManager.state.strokeColorSpace;\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillGray:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeGray:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n              args = _colorspace.ColorSpace.singletons.gray.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillCMYKColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeCMYKColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.cmyk;\n              args = _colorspace.ColorSpace.singletons.cmyk.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.setFillRGBColor:\n              stateManager.state.fillColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setStrokeRGBColor:\n              stateManager.state.strokeColorSpace = _colorspace.ColorSpace.singletons.rgb;\n              args = _colorspace.ColorSpace.singletons.rgb.getRgb(args, 0);\n              break;\n            case _util.OPS.setFillColorN:\n              cs = stateManager.state.fillColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setFillColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setFillRGBColor;\n              break;\n            case _util.OPS.setStrokeColorN:\n              cs = stateManager.state.strokeColorSpace;\n              if (cs.name === 'Pattern') {\n                next(self.handleColorN(operatorList, _util.OPS.setStrokeColorN, args, cs, patterns, resources, task));\n                return;\n              }\n              args = cs.getRgb(args, 0);\n              fn = _util.OPS.setStrokeRGBColor;\n              break;\n            case _util.OPS.shadingFill:\n              var shadingRes = resources.get('Shading');\n              if (!shadingRes) {\n                throw new _util.FormatError('No shading resource found');\n              }\n              var shading = shadingRes.get(args[0].name);\n              if (!shading) {\n                throw new _util.FormatError('No shading object found');\n              }\n              var shadingFill = _pattern.Pattern.parseShading(shading, null, xref, resources, self.handler, self.pdfFunctionFactory);\n              var patternIR = shadingFill.getIR();\n              args = [patternIR];\n              fn = _util.OPS.shadingFill;\n              break;\n            case _util.OPS.setGState:\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !extGState.has(dictName.name)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              next(self.setGState(resources, gState, operatorList, task, stateManager));\n              return;\n            case _util.OPS.moveTo:\n            case _util.OPS.lineTo:\n            case _util.OPS.curveTo:\n            case _util.OPS.curveTo2:\n            case _util.OPS.curveTo3:\n            case _util.OPS.closePath:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.rectangle:\n              self.buildPath(operatorList, fn, args);\n              continue;\n            case _util.OPS.markPoint:\n            case _util.OPS.markPointProps:\n            case _util.OPS.beginMarkedContent:\n            case _util.OPS.beginMarkedContentProps:\n            case _util.OPS.endMarkedContent:\n            case _util.OPS.beginCompat:\n            case _util.OPS.endCompat:\n              continue;\n            default:\n              if (args !== null) {\n                for (i = 0, ii = args.length; i < ii; i++) {\n                  if (args[i] instanceof _primitives.Dict) {\n                    break;\n                  }\n                }\n                if (i < ii) {\n                  (0, _util.warn)('getOperatorList - ignoring operator: ' + fn);\n                  continue;\n                }\n              }\n          }\n          operatorList.addOp(fn, args);\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        closePendingRestoreOPS();\n        resolve();\n      }).catch(function (reason) {\n        if (_this8.options.ignoreErrors) {\n          _this8.handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          (0, _util.warn)('getOperatorList - ignoring errors during task: ' + task.name);\n          closePendingRestoreOPS();\n          return;\n        }\n        throw reason;\n      });\n    },\n    getTextContent: function getTextContent(_ref4) {\n      var _this9 = this;\n\n      var stream = _ref4.stream,\n          task = _ref4.task,\n          resources = _ref4.resources,\n          _ref4$stateManager = _ref4.stateManager,\n          stateManager = _ref4$stateManager === undefined ? null : _ref4$stateManager,\n          _ref4$normalizeWhites = _ref4.normalizeWhitespace,\n          normalizeWhitespace = _ref4$normalizeWhites === undefined ? false : _ref4$normalizeWhites,\n          _ref4$combineTextItem = _ref4.combineTextItems,\n          combineTextItems = _ref4$combineTextItem === undefined ? false : _ref4$combineTextItem,\n          sink = _ref4.sink,\n          _ref4$seenStyles = _ref4.seenStyles,\n          seenStyles = _ref4$seenStyles === undefined ? Object.create(null) : _ref4$seenStyles;\n\n      resources = resources || _primitives.Dict.empty;\n      stateManager = stateManager || new StateManager(new TextState());\n      var WhitespaceRegexp = /\\s/g;\n      var textContent = {\n        items: [],\n        styles: Object.create(null)\n      };\n      var textContentItem = {\n        initialized: false,\n        str: [],\n        width: 0,\n        height: 0,\n        vertical: false,\n        lastAdvanceWidth: 0,\n        lastAdvanceHeight: 0,\n        textAdvanceScale: 0,\n        spaceWidth: 0,\n        fakeSpaceMin: Infinity,\n        fakeMultiSpaceMin: Infinity,\n        fakeMultiSpaceMax: -0,\n        textRunBreakAllowed: false,\n        transform: null,\n        fontName: null\n      };\n      var SPACE_FACTOR = 0.3;\n      var MULTI_SPACE_FACTOR = 1.5;\n      var MULTI_SPACE_FACTOR_MAX = 4;\n      var self = this;\n      var xref = this.xref;\n      var xobjs = null;\n      var skipEmptyXObjs = Object.create(null);\n      var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n      var textState;\n      function ensureTextContentItem() {\n        if (textContentItem.initialized) {\n          return textContentItem;\n        }\n        var font = textState.font;\n        if (!(font.loadedName in seenStyles)) {\n          seenStyles[font.loadedName] = true;\n          textContent.styles[font.loadedName] = {\n            fontFamily: font.fallbackName,\n            ascent: font.ascent,\n            descent: font.descent,\n            vertical: font.vertical\n          };\n        }\n        textContentItem.fontName = font.loadedName;\n        var tsm = [textState.fontSize * textState.textHScale, 0, 0, textState.fontSize, 0, textState.textRise];\n        if (font.isType3Font && textState.fontMatrix !== _util.FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n          var glyphHeight = font.bbox[3] - font.bbox[1];\n          if (glyphHeight > 0) {\n            glyphHeight = glyphHeight * textState.fontMatrix[3];\n            tsm[3] *= glyphHeight;\n          }\n        }\n        var trm = _util.Util.transform(textState.ctm, _util.Util.transform(textState.textMatrix, tsm));\n        textContentItem.transform = trm;\n        if (!font.vertical) {\n          textContentItem.width = 0;\n          textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n          textContentItem.vertical = false;\n        } else {\n          textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n          textContentItem.height = 0;\n          textContentItem.vertical = true;\n        }\n        var a = textState.textLineMatrix[0];\n        var b = textState.textLineMatrix[1];\n        var scaleLineX = Math.sqrt(a * a + b * b);\n        a = textState.ctm[0];\n        b = textState.ctm[1];\n        var scaleCtmX = Math.sqrt(a * a + b * b);\n        textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n        textContentItem.lastAdvanceWidth = 0;\n        textContentItem.lastAdvanceHeight = 0;\n        var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n        if (spaceWidth) {\n          textContentItem.spaceWidth = spaceWidth;\n          textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n          textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n          textContentItem.textRunBreakAllowed = !font.isMonospace;\n        } else {\n          textContentItem.spaceWidth = 0;\n          textContentItem.fakeSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMin = Infinity;\n          textContentItem.fakeMultiSpaceMax = 0;\n          textContentItem.textRunBreakAllowed = false;\n        }\n        textContentItem.initialized = true;\n        return textContentItem;\n      }\n      function replaceWhitespace(str) {\n        var i = 0,\n            ii = str.length,\n            code;\n        while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n          i++;\n        }\n        return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n      }\n      function runBidiTransform(textChunk) {\n        var str = textChunk.str.join('');\n        var bidiResult = (0, _bidi.bidi)(str, -1, textChunk.vertical);\n        return {\n          str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n          dir: bidiResult.dir,\n          width: textChunk.width,\n          height: textChunk.height,\n          transform: textChunk.transform,\n          fontName: textChunk.fontName\n        };\n      }\n      function handleSetFont(fontName, fontRef) {\n        return self.loadFont(fontName, fontRef, resources).then(function (translated) {\n          textState.font = translated.font;\n          textState.fontMatrix = translated.font.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n        });\n      }\n      function buildTextContentItem(chars) {\n        var font = textState.font;\n        var textChunk = ensureTextContentItem();\n        var width = 0;\n        var height = 0;\n        var glyphs = font.charsToGlyphs(chars);\n        for (var i = 0; i < glyphs.length; i++) {\n          var glyph = glyphs[i];\n          var glyphWidth = null;\n          if (font.vertical && glyph.vmetric) {\n            glyphWidth = glyph.vmetric[0];\n          } else {\n            glyphWidth = glyph.width;\n          }\n          var glyphUnicode = glyph.unicode;\n          var NormalizedUnicodes = (0, _unicode.getNormalizedUnicodes)();\n          if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n            glyphUnicode = NormalizedUnicodes[glyphUnicode];\n          }\n          glyphUnicode = (0, _unicode.reverseIfRtl)(glyphUnicode);\n          var charSpacing = textState.charSpacing;\n          if (glyph.isSpace) {\n            var wordSpacing = textState.wordSpacing;\n            charSpacing += wordSpacing;\n            if (wordSpacing > 0) {\n              addFakeSpaces(wordSpacing, textChunk.str);\n            }\n          }\n          var tx = 0;\n          var ty = 0;\n          if (!font.vertical) {\n            var w0 = glyphWidth * textState.fontMatrix[0];\n            tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n            width += tx;\n          } else {\n            var w1 = glyphWidth * textState.fontMatrix[0];\n            ty = w1 * textState.fontSize + charSpacing;\n            height += ty;\n          }\n          textState.translateTextMatrix(tx, ty);\n          textChunk.str.push(glyphUnicode);\n        }\n        if (!font.vertical) {\n          textChunk.lastAdvanceWidth = width;\n          textChunk.width += width;\n        } else {\n          textChunk.lastAdvanceHeight = height;\n          textChunk.height += Math.abs(height);\n        }\n        return textChunk;\n      }\n      function addFakeSpaces(width, strBuf) {\n        if (width < textContentItem.fakeSpaceMin) {\n          return;\n        }\n        if (width < textContentItem.fakeMultiSpaceMin) {\n          strBuf.push(' ');\n          return;\n        }\n        var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n        while (fakeSpaces-- > 0) {\n          strBuf.push(' ');\n        }\n      }\n      function flushTextContentItem() {\n        if (!textContentItem.initialized) {\n          return;\n        }\n        textContentItem.width *= textContentItem.textAdvanceScale;\n        textContentItem.height *= textContentItem.textAdvanceScale;\n        textContent.items.push(runBidiTransform(textContentItem));\n        textContentItem.initialized = false;\n        textContentItem.str.length = 0;\n      }\n      function enqueueChunk() {\n        var length = textContent.items.length;\n        if (length > 0) {\n          sink.enqueue(textContent, length);\n          textContent.items = [];\n          textContent.styles = Object.create(null);\n        }\n      }\n      var timeSlotManager = new TimeSlotManager();\n      return new Promise(function promiseBody(resolve, reject) {\n        var next = function next(promise) {\n          enqueueChunk();\n          Promise.all([promise, sink.ready]).then(function () {\n            try {\n              promiseBody(resolve, reject);\n            } catch (ex) {\n              reject(ex);\n            }\n          }, reject);\n        };\n        task.ensureNotTerminated();\n        timeSlotManager.reset();\n        var stop,\n            operation = {},\n            args = [];\n        while (!(stop = timeSlotManager.check())) {\n          args.length = 0;\n          operation.args = args;\n          if (!preprocessor.read(operation)) {\n            break;\n          }\n          textState = stateManager.state;\n          var fn = operation.fn;\n          args = operation.args;\n          var advance, diff;\n          switch (fn | 0) {\n            case _util.OPS.setFont:\n              var fontNameArg = args[0].name,\n                  fontSizeArg = args[1];\n              if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n                break;\n              }\n              flushTextContentItem();\n              textState.fontName = fontNameArg;\n              textState.fontSize = fontSizeArg;\n              next(handleSetFont(fontNameArg, null));\n              return;\n            case _util.OPS.setTextRise:\n              flushTextContentItem();\n              textState.textRise = args[0];\n              break;\n            case _util.OPS.setHScale:\n              flushTextContentItem();\n              textState.textHScale = args[0] / 100;\n              break;\n            case _util.OPS.setLeading:\n              flushTextContentItem();\n              textState.leading = args[0];\n              break;\n            case _util.OPS.moveText:\n              var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n              advance = args[0] - args[1];\n              if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(args[0], args[1]);\n                textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n                textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n                diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.setLeadingMoveText:\n              flushTextContentItem();\n              textState.leading = -args[1];\n              textState.translateTextLineMatrix(args[0], args[1]);\n              textState.textMatrix = textState.textLineMatrix.slice();\n              break;\n            case _util.OPS.nextLine:\n              flushTextContentItem();\n              textState.carriageReturn();\n              break;\n            case _util.OPS.setTextMatrix:\n              advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n              if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n                textState.translateTextLineMatrix(advance.width, advance.height);\n                textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n                textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n                diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n                addFakeSpaces(diff, textContentItem.str);\n                break;\n              }\n              flushTextContentItem();\n              textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n              break;\n            case _util.OPS.setCharSpacing:\n              textState.charSpacing = args[0];\n              break;\n            case _util.OPS.setWordSpacing:\n              textState.wordSpacing = args[0];\n              break;\n            case _util.OPS.beginText:\n              flushTextContentItem();\n              textState.textMatrix = _util.IDENTITY_MATRIX.slice();\n              textState.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n              break;\n            case _util.OPS.showSpacedText:\n              var items = args[0];\n              var offset;\n              for (var j = 0, jj = items.length; j < jj; j++) {\n                if (typeof items[j] === 'string') {\n                  buildTextContentItem(items[j]);\n                } else if ((0, _util.isNum)(items[j])) {\n                  ensureTextContentItem();\n                  advance = items[j] * textState.fontSize / 1000;\n                  var breakTextRun = false;\n                  if (textState.font.vertical) {\n                    offset = advance;\n                    textState.translateTextMatrix(0, offset);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.height += offset;\n                    }\n                  } else {\n                    advance = -advance;\n                    offset = advance * textState.textHScale;\n                    textState.translateTextMatrix(offset, 0);\n                    breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n                    if (!breakTextRun) {\n                      textContentItem.width += offset;\n                    }\n                  }\n                  if (breakTextRun) {\n                    flushTextContentItem();\n                  } else if (advance > 0) {\n                    addFakeSpaces(advance, textContentItem.str);\n                  }\n                }\n              }\n              break;\n            case _util.OPS.showText:\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineShowText:\n              flushTextContentItem();\n              textState.carriageReturn();\n              buildTextContentItem(args[0]);\n              break;\n            case _util.OPS.nextLineSetSpacingShowText:\n              flushTextContentItem();\n              textState.wordSpacing = args[0];\n              textState.charSpacing = args[1];\n              textState.carriageReturn();\n              buildTextContentItem(args[2]);\n              break;\n            case _util.OPS.paintXObject:\n              flushTextContentItem();\n              if (!xobjs) {\n                xobjs = resources.get('XObject') || _primitives.Dict.empty;\n              }\n              var name = args[0].name;\n              if (name && skipEmptyXObjs[name] !== undefined) {\n                break;\n              }\n              next(new Promise(function (resolveXObject, rejectXObject) {\n                if (!name) {\n                  throw new _util.FormatError('XObject must be referred to by name.');\n                }\n                var xobj = xobjs.get(name);\n                if (!xobj) {\n                  resolveXObject();\n                  return;\n                }\n                if (!(0, _primitives.isStream)(xobj)) {\n                  throw new _util.FormatError('XObject should be a stream');\n                }\n                var type = xobj.dict.get('Subtype');\n                if (!(0, _primitives.isName)(type)) {\n                  throw new _util.FormatError('XObject should have a Name subtype');\n                }\n                if (type.name !== 'Form') {\n                  skipEmptyXObjs[name] = true;\n                  resolveXObject();\n                  return;\n                }\n                var currentState = stateManager.state.clone();\n                var xObjStateManager = new StateManager(currentState);\n                var matrix = xobj.dict.getArray('Matrix');\n                if (Array.isArray(matrix) && matrix.length === 6) {\n                  xObjStateManager.transform(matrix);\n                }\n                enqueueChunk();\n                var sinkWrapper = {\n                  enqueueInvoked: false,\n                  enqueue: function enqueue(chunk, size) {\n                    this.enqueueInvoked = true;\n                    sink.enqueue(chunk, size);\n                  },\n\n                  get desiredSize() {\n                    return sink.desiredSize;\n                  },\n                  get ready() {\n                    return sink.ready;\n                  }\n                };\n                self.getTextContent({\n                  stream: xobj,\n                  task: task,\n                  resources: xobj.dict.get('Resources') || resources,\n                  stateManager: xObjStateManager,\n                  normalizeWhitespace: normalizeWhitespace,\n                  combineTextItems: combineTextItems,\n                  sink: sinkWrapper,\n                  seenStyles: seenStyles\n                }).then(function () {\n                  if (!sinkWrapper.enqueueInvoked) {\n                    skipEmptyXObjs[name] = true;\n                  }\n                  resolveXObject();\n                }, rejectXObject);\n              }).catch(function (reason) {\n                if (reason instanceof _util.AbortException) {\n                  return;\n                }\n                if (self.options.ignoreErrors) {\n                  (0, _util.warn)('getTextContent - ignoring XObject: \"' + reason + '\".');\n                  return;\n                }\n                throw reason;\n              }));\n              return;\n            case _util.OPS.setGState:\n              flushTextContentItem();\n              var dictName = args[0];\n              var extGState = resources.get('ExtGState');\n              if (!(0, _primitives.isDict)(extGState) || !(0, _primitives.isName)(dictName)) {\n                break;\n              }\n              var gState = extGState.get(dictName.name);\n              if (!(0, _primitives.isDict)(gState)) {\n                break;\n              }\n              var gStateFont = gState.get('Font');\n              if (gStateFont) {\n                textState.fontName = null;\n                textState.fontSize = gStateFont[1];\n                next(handleSetFont(null, gStateFont[0]));\n                return;\n              }\n              break;\n          }\n          if (textContent.items.length >= sink.desiredSize) {\n            stop = true;\n            break;\n          }\n        }\n        if (stop) {\n          next(deferred);\n          return;\n        }\n        flushTextContentItem();\n        enqueueChunk();\n        resolve();\n      }).catch(function (reason) {\n        if (reason instanceof _util.AbortException) {\n          return;\n        }\n        if (_this9.options.ignoreErrors) {\n          (0, _util.warn)('getTextContent - ignoring errors during task: ' + task.name);\n          flushTextContentItem();\n          enqueueChunk();\n          return;\n        }\n        throw reason;\n      });\n    },\n\n    extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, properties) {\n      var _this10 = this;\n\n      var xref = this.xref;\n      var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n      var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n      if (properties.composite) {\n        var cidSystemInfo = dict.get('CIDSystemInfo');\n        if ((0, _primitives.isDict)(cidSystemInfo)) {\n          properties.cidSystemInfo = {\n            registry: cidSystemInfo.get('Registry'),\n            ordering: cidSystemInfo.get('Ordering'),\n            supplement: cidSystemInfo.get('Supplement')\n          };\n        }\n        var cidToGidMap = dict.get('CIDToGIDMap');\n        if ((0, _primitives.isStream)(cidToGidMap)) {\n          properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n        }\n      }\n      var differences = [];\n      var baseEncodingName = null;\n      var encoding;\n      if (dict.has('Encoding')) {\n        encoding = dict.get('Encoding');\n        if ((0, _primitives.isDict)(encoding)) {\n          baseEncodingName = encoding.get('BaseEncoding');\n          baseEncodingName = (0, _primitives.isName)(baseEncodingName) ? baseEncodingName.name : null;\n          if (encoding.has('Differences')) {\n            var diffEncoding = encoding.get('Differences');\n            var index = 0;\n            for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n              var data = xref.fetchIfRef(diffEncoding[j]);\n              if ((0, _util.isNum)(data)) {\n                index = data;\n              } else if ((0, _primitives.isName)(data)) {\n                differences[index++] = data.name;\n              } else {\n                throw new _util.FormatError('Invalid entry in \\'Differences\\' array: ' + data);\n              }\n            }\n          }\n        } else if ((0, _primitives.isName)(encoding)) {\n          baseEncodingName = encoding.name;\n        } else {\n          throw new _util.FormatError('Encoding is not a Name nor a Dict');\n        }\n        if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n          baseEncodingName = null;\n        }\n      }\n      if (baseEncodingName) {\n        properties.defaultEncoding = (0, _encodings.getEncoding)(baseEncodingName).slice();\n      } else {\n        var isSymbolicFont = !!(properties.flags & _fonts.FontFlags.Symbolic);\n        var isNonsymbolicFont = !!(properties.flags & _fonts.FontFlags.Nonsymbolic);\n        encoding = _encodings.StandardEncoding;\n        if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n          encoding = _encodings.WinAnsiEncoding;\n        }\n        if (isSymbolicFont) {\n          encoding = _encodings.MacRomanEncoding;\n          if (!properties.file) {\n            if (/Symbol/i.test(properties.name)) {\n              encoding = _encodings.SymbolSetEncoding;\n            } else if (/Dingbats/i.test(properties.name)) {\n              encoding = _encodings.ZapfDingbatsEncoding;\n            }\n          }\n        }\n        properties.defaultEncoding = encoding;\n      }\n      properties.differences = differences;\n      properties.baseEncodingName = baseEncodingName;\n      properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n      properties.dict = dict;\n      return toUnicodePromise.then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return _this10.buildToUnicode(properties);\n      }).then(function (toUnicode) {\n        properties.toUnicode = toUnicode;\n        return properties;\n      });\n    },\n    _buildSimpleFontToUnicode: function _buildSimpleFontToUnicode(properties) {\n      (0, _util.assert)(!properties.composite, 'Must be a simple font.');\n      var toUnicode = [],\n          charcode = void 0,\n          glyphName = void 0;\n      var encoding = properties.defaultEncoding.slice();\n      var baseEncodingName = properties.baseEncodingName;\n      var differences = properties.differences;\n      for (charcode in differences) {\n        glyphName = differences[charcode];\n        if (glyphName === '.notdef') {\n          continue;\n        }\n        encoding[charcode] = glyphName;\n      }\n      var glyphsUnicodeMap = (0, _glyphlist.getGlyphsUnicode)();\n      for (charcode in encoding) {\n        glyphName = encoding[charcode];\n        if (glyphName === '') {\n          continue;\n        } else if (glyphsUnicodeMap[glyphName] === undefined) {\n          var code = 0;\n          switch (glyphName[0]) {\n            case 'G':\n              if (glyphName.length === 3) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'g':\n              if (glyphName.length === 5) {\n                code = parseInt(glyphName.substr(1), 16);\n              }\n              break;\n            case 'C':\n            case 'c':\n              if (glyphName.length >= 3) {\n                code = +glyphName.substr(1);\n              }\n              break;\n            default:\n              var unicode = (0, _unicode.getUnicodeForGlyph)(glyphName, glyphsUnicodeMap);\n              if (unicode !== -1) {\n                code = unicode;\n              }\n          }\n          if (code) {\n            if (baseEncodingName && code === +charcode) {\n              var baseEncoding = (0, _encodings.getEncoding)(baseEncodingName);\n              if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n                toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n                continue;\n              }\n            }\n            toUnicode[charcode] = String.fromCharCode(code);\n          }\n          continue;\n        }\n        toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n      }\n      return new _fonts.ToUnicodeMap(toUnicode);\n    },\n    buildToUnicode: function buildToUnicode(properties) {\n      properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n      if (properties.hasIncludedToUnicodeMap) {\n        if (!properties.composite && properties.hasEncoding) {\n          properties.fallbackToUnicode = this._buildSimpleFontToUnicode(properties);\n        }\n        return Promise.resolve(properties.toUnicode);\n      }\n      if (!properties.composite) {\n        return Promise.resolve(this._buildSimpleFontToUnicode(properties));\n      }\n      if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof _cmap.IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n        var registry = properties.cidSystemInfo.registry;\n        var ordering = properties.cidSystemInfo.ordering;\n        var ucs2CMapName = _primitives.Name.get(registry + '-' + ordering + '-UCS2');\n        return _cmap.CMapFactory.create({\n          encoding: ucs2CMapName,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (ucs2CMap) {\n          var cMap = properties.cMap;\n          var toUnicode = [];\n          cMap.forEach(function (charcode, cid) {\n            if (cid > 0xffff) {\n              throw new _util.FormatError('Max size of CID is 65,535');\n            }\n            var ucs2 = ucs2CMap.lookup(cid);\n            if (ucs2) {\n              toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n            }\n          });\n          return new _fonts.ToUnicodeMap(toUnicode);\n        });\n      }\n      return Promise.resolve(new _fonts.IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n    },\n\n    readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n      var cmapObj = toUnicode;\n      if ((0, _primitives.isName)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          return new _fonts.ToUnicodeMap(cmap.getMap());\n        });\n      } else if ((0, _primitives.isStream)(cmapObj)) {\n        return _cmap.CMapFactory.create({\n          encoding: cmapObj,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cmap) {\n          if (cmap instanceof _cmap.IdentityCMap) {\n            return new _fonts.IdentityToUnicodeMap(0, 0xFFFF);\n          }\n          var map = new Array(cmap.length);\n          cmap.forEach(function (charCode, token) {\n            var str = [];\n            for (var k = 0; k < token.length; k += 2) {\n              var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              if ((w1 & 0xF800) !== 0xD800) {\n                str.push(w1);\n                continue;\n              }\n              k += 2;\n              var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n              str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n            }\n            map[charCode] = String.fromCharCode.apply(String, str);\n          });\n          return new _fonts.ToUnicodeMap(map);\n        });\n      }\n      return Promise.resolve(null);\n    },\n    readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n      var glyphsData = cidToGidStream.getBytes();\n      var result = [];\n      for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n        var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n        if (glyphID === 0) {\n          continue;\n        }\n        var code = j >> 1;\n        result[code] = glyphID;\n      }\n      return result;\n    },\n    extractWidths: function PartialEvaluator_extractWidths(dict, descriptor, properties) {\n      var xref = this.xref;\n      var glyphsWidths = [];\n      var defaultWidth = 0;\n      var glyphsVMetrics = [];\n      var defaultVMetrics;\n      var i, ii, j, jj, start, code, widths;\n      if (properties.composite) {\n        defaultWidth = dict.has('DW') ? dict.get('DW') : 1000;\n        widths = dict.get('W');\n        if (widths) {\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            start = xref.fetchIfRef(widths[i++]);\n            code = xref.fetchIfRef(widths[i]);\n            if (Array.isArray(code)) {\n              for (j = 0, jj = code.length; j < jj; j++) {\n                glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n              }\n            } else {\n              var width = xref.fetchIfRef(widths[++i]);\n              for (j = start; j <= code; j++) {\n                glyphsWidths[j] = width;\n              }\n            }\n          }\n        }\n        if (properties.vertical) {\n          var vmetrics = dict.getArray('DW2') || [880, -1000];\n          defaultVMetrics = [vmetrics[1], defaultWidth * 0.5, vmetrics[0]];\n          vmetrics = dict.get('W2');\n          if (vmetrics) {\n            for (i = 0, ii = vmetrics.length; i < ii; i++) {\n              start = xref.fetchIfRef(vmetrics[i++]);\n              code = xref.fetchIfRef(vmetrics[i]);\n              if (Array.isArray(code)) {\n                for (j = 0, jj = code.length; j < jj; j++) {\n                  glyphsVMetrics[start++] = [xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j++]), xref.fetchIfRef(code[j])];\n                }\n              } else {\n                var vmetric = [xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i]), xref.fetchIfRef(vmetrics[++i])];\n                for (j = start; j <= code; j++) {\n                  glyphsVMetrics[j] = vmetric;\n                }\n              }\n            }\n          }\n        }\n      } else {\n        var firstChar = properties.firstChar;\n        widths = dict.get('Widths');\n        if (widths) {\n          j = firstChar;\n          for (i = 0, ii = widths.length; i < ii; i++) {\n            glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n          }\n          defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if ((0, _primitives.isName)(baseFontName)) {\n            var metrics = this.getBaseFontMetrics(baseFontName.name);\n            glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n            defaultWidth = metrics.defaultWidth;\n          }\n        }\n      }\n      var isMonospace = true;\n      var firstWidth = defaultWidth;\n      for (var glyph in glyphsWidths) {\n        var glyphWidth = glyphsWidths[glyph];\n        if (!glyphWidth) {\n          continue;\n        }\n        if (!firstWidth) {\n          firstWidth = glyphWidth;\n          continue;\n        }\n        if (firstWidth !== glyphWidth) {\n          isMonospace = false;\n          break;\n        }\n      }\n      if (isMonospace) {\n        properties.flags |= _fonts.FontFlags.FixedPitch;\n      }\n      properties.defaultWidth = defaultWidth;\n      properties.widths = glyphsWidths;\n      properties.defaultVMetrics = defaultVMetrics;\n      properties.vmetrics = glyphsVMetrics;\n    },\n    isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n      var fontNameWoStyle = baseFontName.split('-')[0];\n      return fontNameWoStyle in (0, _standard_fonts.getSerifFonts)() || fontNameWoStyle.search(/serif/gi) !== -1;\n    },\n    getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n      var defaultWidth = 0;\n      var widths = [];\n      var monospace = false;\n      var stdFontMap = (0, _standard_fonts.getStdFontMap)();\n      var lookupName = stdFontMap[name] || name;\n      var Metrics = (0, _metrics.getMetrics)();\n      if (!(lookupName in Metrics)) {\n        if (this.isSerifFont(name)) {\n          lookupName = 'Times-Roman';\n        } else {\n          lookupName = 'Helvetica';\n        }\n      }\n      var glyphWidths = Metrics[lookupName];\n      if ((0, _util.isNum)(glyphWidths)) {\n        defaultWidth = glyphWidths;\n        monospace = true;\n      } else {\n        widths = glyphWidths();\n      }\n      return {\n        defaultWidth: defaultWidth,\n        monospace: monospace,\n        widths: widths\n      };\n    },\n    buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n      var widths = Object.create(null);\n      var differences = properties.differences;\n      var encoding = properties.defaultEncoding;\n      for (var charCode = 0; charCode < 256; charCode++) {\n        if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n          widths[charCode] = widthsByGlyphName[differences[charCode]];\n          continue;\n        }\n        if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n          widths[charCode] = widthsByGlyphName[encoding[charCode]];\n          continue;\n        }\n      }\n      return widths;\n    },\n    preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict) {\n      var baseDict = dict;\n      var type = dict.get('Subtype');\n      if (!(0, _primitives.isName)(type)) {\n        throw new _util.FormatError('invalid font Subtype');\n      }\n      var composite = false;\n      var uint8array;\n      if (type.name === 'Type0') {\n        var df = dict.get('DescendantFonts');\n        if (!df) {\n          throw new _util.FormatError('Descendant fonts are not specified');\n        }\n        dict = Array.isArray(df) ? this.xref.fetchIfRef(df[0]) : df;\n        type = dict.get('Subtype');\n        if (!(0, _primitives.isName)(type)) {\n          throw new _util.FormatError('invalid font Subtype');\n        }\n        composite = true;\n      }\n      var descriptor = dict.get('FontDescriptor');\n      if (descriptor) {\n        var hash = new _murmurhash.MurmurHash3_64();\n        var encoding = baseDict.getRaw('Encoding');\n        if ((0, _primitives.isName)(encoding)) {\n          hash.update(encoding.name);\n        } else if ((0, _primitives.isRef)(encoding)) {\n          hash.update(encoding.toString());\n        } else if ((0, _primitives.isDict)(encoding)) {\n          var keys = encoding.getKeys();\n          for (var i = 0, ii = keys.length; i < ii; i++) {\n            var entry = encoding.getRaw(keys[i]);\n            if ((0, _primitives.isName)(entry)) {\n              hash.update(entry.name);\n            } else if ((0, _primitives.isRef)(entry)) {\n              hash.update(entry.toString());\n            } else if (Array.isArray(entry)) {\n              var diffLength = entry.length,\n                  diffBuf = new Array(diffLength);\n              for (var j = 0; j < diffLength; j++) {\n                var diffEntry = entry[j];\n                if ((0, _primitives.isName)(diffEntry)) {\n                  diffBuf[j] = diffEntry.name;\n                } else if ((0, _util.isNum)(diffEntry) || (0, _primitives.isRef)(diffEntry)) {\n                  diffBuf[j] = diffEntry.toString();\n                }\n              }\n              hash.update(diffBuf.join());\n            }\n          }\n        }\n        var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n        if ((0, _primitives.isStream)(toUnicode)) {\n          var stream = toUnicode.str || toUnicode;\n          uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n          hash.update(uint8array);\n        } else if ((0, _primitives.isName)(toUnicode)) {\n          hash.update(toUnicode.name);\n        }\n        var widths = dict.get('Widths') || baseDict.get('Widths');\n        if (widths) {\n          uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n          hash.update(uint8array);\n        }\n      }\n      return {\n        descriptor: descriptor,\n        dict: dict,\n        baseDict: baseDict,\n        composite: composite,\n        type: type.name,\n        hash: hash ? hash.hexdigest() : ''\n      };\n    },\n    translateFont: function PartialEvaluator_translateFont(preEvaluatedFont) {\n      var _this11 = this;\n\n      var baseDict = preEvaluatedFont.baseDict;\n      var dict = preEvaluatedFont.dict;\n      var composite = preEvaluatedFont.composite;\n      var descriptor = preEvaluatedFont.descriptor;\n      var type = preEvaluatedFont.type;\n      var maxCharIndex = composite ? 0xFFFF : 0xFF;\n      var properties;\n      if (!descriptor) {\n        if (type === 'Type3') {\n          descriptor = new _primitives.Dict(null);\n          descriptor.set('FontName', _primitives.Name.get(type));\n          descriptor.set('FontBBox', dict.getArray('FontBBox'));\n        } else {\n          var baseFontName = dict.get('BaseFont');\n          if (!(0, _primitives.isName)(baseFontName)) {\n            throw new _util.FormatError('Base font is not specified');\n          }\n          baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n          var metrics = this.getBaseFontMetrics(baseFontName);\n          var fontNameWoStyle = baseFontName.split('-')[0];\n          var flags = (this.isSerifFont(fontNameWoStyle) ? _fonts.FontFlags.Serif : 0) | (metrics.monospace ? _fonts.FontFlags.FixedPitch : 0) | ((0, _standard_fonts.getSymbolsFonts)()[fontNameWoStyle] ? _fonts.FontFlags.Symbolic : _fonts.FontFlags.Nonsymbolic);\n          properties = {\n            type: type,\n            name: baseFontName,\n            widths: metrics.widths,\n            defaultWidth: metrics.defaultWidth,\n            flags: flags,\n            firstChar: 0,\n            lastChar: maxCharIndex\n          };\n          return this.extractDataStructures(dict, dict, properties).then(function (properties) {\n            properties.widths = _this11.buildCharCodeToWidth(metrics.widths, properties);\n            return new _fonts.Font(baseFontName, null, properties);\n          });\n        }\n      }\n      var firstChar = dict.get('FirstChar') || 0;\n      var lastChar = dict.get('LastChar') || maxCharIndex;\n      var fontName = descriptor.get('FontName');\n      var baseFont = dict.get('BaseFont');\n      if ((0, _util.isString)(fontName)) {\n        fontName = _primitives.Name.get(fontName);\n      }\n      if ((0, _util.isString)(baseFont)) {\n        baseFont = _primitives.Name.get(baseFont);\n      }\n      if (type !== 'Type3') {\n        var fontNameStr = fontName && fontName.name;\n        var baseFontStr = baseFont && baseFont.name;\n        if (fontNameStr !== baseFontStr) {\n          (0, _util.info)('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n          if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n            fontName = baseFont;\n          }\n        }\n      }\n      fontName = fontName || baseFont;\n      if (!(0, _primitives.isName)(fontName)) {\n        throw new _util.FormatError('invalid font name');\n      }\n      var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n      if (fontFile) {\n        if (fontFile.dict) {\n          var subtype = fontFile.dict.get('Subtype');\n          if (subtype) {\n            subtype = subtype.name;\n          }\n          var length1 = fontFile.dict.get('Length1');\n          var length2 = fontFile.dict.get('Length2');\n          var length3 = fontFile.dict.get('Length3');\n        }\n      }\n      properties = {\n        type: type,\n        name: fontName.name,\n        subtype: subtype,\n        file: fontFile,\n        length1: length1,\n        length2: length2,\n        length3: length3,\n        loadedName: baseDict.loadedName,\n        composite: composite,\n        wideChars: composite,\n        fixedPitch: false,\n        fontMatrix: dict.getArray('FontMatrix') || _util.FONT_IDENTITY_MATRIX,\n        firstChar: firstChar || 0,\n        lastChar: lastChar || maxCharIndex,\n        bbox: descriptor.getArray('FontBBox'),\n        ascent: descriptor.get('Ascent'),\n        descent: descriptor.get('Descent'),\n        xHeight: descriptor.get('XHeight'),\n        capHeight: descriptor.get('CapHeight'),\n        flags: descriptor.get('Flags'),\n        italicAngle: descriptor.get('ItalicAngle'),\n        isType3Font: false\n      };\n      var cMapPromise;\n      if (composite) {\n        var cidEncoding = baseDict.get('Encoding');\n        if ((0, _primitives.isName)(cidEncoding)) {\n          properties.cidEncoding = cidEncoding.name;\n        }\n        cMapPromise = _cmap.CMapFactory.create({\n          encoding: cidEncoding,\n          fetchBuiltInCMap: this.fetchBuiltInCMap,\n          useCMap: null\n        }).then(function (cMap) {\n          properties.cMap = cMap;\n          properties.vertical = properties.cMap.vertical;\n        });\n      } else {\n        cMapPromise = Promise.resolve(undefined);\n      }\n      return cMapPromise.then(function () {\n        return _this11.extractDataStructures(dict, baseDict, properties);\n      }).then(function (properties) {\n        _this11.extractWidths(dict, descriptor, properties);\n        if (type === 'Type3') {\n          properties.isType3Font = true;\n        }\n        return new _fonts.Font(fontName.name, fontFile, properties);\n      });\n    }\n  };\n  return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n  function TranslatedFont(loadedName, font, dict) {\n    this.loadedName = loadedName;\n    this.font = font;\n    this.dict = dict;\n    this.type3Loaded = null;\n    this.sent = false;\n  }\n  TranslatedFont.prototype = {\n    send: function send(handler) {\n      if (this.sent) {\n        return;\n      }\n      var fontData = this.font.exportData();\n      handler.send('commonobj', [this.loadedName, 'Font', fontData]);\n      this.sent = true;\n    },\n    loadType3Data: function loadType3Data(evaluator, resources, parentOperatorList, task) {\n      if (!this.font.isType3Font) {\n        throw new Error('Must be a Type3 font.');\n      }\n      if (this.type3Loaded) {\n        return this.type3Loaded;\n      }\n      var type3Options = Object.create(evaluator.options);\n      type3Options.ignoreErrors = false;\n      var type3Evaluator = evaluator.clone(type3Options);\n      var translatedFont = this.font;\n      var loadCharProcsPromise = Promise.resolve();\n      var charProcs = this.dict.get('CharProcs');\n      var fontResources = this.dict.get('Resources') || resources;\n      var charProcKeys = charProcs.getKeys();\n      var charProcOperatorList = Object.create(null);\n\n      var _loop2 = function _loop2() {\n        var key = charProcKeys[i];\n        loadCharProcsPromise = loadCharProcsPromise.then(function () {\n          var glyphStream = charProcs.get(key);\n          var operatorList = new _operator_list.OperatorList();\n          return type3Evaluator.getOperatorList({\n            stream: glyphStream,\n            task: task,\n            resources: fontResources,\n            operatorList: operatorList\n          }).then(function () {\n            charProcOperatorList[key] = operatorList.getIR();\n            parentOperatorList.addDependencies(operatorList.dependencies);\n          }).catch(function (reason) {\n            (0, _util.warn)('Type3 font resource \"' + key + '\" is not available.');\n            var operatorList = new _operator_list.OperatorList();\n            charProcOperatorList[key] = operatorList.getIR();\n          });\n        });\n      };\n\n      for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n        _loop2();\n      }\n      this.type3Loaded = loadCharProcsPromise.then(function () {\n        translatedFont.charProcOperatorList = charProcOperatorList;\n      });\n      return this.type3Loaded;\n    }\n  };\n  return TranslatedFont;\n}();\nvar StateManager = function StateManagerClosure() {\n  function StateManager(initialState) {\n    this.state = initialState;\n    this.stateStack = [];\n  }\n  StateManager.prototype = {\n    save: function save() {\n      var old = this.state;\n      this.stateStack.push(this.state);\n      this.state = old.clone();\n    },\n    restore: function restore() {\n      var prev = this.stateStack.pop();\n      if (prev) {\n        this.state = prev;\n      }\n    },\n    transform: function transform(args) {\n      this.state.ctm = _util.Util.transform(this.state.ctm, args);\n    }\n  };\n  return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n  function TextState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.fontName = null;\n    this.fontSize = 0;\n    this.font = null;\n    this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n    this.textMatrix = _util.IDENTITY_MATRIX.slice();\n    this.textLineMatrix = _util.IDENTITY_MATRIX.slice();\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.leading = 0;\n    this.textHScale = 1;\n    this.textRise = 0;\n  }\n  TextState.prototype = {\n    setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n      var m = this.textLineMatrix;\n      m[0] = a;\n      m[1] = b;\n      m[2] = c;\n      m[3] = d;\n      m[4] = e;\n      m[5] = f;\n    },\n    translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n      var m = this.textLineMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n    },\n    calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n      var font = this.font;\n      if (!font) {\n        return null;\n      }\n      var m = this.textLineMatrix;\n      if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n        return null;\n      }\n      var txDiff = e - m[4],\n          tyDiff = f - m[5];\n      if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n        return null;\n      }\n      var tx,\n          ty,\n          denominator = a * d - b * c;\n      if (font.vertical) {\n        tx = -tyDiff * c / denominator;\n        ty = tyDiff * a / denominator;\n      } else {\n        tx = txDiff * d / denominator;\n        ty = -txDiff * b / denominator;\n      }\n      return {\n        width: tx,\n        height: ty,\n        value: font.vertical ? ty : tx\n      };\n    },\n    calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n      var tsm = [this.fontSize * this.textHScale, 0, 0, this.fontSize, 0, this.textRise];\n      return _util.Util.transform(ctm, _util.Util.transform(this.textMatrix, tsm));\n    },\n    carriageReturn: function TextState_carriageReturn() {\n      this.translateTextLineMatrix(0, -this.leading);\n      this.textMatrix = this.textLineMatrix.slice();\n    },\n    clone: function TextState_clone() {\n      var clone = Object.create(this);\n      clone.textMatrix = this.textMatrix.slice();\n      clone.textLineMatrix = this.textLineMatrix.slice();\n      clone.fontMatrix = this.fontMatrix.slice();\n      return clone;\n    }\n  };\n  return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n  function EvalState() {\n    this.ctm = new Float32Array(_util.IDENTITY_MATRIX);\n    this.font = null;\n    this.textRenderingMode = _util.TextRenderingMode.FILL;\n    this.fillColorSpace = _colorspace.ColorSpace.singletons.gray;\n    this.strokeColorSpace = _colorspace.ColorSpace.singletons.gray;\n  }\n  EvalState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    }\n  };\n  return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n  var getOPMap = (0, _util.getLookupTableFactory)(function (t) {\n    t['w'] = {\n      id: _util.OPS.setLineWidth,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['J'] = {\n      id: _util.OPS.setLineCap,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['j'] = {\n      id: _util.OPS.setLineJoin,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['M'] = {\n      id: _util.OPS.setMiterLimit,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['d'] = {\n      id: _util.OPS.setDash,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['ri'] = {\n      id: _util.OPS.setRenderingIntent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['i'] = {\n      id: _util.OPS.setFlatness,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['gs'] = {\n      id: _util.OPS.setGState,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['q'] = {\n      id: _util.OPS.save,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Q'] = {\n      id: _util.OPS.restore,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['cm'] = {\n      id: _util.OPS.transform,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['m'] = {\n      id: _util.OPS.moveTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['l'] = {\n      id: _util.OPS.lineTo,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['c'] = {\n      id: _util.OPS.curveTo,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['v'] = {\n      id: _util.OPS.curveTo2,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['y'] = {\n      id: _util.OPS.curveTo3,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['h'] = {\n      id: _util.OPS.closePath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['re'] = {\n      id: _util.OPS.rectangle,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['S'] = {\n      id: _util.OPS.stroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['s'] = {\n      id: _util.OPS.closeStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['F'] = {\n      id: _util.OPS.fill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['f*'] = {\n      id: _util.OPS.eoFill,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B'] = {\n      id: _util.OPS.fillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['B*'] = {\n      id: _util.OPS.eoFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b'] = {\n      id: _util.OPS.closeFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['b*'] = {\n      id: _util.OPS.closeEOFillStroke,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['n'] = {\n      id: _util.OPS.endPath,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W'] = {\n      id: _util.OPS.clip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['W*'] = {\n      id: _util.OPS.eoClip,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BT'] = {\n      id: _util.OPS.beginText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ET'] = {\n      id: _util.OPS.endText,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tc'] = {\n      id: _util.OPS.setCharSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tw'] = {\n      id: _util.OPS.setWordSpacing,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tz'] = {\n      id: _util.OPS.setHScale,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TL'] = {\n      id: _util.OPS.setLeading,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Tf'] = {\n      id: _util.OPS.setFont,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tr'] = {\n      id: _util.OPS.setTextRenderingMode,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Ts'] = {\n      id: _util.OPS.setTextRise,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Td'] = {\n      id: _util.OPS.moveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['TD'] = {\n      id: _util.OPS.setLeadingMoveText,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['Tm'] = {\n      id: _util.OPS.setTextMatrix,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['T*'] = {\n      id: _util.OPS.nextLine,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['Tj'] = {\n      id: _util.OPS.showText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['TJ'] = {\n      id: _util.OPS.showSpacedText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\\''] = {\n      id: _util.OPS.nextLineShowText,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['\"'] = {\n      id: _util.OPS.nextLineSetSpacingShowText,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['d0'] = {\n      id: _util.OPS.setCharWidth,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['d1'] = {\n      id: _util.OPS.setCharWidthAndBounds,\n      numArgs: 6,\n      variableArgs: false\n    };\n    t['CS'] = {\n      id: _util.OPS.setStrokeColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['cs'] = {\n      id: _util.OPS.setFillColorSpace,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['SC'] = {\n      id: _util.OPS.setStrokeColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['SCN'] = {\n      id: _util.OPS.setStrokeColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['sc'] = {\n      id: _util.OPS.setFillColor,\n      numArgs: 4,\n      variableArgs: true\n    };\n    t['scn'] = {\n      id: _util.OPS.setFillColorN,\n      numArgs: 33,\n      variableArgs: true\n    };\n    t['G'] = {\n      id: _util.OPS.setStrokeGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['g'] = {\n      id: _util.OPS.setFillGray,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['RG'] = {\n      id: _util.OPS.setStrokeRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['rg'] = {\n      id: _util.OPS.setFillRGBColor,\n      numArgs: 3,\n      variableArgs: false\n    };\n    t['K'] = {\n      id: _util.OPS.setStrokeCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['k'] = {\n      id: _util.OPS.setFillCMYKColor,\n      numArgs: 4,\n      variableArgs: false\n    };\n    t['sh'] = {\n      id: _util.OPS.shadingFill,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BI'] = {\n      id: _util.OPS.beginInlineImage,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['ID'] = {\n      id: _util.OPS.beginImageData,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EI'] = {\n      id: _util.OPS.endInlineImage,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['Do'] = {\n      id: _util.OPS.paintXObject,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['MP'] = {\n      id: _util.OPS.markPoint,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['DP'] = {\n      id: _util.OPS.markPointProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['BMC'] = {\n      id: _util.OPS.beginMarkedContent,\n      numArgs: 1,\n      variableArgs: false\n    };\n    t['BDC'] = {\n      id: _util.OPS.beginMarkedContentProps,\n      numArgs: 2,\n      variableArgs: false\n    };\n    t['EMC'] = {\n      id: _util.OPS.endMarkedContent,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BX'] = {\n      id: _util.OPS.beginCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['EX'] = {\n      id: _util.OPS.endCompat,\n      numArgs: 0,\n      variableArgs: false\n    };\n    t['BM'] = null;\n    t['BD'] = null;\n    t['true'] = null;\n    t['fa'] = null;\n    t['fal'] = null;\n    t['fals'] = null;\n    t['false'] = null;\n    t['nu'] = null;\n    t['nul'] = null;\n    t['null'] = null;\n  });\n  function EvaluatorPreprocessor(stream, xref, stateManager) {\n    this.opMap = getOPMap();\n    this.parser = new _parser.Parser(new _parser.Lexer(stream, this.opMap), false, xref);\n    this.stateManager = stateManager;\n    this.nonProcessedArgs = [];\n  }\n  EvaluatorPreprocessor.prototype = {\n    get savedStatesDepth() {\n      return this.stateManager.stateStack.length;\n    },\n    read: function EvaluatorPreprocessor_read(operation) {\n      var args = operation.args;\n      while (true) {\n        var obj = this.parser.getObj();\n        if ((0, _primitives.isCmd)(obj)) {\n          var cmd = obj.cmd;\n          var opSpec = this.opMap[cmd];\n          if (!opSpec) {\n            (0, _util.warn)('Unknown command \"' + cmd + '\"');\n            continue;\n          }\n          var fn = opSpec.id;\n          var numArgs = opSpec.numArgs;\n          var argsLength = args !== null ? args.length : 0;\n          if (!opSpec.variableArgs) {\n            if (argsLength !== numArgs) {\n              var nonProcessedArgs = this.nonProcessedArgs;\n              while (argsLength > numArgs) {\n                nonProcessedArgs.push(args.shift());\n                argsLength--;\n              }\n              while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n                if (args === null) {\n                  args = [];\n                }\n                args.unshift(nonProcessedArgs.pop());\n                argsLength++;\n              }\n            }\n            if (argsLength < numArgs) {\n              (0, _util.warn)('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n              if (args !== null) {\n                args.length = 0;\n              }\n              continue;\n            }\n          } else if (argsLength > numArgs) {\n            (0, _util.info)('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n          }\n          this.preprocessCommand(fn, args);\n          operation.fn = fn;\n          operation.args = args;\n          return true;\n        }\n        if ((0, _primitives.isEOF)(obj)) {\n          return false;\n        }\n        if (obj !== null) {\n          if (args === null) {\n            args = [];\n          }\n          args.push(obj);\n          if (args.length > 33) {\n            throw new _util.FormatError('Too many arguments');\n          }\n        }\n      }\n    },\n    preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n      switch (fn | 0) {\n        case _util.OPS.save:\n          this.stateManager.save();\n          break;\n        case _util.OPS.restore:\n          this.stateManager.restore();\n          break;\n        case _util.OPS.transform:\n          this.stateManager.transform(args);\n          break;\n      }\n    }\n  };\n  return EvaluatorPreprocessor;\n}();\nexports.PartialEvaluator = PartialEvaluator;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AnnotationFactory = exports.AnnotationBorderStyle = exports.Annotation = undefined;\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _util = require('../shared/util');\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _colorspace = require('./colorspace');\n\nvar _operator_list = require('./operator_list');\n\nvar _stream = require('./stream');\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar AnnotationFactory = function () {\n  function AnnotationFactory() {\n    _classCallCheck(this, AnnotationFactory);\n  }\n\n  _createClass(AnnotationFactory, null, [{\n    key: 'create',\n    value: function create(xref, ref, pdfManager, idFactory) {\n      var dict = xref.fetchIfRef(ref);\n      if (!(0, _primitives.isDict)(dict)) {\n        return;\n      }\n      var id = (0, _primitives.isRef)(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n      var subtype = dict.get('Subtype');\n      subtype = (0, _primitives.isName)(subtype) ? subtype.name : null;\n      var parameters = {\n        xref: xref,\n        dict: dict,\n        ref: (0, _primitives.isRef)(ref) ? ref : null,\n        subtype: subtype,\n        id: id,\n        pdfManager: pdfManager\n      };\n      switch (subtype) {\n        case 'Link':\n          return new LinkAnnotation(parameters);\n        case 'Text':\n          return new TextAnnotation(parameters);\n        case 'Widget':\n          var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n          fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n          switch (fieldType) {\n            case 'Tx':\n              return new TextWidgetAnnotation(parameters);\n            case 'Btn':\n              return new ButtonWidgetAnnotation(parameters);\n            case 'Ch':\n              return new ChoiceWidgetAnnotation(parameters);\n          }\n          (0, _util.warn)('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n          return new WidgetAnnotation(parameters);\n        case 'Popup':\n          return new PopupAnnotation(parameters);\n        case 'Line':\n          return new LineAnnotation(parameters);\n        case 'Square':\n          return new SquareAnnotation(parameters);\n        case 'Circle':\n          return new CircleAnnotation(parameters);\n        case 'PolyLine':\n          return new PolylineAnnotation(parameters);\n        case 'Polygon':\n          return new PolygonAnnotation(parameters);\n        case 'Highlight':\n          return new HighlightAnnotation(parameters);\n        case 'Underline':\n          return new UnderlineAnnotation(parameters);\n        case 'Squiggly':\n          return new SquigglyAnnotation(parameters);\n        case 'StrikeOut':\n          return new StrikeOutAnnotation(parameters);\n        case 'Stamp':\n          return new StampAnnotation(parameters);\n        case 'FileAttachment':\n          return new FileAttachmentAnnotation(parameters);\n        default:\n          if (!subtype) {\n            (0, _util.warn)('Annotation is missing the required /Subtype.');\n          } else {\n            (0, _util.warn)('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n          }\n          return new Annotation(parameters);\n      }\n    }\n  }]);\n\n  return AnnotationFactory;\n}();\n\nfunction getTransformMatrix(rect, bbox, matrix) {\n  var bounds = _util.Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n    return [1, 0, 0, 1, rect[0], rect[1]];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [xRatio, 0, 0, yRatio, rect[0] - minX * xRatio, rect[1] - minY * yRatio];\n}\n\nvar Annotation = function () {\n  function Annotation(params) {\n    _classCallCheck(this, Annotation);\n\n    var dict = params.dict;\n    this.setFlags(dict.get('F'));\n    this.setRectangle(dict.getArray('Rect'));\n    this.setColor(dict.getArray('C'));\n    this.setBorderStyle(dict);\n    this.setAppearance(dict);\n    this.data = {\n      annotationFlags: this.flags,\n      borderStyle: this.borderStyle,\n      color: this.color,\n      hasAppearance: !!this.appearance,\n      id: params.id,\n      rect: this.rectangle,\n      subtype: params.subtype\n    };\n  }\n\n  _createClass(Annotation, [{\n    key: '_hasFlag',\n    value: function _hasFlag(flags, flag) {\n      return !!(flags & flag);\n    }\n  }, {\n    key: '_isViewable',\n    value: function _isViewable(flags) {\n      return !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN) && !this._hasFlag(flags, _util.AnnotationFlag.NOVIEW);\n    }\n  }, {\n    key: '_isPrintable',\n    value: function _isPrintable(flags) {\n      return this._hasFlag(flags, _util.AnnotationFlag.PRINT) && !this._hasFlag(flags, _util.AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, _util.AnnotationFlag.HIDDEN);\n    }\n  }, {\n    key: 'setFlags',\n    value: function setFlags(flags) {\n      this.flags = Number.isInteger(flags) && flags > 0 ? flags : 0;\n    }\n  }, {\n    key: 'hasFlag',\n    value: function hasFlag(flag) {\n      return this._hasFlag(this.flags, flag);\n    }\n  }, {\n    key: 'setRectangle',\n    value: function setRectangle(rectangle) {\n      if (Array.isArray(rectangle) && rectangle.length === 4) {\n        this.rectangle = _util.Util.normalizeRect(rectangle);\n      } else {\n        this.rectangle = [0, 0, 0, 0];\n      }\n    }\n  }, {\n    key: 'setColor',\n    value: function setColor(color) {\n      var rgbColor = new Uint8Array(3);\n      if (!Array.isArray(color)) {\n        this.color = rgbColor;\n        return;\n      }\n      switch (color.length) {\n        case 0:\n          this.color = null;\n          break;\n        case 1:\n          _colorspace.ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 3:\n          _colorspace.ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        case 4:\n          _colorspace.ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n          this.color = rgbColor;\n          break;\n        default:\n          this.color = rgbColor;\n          break;\n      }\n    }\n  }, {\n    key: 'setBorderStyle',\n    value: function setBorderStyle(borderStyle) {\n      this.borderStyle = new AnnotationBorderStyle();\n      if (!(0, _primitives.isDict)(borderStyle)) {\n        return;\n      }\n      if (borderStyle.has('BS')) {\n        var dict = borderStyle.get('BS');\n        var dictType = dict.get('Type');\n        if (!dictType || (0, _primitives.isName)(dictType, 'Border')) {\n          this.borderStyle.setWidth(dict.get('W'));\n          this.borderStyle.setStyle(dict.get('S'));\n          this.borderStyle.setDashArray(dict.getArray('D'));\n        }\n      } else if (borderStyle.has('Border')) {\n        var array = borderStyle.getArray('Border');\n        if (Array.isArray(array) && array.length >= 3) {\n          this.borderStyle.setHorizontalCornerRadius(array[0]);\n          this.borderStyle.setVerticalCornerRadius(array[1]);\n          this.borderStyle.setWidth(array[2]);\n          if (array.length === 4) {\n            this.borderStyle.setDashArray(array[3]);\n          }\n        }\n      } else {\n        this.borderStyle.setWidth(0);\n      }\n    }\n  }, {\n    key: 'setAppearance',\n    value: function setAppearance(dict) {\n      this.appearance = null;\n      var appearanceStates = dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if ((0, _primitives.isStream)(normalAppearanceState)) {\n        this.appearance = normalAppearanceState;\n        return;\n      }\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var as = dict.get('AS');\n      if (!(0, _primitives.isName)(as) || !normalAppearanceState.has(as.name)) {\n        return;\n      }\n      this.appearance = normalAppearanceState.get(as.name);\n    }\n  }, {\n    key: '_preparePopup',\n    value: function _preparePopup(dict) {\n      if (!dict.has('C')) {\n        this.data.color = null;\n      }\n      this.data.hasPopup = dict.has('Popup');\n      this.data.title = (0, _util.stringToPDFString)(dict.get('T') || '');\n      this.data.contents = (0, _util.stringToPDFString)(dict.get('Contents') || '');\n    }\n  }, {\n    key: 'loadResources',\n    value: function loadResources(keys) {\n      return this.appearance.dict.getAsync('Resources').then(function (resources) {\n        if (!resources) {\n          return;\n        }\n        var objectLoader = new _obj.ObjectLoader(resources, keys, resources.xref);\n        return objectLoader.load().then(function () {\n          return resources;\n        });\n      });\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      var _this = this;\n\n      if (!this.appearance) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      var data = this.data;\n      var appearanceDict = this.appearance.dict;\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var bbox = appearanceDict.getArray('BBox') || [0, 0, 1, 1];\n      var matrix = appearanceDict.getArray('Matrix') || [1, 0, 0, 1, 0, 0];\n      var transform = getTransformMatrix(data.rect, bbox, matrix);\n      return resourcesPromise.then(function (resources) {\n        var opList = new _operator_list.OperatorList();\n        opList.addOp(_util.OPS.beginAnnotation, [data.rect, transform, matrix]);\n        return evaluator.getOperatorList({\n          stream: _this.appearance,\n          task: task,\n          resources: resources,\n          operatorList: opList\n        }).then(function () {\n          opList.addOp(_util.OPS.endAnnotation, []);\n          _this.appearance.reset();\n          return opList;\n        });\n      });\n    }\n  }, {\n    key: 'viewable',\n    get: function get() {\n      if (this.flags === 0) {\n        return true;\n      }\n      return this._isViewable(this.flags);\n    }\n  }, {\n    key: 'printable',\n    get: function get() {\n      if (this.flags === 0) {\n        return false;\n      }\n      return this._isPrintable(this.flags);\n    }\n  }]);\n\n  return Annotation;\n}();\n\nvar AnnotationBorderStyle = function () {\n  function AnnotationBorderStyle() {\n    _classCallCheck(this, AnnotationBorderStyle);\n\n    this.width = 1;\n    this.style = _util.AnnotationBorderStyleType.SOLID;\n    this.dashArray = [3];\n    this.horizontalCornerRadius = 0;\n    this.verticalCornerRadius = 0;\n  }\n\n  _createClass(AnnotationBorderStyle, [{\n    key: 'setWidth',\n    value: function setWidth(width) {\n      if (Number.isInteger(width)) {\n        this.width = width;\n      }\n    }\n  }, {\n    key: 'setStyle',\n    value: function setStyle(style) {\n      if (!style) {\n        return;\n      }\n      switch (style.name) {\n        case 'S':\n          this.style = _util.AnnotationBorderStyleType.SOLID;\n          break;\n        case 'D':\n          this.style = _util.AnnotationBorderStyleType.DASHED;\n          break;\n        case 'B':\n          this.style = _util.AnnotationBorderStyleType.BEVELED;\n          break;\n        case 'I':\n          this.style = _util.AnnotationBorderStyleType.INSET;\n          break;\n        case 'U':\n          this.style = _util.AnnotationBorderStyleType.UNDERLINE;\n          break;\n        default:\n          break;\n      }\n    }\n  }, {\n    key: 'setDashArray',\n    value: function setDashArray(dashArray) {\n      if (Array.isArray(dashArray) && dashArray.length > 0) {\n        var isValid = true;\n        var allZeros = true;\n        for (var i = 0, len = dashArray.length; i < len; i++) {\n          var element = dashArray[i];\n          var validNumber = +element >= 0;\n          if (!validNumber) {\n            isValid = false;\n            break;\n          } else if (element > 0) {\n            allZeros = false;\n          }\n        }\n        if (isValid && !allZeros) {\n          this.dashArray = dashArray;\n        } else {\n          this.width = 0;\n        }\n      } else if (dashArray) {\n        this.width = 0;\n      }\n    }\n  }, {\n    key: 'setHorizontalCornerRadius',\n    value: function setHorizontalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.horizontalCornerRadius = radius;\n      }\n    }\n  }, {\n    key: 'setVerticalCornerRadius',\n    value: function setVerticalCornerRadius(radius) {\n      if (Number.isInteger(radius)) {\n        this.verticalCornerRadius = radius;\n      }\n    }\n  }]);\n\n  return AnnotationBorderStyle;\n}();\n\nvar WidgetAnnotation = function (_Annotation) {\n  _inherits(WidgetAnnotation, _Annotation);\n\n  function WidgetAnnotation(params) {\n    _classCallCheck(this, WidgetAnnotation);\n\n    var _this2 = _possibleConstructorReturn(this, (WidgetAnnotation.__proto__ || Object.getPrototypeOf(WidgetAnnotation)).call(this, params));\n\n    var dict = params.dict;\n    var data = _this2.data;\n    data.annotationType = _util.AnnotationType.WIDGET;\n    data.fieldName = _this2._constructFieldName(dict);\n    data.fieldValue = _util.Util.getInheritableProperty(dict, 'V', true);\n    data.alternativeText = (0, _util.stringToPDFString)(dict.get('TU') || '');\n    data.defaultAppearance = _util.Util.getInheritableProperty(dict, 'DA') || '';\n    var fieldType = _util.Util.getInheritableProperty(dict, 'FT');\n    data.fieldType = (0, _primitives.isName)(fieldType) ? fieldType.name : null;\n    _this2.fieldResources = _util.Util.getInheritableProperty(dict, 'DR') || _primitives.Dict.empty;\n    data.fieldFlags = _util.Util.getInheritableProperty(dict, 'Ff');\n    if (!Number.isInteger(data.fieldFlags) || data.fieldFlags < 0) {\n      data.fieldFlags = 0;\n    }\n    data.readOnly = _this2.hasFieldFlag(_util.AnnotationFieldFlag.READONLY);\n    if (data.fieldType === 'Sig') {\n      _this2.setFlags(_util.AnnotationFlag.HIDDEN);\n    }\n    return _this2;\n  }\n\n  _createClass(WidgetAnnotation, [{\n    key: '_constructFieldName',\n    value: function _constructFieldName(dict) {\n      if (!dict.has('T') && !dict.has('Parent')) {\n        (0, _util.warn)('Unknown field name, falling back to empty field name.');\n        return '';\n      }\n      if (!dict.has('Parent')) {\n        return (0, _util.stringToPDFString)(dict.get('T'));\n      }\n      var fieldName = [];\n      if (dict.has('T')) {\n        fieldName.unshift((0, _util.stringToPDFString)(dict.get('T')));\n      }\n      var loopDict = dict;\n      while (loopDict.has('Parent')) {\n        loopDict = loopDict.get('Parent');\n        if (!(0, _primitives.isDict)(loopDict)) {\n          break;\n        }\n        if (loopDict.has('T')) {\n          fieldName.unshift((0, _util.stringToPDFString)(loopDict.get('T')));\n        }\n      }\n      return fieldName.join('.');\n    }\n  }, {\n    key: 'hasFieldFlag',\n    value: function hasFieldFlag(flag) {\n      return !!(this.data.fieldFlags & flag);\n    }\n  }, {\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms) {\n        return Promise.resolve(new _operator_list.OperatorList());\n      }\n      return _get(WidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(WidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n    }\n  }]);\n\n  return WidgetAnnotation;\n}(Annotation);\n\nvar TextWidgetAnnotation = function (_WidgetAnnotation) {\n  _inherits(TextWidgetAnnotation, _WidgetAnnotation);\n\n  function TextWidgetAnnotation(params) {\n    _classCallCheck(this, TextWidgetAnnotation);\n\n    var _this3 = _possibleConstructorReturn(this, (TextWidgetAnnotation.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation)).call(this, params));\n\n    _this3.data.fieldValue = (0, _util.stringToPDFString)(_this3.data.fieldValue || '');\n    var alignment = _util.Util.getInheritableProperty(params.dict, 'Q');\n    if (!Number.isInteger(alignment) || alignment < 0 || alignment > 2) {\n      alignment = null;\n    }\n    _this3.data.textAlignment = alignment;\n    var maximumLength = _util.Util.getInheritableProperty(params.dict, 'MaxLen');\n    if (!Number.isInteger(maximumLength) || maximumLength < 0) {\n      maximumLength = null;\n    }\n    _this3.data.maxLen = maximumLength;\n    _this3.data.multiLine = _this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE);\n    _this3.data.comb = _this3.hasFieldFlag(_util.AnnotationFieldFlag.COMB) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.MULTILINE) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.PASSWORD) && !_this3.hasFieldFlag(_util.AnnotationFieldFlag.FILESELECT) && _this3.data.maxLen !== null;\n    return _this3;\n  }\n\n  _createClass(TextWidgetAnnotation, [{\n    key: 'getOperatorList',\n    value: function getOperatorList(evaluator, task, renderForms) {\n      if (renderForms || this.appearance) {\n        return _get(TextWidgetAnnotation.prototype.__proto__ || Object.getPrototypeOf(TextWidgetAnnotation.prototype), 'getOperatorList', this).call(this, evaluator, task, renderForms);\n      }\n      var operatorList = new _operator_list.OperatorList();\n      if (!this.data.defaultAppearance) {\n        return Promise.resolve(operatorList);\n      }\n      var stream = new _stream.Stream((0, _util.stringToBytes)(this.data.defaultAppearance));\n      return evaluator.getOperatorList({\n        stream: stream,\n        task: task,\n        resources: this.fieldResources,\n        operatorList: operatorList\n      }).then(function () {\n        return operatorList;\n      });\n    }\n  }]);\n\n  return TextWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ButtonWidgetAnnotation = function (_WidgetAnnotation2) {\n  _inherits(ButtonWidgetAnnotation, _WidgetAnnotation2);\n\n  function ButtonWidgetAnnotation(params) {\n    _classCallCheck(this, ButtonWidgetAnnotation);\n\n    var _this4 = _possibleConstructorReturn(this, (ButtonWidgetAnnotation.__proto__ || Object.getPrototypeOf(ButtonWidgetAnnotation)).call(this, params));\n\n    _this4.data.checkBox = !_this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.radioButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.RADIO) && !_this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    _this4.data.pushButton = _this4.hasFieldFlag(_util.AnnotationFieldFlag.PUSHBUTTON);\n    if (_this4.data.checkBox) {\n      _this4._processCheckBox();\n    } else if (_this4.data.radioButton) {\n      _this4._processRadioButton(params);\n    } else if (_this4.data.pushButton) {\n      _this4._processPushButton(params);\n    } else {\n      (0, _util.warn)('Invalid field flags for button widget annotation');\n    }\n    return _this4;\n  }\n\n  _createClass(ButtonWidgetAnnotation, [{\n    key: '_processCheckBox',\n    value: function _processCheckBox() {\n      if (!(0, _primitives.isName)(this.data.fieldValue)) {\n        return;\n      }\n      this.data.fieldValue = this.data.fieldValue.name;\n    }\n  }, {\n    key: '_processRadioButton',\n    value: function _processRadioButton(params) {\n      this.data.fieldValue = this.data.buttonValue = null;\n      var fieldParent = params.dict.get('Parent');\n      if ((0, _primitives.isDict)(fieldParent) && fieldParent.has('V')) {\n        var fieldParentValue = fieldParent.get('V');\n        if ((0, _primitives.isName)(fieldParentValue)) {\n          this.data.fieldValue = fieldParentValue.name;\n        }\n      }\n      var appearanceStates = params.dict.get('AP');\n      if (!(0, _primitives.isDict)(appearanceStates)) {\n        return;\n      }\n      var normalAppearanceState = appearanceStates.get('N');\n      if (!(0, _primitives.isDict)(normalAppearanceState)) {\n        return;\n      }\n      var keys = normalAppearanceState.getKeys();\n      for (var i = 0, ii = keys.length; i < ii; i++) {\n        if (keys[i] !== 'Off') {\n          this.data.buttonValue = keys[i];\n          break;\n        }\n      }\n    }\n  }, {\n    key: '_processPushButton',\n    value: function _processPushButton(params) {\n      if (!params.dict.has('A')) {\n        (0, _util.warn)('Push buttons without action dictionaries are not supported');\n        return;\n      }\n      _obj.Catalog.parseDestDictionary({\n        destDict: params.dict,\n        resultObj: this.data,\n        docBaseUrl: params.pdfManager.docBaseUrl\n      });\n    }\n  }]);\n\n  return ButtonWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar ChoiceWidgetAnnotation = function (_WidgetAnnotation3) {\n  _inherits(ChoiceWidgetAnnotation, _WidgetAnnotation3);\n\n  function ChoiceWidgetAnnotation(params) {\n    _classCallCheck(this, ChoiceWidgetAnnotation);\n\n    var _this5 = _possibleConstructorReturn(this, (ChoiceWidgetAnnotation.__proto__ || Object.getPrototypeOf(ChoiceWidgetAnnotation)).call(this, params));\n\n    _this5.data.options = [];\n    var options = _util.Util.getInheritableProperty(params.dict, 'Opt');\n    if (Array.isArray(options)) {\n      var xref = params.xref;\n      for (var i = 0, ii = options.length; i < ii; i++) {\n        var option = xref.fetchIfRef(options[i]);\n        var isOptionArray = Array.isArray(option);\n        _this5.data.options[i] = {\n          exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n          displayValue: (0, _util.stringToPDFString)(isOptionArray ? xref.fetchIfRef(option[1]) : option)\n        };\n      }\n    }\n    if (!Array.isArray(_this5.data.fieldValue)) {\n      _this5.data.fieldValue = [_this5.data.fieldValue];\n    }\n    _this5.data.combo = _this5.hasFieldFlag(_util.AnnotationFieldFlag.COMBO);\n    _this5.data.multiSelect = _this5.hasFieldFlag(_util.AnnotationFieldFlag.MULTISELECT);\n    return _this5;\n  }\n\n  return ChoiceWidgetAnnotation;\n}(WidgetAnnotation);\n\nvar TextAnnotation = function (_Annotation2) {\n  _inherits(TextAnnotation, _Annotation2);\n\n  function TextAnnotation(parameters) {\n    _classCallCheck(this, TextAnnotation);\n\n    var DEFAULT_ICON_SIZE = 22;\n\n    var _this6 = _possibleConstructorReturn(this, (TextAnnotation.__proto__ || Object.getPrototypeOf(TextAnnotation)).call(this, parameters));\n\n    _this6.data.annotationType = _util.AnnotationType.TEXT;\n    if (_this6.data.hasAppearance) {\n      _this6.data.name = 'NoIcon';\n    } else {\n      _this6.data.rect[1] = _this6.data.rect[3] - DEFAULT_ICON_SIZE;\n      _this6.data.rect[2] = _this6.data.rect[0] + DEFAULT_ICON_SIZE;\n      _this6.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n    }\n    _this6._preparePopup(parameters.dict);\n    return _this6;\n  }\n\n  return TextAnnotation;\n}(Annotation);\n\nvar LinkAnnotation = function (_Annotation3) {\n  _inherits(LinkAnnotation, _Annotation3);\n\n  function LinkAnnotation(params) {\n    _classCallCheck(this, LinkAnnotation);\n\n    var _this7 = _possibleConstructorReturn(this, (LinkAnnotation.__proto__ || Object.getPrototypeOf(LinkAnnotation)).call(this, params));\n\n    _this7.data.annotationType = _util.AnnotationType.LINK;\n    _obj.Catalog.parseDestDictionary({\n      destDict: params.dict,\n      resultObj: _this7.data,\n      docBaseUrl: params.pdfManager.docBaseUrl\n    });\n    return _this7;\n  }\n\n  return LinkAnnotation;\n}(Annotation);\n\nvar PopupAnnotation = function (_Annotation4) {\n  _inherits(PopupAnnotation, _Annotation4);\n\n  function PopupAnnotation(parameters) {\n    _classCallCheck(this, PopupAnnotation);\n\n    var _this8 = _possibleConstructorReturn(this, (PopupAnnotation.__proto__ || Object.getPrototypeOf(PopupAnnotation)).call(this, parameters));\n\n    _this8.data.annotationType = _util.AnnotationType.POPUP;\n    var dict = parameters.dict;\n    var parentItem = dict.get('Parent');\n    if (!parentItem) {\n      (0, _util.warn)('Popup annotation has a missing or invalid parent annotation.');\n      return _possibleConstructorReturn(_this8);\n    }\n    var parentSubtype = parentItem.get('Subtype');\n    _this8.data.parentType = (0, _primitives.isName)(parentSubtype) ? parentSubtype.name : null;\n    _this8.data.parentId = dict.getRaw('Parent').toString();\n    _this8.data.title = (0, _util.stringToPDFString)(parentItem.get('T') || '');\n    _this8.data.contents = (0, _util.stringToPDFString)(parentItem.get('Contents') || '');\n    if (!parentItem.has('C')) {\n      _this8.data.color = null;\n    } else {\n      _this8.setColor(parentItem.getArray('C'));\n      _this8.data.color = _this8.color;\n    }\n    if (!_this8.viewable) {\n      var parentFlags = parentItem.get('F');\n      if (_this8._isViewable(parentFlags)) {\n        _this8.setFlags(parentFlags);\n      }\n    }\n    return _this8;\n  }\n\n  return PopupAnnotation;\n}(Annotation);\n\nvar LineAnnotation = function (_Annotation5) {\n  _inherits(LineAnnotation, _Annotation5);\n\n  function LineAnnotation(parameters) {\n    _classCallCheck(this, LineAnnotation);\n\n    var _this9 = _possibleConstructorReturn(this, (LineAnnotation.__proto__ || Object.getPrototypeOf(LineAnnotation)).call(this, parameters));\n\n    _this9.data.annotationType = _util.AnnotationType.LINE;\n    var dict = parameters.dict;\n    _this9.data.lineCoordinates = _util.Util.normalizeRect(dict.getArray('L'));\n    _this9._preparePopup(dict);\n    return _this9;\n  }\n\n  return LineAnnotation;\n}(Annotation);\n\nvar SquareAnnotation = function (_Annotation6) {\n  _inherits(SquareAnnotation, _Annotation6);\n\n  function SquareAnnotation(parameters) {\n    _classCallCheck(this, SquareAnnotation);\n\n    var _this10 = _possibleConstructorReturn(this, (SquareAnnotation.__proto__ || Object.getPrototypeOf(SquareAnnotation)).call(this, parameters));\n\n    _this10.data.annotationType = _util.AnnotationType.SQUARE;\n    _this10._preparePopup(parameters.dict);\n    return _this10;\n  }\n\n  return SquareAnnotation;\n}(Annotation);\n\nvar CircleAnnotation = function (_Annotation7) {\n  _inherits(CircleAnnotation, _Annotation7);\n\n  function CircleAnnotation(parameters) {\n    _classCallCheck(this, CircleAnnotation);\n\n    var _this11 = _possibleConstructorReturn(this, (CircleAnnotation.__proto__ || Object.getPrototypeOf(CircleAnnotation)).call(this, parameters));\n\n    _this11.data.annotationType = _util.AnnotationType.CIRCLE;\n    _this11._preparePopup(parameters.dict);\n    return _this11;\n  }\n\n  return CircleAnnotation;\n}(Annotation);\n\nvar PolylineAnnotation = function (_Annotation8) {\n  _inherits(PolylineAnnotation, _Annotation8);\n\n  function PolylineAnnotation(parameters) {\n    _classCallCheck(this, PolylineAnnotation);\n\n    var _this12 = _possibleConstructorReturn(this, (PolylineAnnotation.__proto__ || Object.getPrototypeOf(PolylineAnnotation)).call(this, parameters));\n\n    _this12.data.annotationType = _util.AnnotationType.POLYLINE;\n    var dict = parameters.dict;\n    var rawVertices = dict.getArray('Vertices');\n    _this12.data.vertices = [];\n    for (var i = 0, ii = rawVertices.length; i < ii; i += 2) {\n      _this12.data.vertices.push({\n        x: rawVertices[i],\n        y: rawVertices[i + 1]\n      });\n    }\n    _this12._preparePopup(dict);\n    return _this12;\n  }\n\n  return PolylineAnnotation;\n}(Annotation);\n\nvar PolygonAnnotation = function (_PolylineAnnotation) {\n  _inherits(PolygonAnnotation, _PolylineAnnotation);\n\n  function PolygonAnnotation(parameters) {\n    _classCallCheck(this, PolygonAnnotation);\n\n    var _this13 = _possibleConstructorReturn(this, (PolygonAnnotation.__proto__ || Object.getPrototypeOf(PolygonAnnotation)).call(this, parameters));\n\n    _this13.data.annotationType = _util.AnnotationType.POLYGON;\n    return _this13;\n  }\n\n  return PolygonAnnotation;\n}(PolylineAnnotation);\n\nvar HighlightAnnotation = function (_Annotation9) {\n  _inherits(HighlightAnnotation, _Annotation9);\n\n  function HighlightAnnotation(parameters) {\n    _classCallCheck(this, HighlightAnnotation);\n\n    var _this14 = _possibleConstructorReturn(this, (HighlightAnnotation.__proto__ || Object.getPrototypeOf(HighlightAnnotation)).call(this, parameters));\n\n    _this14.data.annotationType = _util.AnnotationType.HIGHLIGHT;\n    _this14._preparePopup(parameters.dict);\n    return _this14;\n  }\n\n  return HighlightAnnotation;\n}(Annotation);\n\nvar UnderlineAnnotation = function (_Annotation10) {\n  _inherits(UnderlineAnnotation, _Annotation10);\n\n  function UnderlineAnnotation(parameters) {\n    _classCallCheck(this, UnderlineAnnotation);\n\n    var _this15 = _possibleConstructorReturn(this, (UnderlineAnnotation.__proto__ || Object.getPrototypeOf(UnderlineAnnotation)).call(this, parameters));\n\n    _this15.data.annotationType = _util.AnnotationType.UNDERLINE;\n    _this15._preparePopup(parameters.dict);\n    return _this15;\n  }\n\n  return UnderlineAnnotation;\n}(Annotation);\n\nvar SquigglyAnnotation = function (_Annotation11) {\n  _inherits(SquigglyAnnotation, _Annotation11);\n\n  function SquigglyAnnotation(parameters) {\n    _classCallCheck(this, SquigglyAnnotation);\n\n    var _this16 = _possibleConstructorReturn(this, (SquigglyAnnotation.__proto__ || Object.getPrototypeOf(SquigglyAnnotation)).call(this, parameters));\n\n    _this16.data.annotationType = _util.AnnotationType.SQUIGGLY;\n    _this16._preparePopup(parameters.dict);\n    return _this16;\n  }\n\n  return SquigglyAnnotation;\n}(Annotation);\n\nvar StrikeOutAnnotation = function (_Annotation12) {\n  _inherits(StrikeOutAnnotation, _Annotation12);\n\n  function StrikeOutAnnotation(parameters) {\n    _classCallCheck(this, StrikeOutAnnotation);\n\n    var _this17 = _possibleConstructorReturn(this, (StrikeOutAnnotation.__proto__ || Object.getPrototypeOf(StrikeOutAnnotation)).call(this, parameters));\n\n    _this17.data.annotationType = _util.AnnotationType.STRIKEOUT;\n    _this17._preparePopup(parameters.dict);\n    return _this17;\n  }\n\n  return StrikeOutAnnotation;\n}(Annotation);\n\nvar StampAnnotation = function (_Annotation13) {\n  _inherits(StampAnnotation, _Annotation13);\n\n  function StampAnnotation(parameters) {\n    _classCallCheck(this, StampAnnotation);\n\n    var _this18 = _possibleConstructorReturn(this, (StampAnnotation.__proto__ || Object.getPrototypeOf(StampAnnotation)).call(this, parameters));\n\n    _this18.data.annotationType = _util.AnnotationType.STAMP;\n    _this18._preparePopup(parameters.dict);\n    return _this18;\n  }\n\n  return StampAnnotation;\n}(Annotation);\n\nvar FileAttachmentAnnotation = function (_Annotation14) {\n  _inherits(FileAttachmentAnnotation, _Annotation14);\n\n  function FileAttachmentAnnotation(parameters) {\n    _classCallCheck(this, FileAttachmentAnnotation);\n\n    var _this19 = _possibleConstructorReturn(this, (FileAttachmentAnnotation.__proto__ || Object.getPrototypeOf(FileAttachmentAnnotation)).call(this, parameters));\n\n    var file = new _obj.FileSpec(parameters.dict.get('FS'), parameters.xref);\n    _this19.data.annotationType = _util.AnnotationType.FILEATTACHMENT;\n    _this19.data.file = file.serializable;\n    _this19._preparePopup(parameters.dict);\n    return _this19;\n  }\n\n  return FileAttachmentAnnotation;\n}(Annotation);\n\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpxStream = undefined;\n\nvar _stream = require('./stream');\n\nvar _jpx = require('./jpx');\n\nvar _util = require('../shared/util');\n\nvar JpxStream = function JpxStreamClosure() {\n  function JpxStream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  JpxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(JpxStream.prototype, 'bytes', {\n    get: function JpxStream_bytes() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n    configurable: true\n  });\n  JpxStream.prototype.ensureBuffer = function (requested) {};\n  JpxStream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jpxImage = new _jpx.JpxImage();\n    jpxImage.parse(this.bytes);\n    var width = jpxImage.width;\n    var height = jpxImage.height;\n    var componentsCount = jpxImage.componentsCount;\n    var tileCount = jpxImage.tiles.length;\n    if (tileCount === 1) {\n      this.buffer = jpxImage.tiles[0].items;\n    } else {\n      var data = new Uint8ClampedArray(width * height * componentsCount);\n      for (var k = 0; k < tileCount; k++) {\n        var tileComponents = jpxImage.tiles[k];\n        var tileWidth = tileComponents.width;\n        var tileHeight = tileComponents.height;\n        var tileLeft = tileComponents.left;\n        var tileTop = tileComponents.top;\n        var src = tileComponents.items;\n        var srcPosition = 0;\n        var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n        var imgRowSize = width * componentsCount;\n        var tileRowSize = tileWidth * componentsCount;\n        for (var j = 0; j < tileHeight; j++) {\n          var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n          data.set(rowBytes, dataPosition);\n          srcPosition += tileRowSize;\n          dataPosition += imgRowSize;\n        }\n      }\n      this.buffer = data;\n    }\n    this.bufferLength = this.buffer.length;\n    this.eof = true;\n  };\n  return JpxStream;\n}();\nexports.JpxStream = JpxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.JpegImage = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _util = require('../shared/util');\n\nvar JpegError = function JpegErrorClosure() {\n  function JpegError(msg) {\n    this.message = 'JPEG error: ' + msg;\n  }\n  JpegError.prototype = new Error();\n  JpegError.prototype.name = 'JpegError';\n  JpegError.constructor = JpegError;\n  return JpegError;\n}();\nvar JpegImage = function JpegImageClosure() {\n  var dctZigZag = new Uint8Array([0, 1, 8, 16, 9, 2, 3, 10, 17, 24, 32, 25, 18, 11, 4, 5, 12, 19, 26, 33, 40, 48, 41, 34, 27, 20, 13, 6, 7, 14, 21, 28, 35, 42, 49, 56, 57, 50, 43, 36, 29, 22, 15, 23, 30, 37, 44, 51, 58, 59, 52, 45, 38, 31, 39, 46, 53, 60, 61, 54, 47, 55, 62, 63]);\n  var dctCos1 = 4017;\n  var dctSin1 = 799;\n  var dctCos3 = 3406;\n  var dctSin3 = 2276;\n  var dctCos6 = 1567;\n  var dctSin6 = 3784;\n  var dctSqrt2 = 5793;\n  var dctSqrt1d2 = 2896;\n  function JpegImage() {\n    this.decodeTransform = null;\n    this.colorTransform = -1;\n  }\n  function buildHuffmanTable(codeLengths, values) {\n    var k = 0,\n        code = [],\n        i,\n        j,\n        length = 16;\n    while (length > 0 && !codeLengths[length - 1]) {\n      length--;\n    }\n    code.push({\n      children: [],\n      index: 0\n    });\n    var p = code[0],\n        q;\n    for (i = 0; i < length; i++) {\n      for (j = 0; j < codeLengths[i]; j++) {\n        p = code.pop();\n        p.children[p.index] = values[k];\n        while (p.index > 0) {\n          p = code.pop();\n        }\n        p.index++;\n        code.push(p);\n        while (code.length <= i) {\n          code.push(q = {\n            children: [],\n            index: 0\n          });\n          p.children[p.index] = q.children;\n          p = q;\n        }\n        k++;\n      }\n      if (i + 1 < length) {\n        code.push(q = {\n          children: [],\n          index: 0\n        });\n        p.children[p.index] = q.children;\n        p = q;\n      }\n    }\n    return code[0].children;\n  }\n  function getBlockBufferOffset(component, row, col) {\n    return 64 * ((component.blocksPerLine + 1) * row + col);\n  }\n  function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n    var mcusPerLine = frame.mcusPerLine;\n    var progressive = frame.progressive;\n    var startOffset = offset,\n        bitsData = 0,\n        bitsCount = 0;\n    function readBit() {\n      if (bitsCount > 0) {\n        bitsCount--;\n        return bitsData >> bitsCount & 1;\n      }\n      bitsData = data[offset++];\n      if (bitsData === 0xFF) {\n        var nextByte = data[offset++];\n        if (nextByte) {\n          throw new JpegError('unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n        }\n      }\n      bitsCount = 7;\n      return bitsData >>> 7;\n    }\n    function decodeHuffman(tree) {\n      var node = tree;\n      while (true) {\n        node = node[readBit()];\n        if (typeof node === 'number') {\n          return node;\n        }\n        if ((typeof node === 'undefined' ? 'undefined' : _typeof(node)) !== 'object') {\n          throw new JpegError('invalid huffman sequence');\n        }\n      }\n    }\n    function receive(length) {\n      var n = 0;\n      while (length > 0) {\n        n = n << 1 | readBit();\n        length--;\n      }\n      return n;\n    }\n    function receiveAndExtend(length) {\n      if (length === 1) {\n        return readBit() === 1 ? 1 : -1;\n      }\n      var n = receive(length);\n      if (n >= 1 << length - 1) {\n        return n;\n      }\n      return n + (-1 << length) + 1;\n    }\n    function decodeBaseline(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t);\n      component.blockData[offset] = component.pred += diff;\n      var k = 1;\n      while (k < 64) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s);\n        k++;\n      }\n    }\n    function decodeDCFirst(component, offset) {\n      var t = decodeHuffman(component.huffmanTableDC);\n      var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n      component.blockData[offset] = component.pred += diff;\n    }\n    function decodeDCSuccessive(component, offset) {\n      component.blockData[offset] |= readBit() << successive;\n    }\n    var eobrun = 0;\n    function decodeACFirst(component, offset) {\n      if (eobrun > 0) {\n        eobrun--;\n        return;\n      }\n      var k = spectralStart,\n          e = spectralEnd;\n      while (k <= e) {\n        var rs = decodeHuffman(component.huffmanTableAC);\n        var s = rs & 15,\n            r = rs >> 4;\n        if (s === 0) {\n          if (r < 15) {\n            eobrun = receive(r) + (1 << r) - 1;\n            break;\n          }\n          k += 16;\n          continue;\n        }\n        k += r;\n        var z = dctZigZag[k];\n        component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n        k++;\n      }\n    }\n    var successiveACState = 0,\n        successiveACNextValue;\n    function decodeACSuccessive(component, offset) {\n      var k = spectralStart;\n      var e = spectralEnd;\n      var r = 0;\n      var s;\n      var rs;\n      while (k <= e) {\n        var offsetZ = offset + dctZigZag[k];\n        var sign = component.blockData[offsetZ] < 0 ? -1 : 1;\n        switch (successiveACState) {\n          case 0:\n            rs = decodeHuffman(component.huffmanTableAC);\n            s = rs & 15;\n            r = rs >> 4;\n            if (s === 0) {\n              if (r < 15) {\n                eobrun = receive(r) + (1 << r);\n                successiveACState = 4;\n              } else {\n                r = 16;\n                successiveACState = 1;\n              }\n            } else {\n              if (s !== 1) {\n                throw new JpegError('invalid ACn encoding');\n              }\n              successiveACNextValue = receiveAndExtend(s);\n              successiveACState = r ? 2 : 3;\n            }\n            continue;\n          case 1:\n          case 2:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              r--;\n              if (r === 0) {\n                successiveACState = successiveACState === 2 ? 3 : 0;\n              }\n            }\n            break;\n          case 3:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            } else {\n              component.blockData[offsetZ] = successiveACNextValue << successive;\n              successiveACState = 0;\n            }\n            break;\n          case 4:\n            if (component.blockData[offsetZ]) {\n              component.blockData[offsetZ] += sign * (readBit() << successive);\n            }\n            break;\n        }\n        k++;\n      }\n      if (successiveACState === 4) {\n        eobrun--;\n        if (eobrun === 0) {\n          successiveACState = 0;\n        }\n      }\n    }\n    function decodeMcu(component, decode, mcu, row, col) {\n      var mcuRow = mcu / mcusPerLine | 0;\n      var mcuCol = mcu % mcusPerLine;\n      var blockRow = mcuRow * component.v + row;\n      var blockCol = mcuCol * component.h + col;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    function decodeBlock(component, decode, mcu) {\n      var blockRow = mcu / component.blocksPerLine | 0;\n      var blockCol = mcu % component.blocksPerLine;\n      var offset = getBlockBufferOffset(component, blockRow, blockCol);\n      decode(component, offset);\n    }\n    var componentsLength = components.length;\n    var component, i, j, k, n;\n    var decodeFn;\n    if (progressive) {\n      if (spectralStart === 0) {\n        decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n      } else {\n        decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n      }\n    } else {\n      decodeFn = decodeBaseline;\n    }\n    var mcu = 0,\n        fileMarker;\n    var mcuExpected;\n    if (componentsLength === 1) {\n      mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n    } else {\n      mcuExpected = mcusPerLine * frame.mcusPerColumn;\n    }\n    var h, v;\n    while (mcu < mcuExpected) {\n      var mcuToRead = resetInterval ? Math.min(mcuExpected - mcu, resetInterval) : mcuExpected;\n      for (i = 0; i < componentsLength; i++) {\n        components[i].pred = 0;\n      }\n      eobrun = 0;\n      if (componentsLength === 1) {\n        component = components[0];\n        for (n = 0; n < mcuToRead; n++) {\n          decodeBlock(component, decodeFn, mcu);\n          mcu++;\n        }\n      } else {\n        for (n = 0; n < mcuToRead; n++) {\n          for (i = 0; i < componentsLength; i++) {\n            component = components[i];\n            h = component.h;\n            v = component.v;\n            for (j = 0; j < v; j++) {\n              for (k = 0; k < h; k++) {\n                decodeMcu(component, decodeFn, mcu, j, k);\n              }\n            }\n          }\n          mcu++;\n        }\n      }\n      bitsCount = 0;\n      fileMarker = findNextFileMarker(data, offset);\n      if (fileMarker && fileMarker.invalid) {\n        (0, _util.warn)('decodeScan - unexpected MCU data, next marker is: ' + fileMarker.invalid);\n        offset = fileMarker.offset;\n      }\n      var marker = fileMarker && fileMarker.marker;\n      if (!marker || marker <= 0xFF00) {\n        throw new JpegError('marker was not found');\n      }\n      if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n        offset += 2;\n      } else {\n        break;\n      }\n    }\n    fileMarker = findNextFileMarker(data, offset);\n    if (fileMarker && fileMarker.invalid) {\n      (0, _util.warn)('decodeScan - unexpected Scan data, next marker is: ' + fileMarker.invalid);\n      offset = fileMarker.offset;\n    }\n    return offset - startOffset;\n  }\n  function quantizeAndInverse(component, blockBufferOffset, p) {\n    var qt = component.quantizationTable,\n        blockData = component.blockData;\n    var v0, v1, v2, v3, v4, v5, v6, v7;\n    var p0, p1, p2, p3, p4, p5, p6, p7;\n    var t;\n    if (!qt) {\n      throw new JpegError('missing required Quantization Table.');\n    }\n    for (var row = 0; row < 64; row += 8) {\n      p0 = blockData[blockBufferOffset + row];\n      p1 = blockData[blockBufferOffset + row + 1];\n      p2 = blockData[blockBufferOffset + row + 2];\n      p3 = blockData[blockBufferOffset + row + 3];\n      p4 = blockData[blockBufferOffset + row + 4];\n      p5 = blockData[blockBufferOffset + row + 5];\n      p6 = blockData[blockBufferOffset + row + 6];\n      p7 = blockData[blockBufferOffset + row + 7];\n      p0 *= qt[row];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 512 >> 10;\n        p[row] = t;\n        p[row + 1] = t;\n        p[row + 2] = t;\n        p[row + 3] = t;\n        p[row + 4] = t;\n        p[row + 5] = t;\n        p[row + 6] = t;\n        p[row + 7] = t;\n        continue;\n      }\n      p1 *= qt[row + 1];\n      p2 *= qt[row + 2];\n      p3 *= qt[row + 3];\n      p4 *= qt[row + 4];\n      p5 *= qt[row + 5];\n      p6 *= qt[row + 6];\n      p7 *= qt[row + 7];\n      v0 = dctSqrt2 * p0 + 128 >> 8;\n      v1 = dctSqrt2 * p4 + 128 >> 8;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n      v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n      v5 = p3 << 4;\n      v6 = p5 << 4;\n      v0 = v0 + v1 + 1 >> 1;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p[row] = v0 + v7;\n      p[row + 7] = v0 - v7;\n      p[row + 1] = v1 + v6;\n      p[row + 6] = v1 - v6;\n      p[row + 2] = v2 + v5;\n      p[row + 5] = v2 - v5;\n      p[row + 3] = v3 + v4;\n      p[row + 4] = v3 - v4;\n    }\n    for (var col = 0; col < 8; ++col) {\n      p0 = p[col];\n      p1 = p[col + 8];\n      p2 = p[col + 16];\n      p3 = p[col + 24];\n      p4 = p[col + 32];\n      p5 = p[col + 40];\n      p6 = p[col + 48];\n      p7 = p[col + 56];\n      if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n        t = dctSqrt2 * p0 + 8192 >> 14;\n        t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n        blockData[blockBufferOffset + col] = t;\n        blockData[blockBufferOffset + col + 8] = t;\n        blockData[blockBufferOffset + col + 16] = t;\n        blockData[blockBufferOffset + col + 24] = t;\n        blockData[blockBufferOffset + col + 32] = t;\n        blockData[blockBufferOffset + col + 40] = t;\n        blockData[blockBufferOffset + col + 48] = t;\n        blockData[blockBufferOffset + col + 56] = t;\n        continue;\n      }\n      v0 = dctSqrt2 * p0 + 2048 >> 12;\n      v1 = dctSqrt2 * p4 + 2048 >> 12;\n      v2 = p2;\n      v3 = p6;\n      v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n      v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n      v5 = p3;\n      v6 = p5;\n      v0 = (v0 + v1 + 1 >> 1) + 4112;\n      v1 = v0 - v1;\n      t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n      v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n      v3 = t;\n      v4 = v4 + v6 + 1 >> 1;\n      v6 = v4 - v6;\n      v7 = v7 + v5 + 1 >> 1;\n      v5 = v7 - v5;\n      v0 = v0 + v3 + 1 >> 1;\n      v3 = v0 - v3;\n      v1 = v1 + v2 + 1 >> 1;\n      v2 = v1 - v2;\n      t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n      v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n      v7 = t;\n      t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n      v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n      v6 = t;\n      p0 = v0 + v7;\n      p7 = v0 - v7;\n      p1 = v1 + v6;\n      p6 = v1 - v6;\n      p2 = v2 + v5;\n      p5 = v2 - v5;\n      p3 = v3 + v4;\n      p4 = v3 - v4;\n      p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n      p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n      p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n      p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n      p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n      p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n      p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n      p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n      blockData[blockBufferOffset + col] = p0;\n      blockData[blockBufferOffset + col + 8] = p1;\n      blockData[blockBufferOffset + col + 16] = p2;\n      blockData[blockBufferOffset + col + 24] = p3;\n      blockData[blockBufferOffset + col + 32] = p4;\n      blockData[blockBufferOffset + col + 40] = p5;\n      blockData[blockBufferOffset + col + 48] = p6;\n      blockData[blockBufferOffset + col + 56] = p7;\n    }\n  }\n  function buildComponentData(frame, component) {\n    var blocksPerLine = component.blocksPerLine;\n    var blocksPerColumn = component.blocksPerColumn;\n    var computationBuffer = new Int16Array(64);\n    for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n      for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n        var offset = getBlockBufferOffset(component, blockRow, blockCol);\n        quantizeAndInverse(component, offset, computationBuffer);\n      }\n    }\n    return component.blockData;\n  }\n  function findNextFileMarker(data, currentPos, startPos) {\n    function peekUint16(pos) {\n      return data[pos] << 8 | data[pos + 1];\n    }\n    var maxPos = data.length - 1;\n    var newPos = startPos < currentPos ? startPos : currentPos;\n    if (currentPos >= maxPos) {\n      return null;\n    }\n    var currentMarker = peekUint16(currentPos);\n    if (currentMarker >= 0xFFC0 && currentMarker <= 0xFFFE) {\n      return {\n        invalid: null,\n        marker: currentMarker,\n        offset: currentPos\n      };\n    }\n    var newMarker = peekUint16(newPos);\n    while (!(newMarker >= 0xFFC0 && newMarker <= 0xFFFE)) {\n      if (++newPos >= maxPos) {\n        return null;\n      }\n      newMarker = peekUint16(newPos);\n    }\n    return {\n      invalid: currentMarker.toString(16),\n      marker: newMarker,\n      offset: newPos\n    };\n  }\n  JpegImage.prototype = {\n    parse: function parse(data) {\n      function readUint16() {\n        var value = data[offset] << 8 | data[offset + 1];\n        offset += 2;\n        return value;\n      }\n      function readDataBlock() {\n        var length = readUint16();\n        var endOffset = offset + length - 2;\n        var fileMarker = findNextFileMarker(data, endOffset, offset);\n        if (fileMarker && fileMarker.invalid) {\n          (0, _util.warn)('readDataBlock - incorrect length, next marker is: ' + fileMarker.invalid);\n          endOffset = fileMarker.offset;\n        }\n        var array = data.subarray(offset, endOffset);\n        offset += array.length;\n        return array;\n      }\n      function prepareComponents(frame) {\n        var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n        var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n        for (var i = 0; i < frame.components.length; i++) {\n          component = frame.components[i];\n          var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n          var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n          var blocksPerLineForMcu = mcusPerLine * component.h;\n          var blocksPerColumnForMcu = mcusPerColumn * component.v;\n          var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n          component.blockData = new Int16Array(blocksBufferSize);\n          component.blocksPerLine = blocksPerLine;\n          component.blocksPerColumn = blocksPerColumn;\n        }\n        frame.mcusPerLine = mcusPerLine;\n        frame.mcusPerColumn = mcusPerColumn;\n      }\n      var offset = 0;\n      var jfif = null;\n      var adobe = null;\n      var frame, resetInterval;\n      var quantizationTables = [];\n      var huffmanTablesAC = [],\n          huffmanTablesDC = [];\n      var fileMarker = readUint16();\n      if (fileMarker !== 0xFFD8) {\n        throw new JpegError('SOI not found');\n      }\n      fileMarker = readUint16();\n      while (fileMarker !== 0xFFD9) {\n        var i, j, l;\n        switch (fileMarker) {\n          case 0xFFE0:\n          case 0xFFE1:\n          case 0xFFE2:\n          case 0xFFE3:\n          case 0xFFE4:\n          case 0xFFE5:\n          case 0xFFE6:\n          case 0xFFE7:\n          case 0xFFE8:\n          case 0xFFE9:\n          case 0xFFEA:\n          case 0xFFEB:\n          case 0xFFEC:\n          case 0xFFED:\n          case 0xFFEE:\n          case 0xFFEF:\n          case 0xFFFE:\n            var appData = readDataBlock();\n            if (fileMarker === 0xFFE0) {\n              if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n                jfif = {\n                  version: {\n                    major: appData[5],\n                    minor: appData[6]\n                  },\n                  densityUnits: appData[7],\n                  xDensity: appData[8] << 8 | appData[9],\n                  yDensity: appData[10] << 8 | appData[11],\n                  thumbWidth: appData[12],\n                  thumbHeight: appData[13],\n                  thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n                };\n              }\n            }\n            if (fileMarker === 0xFFEE) {\n              if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n                adobe = {\n                  version: appData[5] << 8 | appData[6],\n                  flags0: appData[7] << 8 | appData[8],\n                  flags1: appData[9] << 8 | appData[10],\n                  transformCode: appData[11]\n                };\n              }\n            }\n            break;\n          case 0xFFDB:\n            var quantizationTablesLength = readUint16();\n            var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n            var z;\n            while (offset < quantizationTablesEnd) {\n              var quantizationTableSpec = data[offset++];\n              var tableData = new Uint16Array(64);\n              if (quantizationTableSpec >> 4 === 0) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = data[offset++];\n                }\n              } else if (quantizationTableSpec >> 4 === 1) {\n                for (j = 0; j < 64; j++) {\n                  z = dctZigZag[j];\n                  tableData[z] = readUint16();\n                }\n              } else {\n                throw new JpegError('DQT - invalid table spec');\n              }\n              quantizationTables[quantizationTableSpec & 15] = tableData;\n            }\n            break;\n          case 0xFFC0:\n          case 0xFFC1:\n          case 0xFFC2:\n            if (frame) {\n              throw new JpegError('Only single frame JPEGs supported');\n            }\n            readUint16();\n            frame = {};\n            frame.extended = fileMarker === 0xFFC1;\n            frame.progressive = fileMarker === 0xFFC2;\n            frame.precision = data[offset++];\n            frame.scanLines = readUint16();\n            frame.samplesPerLine = readUint16();\n            frame.components = [];\n            frame.componentIds = {};\n            var componentsCount = data[offset++],\n                componentId;\n            var maxH = 0,\n                maxV = 0;\n            for (i = 0; i < componentsCount; i++) {\n              componentId = data[offset];\n              var h = data[offset + 1] >> 4;\n              var v = data[offset + 1] & 15;\n              if (maxH < h) {\n                maxH = h;\n              }\n              if (maxV < v) {\n                maxV = v;\n              }\n              var qId = data[offset + 2];\n              l = frame.components.push({\n                h: h,\n                v: v,\n                quantizationId: qId,\n                quantizationTable: null\n              });\n              frame.componentIds[componentId] = l - 1;\n              offset += 3;\n            }\n            frame.maxH = maxH;\n            frame.maxV = maxV;\n            prepareComponents(frame);\n            break;\n          case 0xFFC4:\n            var huffmanLength = readUint16();\n            for (i = 2; i < huffmanLength;) {\n              var huffmanTableSpec = data[offset++];\n              var codeLengths = new Uint8Array(16);\n              var codeLengthSum = 0;\n              for (j = 0; j < 16; j++, offset++) {\n                codeLengthSum += codeLengths[j] = data[offset];\n              }\n              var huffmanValues = new Uint8Array(codeLengthSum);\n              for (j = 0; j < codeLengthSum; j++, offset++) {\n                huffmanValues[j] = data[offset];\n              }\n              i += 17 + codeLengthSum;\n              (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n            }\n            break;\n          case 0xFFDD:\n            readUint16();\n            resetInterval = readUint16();\n            break;\n          case 0xFFDA:\n            readUint16();\n            var selectorsCount = data[offset++];\n            var components = [],\n                component;\n            for (i = 0; i < selectorsCount; i++) {\n              var componentIndex = frame.componentIds[data[offset++]];\n              component = frame.components[componentIndex];\n              var tableSpec = data[offset++];\n              component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n              component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n              components.push(component);\n            }\n            var spectralStart = data[offset++];\n            var spectralEnd = data[offset++];\n            var successiveApproximation = data[offset++];\n            var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n            offset += processed;\n            break;\n          case 0xFFFF:\n            if (data[offset] !== 0xFF) {\n              offset--;\n            }\n            break;\n          default:\n            if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n              offset -= 3;\n              break;\n            }\n            throw new JpegError('unknown marker ' + fileMarker.toString(16));\n        }\n        fileMarker = readUint16();\n      }\n      this.width = frame.samplesPerLine;\n      this.height = frame.scanLines;\n      this.jfif = jfif;\n      this.adobe = adobe;\n      this.components = [];\n      for (i = 0; i < frame.components.length; i++) {\n        component = frame.components[i];\n        var quantizationTable = quantizationTables[component.quantizationId];\n        if (quantizationTable) {\n          component.quantizationTable = quantizationTable;\n        }\n        this.components.push({\n          output: buildComponentData(frame, component),\n          scaleX: component.h / frame.maxH,\n          scaleY: component.v / frame.maxV,\n          blocksPerLine: component.blocksPerLine,\n          blocksPerColumn: component.blocksPerColumn\n        });\n      }\n      this.numComponents = this.components.length;\n    },\n    _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n      var scaleX = this.width / width,\n          scaleY = this.height / height;\n      var component, componentScaleX, componentScaleY, blocksPerScanline;\n      var x, y, i, j, k;\n      var index;\n      var offset = 0;\n      var output;\n      var numComponents = this.components.length;\n      var dataLength = width * height * numComponents;\n      var data = new Uint8ClampedArray(dataLength);\n      var xScaleBlockOffset = new Uint32Array(width);\n      var mask3LSB = 0xfffffff8;\n      for (i = 0; i < numComponents; i++) {\n        component = this.components[i];\n        componentScaleX = component.scaleX * scaleX;\n        componentScaleY = component.scaleY * scaleY;\n        offset = i;\n        output = component.output;\n        blocksPerScanline = component.blocksPerLine + 1 << 3;\n        for (x = 0; x < width; x++) {\n          j = 0 | x * componentScaleX;\n          xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n        }\n        for (y = 0; y < height; y++) {\n          j = 0 | y * componentScaleY;\n          index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n          for (x = 0; x < width; x++) {\n            data[offset] = output[index + xScaleBlockOffset[x]];\n            offset += numComponents;\n          }\n        }\n      }\n      var transform = this.decodeTransform;\n      if (transform) {\n        for (i = 0; i < dataLength;) {\n          for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n            data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n          }\n        }\n      }\n      return data;\n    },\n    _isColorConversionNeeded: function _isColorConversionNeeded() {\n      if (this.adobe) {\n        return !!this.adobe.transformCode;\n      }\n      if (this.numComponents === 3) {\n        if (this.colorTransform === 0) {\n          return false;\n        }\n        return true;\n      }\n      if (this.colorTransform === 1) {\n        return true;\n      }\n      return false;\n    },\n\n    _convertYccToRgb: function convertYccToRgb(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 3) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = Y - 179.456 + 1.402 * Cr;\n        data[i + 1] = Y + 135.459 - 0.344 * Cb - 0.714 * Cr;\n        data[i + 2] = Y - 226.816 + 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertYcckToRgb: function convertYcckToRgb(data) {\n      var Y, Cb, Cr, k;\n      var offset = 0;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        k = data[i + 3];\n        data[offset++] = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n        data[offset++] = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n        data[offset++] = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n      }\n      return data;\n    },\n    _convertYcckToCmyk: function convertYcckToCmyk(data) {\n      var Y, Cb, Cr;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        Y = data[i];\n        Cb = data[i + 1];\n        Cr = data[i + 2];\n        data[i] = 434.456 - Y - 1.402 * Cr;\n        data[i + 1] = 119.541 - Y + 0.344 * Cb + 0.714 * Cr;\n        data[i + 2] = 481.816 - Y - 1.772 * Cb;\n      }\n      return data;\n    },\n    _convertCmykToRgb: function convertCmykToRgb(data) {\n      var c, m, y, k;\n      var offset = 0;\n      var scale = 1 / 255;\n      for (var i = 0, length = data.length; i < length; i += 4) {\n        c = data[i] * scale;\n        m = data[i + 1] * scale;\n        y = data[i + 2] * scale;\n        k = data[i + 3] * scale;\n        data[offset++] = 255 + c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) - k * (21.86122147463605 * k + 189.48180835922747);\n        data[offset++] = 255 + c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) - k * (20.737325471181034 * k + 187.80453709719578);\n        data[offset++] = 255 + c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 193.58209356861505) - k * (22.33816807309886 * k + 180.12613974708367);\n      }\n      return data;\n    },\n    getData: function getData(width, height, forceRGBoutput) {\n      if (this.numComponents > 4) {\n        throw new JpegError('Unsupported color mode');\n      }\n      var data = this._getLinearizedBlockData(width, height);\n      if (this.numComponents === 1 && forceRGBoutput) {\n        var dataLength = data.length;\n        var rgbData = new Uint8ClampedArray(dataLength * 3);\n        var offset = 0;\n        for (var i = 0; i < dataLength; i++) {\n          var grayColor = data[i];\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n          rgbData[offset++] = grayColor;\n        }\n        return rgbData;\n      } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n        return this._convertYccToRgb(data);\n      } else if (this.numComponents === 4) {\n        if (this._isColorConversionNeeded()) {\n          if (forceRGBoutput) {\n            return this._convertYcckToRgb(data);\n          }\n          return this._convertYcckToCmyk(data);\n        } else if (forceRGBoutput) {\n          return this._convertCmykToRgb(data);\n        }\n      }\n      return data;\n    }\n  };\n  return JpegImage;\n}();\nexports.JpegImage = JpegImage;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Image = undefined;\n\nvar _util = require('../shared/util');\n\nvar _arithmetic_decoder = require('./arithmetic_decoder');\n\nvar _ccitt = require('./ccitt');\n\nvar Jbig2Error = function Jbig2ErrorClosure() {\n  function Jbig2Error(msg) {\n    this.message = 'JBIG2 error: ' + msg;\n  }\n  Jbig2Error.prototype = new Error();\n  Jbig2Error.prototype.name = 'Jbig2Error';\n  Jbig2Error.constructor = Jbig2Error;\n  return Jbig2Error;\n}();\nvar Jbig2Image = function Jbig2ImageClosure() {\n  function ContextCache() {}\n  ContextCache.prototype = {\n    getContexts: function getContexts(id) {\n      if (id in this) {\n        return this[id];\n      }\n      return this[id] = new Int8Array(1 << 16);\n    }\n  };\n  function DecodingContext(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n  }\n  DecodingContext.prototype = {\n    get decoder() {\n      var decoder = new _arithmetic_decoder.ArithmeticDecoder(this.data, this.start, this.end);\n      return (0, _util.shadow)(this, 'decoder', decoder);\n    },\n    get contextCache() {\n      var cache = new ContextCache();\n      return (0, _util.shadow)(this, 'contextCache', cache);\n    }\n  };\n  function decodeInteger(contextCache, procedure, decoder) {\n    var contexts = contextCache.getContexts(procedure);\n    var prev = 1;\n    function readBits(length) {\n      var v = 0;\n      for (var i = 0; i < length; i++) {\n        var bit = decoder.readBit(contexts, prev);\n        prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n        v = v << 1 | bit;\n      }\n      return v >>> 0;\n    }\n    var sign = readBits(1);\n    var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n    return sign === 0 ? value : value > 0 ? -value : null;\n  }\n  function decodeIAID(contextCache, decoder, codeLength) {\n    var contexts = contextCache.getContexts('IAID');\n    var prev = 1;\n    for (var i = 0; i < codeLength; i++) {\n      var bit = decoder.readBit(contexts, prev);\n      prev = prev << 1 | bit;\n    }\n    if (codeLength < 31) {\n      return prev & (1 << codeLength) - 1;\n    }\n    return prev & 0x7FFFFFFF;\n  }\n  var SegmentTypes = ['SymbolDictionary', null, null, null, 'IntermediateTextRegion', null, 'ImmediateTextRegion', 'ImmediateLosslessTextRegion', null, null, null, null, null, null, null, null, 'PatternDictionary', null, null, null, 'IntermediateHalftoneRegion', null, 'ImmediateHalftoneRegion', 'ImmediateLosslessHalftoneRegion', null, null, null, null, null, null, null, null, null, null, null, null, 'IntermediateGenericRegion', null, 'ImmediateGenericRegion', 'ImmediateLosslessGenericRegion', 'IntermediateGenericRefinementRegion', null, 'ImmediateGenericRefinementRegion', 'ImmediateLosslessGenericRefinementRegion', null, null, null, null, 'PageInformation', 'EndOfPage', 'EndOfStripe', 'EndOfFile', 'Profiles', 'Tables', null, null, null, null, null, null, null, null, 'Extension'];\n  var CodingTemplates = [[{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: 2,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: 2,\n    y: -1\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -1,\n    y: -2\n  }, {\n    x: 0,\n    y: -2\n  }, {\n    x: 1,\n    y: -2\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }], [{\n    x: -3,\n    y: -1\n  }, {\n    x: -2,\n    y: -1\n  }, {\n    x: -1,\n    y: -1\n  }, {\n    x: 0,\n    y: -1\n  }, {\n    x: 1,\n    y: -1\n  }, {\n    x: -4,\n    y: 0\n  }, {\n    x: -3,\n    y: 0\n  }, {\n    x: -2,\n    y: 0\n  }, {\n    x: -1,\n    y: 0\n  }]];\n  var RefinementTemplates = [{\n    coding: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: -1,\n      y: 1\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }, {\n    coding: [{\n      x: -1,\n      y: -1\n    }, {\n      x: 0,\n      y: -1\n    }, {\n      x: 1,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }],\n    reference: [{\n      x: 0,\n      y: -1\n    }, {\n      x: -1,\n      y: 0\n    }, {\n      x: 0,\n      y: 0\n    }, {\n      x: 1,\n      y: 0\n    }, {\n      x: 0,\n      y: 1\n    }, {\n      x: 1,\n      y: 1\n    }]\n  }];\n  var ReusedContexts = [0x9B25, 0x0795, 0x00E5, 0x0195];\n  var RefinementReusedContexts = [0x0020, 0x0008];\n  function decodeBitmapTemplate0(width, height, decodingContext) {\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var contextLabel,\n        i,\n        j,\n        pixel,\n        row,\n        row1,\n        row2,\n        bitmap = [];\n    var OLD_PIXEL_MASK = 0x7BF7;\n    for (i = 0; i < height; i++) {\n      row = bitmap[i] = new Uint8Array(width);\n      row1 = i < 1 ? row : bitmap[i - 1];\n      row2 = i < 2 ? row : bitmap[i - 2];\n      contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n      for (j = 0; j < width; j++) {\n        row[j] = pixel = decoder.readBit(contexts, contextLabel);\n        contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n    if (mmr) {\n      var input = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n      return decodeMMRBitmap(input, width, height, false);\n    }\n    if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n      return decodeBitmapTemplate0(width, height, decodingContext);\n    }\n    var useskip = !!skip;\n    var template = CodingTemplates[templateIndex].concat(at);\n    template.sort(function (a, b) {\n      return a.y - b.y || a.x - b.x;\n    });\n    var templateLength = template.length;\n    var templateX = new Int8Array(templateLength);\n    var templateY = new Int8Array(templateLength);\n    var changingTemplateEntries = [];\n    var reuseMask = 0,\n        minX = 0,\n        maxX = 0,\n        minY = 0;\n    var c, k;\n    for (k = 0; k < templateLength; k++) {\n      templateX[k] = template[k].x;\n      templateY[k] = template[k].y;\n      minX = Math.min(minX, template[k].x);\n      maxX = Math.max(maxX, template[k].x);\n      minY = Math.min(minY, template[k].y);\n      if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n        reuseMask |= 1 << templateLength - 1 - k;\n      } else {\n        changingTemplateEntries.push(k);\n      }\n    }\n    var changingEntriesLength = changingTemplateEntries.length;\n    var changingTemplateX = new Int8Array(changingEntriesLength);\n    var changingTemplateY = new Int8Array(changingEntriesLength);\n    var changingTemplateBit = new Uint16Array(changingEntriesLength);\n    for (c = 0; c < changingEntriesLength; c++) {\n      k = changingTemplateEntries[c];\n      changingTemplateX[c] = template[k].x;\n      changingTemplateY[c] = template[k].y;\n      changingTemplateBit[c] = 1 << templateLength - 1 - k;\n    }\n    var sbb_left = -minX;\n    var sbb_top = -minY;\n    var sbb_right = width - maxX;\n    var pseudoPixelContext = ReusedContexts[templateIndex];\n    var row = new Uint8Array(width);\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GB');\n    var ltp = 0,\n        j,\n        i0,\n        j0,\n        contextLabel = 0,\n        bit,\n        shift;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          bitmap.push(row);\n          continue;\n        }\n      }\n      row = new Uint8Array(row);\n      bitmap.push(row);\n      for (j = 0; j < width; j++) {\n        if (useskip && skip[i][j]) {\n          row[j] = 0;\n          continue;\n        }\n        if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n          contextLabel = contextLabel << 1 & reuseMask;\n          for (k = 0; k < changingEntriesLength; k++) {\n            i0 = i + changingTemplateY[k];\n            j0 = j + changingTemplateX[k];\n            bit = bitmap[i0][j0];\n            if (bit) {\n              bit = changingTemplateBit[k];\n              contextLabel |= bit;\n            }\n          }\n        } else {\n          contextLabel = 0;\n          shift = templateLength - 1;\n          for (k = 0; k < templateLength; k++, shift--) {\n            j0 = j + templateX[k];\n            if (j0 >= 0 && j0 < width) {\n              i0 = i + templateY[k];\n              if (i0 >= 0) {\n                bit = bitmap[i0][j0];\n                if (bit) {\n                  contextLabel |= bit << shift;\n                }\n              }\n            }\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n    var codingTemplate = RefinementTemplates[templateIndex].coding;\n    if (templateIndex === 0) {\n      codingTemplate = codingTemplate.concat([at[0]]);\n    }\n    var codingTemplateLength = codingTemplate.length;\n    var codingTemplateX = new Int32Array(codingTemplateLength);\n    var codingTemplateY = new Int32Array(codingTemplateLength);\n    var k;\n    for (k = 0; k < codingTemplateLength; k++) {\n      codingTemplateX[k] = codingTemplate[k].x;\n      codingTemplateY[k] = codingTemplate[k].y;\n    }\n    var referenceTemplate = RefinementTemplates[templateIndex].reference;\n    if (templateIndex === 0) {\n      referenceTemplate = referenceTemplate.concat([at[1]]);\n    }\n    var referenceTemplateLength = referenceTemplate.length;\n    var referenceTemplateX = new Int32Array(referenceTemplateLength);\n    var referenceTemplateY = new Int32Array(referenceTemplateLength);\n    for (k = 0; k < referenceTemplateLength; k++) {\n      referenceTemplateX[k] = referenceTemplate[k].x;\n      referenceTemplateY[k] = referenceTemplate[k].y;\n    }\n    var referenceWidth = referenceBitmap[0].length;\n    var referenceHeight = referenceBitmap.length;\n    var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n    var bitmap = [];\n    var decoder = decodingContext.decoder;\n    var contexts = decodingContext.contextCache.getContexts('GR');\n    var ltp = 0;\n    for (var i = 0; i < height; i++) {\n      if (prediction) {\n        var sltp = decoder.readBit(contexts, pseudoPixelContext);\n        ltp ^= sltp;\n        if (ltp) {\n          throw new Jbig2Error('prediction is not supported');\n        }\n      }\n      var row = new Uint8Array(width);\n      bitmap.push(row);\n      for (var j = 0; j < width; j++) {\n        var i0, j0;\n        var contextLabel = 0;\n        for (k = 0; k < codingTemplateLength; k++) {\n          i0 = i + codingTemplateY[k];\n          j0 = j + codingTemplateX[k];\n          if (i0 < 0 || j0 < 0 || j0 >= width) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | bitmap[i0][j0];\n          }\n        }\n        for (k = 0; k < referenceTemplateLength; k++) {\n          i0 = i + referenceTemplateY[k] - offsetY;\n          j0 = j + referenceTemplateX[k] - offsetX;\n          if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n            contextLabel <<= 1;\n          } else {\n            contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n          }\n        }\n        var pixel = decoder.readBit(contexts, contextLabel);\n        row[j] = pixel;\n      }\n    }\n    return bitmap;\n  }\n  function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('symbol refinement with Huffman is not supported');\n    }\n    var newSymbols = [];\n    var currentHeight = 0;\n    var symbolCodeLength = (0, _util.log2)(symbols.length + numberOfNewSymbols);\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var tableB1 = void 0,\n        symbolWidths = void 0;\n    if (huffman) {\n      tableB1 = getStandardTable(1);\n      symbolWidths = [];\n      symbolCodeLength = Math.max(symbolCodeLength, 1);\n    }\n    while (newSymbols.length < numberOfNewSymbols) {\n      var deltaHeight = huffman ? huffmanTables.tableDeltaHeight.decode(huffmanInput) : decodeInteger(contextCache, 'IADH', decoder);\n      currentHeight += deltaHeight;\n      var currentWidth = 0,\n          totalWidth = 0;\n      var firstSymbol = huffman ? symbolWidths.length : 0;\n      while (true) {\n        var deltaWidth = huffman ? huffmanTables.tableDeltaWidth.decode(huffmanInput) : decodeInteger(contextCache, 'IADW', decoder);\n        if (deltaWidth === null) {\n          break;\n        }\n        currentWidth += deltaWidth;\n        totalWidth += currentWidth;\n        var bitmap;\n        if (refinement) {\n          var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n          if (numberOfInstances > 1) {\n            bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, 0, huffmanInput);\n          } else {\n            var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n            var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n            var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n            var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n            bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n          }\n          newSymbols.push(bitmap);\n        } else if (huffman) {\n          symbolWidths.push(currentWidth);\n        } else {\n          bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n          newSymbols.push(bitmap);\n        }\n      }\n      if (huffman && !refinement) {\n        var bitmapSize = huffmanTables.tableBitmapSize.decode(huffmanInput);\n        huffmanInput.byteAlign();\n        var collectiveBitmap = void 0;\n        if (bitmapSize === 0) {\n          collectiveBitmap = readUncompressedBitmap(huffmanInput, totalWidth, currentHeight);\n        } else {\n          var originalEnd = huffmanInput.end;\n          var bitmapEnd = huffmanInput.position + bitmapSize;\n          huffmanInput.end = bitmapEnd;\n          collectiveBitmap = decodeMMRBitmap(huffmanInput, totalWidth, currentHeight, false);\n          huffmanInput.end = originalEnd;\n          huffmanInput.position = bitmapEnd;\n        }\n        var numberOfSymbolsDecoded = symbolWidths.length;\n        if (firstSymbol === numberOfSymbolsDecoded - 1) {\n          newSymbols.push(collectiveBitmap);\n        } else {\n          var _i = void 0,\n              y = void 0,\n              xMin = 0,\n              xMax = void 0,\n              bitmapWidth = void 0,\n              symbolBitmap = void 0;\n          for (_i = firstSymbol; _i < numberOfSymbolsDecoded; _i++) {\n            bitmapWidth = symbolWidths[_i];\n            xMax = xMin + bitmapWidth;\n            symbolBitmap = [];\n            for (y = 0; y < currentHeight; y++) {\n              symbolBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n            }\n            newSymbols.push(symbolBitmap);\n            xMin = xMax;\n          }\n        }\n      }\n    }\n    var exportedSymbols = [];\n    var flags = [],\n        currentFlag = false;\n    var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n    while (flags.length < totalSymbolsLength) {\n      var runLength = huffman ? tableB1.decode(huffmanInput) : decodeInteger(contextCache, 'IAEX', decoder);\n      while (runLength--) {\n        flags.push(currentFlag);\n      }\n      currentFlag = !currentFlag;\n    }\n    for (var i = 0, ii = symbols.length; i < ii; i++) {\n      if (flags[i]) {\n        exportedSymbols.push(symbols[i]);\n      }\n    }\n    for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n      if (flags[i]) {\n        exportedSymbols.push(newSymbols[j]);\n      }\n    }\n    return exportedSymbols;\n  }\n  function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext, logStripSize, huffmanInput) {\n    if (huffman && refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    var bitmap = [];\n    var i, row;\n    for (i = 0; i < height; i++) {\n      row = new Uint8Array(width);\n      if (defaultPixelValue) {\n        for (var j = 0; j < width; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      bitmap.push(row);\n    }\n    var decoder = decodingContext.decoder;\n    var contextCache = decodingContext.contextCache;\n    var stripT = huffman ? -huffmanTables.tableDeltaT.decode(huffmanInput) : -decodeInteger(contextCache, 'IADT', decoder);\n    var firstS = 0;\n    i = 0;\n    while (i < numberOfSymbolInstances) {\n      var deltaT = huffman ? huffmanTables.tableDeltaT.decode(huffmanInput) : decodeInteger(contextCache, 'IADT', decoder);\n      stripT += deltaT;\n      var deltaFirstS = huffman ? huffmanTables.tableFirstS.decode(huffmanInput) : decodeInteger(contextCache, 'IAFS', decoder);\n      firstS += deltaFirstS;\n      var currentS = firstS;\n      do {\n        var currentT = 0;\n        if (stripSize > 1) {\n          currentT = huffman ? huffmanInput.readBits(logStripSize) : decodeInteger(contextCache, 'IAIT', decoder);\n        }\n        var t = stripSize * stripT + currentT;\n        var symbolId = huffman ? huffmanTables.symbolIDTable.decode(huffmanInput) : decodeIAID(contextCache, decoder, symbolCodeLength);\n        var applyRefinement = refinement && (huffman ? huffmanInput.readBit() : decodeInteger(contextCache, 'IARI', decoder));\n        var symbolBitmap = inputSymbols[symbolId];\n        var symbolWidth = symbolBitmap[0].length;\n        var symbolHeight = symbolBitmap.length;\n        if (applyRefinement) {\n          var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n          var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n          var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n          var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n          symbolWidth += rdw;\n          symbolHeight += rdh;\n          symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n        }\n        var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight - 1);\n        var offsetS = currentS - (referenceCorner & 2 ? symbolWidth - 1 : 0);\n        var s2, t2, symbolRow;\n        if (transposed) {\n          for (s2 = 0; s2 < symbolHeight; s2++) {\n            row = bitmap[offsetS + s2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[s2];\n            var maxWidth = Math.min(width - offsetT, symbolWidth);\n            switch (combinationOperator) {\n              case 0:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] |= symbolRow[t2];\n                }\n                break;\n              case 2:\n                for (t2 = 0; t2 < maxWidth; t2++) {\n                  row[offsetT + t2] ^= symbolRow[t2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolHeight - 1;\n        } else {\n          for (t2 = 0; t2 < symbolHeight; t2++) {\n            row = bitmap[offsetT + t2];\n            if (!row) {\n              continue;\n            }\n            symbolRow = symbolBitmap[t2];\n            switch (combinationOperator) {\n              case 0:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] |= symbolRow[s2];\n                }\n                break;\n              case 2:\n                for (s2 = 0; s2 < symbolWidth; s2++) {\n                  row[offsetS + s2] ^= symbolRow[s2];\n                }\n                break;\n              default:\n                throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n            }\n          }\n          currentS += symbolWidth - 1;\n        }\n        i++;\n        var deltaS = huffman ? huffmanTables.tableDeltaS.decode(huffmanInput) : decodeInteger(contextCache, 'IADS', decoder);\n        if (deltaS === null) {\n          break;\n        }\n        currentS += deltaS + dsOffset;\n      } while (true);\n    }\n    return bitmap;\n  }\n  function decodePatternDictionary(mmr, patternWidth, patternHeight, maxPatternIndex, template, decodingContext) {\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: -patternWidth,\n        y: 0\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var collectiveWidth = (maxPatternIndex + 1) * patternWidth;\n    var collectiveBitmap = decodeBitmap(mmr, collectiveWidth, patternHeight, template, false, null, at, decodingContext);\n    var patterns = [],\n        i = 0,\n        patternBitmap = void 0,\n        xMin = void 0,\n        xMax = void 0,\n        y = void 0;\n    while (i <= maxPatternIndex) {\n      patternBitmap = [];\n      xMin = patternWidth * i;\n      xMax = xMin + patternWidth;\n      for (y = 0; y < patternHeight; y++) {\n        patternBitmap.push(collectiveBitmap[y].subarray(xMin, xMax));\n      }\n      patterns.push(patternBitmap);\n      i++;\n    }\n    return patterns;\n  }\n  function decodeHalftoneRegion(mmr, patterns, template, regionWidth, regionHeight, defaultPixelValue, enableSkip, combinationOperator, gridWidth, gridHeight, gridOffsetX, gridOffsetY, gridVectorX, gridVectorY, decodingContext) {\n    var skip = null;\n    if (enableSkip) {\n      throw new Jbig2Error('skip is not supported');\n    }\n    if (combinationOperator !== 0) {\n      throw new Jbig2Error('operator ' + combinationOperator + ' is not supported in halftone region');\n    }\n    var regionBitmap = [];\n    var i = void 0,\n        j = void 0,\n        row = void 0;\n    for (i = 0; i < regionHeight; i++) {\n      row = new Uint8Array(regionWidth);\n      if (defaultPixelValue) {\n        for (j = 0; j < regionWidth; j++) {\n          row[j] = defaultPixelValue;\n        }\n      }\n      regionBitmap.push(row);\n    }\n    var numberOfPatterns = patterns.length;\n    var pattern0 = patterns[0];\n    var patternWidth = pattern0[0].length,\n        patternHeight = pattern0.length;\n    var bitsPerValue = (0, _util.log2)(numberOfPatterns);\n    var at = [];\n    if (!mmr) {\n      at.push({\n        x: template <= 1 ? 3 : 2,\n        y: -1\n      });\n      if (template === 0) {\n        at.push({\n          x: -3,\n          y: -1\n        });\n        at.push({\n          x: 2,\n          y: -2\n        });\n        at.push({\n          x: -2,\n          y: -2\n        });\n      }\n    }\n    var grayScaleBitPlanes = [],\n        mmrInput = void 0,\n        bitmap = void 0;\n    if (mmr) {\n      mmrInput = new Reader(decodingContext.data, decodingContext.start, decodingContext.end);\n    }\n    for (i = bitsPerValue - 1; i >= 0; i--) {\n      if (mmr) {\n        bitmap = decodeMMRBitmap(mmrInput, gridWidth, gridHeight, true);\n      } else {\n        bitmap = decodeBitmap(false, gridWidth, gridHeight, template, false, skip, at, decodingContext);\n      }\n      grayScaleBitPlanes[i] = bitmap;\n    }\n    var mg = void 0,\n        ng = void 0,\n        bit = void 0,\n        patternIndex = void 0,\n        patternBitmap = void 0,\n        x = void 0,\n        y = void 0,\n        patternRow = void 0,\n        regionRow = void 0;\n    for (mg = 0; mg < gridHeight; mg++) {\n      for (ng = 0; ng < gridWidth; ng++) {\n        bit = 0;\n        patternIndex = 0;\n        for (j = bitsPerValue - 1; j >= 0; j--) {\n          bit = grayScaleBitPlanes[j][mg][ng] ^ bit;\n          patternIndex |= bit << j;\n        }\n        patternBitmap = patterns[patternIndex];\n        x = gridOffsetX + mg * gridVectorY + ng * gridVectorX >> 8;\n        y = gridOffsetY + mg * gridVectorX - ng * gridVectorY >> 8;\n        if (x >= 0 && x + patternWidth <= regionWidth && y >= 0 && y + patternHeight <= regionHeight) {\n          for (i = 0; i < patternHeight; i++) {\n            regionRow = regionBitmap[y + i];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionRow[x + j] |= patternRow[j];\n            }\n          }\n        } else {\n          var regionX = void 0,\n              regionY = void 0;\n          for (i = 0; i < patternHeight; i++) {\n            regionY = y + i;\n            if (regionY < 0 || regionY >= regionHeight) {\n              continue;\n            }\n            regionRow = regionBitmap[regionY];\n            patternRow = patternBitmap[i];\n            for (j = 0; j < patternWidth; j++) {\n              regionX = x + j;\n              if (regionX >= 0 && regionX < regionWidth) {\n                regionRow[regionX] |= patternRow[j];\n              }\n            }\n          }\n        }\n      }\n    }\n    return regionBitmap;\n  }\n  function readSegmentHeader(data, start) {\n    var segmentHeader = {};\n    segmentHeader.number = (0, _util.readUint32)(data, start);\n    var flags = data[start + 4];\n    var segmentType = flags & 0x3F;\n    if (!SegmentTypes[segmentType]) {\n      throw new Jbig2Error('invalid segment type: ' + segmentType);\n    }\n    segmentHeader.type = segmentType;\n    segmentHeader.typeName = SegmentTypes[segmentType];\n    segmentHeader.deferredNonRetain = !!(flags & 0x80);\n    var pageAssociationFieldSize = !!(flags & 0x40);\n    var referredFlags = data[start + 5];\n    var referredToCount = referredFlags >> 5 & 7;\n    var retainBits = [referredFlags & 31];\n    var position = start + 6;\n    if (referredFlags === 7) {\n      referredToCount = (0, _util.readUint32)(data, position - 1) & 0x1FFFFFFF;\n      position += 3;\n      var bytes = referredToCount + 7 >> 3;\n      retainBits[0] = data[position++];\n      while (--bytes > 0) {\n        retainBits.push(data[position++]);\n      }\n    } else if (referredFlags === 5 || referredFlags === 6) {\n      throw new Jbig2Error('invalid referred-to flags');\n    }\n    segmentHeader.retainBits = retainBits;\n    var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n    var referredTo = [];\n    var i, ii;\n    for (i = 0; i < referredToCount; i++) {\n      var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? (0, _util.readUint16)(data, position) : (0, _util.readUint32)(data, position);\n      referredTo.push(number);\n      position += referredToSegmentNumberSize;\n    }\n    segmentHeader.referredTo = referredTo;\n    if (!pageAssociationFieldSize) {\n      segmentHeader.pageAssociation = data[position++];\n    } else {\n      segmentHeader.pageAssociation = (0, _util.readUint32)(data, position);\n      position += 4;\n    }\n    segmentHeader.length = (0, _util.readUint32)(data, position);\n    position += 4;\n    if (segmentHeader.length === 0xFFFFFFFF) {\n      if (segmentType === 38) {\n        var genericRegionInfo = readRegionSegmentInformation(data, position);\n        var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n        var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n        var searchPatternLength = 6;\n        var searchPattern = new Uint8Array(searchPatternLength);\n        if (!genericRegionMmr) {\n          searchPattern[0] = 0xFF;\n          searchPattern[1] = 0xAC;\n        }\n        searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n        searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n        searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n        searchPattern[5] = genericRegionInfo.height & 0xFF;\n        for (i = position, ii = data.length; i < ii; i++) {\n          var j = 0;\n          while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n            j++;\n          }\n          if (j === searchPatternLength) {\n            segmentHeader.length = i + searchPatternLength;\n            break;\n          }\n        }\n        if (segmentHeader.length === 0xFFFFFFFF) {\n          throw new Jbig2Error('segment end was not found');\n        }\n      } else {\n        throw new Jbig2Error('invalid unknown segment length');\n      }\n    }\n    segmentHeader.headerEnd = position;\n    return segmentHeader;\n  }\n  function readSegments(header, data, start, end) {\n    var segments = [];\n    var position = start;\n    while (position < end) {\n      var segmentHeader = readSegmentHeader(data, position);\n      position = segmentHeader.headerEnd;\n      var segment = {\n        header: segmentHeader,\n        data: data\n      };\n      if (!header.randomAccess) {\n        segment.start = position;\n        position += segmentHeader.length;\n        segment.end = position;\n      }\n      segments.push(segment);\n      if (segmentHeader.type === 51) {\n        break;\n      }\n    }\n    if (header.randomAccess) {\n      for (var i = 0, ii = segments.length; i < ii; i++) {\n        segments[i].start = position;\n        position += segments[i].header.length;\n        segments[i].end = position;\n      }\n    }\n    return segments;\n  }\n  function readRegionSegmentInformation(data, start) {\n    return {\n      width: (0, _util.readUint32)(data, start),\n      height: (0, _util.readUint32)(data, start + 4),\n      x: (0, _util.readUint32)(data, start + 8),\n      y: (0, _util.readUint32)(data, start + 12),\n      combinationOperator: data[start + 16] & 7\n    };\n  }\n  var RegionSegmentInformationFieldLength = 17;\n  function processSegment(segment, visitor) {\n    var header = segment.header;\n    var data = segment.data,\n        position = segment.start,\n        end = segment.end;\n    var args, at, i, atLength;\n    switch (header.type) {\n      case 0:\n        var dictionary = {};\n        var dictionaryFlags = (0, _util.readUint16)(data, position);\n        dictionary.huffman = !!(dictionaryFlags & 1);\n        dictionary.refinement = !!(dictionaryFlags & 2);\n        dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n        dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n        dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n        dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n        dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n        dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n        dictionary.template = dictionaryFlags >> 10 & 3;\n        dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n        position += 2;\n        if (!dictionary.huffman) {\n          atLength = dictionary.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.at = at;\n        }\n        if (dictionary.refinement && !dictionary.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          dictionary.refinementAt = at;\n        }\n        dictionary.numberOfExportedSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        dictionary.numberOfNewSymbols = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [dictionary, header.number, header.referredTo, data, position, end];\n        break;\n      case 6:\n      case 7:\n        var textRegion = {};\n        textRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var textRegionSegmentFlags = (0, _util.readUint16)(data, position);\n        position += 2;\n        textRegion.huffman = !!(textRegionSegmentFlags & 1);\n        textRegion.refinement = !!(textRegionSegmentFlags & 2);\n        textRegion.logStripSize = textRegionSegmentFlags >> 2 & 3;\n        textRegion.stripSize = 1 << textRegion.logStripSize;\n        textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n        textRegion.transposed = !!(textRegionSegmentFlags & 64);\n        textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n        textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n        textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n        textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n        if (textRegion.huffman) {\n          var textRegionHuffmanFlags = (0, _util.readUint16)(data, position);\n          position += 2;\n          textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n          textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n          textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n          textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n          textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n          textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n          textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n          textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 0x4000);\n        }\n        if (textRegion.refinement && !textRegion.refinementTemplate) {\n          at = [];\n          for (i = 0; i < 2; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          textRegion.refinementAt = at;\n        }\n        textRegion.numberOfSymbolInstances = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [textRegion, header.referredTo, data, position, end];\n        break;\n      case 16:\n        var patternDictionary = {};\n        var patternDictionaryFlags = data[position++];\n        patternDictionary.mmr = !!(patternDictionaryFlags & 1);\n        patternDictionary.template = patternDictionaryFlags >> 1 & 3;\n        patternDictionary.patternWidth = data[position++];\n        patternDictionary.patternHeight = data[position++];\n        patternDictionary.maxPatternIndex = (0, _util.readUint32)(data, position);\n        position += 4;\n        args = [patternDictionary, header.number, data, position, end];\n        break;\n      case 22:\n      case 23:\n        var halftoneRegion = {};\n        halftoneRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var halftoneRegionFlags = data[position++];\n        halftoneRegion.mmr = !!(halftoneRegionFlags & 1);\n        halftoneRegion.template = halftoneRegionFlags >> 1 & 3;\n        halftoneRegion.enableSkip = !!(halftoneRegionFlags & 8);\n        halftoneRegion.combinationOperator = halftoneRegionFlags >> 4 & 7;\n        halftoneRegion.defaultPixelValue = halftoneRegionFlags >> 7 & 1;\n        halftoneRegion.gridWidth = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridHeight = (0, _util.readUint32)(data, position);\n        position += 4;\n        halftoneRegion.gridOffsetX = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridOffsetY = (0, _util.readUint32)(data, position) & 0xFFFFFFFF;\n        position += 4;\n        halftoneRegion.gridVectorX = (0, _util.readUint16)(data, position);\n        position += 2;\n        halftoneRegion.gridVectorY = (0, _util.readUint16)(data, position);\n        position += 2;\n        args = [halftoneRegion, header.referredTo, data, position, end];\n        break;\n      case 38:\n      case 39:\n        var genericRegion = {};\n        genericRegion.info = readRegionSegmentInformation(data, position);\n        position += RegionSegmentInformationFieldLength;\n        var genericRegionSegmentFlags = data[position++];\n        genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n        genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n        genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n        if (!genericRegion.mmr) {\n          atLength = genericRegion.template === 0 ? 4 : 1;\n          at = [];\n          for (i = 0; i < atLength; i++) {\n            at.push({\n              x: (0, _util.readInt8)(data, position),\n              y: (0, _util.readInt8)(data, position + 1)\n            });\n            position += 2;\n          }\n          genericRegion.at = at;\n        }\n        args = [genericRegion, data, position, end];\n        break;\n      case 48:\n        var pageInfo = {\n          width: (0, _util.readUint32)(data, position),\n          height: (0, _util.readUint32)(data, position + 4),\n          resolutionX: (0, _util.readUint32)(data, position + 8),\n          resolutionY: (0, _util.readUint32)(data, position + 12)\n        };\n        if (pageInfo.height === 0xFFFFFFFF) {\n          delete pageInfo.height;\n        }\n        var pageSegmentFlags = data[position + 16];\n        (0, _util.readUint16)(data, position + 17);\n        pageInfo.lossless = !!(pageSegmentFlags & 1);\n        pageInfo.refinement = !!(pageSegmentFlags & 2);\n        pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n        pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n        pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n        pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n        args = [pageInfo];\n        break;\n      case 49:\n        break;\n      case 50:\n        break;\n      case 51:\n        break;\n      case 53:\n        args = [header.number, data, position, end];\n        break;\n      case 62:\n        break;\n      default:\n        throw new Jbig2Error('segment type ' + header.typeName + '(' + header.type + ')' + ' is not implemented');\n    }\n    var callbackName = 'on' + header.typeName;\n    if (callbackName in visitor) {\n      visitor[callbackName].apply(visitor, args);\n    }\n  }\n  function processSegments(segments, visitor) {\n    for (var i = 0, ii = segments.length; i < ii; i++) {\n      processSegment(segments[i], visitor);\n    }\n  }\n  function parseJbig2Chunks(chunks) {\n    var visitor = new SimpleSegmentVisitor();\n    for (var i = 0, ii = chunks.length; i < ii; i++) {\n      var chunk = chunks[i];\n      var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n      processSegments(segments, visitor);\n    }\n    return visitor.buffer;\n  }\n  function SimpleSegmentVisitor() {}\n  SimpleSegmentVisitor.prototype = {\n    onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n      this.currentPageInfo = info;\n      var rowSize = info.width + 7 >> 3;\n      var buffer = new Uint8ClampedArray(rowSize * info.height);\n      if (info.defaultPixelValue) {\n        for (var i = 0, ii = buffer.length; i < ii; i++) {\n          buffer[i] = 0xFF;\n        }\n      }\n      this.buffer = buffer;\n    },\n    drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n      var pageInfo = this.currentPageInfo;\n      var width = regionInfo.width,\n          height = regionInfo.height;\n      var rowSize = pageInfo.width + 7 >> 3;\n      var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n      var buffer = this.buffer;\n      var mask0 = 128 >> (regionInfo.x & 7);\n      var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n      var i, j, mask, offset;\n      switch (combinationOperator) {\n        case 0:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] |= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        case 2:\n          for (i = 0; i < height; i++) {\n            mask = mask0;\n            offset = offset0;\n            for (j = 0; j < width; j++) {\n              if (bitmap[i][j]) {\n                buffer[offset] ^= mask;\n              }\n              mask >>= 1;\n              if (!mask) {\n                mask = 128;\n                offset++;\n              }\n            }\n            offset0 += rowSize;\n          }\n          break;\n        default:\n          throw new Jbig2Error('operator ' + combinationOperator + ' is not supported');\n      }\n    },\n    onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n      this.onImmediateGenericRegion.apply(this, arguments);\n    },\n    onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      if (dictionary.huffman) {\n        huffmanTables = getSymbolDictionaryHuffmanTables(dictionary, referredSegments, this.customTables);\n        huffmanInput = new Reader(data, start, end);\n      }\n      var symbols = this.symbols;\n      if (!symbols) {\n        this.symbols = symbols = {};\n      }\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext, huffmanInput);\n    },\n    onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n      var regionInfo = region.info;\n      var huffmanTables = void 0,\n          huffmanInput = void 0;\n      var symbols = this.symbols;\n      var inputSymbols = [];\n      for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n        var referredSymbols = symbols[referredSegments[i]];\n        if (referredSymbols) {\n          inputSymbols = inputSymbols.concat(referredSymbols);\n        }\n      }\n      var symbolCodeLength = (0, _util.log2)(inputSymbols.length);\n      if (region.huffman) {\n        huffmanInput = new Reader(data, start, end);\n        huffmanTables = getTextRegionHuffmanTables(region, referredSegments, this.customTables, inputSymbols.length, huffmanInput);\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext, region.logStripSize, huffmanInput);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n      this.onImmediateTextRegion.apply(this, arguments);\n    },\n    onPatternDictionary: function onPatternDictionary(dictionary, currentSegment, data, start, end) {\n      var patterns = this.patterns;\n      if (!patterns) {\n        this.patterns = patterns = {};\n      }\n      var decodingContext = new DecodingContext(data, start, end);\n      patterns[currentSegment] = decodePatternDictionary(dictionary.mmr, dictionary.patternWidth, dictionary.patternHeight, dictionary.maxPatternIndex, dictionary.template, decodingContext);\n    },\n    onImmediateHalftoneRegion: function onImmediateHalftoneRegion(region, referredSegments, data, start, end) {\n      var patterns = this.patterns[referredSegments[0]];\n      var regionInfo = region.info;\n      var decodingContext = new DecodingContext(data, start, end);\n      var bitmap = decodeHalftoneRegion(region.mmr, patterns, region.template, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.enableSkip, region.combinationOperator, region.gridWidth, region.gridHeight, region.gridOffsetX, region.gridOffsetY, region.gridVectorX, region.gridVectorY, decodingContext);\n      this.drawBitmap(regionInfo, bitmap);\n    },\n    onImmediateLosslessHalftoneRegion: function onImmediateLosslessHalftoneRegion() {\n      this.onImmediateHalftoneRegion.apply(this, arguments);\n    },\n    onTables: function onTables(currentSegment, data, start, end) {\n      var customTables = this.customTables;\n      if (!customTables) {\n        this.customTables = customTables = {};\n      }\n      customTables[currentSegment] = decodeTablesSegment(data, start, end);\n    }\n  };\n  function HuffmanLine(lineData) {\n    if (lineData.length === 2) {\n      this.isOOB = true;\n      this.rangeLow = 0;\n      this.prefixLength = lineData[0];\n      this.rangeLength = 0;\n      this.prefixCode = lineData[1];\n      this.isLowerRange = false;\n    } else {\n      this.isOOB = false;\n      this.rangeLow = lineData[0];\n      this.prefixLength = lineData[1];\n      this.rangeLength = lineData[2];\n      this.prefixCode = lineData[3];\n      this.isLowerRange = lineData[4] === 'lower';\n    }\n  }\n  function HuffmanTreeNode(line) {\n    this.children = [];\n    if (line) {\n      this.isLeaf = true;\n      this.rangeLength = line.rangeLength;\n      this.rangeLow = line.rangeLow;\n      this.isLowerRange = line.isLowerRange;\n      this.isOOB = line.isOOB;\n    } else {\n      this.isLeaf = false;\n    }\n  }\n  HuffmanTreeNode.prototype = {\n    buildTree: function buildTree(line, shift) {\n      var bit = line.prefixCode >> shift & 1;\n      if (shift <= 0) {\n        this.children[bit] = new HuffmanTreeNode(line);\n      } else {\n        var node = this.children[bit];\n        if (!node) {\n          this.children[bit] = node = new HuffmanTreeNode(null);\n        }\n        node.buildTree(line, shift - 1);\n      }\n    },\n    decodeNode: function decodeNode(reader) {\n      if (this.isLeaf) {\n        if (this.isOOB) {\n          return null;\n        }\n        var htOffset = reader.readBits(this.rangeLength);\n        return this.rangeLow + (this.isLowerRange ? -htOffset : htOffset);\n      }\n      var node = this.children[reader.readBit()];\n      if (!node) {\n        throw new Jbig2Error('invalid Huffman data');\n      }\n      return node.decodeNode(reader);\n    }\n  };\n  function HuffmanTable(lines, prefixCodesDone) {\n    if (!prefixCodesDone) {\n      this.assignPrefixCodes(lines);\n    }\n    this.rootNode = new HuffmanTreeNode(null);\n    var i = void 0,\n        ii = lines.length,\n        line = void 0;\n    for (i = 0; i < ii; i++) {\n      line = lines[i];\n      if (line.prefixLength > 0) {\n        this.rootNode.buildTree(line, line.prefixLength - 1);\n      }\n    }\n  }\n  HuffmanTable.prototype = {\n    decode: function decode(reader) {\n      return this.rootNode.decodeNode(reader);\n    },\n    assignPrefixCodes: function assignPrefixCodes(lines) {\n      var linesLength = lines.length,\n          prefixLengthMax = 0,\n          i = void 0;\n      for (i = 0; i < linesLength; i++) {\n        prefixLengthMax = Math.max(prefixLengthMax, lines[i].prefixLength);\n      }\n      var histogram = new Uint32Array(prefixLengthMax + 1);\n      for (i = 0; i < linesLength; i++) {\n        histogram[lines[i].prefixLength]++;\n      }\n      var currentLength = 1,\n          firstCode = 0,\n          currentCode = void 0,\n          currentTemp = void 0,\n          line = void 0;\n      histogram[0] = 0;\n      while (currentLength <= prefixLengthMax) {\n        firstCode = firstCode + histogram[currentLength - 1] << 1;\n        currentCode = firstCode;\n        currentTemp = 0;\n        while (currentTemp < linesLength) {\n          line = lines[currentTemp];\n          if (line.prefixLength === currentLength) {\n            line.prefixCode = currentCode;\n            currentCode++;\n          }\n          currentTemp++;\n        }\n        currentLength++;\n      }\n    }\n  };\n  function decodeTablesSegment(data, start, end) {\n    var flags = data[start];\n    var lowestValue = (0, _util.readUint32)(data, start + 1) & 0xFFFFFFFF;\n    var highestValue = (0, _util.readUint32)(data, start + 5) & 0xFFFFFFFF;\n    var reader = new Reader(data, start + 9, end);\n    var prefixSizeBits = (flags >> 1 & 7) + 1;\n    var rangeSizeBits = (flags >> 4 & 7) + 1;\n    var lines = [];\n    var prefixLength = void 0,\n        rangeLength = void 0,\n        currentRangeLow = lowestValue;\n    do {\n      prefixLength = reader.readBits(prefixSizeBits);\n      rangeLength = reader.readBits(rangeSizeBits);\n      lines.push(new HuffmanLine([currentRangeLow, prefixLength, rangeLength, 0]));\n      currentRangeLow += 1 << rangeLength;\n    } while (currentRangeLow < highestValue);\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([lowestValue - 1, prefixLength, 32, 0, 'lower']));\n    prefixLength = reader.readBits(prefixSizeBits);\n    lines.push(new HuffmanLine([highestValue, prefixLength, 32, 0]));\n    if (flags & 1) {\n      prefixLength = reader.readBits(prefixSizeBits);\n      lines.push(new HuffmanLine([prefixLength, 0]));\n    }\n    return new HuffmanTable(lines, false);\n  }\n  var standardTablesCache = {};\n  function getStandardTable(number) {\n    var table = standardTablesCache[number];\n    if (table) {\n      return table;\n    }\n    var lines = void 0;\n    switch (number) {\n      case 1:\n        lines = [[0, 1, 4, 0x0], [16, 2, 8, 0x2], [272, 3, 16, 0x6], [65808, 3, 32, 0x7]];\n        break;\n      case 2:\n        lines = [[0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [75, 6, 32, 0x3E], [6, 0x3F]];\n        break;\n      case 3:\n        lines = [[-256, 8, 8, 0xFE], [0, 1, 0, 0x0], [1, 2, 0, 0x2], [2, 3, 0, 0x6], [3, 4, 3, 0xE], [11, 5, 6, 0x1E], [-257, 8, 32, 0xFF, 'lower'], [75, 7, 32, 0x7E], [6, 0x3E]];\n        break;\n      case 4:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [76, 5, 32, 0x1F]];\n        break;\n      case 5:\n        lines = [[-255, 7, 8, 0x7E], [1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 0, 0x6], [4, 4, 3, 0xE], [12, 5, 6, 0x1E], [-256, 7, 32, 0x7F, 'lower'], [76, 6, 32, 0x3E]];\n        break;\n      case 6:\n        lines = [[-2048, 5, 10, 0x1C], [-1024, 4, 9, 0x8], [-512, 4, 8, 0x9], [-256, 4, 7, 0xA], [-128, 5, 6, 0x1D], [-64, 5, 5, 0x1E], [-32, 4, 5, 0xB], [0, 2, 7, 0x0], [128, 3, 7, 0x2], [256, 3, 8, 0x3], [512, 4, 9, 0xC], [1024, 4, 10, 0xD], [-2049, 6, 32, 0x3E, 'lower'], [2048, 6, 32, 0x3F]];\n        break;\n      case 7:\n        lines = [[-1024, 4, 9, 0x8], [-512, 3, 8, 0x0], [-256, 4, 7, 0x9], [-128, 5, 6, 0x1A], [-64, 5, 5, 0x1B], [-32, 4, 5, 0xA], [0, 4, 5, 0xB], [32, 5, 5, 0x1C], [64, 5, 6, 0x1D], [128, 4, 7, 0xC], [256, 3, 8, 0x1], [512, 3, 9, 0x2], [1024, 3, 10, 0x3], [-1025, 5, 32, 0x1E, 'lower'], [2048, 5, 32, 0x1F]];\n        break;\n      case 8:\n        lines = [[-15, 8, 3, 0xFC], [-7, 9, 1, 0x1FC], [-5, 8, 1, 0xFD], [-3, 9, 0, 0x1FD], [-2, 7, 0, 0x7C], [-1, 4, 0, 0xA], [0, 2, 1, 0x0], [2, 5, 0, 0x1A], [3, 6, 0, 0x3A], [4, 3, 4, 0x4], [20, 6, 1, 0x3B], [22, 4, 4, 0xB], [38, 4, 5, 0xC], [70, 5, 6, 0x1B], [134, 5, 7, 0x1C], [262, 6, 7, 0x3C], [390, 7, 8, 0x7D], [646, 6, 10, 0x3D], [-16, 9, 32, 0x1FE, 'lower'], [1670, 9, 32, 0x1FF], [2, 0x1]];\n        break;\n      case 9:\n        lines = [[-31, 8, 4, 0xFC], [-15, 9, 2, 0x1FC], [-11, 8, 2, 0xFD], [-7, 9, 1, 0x1FD], [-5, 7, 1, 0x7C], [-3, 4, 1, 0xA], [-1, 3, 1, 0x2], [1, 3, 1, 0x3], [3, 5, 1, 0x1A], [5, 6, 1, 0x3A], [7, 3, 5, 0x4], [39, 6, 2, 0x3B], [43, 4, 5, 0xB], [75, 4, 6, 0xC], [139, 5, 7, 0x1B], [267, 5, 8, 0x1C], [523, 6, 8, 0x3C], [779, 7, 9, 0x7D], [1291, 6, 11, 0x3D], [-32, 9, 32, 0x1FE, 'lower'], [3339, 9, 32, 0x1FF], [2, 0x0]];\n        break;\n      case 10:\n        lines = [[-21, 7, 4, 0x7A], [-5, 8, 0, 0xFC], [-4, 7, 0, 0x7B], [-3, 5, 0, 0x18], [-2, 2, 2, 0x0], [2, 5, 0, 0x19], [3, 6, 0, 0x36], [4, 7, 0, 0x7C], [5, 8, 0, 0xFD], [6, 2, 6, 0x1], [70, 5, 5, 0x1A], [102, 6, 5, 0x37], [134, 6, 6, 0x38], [198, 6, 7, 0x39], [326, 6, 8, 0x3A], [582, 6, 9, 0x3B], [1094, 6, 10, 0x3C], [2118, 7, 11, 0x7D], [-22, 8, 32, 0xFE, 'lower'], [4166, 8, 32, 0xFF], [2, 0x2]];\n        break;\n      case 11:\n        lines = [[1, 1, 0, 0x0], [2, 2, 1, 0x2], [4, 4, 0, 0xC], [5, 4, 1, 0xD], [7, 5, 1, 0x1C], [9, 5, 2, 0x1D], [13, 6, 2, 0x3C], [17, 7, 2, 0x7A], [21, 7, 3, 0x7B], [29, 7, 4, 0x7C], [45, 7, 5, 0x7D], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 12:\n        lines = [[1, 1, 0, 0x0], [2, 2, 0, 0x2], [3, 3, 1, 0x6], [5, 5, 0, 0x1C], [6, 5, 1, 0x1D], [8, 6, 1, 0x3C], [10, 7, 0, 0x7A], [11, 7, 1, 0x7B], [13, 7, 2, 0x7C], [17, 7, 3, 0x7D], [25, 7, 4, 0x7E], [41, 8, 5, 0xFE], [73, 8, 32, 0xFF]];\n        break;\n      case 13:\n        lines = [[1, 1, 0, 0x0], [2, 3, 0, 0x4], [3, 4, 0, 0xC], [4, 5, 0, 0x1C], [5, 4, 1, 0xD], [7, 3, 3, 0x5], [15, 6, 1, 0x3A], [17, 6, 2, 0x3B], [21, 6, 3, 0x3C], [29, 6, 4, 0x3D], [45, 6, 5, 0x3E], [77, 7, 6, 0x7E], [141, 7, 32, 0x7F]];\n        break;\n      case 14:\n        lines = [[-2, 3, 0, 0x4], [-1, 3, 0, 0x5], [0, 1, 0, 0x0], [1, 3, 0, 0x6], [2, 3, 0, 0x7]];\n        break;\n      case 15:\n        lines = [[-24, 7, 4, 0x7C], [-8, 6, 2, 0x3C], [-4, 5, 1, 0x1C], [-2, 4, 0, 0xC], [-1, 3, 0, 0x4], [0, 1, 0, 0x0], [1, 3, 0, 0x5], [2, 4, 0, 0xD], [3, 5, 1, 0x1D], [5, 6, 2, 0x3D], [9, 7, 4, 0x7D], [-25, 7, 32, 0x7E, 'lower'], [25, 7, 32, 0x7F]];\n        break;\n      default:\n        throw new Jbig2Error('standard table B.' + number + ' does not exist');\n    }\n    var length = lines.length,\n        i = void 0;\n    for (i = 0; i < length; i++) {\n      lines[i] = new HuffmanLine(lines[i]);\n    }\n    table = new HuffmanTable(lines, true);\n    standardTablesCache[number] = table;\n    return table;\n  }\n  function Reader(data, start, end) {\n    this.data = data;\n    this.start = start;\n    this.end = end;\n    this.position = start;\n    this.shift = -1;\n    this.currentByte = 0;\n  }\n  Reader.prototype = {\n    readBit: function readBit() {\n      if (this.shift < 0) {\n        if (this.position >= this.end) {\n          throw new Jbig2Error('end of data while reading bit');\n        }\n        this.currentByte = this.data[this.position++];\n        this.shift = 7;\n      }\n      var bit = this.currentByte >> this.shift & 1;\n      this.shift--;\n      return bit;\n    },\n    readBits: function readBits(numBits) {\n      var result = 0,\n          i = void 0;\n      for (i = numBits - 1; i >= 0; i--) {\n        result |= this.readBit() << i;\n      }\n      return result;\n    },\n    byteAlign: function byteAlign() {\n      this.shift = -1;\n    },\n    next: function next() {\n      if (this.position >= this.end) {\n        return -1;\n      }\n      return this.data[this.position++];\n    }\n  };\n  function getCustomHuffmanTable(index, referredTo, customTables) {\n    var currentIndex = 0,\n        i = void 0,\n        ii = referredTo.length,\n        table = void 0;\n    for (i = 0; i < ii; i++) {\n      table = customTables[referredTo[i]];\n      if (table) {\n        if (index === currentIndex) {\n          return table;\n        }\n        currentIndex++;\n      }\n    }\n    throw new Jbig2Error('can\\'t find custom Huffman table');\n  }\n  function getTextRegionHuffmanTables(textRegion, referredTo, customTables, numberOfSymbols, reader) {\n    var codes = [],\n        i = void 0,\n        codeLength = void 0;\n    for (i = 0; i <= 34; i++) {\n      codeLength = reader.readBits(4);\n      codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n    }\n    var runCodesTable = new HuffmanTable(codes, false);\n    codes.length = 0;\n    for (i = 0; i < numberOfSymbols;) {\n      codeLength = runCodesTable.decode(reader);\n      if (codeLength >= 32) {\n        var repeatedLength = void 0,\n            numberOfRepeats = void 0,\n            j = void 0;\n        switch (codeLength) {\n          case 32:\n            if (i === 0) {\n              throw new Jbig2Error('no previous value in symbol ID table');\n            }\n            numberOfRepeats = reader.readBits(2) + 3;\n            repeatedLength = codes[i - 1].prefixLength;\n            break;\n          case 33:\n            numberOfRepeats = reader.readBits(3) + 3;\n            repeatedLength = 0;\n            break;\n          case 34:\n            numberOfRepeats = reader.readBits(7) + 11;\n            repeatedLength = 0;\n            break;\n          default:\n            throw new Jbig2Error('invalid code length in symbol ID table');\n        }\n        for (j = 0; j < numberOfRepeats; j++) {\n          codes.push(new HuffmanLine([i, repeatedLength, 0, 0]));\n          i++;\n        }\n      } else {\n        codes.push(new HuffmanLine([i, codeLength, 0, 0]));\n        i++;\n      }\n    }\n    reader.byteAlign();\n    var symbolIDTable = new HuffmanTable(codes, false);\n    var customIndex = 0,\n        tableFirstS = void 0,\n        tableDeltaS = void 0,\n        tableDeltaT = void 0;\n    switch (textRegion.huffmanFS) {\n      case 0:\n      case 1:\n        tableFirstS = getStandardTable(textRegion.huffmanFS + 6);\n        break;\n      case 3:\n        tableFirstS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman FS selector');\n    }\n    switch (textRegion.huffmanDS) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaS = getStandardTable(textRegion.huffmanDS + 8);\n        break;\n      case 3:\n        tableDeltaS = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DS selector');\n    }\n    switch (textRegion.huffmanDT) {\n      case 0:\n      case 1:\n      case 2:\n        tableDeltaT = getStandardTable(textRegion.huffmanDT + 11);\n        break;\n      case 3:\n        tableDeltaT = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DT selector');\n    }\n    if (textRegion.refinement) {\n      throw new Jbig2Error('refinement with Huffman is not supported');\n    }\n    return {\n      symbolIDTable: symbolIDTable,\n      tableFirstS: tableFirstS,\n      tableDeltaS: tableDeltaS,\n      tableDeltaT: tableDeltaT\n    };\n  }\n  function getSymbolDictionaryHuffmanTables(dictionary, referredTo, customTables) {\n    var customIndex = 0,\n        tableDeltaHeight = void 0,\n        tableDeltaWidth = void 0;\n    switch (dictionary.huffmanDHSelector) {\n      case 0:\n      case 1:\n        tableDeltaHeight = getStandardTable(dictionary.huffmanDHSelector + 4);\n        break;\n      case 3:\n        tableDeltaHeight = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DH selector');\n    }\n    switch (dictionary.huffmanDWSelector) {\n      case 0:\n      case 1:\n        tableDeltaWidth = getStandardTable(dictionary.huffmanDWSelector + 2);\n        break;\n      case 3:\n        tableDeltaWidth = getCustomHuffmanTable(customIndex, referredTo, customTables);\n        customIndex++;\n        break;\n      default:\n        throw new Jbig2Error('invalid Huffman DW selector');\n    }\n    var tableBitmapSize = void 0,\n        tableAggregateInstances = void 0;\n    if (dictionary.bitmapSizeSelector) {\n      tableBitmapSize = getCustomHuffmanTable(customIndex, referredTo, customTables);\n      customIndex++;\n    } else {\n      tableBitmapSize = getStandardTable(1);\n    }\n    if (dictionary.aggregationInstancesSelector) {\n      tableAggregateInstances = getCustomHuffmanTable(customIndex, referredTo, customTables);\n    } else {\n      tableAggregateInstances = getStandardTable(1);\n    }\n    return {\n      tableDeltaHeight: tableDeltaHeight,\n      tableDeltaWidth: tableDeltaWidth,\n      tableBitmapSize: tableBitmapSize,\n      tableAggregateInstances: tableAggregateInstances\n    };\n  }\n  function readUncompressedBitmap(reader, width, height) {\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      for (x = 0; x < width; x++) {\n        row[x] = reader.readBit();\n      }\n      reader.byteAlign();\n    }\n    return bitmap;\n  }\n  function decodeMMRBitmap(input, width, height, endOfBlock) {\n    var params = {\n      K: -1,\n      Columns: width,\n      Rows: height,\n      BlackIs1: true,\n      EndOfBlock: endOfBlock\n    };\n    var decoder = new _ccitt.CCITTFaxDecoder(input, params);\n    var bitmap = [],\n        x = void 0,\n        y = void 0,\n        row = void 0,\n        currentByte = void 0,\n        shift = void 0,\n        eof = false;\n    for (y = 0; y < height; y++) {\n      row = new Uint8Array(width);\n      bitmap.push(row);\n      shift = -1;\n      for (x = 0; x < width; x++) {\n        if (shift < 0) {\n          currentByte = decoder.readNextChar();\n          if (currentByte === -1) {\n            currentByte = 0;\n            eof = true;\n          }\n          shift = 7;\n        }\n        row[x] = currentByte >> shift & 1;\n        shift--;\n      }\n    }\n    if (endOfBlock && !eof) {\n      var lookForEOFLimit = 5;\n      for (var i = 0; i < lookForEOFLimit; i++) {\n        if (decoder.readNextChar() === -1) {\n          break;\n        }\n      }\n    }\n    return bitmap;\n  }\n  function Jbig2Image() {}\n  Jbig2Image.prototype = {\n    parseChunks: function Jbig2Image_parseChunks(chunks) {\n      return parseJbig2Chunks(chunks);\n    }\n  };\n  return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Jbig2Stream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _stream = require('./stream');\n\nvar _jbig = require('./jbig2');\n\nvar _util = require('../shared/util');\n\nvar Jbig2Stream = function Jbig2StreamClosure() {\n  function Jbig2Stream(stream, maybeLength, dict, params) {\n    this.stream = stream;\n    this.maybeLength = maybeLength;\n    this.dict = dict;\n    this.params = params;\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  Jbig2Stream.prototype = Object.create(_stream.DecodeStream.prototype);\n  Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n    get: function get() {\n      return (0, _util.shadow)(this, 'bytes', this.stream.getBytes(this.maybeLength));\n    },\n\n    configurable: true\n  });\n  Jbig2Stream.prototype.ensureBuffer = function (requested) {};\n  Jbig2Stream.prototype.readBlock = function () {\n    if (this.eof) {\n      return;\n    }\n    var jbig2Image = new _jbig.Jbig2Image();\n    var chunks = [];\n    if ((0, _primitives.isDict)(this.params)) {\n      var globalsStream = this.params.get('JBIG2Globals');\n      if ((0, _primitives.isStream)(globalsStream)) {\n        var globals = globalsStream.getBytes();\n        chunks.push({\n          data: globals,\n          start: 0,\n          end: globals.length\n        });\n      }\n    }\n    chunks.push({\n      data: this.bytes,\n      start: 0,\n      end: this.bytes.length\n    });\n    var data = jbig2Image.parseChunks(chunks);\n    var dataLength = data.length;\n    for (var i = 0; i < dataLength; i++) {\n      data[i] ^= 0xFF;\n    }\n    this.buffer = data;\n    this.bufferLength = dataLength;\n    this.eof = true;\n  };\n  return Jbig2Stream;\n}();\nexports.Jbig2Stream = Jbig2Stream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CCITTFaxStream = undefined;\n\nvar _primitives = require('./primitives');\n\nvar _ccitt = require('./ccitt');\n\nvar _stream = require('./stream');\n\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n  function CCITTFaxStream(str, maybeLength, params) {\n    this.str = str;\n    this.dict = str.dict;\n    if (!(0, _primitives.isDict)(params)) {\n      params = _primitives.Dict.empty;\n    }\n    var source = {\n      next: function next() {\n        return str.getByte();\n      }\n    };\n    this.ccittFaxDecoder = new _ccitt.CCITTFaxDecoder(source, {\n      K: params.get('K'),\n      EndOfLine: params.get('EndOfLine'),\n      EncodedByteAlign: params.get('EncodedByteAlign'),\n      Columns: params.get('Columns'),\n      Rows: params.get('Rows'),\n      EndOfBlock: params.get('EndOfBlock'),\n      BlackIs1: params.get('BlackIs1')\n    });\n    _stream.DecodeStream.call(this, maybeLength);\n  }\n  CCITTFaxStream.prototype = Object.create(_stream.DecodeStream.prototype);\n  CCITTFaxStream.prototype.readBlock = function () {\n    while (!this.eof) {\n      var c = this.ccittFaxDecoder.readNextChar();\n      if (c === -1) {\n        this.eof = true;\n        return;\n      }\n      this.ensureBuffer(this.bufferLength + 1);\n      this.buffer[this.bufferLength++] = c;\n    }\n  };\n  return CCITTFaxStream;\n}();\nexports.CCITTFaxStream = CCITTFaxStream;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PDFDocument = exports.Page = undefined;\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _obj = require('./obj');\n\nvar _primitives = require('./primitives');\n\nvar _util = require('../shared/util');\n\nvar _stream = require('./stream');\n\nvar _annotation = require('./annotation');\n\nvar _crypto = require('./crypto');\n\nvar _parser = require('./parser');\n\nvar _operator_list = require('./operator_list');\n\nvar _evaluator = require('./evaluator');\n\nvar _function = require('./function');\n\nvar Page = function PageClosure() {\n  var DEFAULT_USER_UNIT = 1.0;\n  var LETTER_SIZE_MEDIABOX = [0, 0, 612, 792];\n  function isAnnotationRenderable(annotation, intent) {\n    return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n  }\n  function Page(_ref) {\n    var pdfManager = _ref.pdfManager,\n        xref = _ref.xref,\n        pageIndex = _ref.pageIndex,\n        pageDict = _ref.pageDict,\n        ref = _ref.ref,\n        fontCache = _ref.fontCache,\n        builtInCMapCache = _ref.builtInCMapCache,\n        pdfFunctionFactory = _ref.pdfFunctionFactory;\n\n    this.pdfManager = pdfManager;\n    this.pageIndex = pageIndex;\n    this.pageDict = pageDict;\n    this.xref = xref;\n    this.ref = ref;\n    this.fontCache = fontCache;\n    this.builtInCMapCache = builtInCMapCache;\n    this.pdfFunctionFactory = pdfFunctionFactory;\n    this.evaluatorOptions = pdfManager.evaluatorOptions;\n    this.resourcesPromise = null;\n    var uniquePrefix = 'p' + this.pageIndex + '_';\n    var idCounters = { obj: 0 };\n    this.idFactory = {\n      createObjId: function createObjId() {\n        return uniquePrefix + ++idCounters.obj;\n      }\n    };\n  }\n  Page.prototype = {\n    getPageProp: function Page_getPageProp(key) {\n      return this.pageDict.get(key);\n    },\n    getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n      var dict = this.pageDict,\n          valueArray = null,\n          loopCount = 0;\n      var MAX_LOOP_COUNT = 100;\n      getArray = getArray || false;\n      while (dict) {\n        var value = getArray ? dict.getArray(key) : dict.get(key);\n        if (value !== undefined) {\n          if (!valueArray) {\n            valueArray = [];\n          }\n          valueArray.push(value);\n        }\n        if (++loopCount > MAX_LOOP_COUNT) {\n          (0, _util.warn)('getInheritedPageProp: maximum loop count exceeded for ' + key);\n          return valueArray ? valueArray[0] : undefined;\n        }\n        dict = dict.get('Parent');\n      }\n      if (!valueArray) {\n        return undefined;\n      }\n      if (valueArray.length === 1 || !(0, _primitives.isDict)(valueArray[0])) {\n        return valueArray[0];\n      }\n      return _primitives.Dict.merge(this.xref, valueArray);\n    },\n    get content() {\n      return this.getPageProp('Contents');\n    },\n    get resources() {\n      return (0, _util.shadow)(this, 'resources', this.getInheritedPageProp('Resources') || _primitives.Dict.empty);\n    },\n    get mediaBox() {\n      var mediaBox = this.getInheritedPageProp('MediaBox', true);\n      if (!Array.isArray(mediaBox) || mediaBox.length !== 4) {\n        return (0, _util.shadow)(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n      }\n      return (0, _util.shadow)(this, 'mediaBox', mediaBox);\n    },\n    get cropBox() {\n      var cropBox = this.getInheritedPageProp('CropBox', true);\n      if (!Array.isArray(cropBox) || cropBox.length !== 4) {\n        return (0, _util.shadow)(this, 'cropBox', this.mediaBox);\n      }\n      return (0, _util.shadow)(this, 'cropBox', cropBox);\n    },\n    get userUnit() {\n      var obj = this.getPageProp('UserUnit');\n      if (!(0, _util.isNum)(obj) || obj <= 0) {\n        obj = DEFAULT_USER_UNIT;\n      }\n      return (0, _util.shadow)(this, 'userUnit', obj);\n    },\n    get view() {\n      var mediaBox = this.mediaBox,\n          cropBox = this.cropBox;\n      if (mediaBox === cropBox) {\n        return (0, _util.shadow)(this, 'view', mediaBox);\n      }\n      var intersection = _util.Util.intersect(cropBox, mediaBox);\n      return (0, _util.shadow)(this, 'view', intersection || mediaBox);\n    },\n    get rotate() {\n      var rotate = this.getInheritedPageProp('Rotate') || 0;\n      if (rotate % 90 !== 0) {\n        rotate = 0;\n      } else if (rotate >= 360) {\n        rotate = rotate % 360;\n      } else if (rotate < 0) {\n        rotate = (rotate % 360 + 360) % 360;\n      }\n      return (0, _util.shadow)(this, 'rotate', rotate);\n    },\n    getContentStream: function Page_getContentStream() {\n      var content = this.content;\n      var stream;\n      if (Array.isArray(content)) {\n        var xref = this.xref;\n        var i,\n            n = content.length;\n        var streams = [];\n        for (i = 0; i < n; ++i) {\n          streams.push(xref.fetchIfRef(content[i]));\n        }\n        stream = new _stream.StreamsSequenceStream(streams);\n      } else if ((0, _primitives.isStream)(content)) {\n        stream = content;\n      } else {\n        stream = new _stream.NullStream();\n      }\n      return stream;\n    },\n    loadResources: function Page_loadResources(keys) {\n      var _this = this;\n\n      if (!this.resourcesPromise) {\n        this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n      }\n      return this.resourcesPromise.then(function () {\n        var objectLoader = new _obj.ObjectLoader(_this.resources, keys, _this.xref);\n        return objectLoader.load();\n      });\n    },\n    getOperatorList: function getOperatorList(_ref2) {\n      var _this2 = this;\n\n      var handler = _ref2.handler,\n          task = _ref2.task,\n          intent = _ref2.intent,\n          renderInteractiveForms = _ref2.renderInteractiveForms;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'ColorSpace', 'Pattern', 'Shading', 'XObject', 'Font']);\n      var partialEvaluator = new _evaluator.PartialEvaluator({\n        pdfManager: this.pdfManager,\n        xref: this.xref,\n        handler: handler,\n        pageIndex: this.pageIndex,\n        idFactory: this.idFactory,\n        fontCache: this.fontCache,\n        builtInCMapCache: this.builtInCMapCache,\n        options: this.evaluatorOptions,\n        pdfFunctionFactory: this.pdfFunctionFactory\n      });\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      var pageListPromise = dataPromises.then(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            contentStream = _ref4[0];\n\n        var opList = new _operator_list.OperatorList(intent, handler, _this2.pageIndex);\n        handler.send('StartRenderPage', {\n          transparency: partialEvaluator.hasBlendModes(_this2.resources),\n          pageIndex: _this2.pageIndex,\n          intent: intent\n        });\n        return partialEvaluator.getOperatorList({\n          stream: contentStream,\n          task: task,\n          resources: _this2.resources,\n          operatorList: opList\n        }).then(function () {\n          return opList;\n        });\n      });\n      var annotationsPromise = this.pdfManager.ensure(this, 'annotations');\n      return Promise.all([pageListPromise, annotationsPromise]).then(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            pageOpList = _ref6[0],\n            annotations = _ref6[1];\n\n        if (annotations.length === 0) {\n          pageOpList.flush(true);\n          return pageOpList;\n        }\n        var i,\n            ii,\n            opListPromises = [];\n        for (i = 0, ii = annotations.length; i < ii; i++) {\n          if (isAnnotationRenderable(annotations[i], intent)) {\n            opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n          }\n        }\n        return Promise.all(opListPromises).then(function (opLists) {\n          pageOpList.addOp(_util.OPS.beginAnnotations, []);\n          for (i = 0, ii = opLists.length; i < ii; i++) {\n            pageOpList.addOpList(opLists[i]);\n          }\n          pageOpList.addOp(_util.OPS.endAnnotations, []);\n          pageOpList.flush(true);\n          return pageOpList;\n        });\n      });\n    },\n    extractTextContent: function extractTextContent(_ref7) {\n      var _this3 = this;\n\n      var handler = _ref7.handler,\n          task = _ref7.task,\n          normalizeWhitespace = _ref7.normalizeWhitespace,\n          sink = _ref7.sink,\n          combineTextItems = _ref7.combineTextItems;\n\n      var contentStreamPromise = this.pdfManager.ensure(this, 'getContentStream');\n      var resourcesPromise = this.loadResources(['ExtGState', 'XObject', 'Font']);\n      var dataPromises = Promise.all([contentStreamPromise, resourcesPromise]);\n      return dataPromises.then(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 1),\n            contentStream = _ref9[0];\n\n        var partialEvaluator = new _evaluator.PartialEvaluator({\n          pdfManager: _this3.pdfManager,\n          xref: _this3.xref,\n          handler: handler,\n          pageIndex: _this3.pageIndex,\n          idFactory: _this3.idFactory,\n          fontCache: _this3.fontCache,\n          builtInCMapCache: _this3.builtInCMapCache,\n          options: _this3.evaluatorOptions,\n          pdfFunctionFactory: _this3.pdfFunctionFactory\n        });\n        return partialEvaluator.getTextContent({\n          stream: contentStream,\n          task: task,\n          resources: _this3.resources,\n          normalizeWhitespace: normalizeWhitespace,\n          combineTextItems: combineTextItems,\n          sink: sink\n        });\n      });\n    },\n\n    getAnnotationsData: function Page_getAnnotationsData(intent) {\n      var annotations = this.annotations;\n      var annotationsData = [];\n      for (var i = 0, n = annotations.length; i < n; ++i) {\n        if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n          annotationsData.push(annotations[i].data);\n        }\n      }\n      return annotationsData;\n    },\n    get annotations() {\n      var annotations = [];\n      var annotationRefs = this.getInheritedPageProp('Annots') || [];\n      for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n        var annotationRef = annotationRefs[i];\n        var annotation = _annotation.AnnotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n        if (annotation) {\n          annotations.push(annotation);\n        }\n      }\n      return (0, _util.shadow)(this, 'annotations', annotations);\n    }\n  };\n  return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n  var FINGERPRINT_FIRST_BYTES = 1024;\n  var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n  function PDFDocument(pdfManager, arg) {\n    var stream;\n    if ((0, _primitives.isStream)(arg)) {\n      stream = arg;\n    } else if ((0, _util.isArrayBuffer)(arg)) {\n      stream = new _stream.Stream(arg);\n    } else {\n      throw new Error('PDFDocument: Unknown argument type');\n    }\n    if (stream.length <= 0) {\n      throw new Error('PDFDocument: stream must have data');\n    }\n    this.pdfManager = pdfManager;\n    this.stream = stream;\n    this.xref = new _obj.XRef(stream, pdfManager);\n    var evaluatorOptions = pdfManager.evaluatorOptions;\n    this.pdfFunctionFactory = new _function.PDFFunctionFactory({\n      xref: this.xref,\n      isEvalSupported: evaluatorOptions.isEvalSupported\n    });\n  }\n  function find(stream, needle, limit, backwards) {\n    var pos = stream.pos;\n    var end = stream.end;\n    var strBuf = [];\n    if (pos + limit > end) {\n      limit = end - pos;\n    }\n    for (var n = 0; n < limit; ++n) {\n      strBuf.push(String.fromCharCode(stream.getByte()));\n    }\n    var str = strBuf.join('');\n    stream.pos = pos;\n    var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n    if (index === -1) {\n      return false;\n    }\n    stream.pos += index;\n    return true;\n  }\n  var DocumentInfoValidators = {\n    get entries() {\n      return (0, _util.shadow)(this, 'entries', {\n        Title: _util.isString,\n        Author: _util.isString,\n        Subject: _util.isString,\n        Keywords: _util.isString,\n        Creator: _util.isString,\n        Producer: _util.isString,\n        CreationDate: _util.isString,\n        ModDate: _util.isString,\n        Trapped: _primitives.isName\n      });\n    }\n  };\n  PDFDocument.prototype = {\n    parse: function PDFDocument_parse(recoveryMode) {\n      this.setup(recoveryMode);\n      var version = this.catalog.catDict.get('Version');\n      if ((0, _primitives.isName)(version)) {\n        this.pdfFormatVersion = version.name;\n      }\n      try {\n        this.acroForm = this.catalog.catDict.get('AcroForm');\n        if (this.acroForm) {\n          this.xfa = this.acroForm.get('XFA');\n          var fields = this.acroForm.get('Fields');\n          if ((!fields || !Array.isArray(fields) || fields.length === 0) && !this.xfa) {\n            this.acroForm = null;\n          }\n        }\n      } catch (ex) {\n        if (ex instanceof _util.MissingDataException) {\n          throw ex;\n        }\n        (0, _util.info)('Something wrong with AcroForm entry');\n        this.acroForm = null;\n      }\n    },\n    get linearization() {\n      var linearization = null;\n      if (this.stream.length) {\n        try {\n          linearization = _parser.Linearization.create(this.stream);\n        } catch (err) {\n          if (err instanceof _util.MissingDataException) {\n            throw err;\n          }\n          (0, _util.info)(err);\n        }\n      }\n      return (0, _util.shadow)(this, 'linearization', linearization);\n    },\n    get startXRef() {\n      var stream = this.stream;\n      var startXRef = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        stream.reset();\n        if (find(stream, 'endobj', 1024)) {\n          startXRef = stream.pos + 6;\n        }\n      } else {\n        var step = 1024;\n        var found = false,\n            pos = stream.end;\n        while (!found && pos > 0) {\n          pos -= step - 'startxref'.length;\n          if (pos < 0) {\n            pos = 0;\n          }\n          stream.pos = pos;\n          found = find(stream, 'startxref', step, true);\n        }\n        if (found) {\n          stream.skip(9);\n          var ch;\n          do {\n            ch = stream.getByte();\n          } while ((0, _util.isSpace)(ch));\n          var str = '';\n          while (ch >= 0x20 && ch <= 0x39) {\n            str += String.fromCharCode(ch);\n            ch = stream.getByte();\n          }\n          startXRef = parseInt(str, 10);\n          if (isNaN(startXRef)) {\n            startXRef = 0;\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'startXRef', startXRef);\n    },\n    get mainXRefEntriesOffset() {\n      var mainXRefEntriesOffset = 0;\n      var linearization = this.linearization;\n      if (linearization) {\n        mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n      }\n      return (0, _util.shadow)(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n    },\n    checkHeader: function PDFDocument_checkHeader() {\n      var stream = this.stream;\n      stream.reset();\n      if (find(stream, '%PDF-', 1024)) {\n        stream.moveStart();\n        var MAX_VERSION_LENGTH = 12;\n        var version = '',\n            ch;\n        while ((ch = stream.getByte()) > 0x20) {\n          if (version.length >= MAX_VERSION_LENGTH) {\n            break;\n          }\n          version += String.fromCharCode(ch);\n        }\n        if (!this.pdfFormatVersion) {\n          this.pdfFormatVersion = version.substring(5);\n        }\n        return;\n      }\n    },\n    parseStartXRef: function PDFDocument_parseStartXRef() {\n      var startXRef = this.startXRef;\n      this.xref.setStartXRef(startXRef);\n    },\n    setup: function PDFDocument_setup(recoveryMode) {\n      var _this4 = this;\n\n      this.xref.parse(recoveryMode);\n      var pageFactory = {\n        createPage: function createPage(pageIndex, dict, ref, fontCache, builtInCMapCache) {\n          return new Page({\n            pdfManager: _this4.pdfManager,\n            xref: _this4.xref,\n            pageIndex: pageIndex,\n            pageDict: dict,\n            ref: ref,\n            fontCache: fontCache,\n            builtInCMapCache: builtInCMapCache,\n            pdfFunctionFactory: _this4.pdfFunctionFactory\n          });\n        }\n      };\n      this.catalog = new _obj.Catalog(this.pdfManager, this.xref, pageFactory);\n    },\n    get numPages() {\n      var linearization = this.linearization;\n      var num = linearization ? linearization.numPages : this.catalog.numPages;\n      return (0, _util.shadow)(this, 'numPages', num);\n    },\n    get documentInfo() {\n      var docInfo = {\n        PDFFormatVersion: this.pdfFormatVersion,\n        IsAcroFormPresent: !!this.acroForm,\n        IsXFAPresent: !!this.xfa\n      };\n      var infoDict;\n      try {\n        infoDict = this.xref.trailer.get('Info');\n      } catch (err) {\n        if (err instanceof _util.MissingDataException) {\n          throw err;\n        }\n        (0, _util.info)('The document information dictionary is invalid.');\n      }\n      if (infoDict) {\n        var validEntries = DocumentInfoValidators.entries;\n        for (var key in validEntries) {\n          if (infoDict.has(key)) {\n            var value = infoDict.get(key);\n            if (validEntries[key](value)) {\n              docInfo[key] = typeof value !== 'string' ? value : (0, _util.stringToPDFString)(value);\n            } else {\n              (0, _util.info)('Bad value in document info for \"' + key + '\"');\n            }\n          }\n        }\n      }\n      return (0, _util.shadow)(this, 'documentInfo', docInfo);\n    },\n    get fingerprint() {\n      var xref = this.xref,\n          hash,\n          fileID = '';\n      var idArray = xref.trailer.get('ID');\n      if (Array.isArray(idArray) && idArray[0] && (0, _util.isString)(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n        hash = (0, _util.stringToBytes)(idArray[0]);\n      } else {\n        if (this.stream.ensureRange) {\n          this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n        }\n        hash = (0, _crypto.calculateMD5)(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n      }\n      for (var i = 0, n = hash.length; i < n; i++) {\n        var hex = hash[i].toString(16);\n        fileID += hex.length === 1 ? '0' + hex : hex;\n      }\n      return (0, _util.shadow)(this, 'fingerprint', fileID);\n    },\n    getPage: function PDFDocument_getPage(pageIndex) {\n      return this.catalog.getPage(pageIndex);\n    },\n    cleanup: function PDFDocument_cleanup() {\n      return this.catalog.cleanup();\n    }\n  };\n  return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NetworkPdfManager = exports.LocalPdfManager = undefined;\n\nvar _util = require('../shared/util');\n\nvar _chunked_stream = require('./chunked_stream');\n\nvar _document = require('./document');\n\nvar _stream = require('./stream');\n\nvar BasePdfManager = function BasePdfManagerClosure() {\n  function BasePdfManager() {\n    (0, _util.unreachable)('Cannot initialize BaseManagerManager');\n  }\n  BasePdfManager.prototype = {\n    get docId() {\n      return this._docId;\n    },\n    get password() {\n      return this._password;\n    },\n    get docBaseUrl() {\n      var docBaseUrl = null;\n      if (this._docBaseUrl) {\n        var absoluteUrl = (0, _util.createValidAbsoluteUrl)(this._docBaseUrl);\n        if (absoluteUrl) {\n          docBaseUrl = absoluteUrl.href;\n        } else {\n          (0, _util.warn)('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n        }\n      }\n      return (0, _util.shadow)(this, 'docBaseUrl', docBaseUrl);\n    },\n    onLoadedStream: function BasePdfManager_onLoadedStream() {\n      throw new _util.NotImplementedException();\n    },\n    ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n      return this.ensure(this.pdfDocument, prop, args);\n    },\n    ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n      return this.ensure(this.pdfDocument.xref, prop, args);\n    },\n    ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n      return this.ensure(this.pdfDocument.catalog, prop, args);\n    },\n    getPage: function BasePdfManager_getPage(pageIndex) {\n      return this.pdfDocument.getPage(pageIndex);\n    },\n    cleanup: function BasePdfManager_cleanup() {\n      return this.pdfDocument.cleanup();\n    },\n    ensure: function BasePdfManager_ensure(obj, prop, args) {\n      return new _util.NotImplementedException();\n    },\n    requestRange: function BasePdfManager_requestRange(begin, end) {\n      return new _util.NotImplementedException();\n    },\n    requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n      return new _util.NotImplementedException();\n    },\n    sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n      return new _util.NotImplementedException();\n    },\n    updatePassword: function BasePdfManager_updatePassword(password) {\n      this._password = password;\n    },\n    terminate: function BasePdfManager_terminate() {\n      return new _util.NotImplementedException();\n    }\n  };\n  return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n  function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = password;\n    this._docBaseUrl = docBaseUrl;\n    this.evaluatorOptions = evaluatorOptions;\n    var stream = new _stream.Stream(data);\n    this.pdfDocument = new _document.PDFDocument(this, stream);\n    this._loadedStreamCapability = (0, _util.createPromiseCapability)();\n    this._loadedStreamCapability.resolve(stream);\n  }\n  _util.Util.inherit(LocalPdfManager, BasePdfManager, {\n    ensure: function LocalPdfManager_ensure(obj, prop, args) {\n      return new Promise(function (resolve, reject) {\n        try {\n          var value = obj[prop];\n          var result;\n          if (typeof value === 'function') {\n            result = value.apply(obj, args);\n          } else {\n            result = value;\n          }\n          resolve(result);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    },\n    requestRange: function LocalPdfManager_requestRange(begin, end) {\n      return Promise.resolve();\n    },\n    requestLoadedStream: function LocalPdfManager_requestLoadedStream() {},\n    onLoadedStream: function LocalPdfManager_onLoadedStream() {\n      return this._loadedStreamCapability.promise;\n    },\n    terminate: function LocalPdfManager_terminate() {}\n  });\n  return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n  function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n    this._docId = docId;\n    this._password = args.password;\n    this._docBaseUrl = docBaseUrl;\n    this.msgHandler = args.msgHandler;\n    this.evaluatorOptions = evaluatorOptions;\n    var params = {\n      msgHandler: args.msgHandler,\n      url: args.url,\n      length: args.length,\n      disableAutoFetch: args.disableAutoFetch,\n      rangeChunkSize: args.rangeChunkSize\n    };\n    this.streamManager = new _chunked_stream.ChunkedStreamManager(pdfNetworkStream, params);\n    this.pdfDocument = new _document.PDFDocument(this, this.streamManager.getStream());\n  }\n  _util.Util.inherit(NetworkPdfManager, BasePdfManager, {\n    ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n      var pdfManager = this;\n      return new Promise(function (resolve, reject) {\n        function ensureHelper() {\n          try {\n            var result;\n            var value = obj[prop];\n            if (typeof value === 'function') {\n              result = value.apply(obj, args);\n            } else {\n              result = value;\n            }\n            resolve(result);\n          } catch (e) {\n            if (!(e instanceof _util.MissingDataException)) {\n              reject(e);\n              return;\n            }\n            pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n          }\n        }\n        ensureHelper();\n      });\n    },\n    requestRange: function NetworkPdfManager_requestRange(begin, end) {\n      return this.streamManager.requestRange(begin, end);\n    },\n    requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n      this.streamManager.requestAllChunks();\n    },\n    sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n      this.streamManager.onReceiveData({ chunk: chunk });\n    },\n    onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n      return this.streamManager.onLoadedStream();\n    },\n    terminate: function NetworkPdfManager_terminate() {\n      this.streamManager.abort();\n    }\n  });\n  return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;","/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WorkerMessageHandler = exports.WorkerTask = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _util = require('../shared/util');\n\nvar _pdf_manager = require('./pdf_manager');\n\nvar _is_node = require('../shared/is_node');\n\nvar _is_node2 = _interopRequireDefault(_is_node);\n\nvar _primitives = require('./primitives');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar WorkerTask = function WorkerTaskClosure() {\n  function WorkerTask(name) {\n    this.name = name;\n    this.terminated = false;\n    this._capability = (0, _util.createPromiseCapability)();\n  }\n  WorkerTask.prototype = {\n    get finished() {\n      return this._capability.promise;\n    },\n    finish: function finish() {\n      this._capability.resolve();\n    },\n    terminate: function terminate() {\n      this.terminated = true;\n    },\n    ensureNotTerminated: function ensureNotTerminated() {\n      if (this.terminated) {\n        throw new Error('Worker task was terminated');\n      }\n    }\n  };\n  return WorkerTask;\n}();\n;\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n  function PDFWorkerStream(msgHandler) {\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n  PDFWorkerStream.prototype = {\n    getFullReader: function getFullReader() {\n      (0, _util.assert)(!this._fullRequestReader);\n      this._fullRequestReader = new PDFWorkerStreamReader(this._msgHandler);\n      return this._fullRequestReader;\n    },\n    getRangeReader: function getRangeReader(begin, end) {\n      var reader = new PDFWorkerStreamRangeReader(begin, end, this._msgHandler);\n      this._rangeRequestReaders.push(reader);\n      return reader;\n    },\n    cancelAllRequests: function cancelAllRequests(reason) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader.cancel(reason);\n      }\n      var readers = this._rangeRequestReaders.slice(0);\n      readers.forEach(function (reader) {\n        reader.cancel(reason);\n      });\n    }\n  };\n  function PDFWorkerStreamReader(msgHandler) {\n    var _this = this;\n\n    this._msgHandler = msgHandler;\n    this._contentLength = null;\n    this._isRangeSupported = false;\n    this._isStreamingSupported = false;\n    var readableStream = this._msgHandler.sendWithStream('GetReader');\n    this._reader = readableStream.getReader();\n    this._headersReady = this._msgHandler.sendWithPromise('ReaderHeadersReady').then(function (data) {\n      _this._isStreamingSupported = data.isStreamingSupported;\n      _this._isRangeSupported = data.isRangeSupported;\n      _this._contentLength = data.contentLength;\n    });\n  }\n  PDFWorkerStreamReader.prototype = {\n    get headersReady() {\n      return this._headersReady;\n    },\n    get contentLength() {\n      return this._contentLength;\n    },\n    get isStreamingSupported() {\n      return this._isStreamingSupported;\n    },\n    get isRangeSupported() {\n      return this._isRangeSupported;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref) {\n        var value = _ref.value,\n            done = _ref.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  function PDFWorkerStreamRangeReader(begin, end, msgHandler) {\n    this._msgHandler = msgHandler;\n    this.onProgress = null;\n    var readableStream = this._msgHandler.sendWithStream('GetRangeReader', {\n      begin: begin,\n      end: end\n    });\n    this._reader = readableStream.getReader();\n  }\n  PDFWorkerStreamRangeReader.prototype = {\n    get isStreamingSupported() {\n      return false;\n    },\n    read: function read() {\n      return this._reader.read().then(function (_ref2) {\n        var value = _ref2.value,\n            done = _ref2.done;\n\n        if (done) {\n          return {\n            value: undefined,\n            done: true\n          };\n        }\n        return {\n          value: value.buffer,\n          done: false\n        };\n      });\n    },\n    cancel: function cancel(reason) {\n      this._reader.cancel(reason);\n    }\n  };\n  return PDFWorkerStream;\n}();\nvar WorkerMessageHandler = {\n  setup: function setup(handler, port) {\n    var testMessageProcessed = false;\n    handler.on('test', function wphSetupTest(data) {\n      if (testMessageProcessed) {\n        return;\n      }\n      testMessageProcessed = true;\n      if (!(data instanceof Uint8Array)) {\n        handler.send('test', 'main', false);\n        return;\n      }\n      var supportTransfers = data[0] === 255;\n      handler.postMessageTransfers = supportTransfers;\n      var xhr = new XMLHttpRequest();\n      var responseExists = 'response' in xhr;\n      try {\n        xhr.responseType;\n      } catch (e) {\n        responseExists = false;\n      }\n      if (!responseExists) {\n        handler.send('test', false);\n        return;\n      }\n      handler.send('test', {\n        supportTypedArray: true,\n        supportTransfers: supportTransfers\n      });\n    });\n    handler.on('configure', function wphConfigure(data) {\n      (0, _util.setVerbosityLevel)(data.verbosity);\n    });\n    handler.on('GetDocRequest', function wphSetupDoc(data) {\n      return WorkerMessageHandler.createDocumentHandler(data, port);\n    });\n  },\n  createDocumentHandler: function createDocumentHandler(docParams, port) {\n    var pdfManager;\n    var terminated = false;\n    var cancelXHRs = null;\n    var WorkerTasks = [];\n    var apiVersion = docParams.apiVersion;\n    var workerVersion = '2.0.305';\n    if (apiVersion !== null && apiVersion !== workerVersion) {\n      throw new Error('The API version \"' + apiVersion + '\" does not match ' + ('the Worker version \"' + workerVersion + '\".'));\n    }\n    var docId = docParams.docId;\n    var docBaseUrl = docParams.docBaseUrl;\n    var workerHandlerName = docParams.docId + '_worker';\n    var handler = new _util.MessageHandler(workerHandlerName, docId, port);\n    handler.postMessageTransfers = docParams.postMessageTransfers;\n    function ensureNotTerminated() {\n      if (terminated) {\n        throw new Error('Worker was terminated');\n      }\n    }\n    function startWorkerTask(task) {\n      WorkerTasks.push(task);\n    }\n    function finishWorkerTask(task) {\n      task.finish();\n      var i = WorkerTasks.indexOf(task);\n      WorkerTasks.splice(i, 1);\n    }\n    function loadDocument(recoveryMode) {\n      var loadDocumentCapability = (0, _util.createPromiseCapability)();\n      var parseSuccess = function parseSuccess() {\n        Promise.all([pdfManager.ensureDoc('numPages'), pdfManager.ensureDoc('fingerprint')]).then(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              numPages = _ref4[0],\n              fingerprint = _ref4[1];\n\n          loadDocumentCapability.resolve({\n            numPages: numPages,\n            fingerprint: fingerprint\n          });\n        }, parseFailure);\n      };\n      var parseFailure = function parseFailure(e) {\n        loadDocumentCapability.reject(e);\n      };\n      pdfManager.ensureDoc('checkHeader', []).then(function () {\n        pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n          pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n        }, parseFailure);\n      }, parseFailure);\n      return loadDocumentCapability.promise;\n    }\n    function getPdfManager(data, evaluatorOptions) {\n      var pdfManagerCapability = (0, _util.createPromiseCapability)();\n      var pdfManager;\n      var source = data.source;\n      if (source.data) {\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        return pdfManagerCapability.promise;\n      }\n      var pdfStream,\n          cachedChunks = [];\n      try {\n        pdfStream = new PDFWorkerStream(handler);\n      } catch (ex) {\n        pdfManagerCapability.reject(ex);\n        return pdfManagerCapability.promise;\n      }\n      var fullRequest = pdfStream.getFullReader();\n      fullRequest.headersReady.then(function () {\n        if (!fullRequest.isRangeSupported) {\n          return;\n        }\n        var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n        pdfManager = new _pdf_manager.NetworkPdfManager(docId, pdfStream, {\n          msgHandler: handler,\n          url: source.url,\n          password: source.password,\n          length: fullRequest.contentLength,\n          disableAutoFetch: disableAutoFetch,\n          rangeChunkSize: source.rangeChunkSize\n        }, evaluatorOptions, docBaseUrl);\n        for (var i = 0; i < cachedChunks.length; i++) {\n          pdfManager.sendProgressiveData(cachedChunks[i]);\n        }\n        cachedChunks = [];\n        pdfManagerCapability.resolve(pdfManager);\n        cancelXHRs = null;\n      }).catch(function (reason) {\n        pdfManagerCapability.reject(reason);\n        cancelXHRs = null;\n      });\n      var loaded = 0;\n      var flushChunks = function flushChunks() {\n        var pdfFile = (0, _util.arraysToBytes)(cachedChunks);\n        if (source.length && pdfFile.length !== source.length) {\n          (0, _util.warn)('reported HTTP length is different from actual');\n        }\n        try {\n          pdfManager = new _pdf_manager.LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n          pdfManagerCapability.resolve(pdfManager);\n        } catch (ex) {\n          pdfManagerCapability.reject(ex);\n        }\n        cachedChunks = [];\n      };\n      var readPromise = new Promise(function (resolve, reject) {\n        var readChunk = function readChunk(chunk) {\n          try {\n            ensureNotTerminated();\n            if (chunk.done) {\n              if (!pdfManager) {\n                flushChunks();\n              }\n              cancelXHRs = null;\n              return;\n            }\n            var data = chunk.value;\n            loaded += (0, _util.arrayByteLength)(data);\n            if (!fullRequest.isStreamingSupported) {\n              handler.send('DocProgress', {\n                loaded: loaded,\n                total: Math.max(loaded, fullRequest.contentLength || 0)\n              });\n            }\n            if (pdfManager) {\n              pdfManager.sendProgressiveData(data);\n            } else {\n              cachedChunks.push(data);\n            }\n            fullRequest.read().then(readChunk, reject);\n          } catch (e) {\n            reject(e);\n          }\n        };\n        fullRequest.read().then(readChunk, reject);\n      });\n      readPromise.catch(function (e) {\n        pdfManagerCapability.reject(e);\n        cancelXHRs = null;\n      });\n      cancelXHRs = function cancelXHRs() {\n        pdfStream.cancelAllRequests('abort');\n      };\n      return pdfManagerCapability.promise;\n    }\n    function setupDoc(data) {\n      function onSuccess(doc) {\n        ensureNotTerminated();\n        handler.send('GetDoc', { pdfInfo: doc });\n      }\n      function onFailure(e) {\n        ensureNotTerminated();\n        if (e instanceof _util.PasswordException) {\n          var task = new WorkerTask('PasswordException: response ' + e.code);\n          startWorkerTask(task);\n          handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n            finishWorkerTask(task);\n            pdfManager.updatePassword(data.password);\n            pdfManagerReady();\n          }).catch(function (ex) {\n            finishWorkerTask(task);\n            handler.send('PasswordException', ex);\n          }.bind(null, e));\n        } else if (e instanceof _util.InvalidPDFException) {\n          handler.send('InvalidPDF', e);\n        } else if (e instanceof _util.MissingPDFException) {\n          handler.send('MissingPDF', e);\n        } else if (e instanceof _util.UnexpectedResponseException) {\n          handler.send('UnexpectedResponse', e);\n        } else {\n          handler.send('UnknownError', new _util.UnknownErrorException(e.message, e.toString()));\n        }\n      }\n      function pdfManagerReady() {\n        ensureNotTerminated();\n        loadDocument(false).then(onSuccess, function loadFailure(ex) {\n          ensureNotTerminated();\n          if (!(ex instanceof _util.XRefParseException)) {\n            onFailure(ex);\n            return;\n          }\n          pdfManager.requestLoadedStream();\n          pdfManager.onLoadedStream().then(function () {\n            ensureNotTerminated();\n            loadDocument(true).then(onSuccess, onFailure);\n          });\n        }, onFailure);\n      }\n      ensureNotTerminated();\n      var evaluatorOptions = {\n        forceDataSchema: data.disableCreateObjectURL,\n        maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n        disableFontFace: data.disableFontFace,\n        nativeImageDecoderSupport: data.nativeImageDecoderSupport,\n        ignoreErrors: data.ignoreErrors,\n        isEvalSupported: data.isEvalSupported\n      };\n      getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n        if (terminated) {\n          newPdfManager.terminate();\n          throw new Error('Worker was terminated');\n        }\n        pdfManager = newPdfManager;\n        handler.send('PDFManagerReady', null);\n        pdfManager.onLoadedStream().then(function (stream) {\n          handler.send('DataLoaded', { length: stream.bytes.byteLength });\n        });\n      }).then(pdfManagerReady, onFailure);\n    }\n    handler.on('GetPage', function wphSetupGetPage(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        var rotatePromise = pdfManager.ensure(page, 'rotate');\n        var refPromise = pdfManager.ensure(page, 'ref');\n        var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n        var viewPromise = pdfManager.ensure(page, 'view');\n        return Promise.all([rotatePromise, refPromise, userUnitPromise, viewPromise]).then(function (results) {\n          return {\n            rotate: results[0],\n            ref: results[1],\n            userUnit: results[2],\n            view: results[3]\n          };\n        });\n      });\n    });\n    handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n      var ref = new _primitives.Ref(data.ref.num, data.ref.gen);\n      var catalog = pdfManager.pdfDocument.catalog;\n      return catalog.getPageIndex(ref);\n    });\n    handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n      return pdfManager.ensureCatalog('destinations');\n    });\n    handler.on('GetDestination', function wphSetupGetDestination(data) {\n      return pdfManager.ensureCatalog('getDestination', [data.id]);\n    });\n    handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n      return pdfManager.ensureCatalog('pageLabels');\n    });\n    handler.on('GetPageMode', function wphSetupGetPageMode(data) {\n      return pdfManager.ensureCatalog('pageMode');\n    });\n    handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n      return pdfManager.ensureCatalog('attachments');\n    });\n    handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n      return pdfManager.ensureCatalog('javaScript');\n    });\n    handler.on('GetOutline', function wphSetupGetOutline(data) {\n      return pdfManager.ensureCatalog('documentOutline');\n    });\n    handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n      return Promise.all([pdfManager.ensureDoc('documentInfo'), pdfManager.ensureCatalog('metadata')]);\n    });\n    handler.on('GetData', function wphSetupGetData(data) {\n      pdfManager.requestLoadedStream();\n      return pdfManager.onLoadedStream().then(function (stream) {\n        return stream.bytes;\n      });\n    });\n    handler.on('GetStats', function wphSetupGetStats(data) {\n      return pdfManager.pdfDocument.xref.stats;\n    });\n    handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n      return pdfManager.getPage(data.pageIndex).then(function (page) {\n        return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n      });\n    });\n    handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n      var pageIndex = data.pageIndex;\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.getOperatorList({\n          handler: handler,\n          task: task,\n          intent: data.intent,\n          renderInteractiveForms: data.renderInteractiveForms\n        }).then(function (operatorList) {\n          finishWorkerTask(task);\n          (0, _util.info)('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n        }, function (e) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          handler.send('UnsupportedFeature', { featureId: _util.UNSUPPORTED_FEATURES.unknown });\n          var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n          var wrappedException;\n          if (typeof e === 'string') {\n            wrappedException = {\n              message: e,\n              stack: minimumStackMessage\n            };\n          } else if ((typeof e === 'undefined' ? 'undefined' : _typeof(e)) === 'object') {\n            wrappedException = {\n              message: e.message || e.toString(),\n              stack: e.stack || minimumStackMessage\n            };\n          } else {\n            wrappedException = {\n              message: 'Unknown exception type: ' + (typeof e === 'undefined' ? 'undefined' : _typeof(e)),\n              stack: minimumStackMessage\n            };\n          }\n          handler.send('PageError', {\n            pageNum: pageNum,\n            error: wrappedException,\n            intent: data.intent\n          });\n        });\n      });\n    }, this);\n    handler.on('GetTextContent', function wphExtractText(data, sink) {\n      var pageIndex = data.pageIndex;\n      sink.onPull = function (desiredSize) {};\n      sink.onCancel = function (reason) {};\n      pdfManager.getPage(pageIndex).then(function (page) {\n        var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n        startWorkerTask(task);\n        var pageNum = pageIndex + 1;\n        var start = Date.now();\n        page.extractTextContent({\n          handler: handler,\n          task: task,\n          sink: sink,\n          normalizeWhitespace: data.normalizeWhitespace,\n          combineTextItems: data.combineTextItems\n        }).then(function () {\n          finishWorkerTask(task);\n          (0, _util.info)('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n          sink.close();\n        }, function (reason) {\n          finishWorkerTask(task);\n          if (task.terminated) {\n            return;\n          }\n          sink.error(reason);\n          throw reason;\n        });\n      });\n    });\n    handler.on('Cleanup', function wphCleanup(data) {\n      return pdfManager.cleanup();\n    });\n    handler.on('Terminate', function wphTerminate(data) {\n      terminated = true;\n      if (pdfManager) {\n        pdfManager.terminate();\n        pdfManager = null;\n      }\n      if (cancelXHRs) {\n        cancelXHRs();\n      }\n      var waitOn = [];\n      WorkerTasks.forEach(function (task) {\n        waitOn.push(task.finished);\n        task.terminate();\n      });\n      return Promise.all(waitOn).then(function () {\n        handler.destroy();\n        handler = null;\n      });\n    });\n    handler.on('Ready', function wphReady(data) {\n      setupDoc(docParams);\n      docParams = null;\n    });\n    return workerHandlerName;\n  },\n  initializeFromPort: function initializeFromPort(port) {\n    var handler = new _util.MessageHandler('worker', 'main', port);\n    WorkerMessageHandler.setup(handler, port);\n    handler.send('ready', null);\n  }\n};\nfunction isMessagePort(maybePort) {\n  return typeof maybePort.postMessage === 'function' && 'onmessage' in maybePort;\n}\nif (typeof window === 'undefined' && !(0, _is_node2.default)() && typeof self !== 'undefined' && isMessagePort(self)) {\n  WorkerMessageHandler.initializeFromPort(self);\n}\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;"],"sourceRoot":""}